{"ast":null,"code":"/*\nCopyright 2024-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport CellRenderer from './CellRenderer';\nimport RectangleShape from '../geometry/node/RectangleShape';\nimport EllipseShape from '../geometry/node/EllipseShape';\nimport RhombusShape from '../geometry/node/RhombusShape';\nimport CylinderShape from '../geometry/node/CylinderShape';\nimport ConnectorShape from '../geometry/edge/ConnectorShape';\nimport ActorShape from '../geometry/ActorShape';\nimport TriangleShape from '../geometry/node/TriangleShape';\nimport HexagonShape from '../geometry/node/HexagonShape';\nimport CloudShape from '../geometry/node/CloudShape';\nimport LineShape from '../geometry/edge/LineShape';\nimport ArrowShape from '../geometry/edge/ArrowShape';\nimport ArrowConnectorShape from '../geometry/edge/ArrowConnectorShape';\nimport DoubleEllipseShape from '../geometry/node/DoubleEllipseShape';\nimport SwimlaneShape from '../geometry/node/SwimlaneShape';\nimport ImageShape from '../geometry/node/ImageShape';\nimport LabelShape from '../geometry/node/LabelShape';\nimport { SHAPE } from '../../util/Constants';\nlet isDefaultElementsRegistered = false;\n/**\n * Add default shapes into `CellRenderer` shapes.\n */\nexport function registerDefaultShapes() {\n  if (!isDefaultElementsRegistered) {\n    for (const [shapeName, shapeClass] of [[SHAPE.ACTOR, ActorShape], [SHAPE.ARROW, ArrowShape], [SHAPE.ARROW_CONNECTOR, ArrowConnectorShape], [SHAPE.CONNECTOR, ConnectorShape], [SHAPE.CLOUD, CloudShape], [SHAPE.CYLINDER, CylinderShape], [SHAPE.DOUBLE_ELLIPSE, DoubleEllipseShape], [SHAPE.ELLIPSE, EllipseShape], [SHAPE.HEXAGON, HexagonShape], [SHAPE.IMAGE, ImageShape], [SHAPE.LABEL, LabelShape], [SHAPE.LINE, LineShape], [SHAPE.RECTANGLE, RectangleShape], [SHAPE.RHOMBUS, RhombusShape], [SHAPE.SWIMLANE, SwimlaneShape], [SHAPE.TRIANGLE, TriangleShape]]) {\n      // @ts-ignore\n      CellRenderer.registerShape(shapeName, shapeClass);\n    }\n    isDefaultElementsRegistered = true;\n  }\n}","map":{"version":3,"names":["CellRenderer","RectangleShape","EllipseShape","RhombusShape","CylinderShape","ConnectorShape","ActorShape","TriangleShape","HexagonShape","CloudShape","LineShape","ArrowShape","ArrowConnectorShape","DoubleEllipseShape","SwimlaneShape","ImageShape","LabelShape","SHAPE","isDefaultElementsRegistered","registerDefaultShapes","shapeName","shapeClass","ACTOR","ARROW","ARROW_CONNECTOR","CONNECTOR","CLOUD","CYLINDER","DOUBLE_ELLIPSE","ELLIPSE","HEXAGON","IMAGE","LABEL","LINE","RECTANGLE","RHOMBUS","SWIMLANE","TRIANGLE","registerShape"],"sources":["D:/ospanel/domains/old/react/react-intro/node_modules/@maxgraph/core/dist/view/cell/register-shapes.js"],"sourcesContent":["/*\nCopyright 2024-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport CellRenderer from './CellRenderer';\nimport RectangleShape from '../geometry/node/RectangleShape';\nimport EllipseShape from '../geometry/node/EllipseShape';\nimport RhombusShape from '../geometry/node/RhombusShape';\nimport CylinderShape from '../geometry/node/CylinderShape';\nimport ConnectorShape from '../geometry/edge/ConnectorShape';\nimport ActorShape from '../geometry/ActorShape';\nimport TriangleShape from '../geometry/node/TriangleShape';\nimport HexagonShape from '../geometry/node/HexagonShape';\nimport CloudShape from '../geometry/node/CloudShape';\nimport LineShape from '../geometry/edge/LineShape';\nimport ArrowShape from '../geometry/edge/ArrowShape';\nimport ArrowConnectorShape from '../geometry/edge/ArrowConnectorShape';\nimport DoubleEllipseShape from '../geometry/node/DoubleEllipseShape';\nimport SwimlaneShape from '../geometry/node/SwimlaneShape';\nimport ImageShape from '../geometry/node/ImageShape';\nimport LabelShape from '../geometry/node/LabelShape';\nimport { SHAPE } from '../../util/Constants';\nlet isDefaultElementsRegistered = false;\n/**\n * Add default shapes into `CellRenderer` shapes.\n */\nexport function registerDefaultShapes() {\n    if (!isDefaultElementsRegistered) {\n        for (const [shapeName, shapeClass] of [\n            [SHAPE.ACTOR, ActorShape],\n            [SHAPE.ARROW, ArrowShape],\n            [SHAPE.ARROW_CONNECTOR, ArrowConnectorShape],\n            [SHAPE.CONNECTOR, ConnectorShape],\n            [SHAPE.CLOUD, CloudShape],\n            [SHAPE.CYLINDER, CylinderShape],\n            [SHAPE.DOUBLE_ELLIPSE, DoubleEllipseShape],\n            [SHAPE.ELLIPSE, EllipseShape],\n            [SHAPE.HEXAGON, HexagonShape],\n            [SHAPE.IMAGE, ImageShape],\n            [SHAPE.LABEL, LabelShape],\n            [SHAPE.LINE, LineShape],\n            [SHAPE.RECTANGLE, RectangleShape],\n            [SHAPE.RHOMBUS, RhombusShape],\n            [SHAPE.SWIMLANE, SwimlaneShape],\n            [SHAPE.TRIANGLE, TriangleShape],\n        ]) {\n            // @ts-ignore\n            CellRenderer.registerShape(shapeName, shapeClass);\n        }\n        isDefaultElementsRegistered = true;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,YAAY,MAAM,gBAAgB;AACzC,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,mBAAmB,MAAM,sCAAsC;AACtE,OAAOC,kBAAkB,MAAM,qCAAqC;AACpE,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,UAAU,MAAM,6BAA6B;AACpD,SAASC,KAAK,QAAQ,sBAAsB;AAC5C,IAAIC,2BAA2B,GAAG,KAAK;AACvC;AACA;AACA;AACA,OAAO,SAASC,qBAAqBA,CAAA,EAAG;EACpC,IAAI,CAACD,2BAA2B,EAAE;IAC9B,KAAK,MAAM,CAACE,SAAS,EAAEC,UAAU,CAAC,IAAI,CAClC,CAACJ,KAAK,CAACK,KAAK,EAAEhB,UAAU,CAAC,EACzB,CAACW,KAAK,CAACM,KAAK,EAAEZ,UAAU,CAAC,EACzB,CAACM,KAAK,CAACO,eAAe,EAAEZ,mBAAmB,CAAC,EAC5C,CAACK,KAAK,CAACQ,SAAS,EAAEpB,cAAc,CAAC,EACjC,CAACY,KAAK,CAACS,KAAK,EAAEjB,UAAU,CAAC,EACzB,CAACQ,KAAK,CAACU,QAAQ,EAAEvB,aAAa,CAAC,EAC/B,CAACa,KAAK,CAACW,cAAc,EAAEf,kBAAkB,CAAC,EAC1C,CAACI,KAAK,CAACY,OAAO,EAAE3B,YAAY,CAAC,EAC7B,CAACe,KAAK,CAACa,OAAO,EAAEtB,YAAY,CAAC,EAC7B,CAACS,KAAK,CAACc,KAAK,EAAEhB,UAAU,CAAC,EACzB,CAACE,KAAK,CAACe,KAAK,EAAEhB,UAAU,CAAC,EACzB,CAACC,KAAK,CAACgB,IAAI,EAAEvB,SAAS,CAAC,EACvB,CAACO,KAAK,CAACiB,SAAS,EAAEjC,cAAc,CAAC,EACjC,CAACgB,KAAK,CAACkB,OAAO,EAAEhC,YAAY,CAAC,EAC7B,CAACc,KAAK,CAACmB,QAAQ,EAAEtB,aAAa,CAAC,EAC/B,CAACG,KAAK,CAACoB,QAAQ,EAAE9B,aAAa,CAAC,CAClC,EAAE;MACC;MACAP,YAAY,CAACsC,aAAa,CAAClB,SAAS,EAAEC,UAAU,CAAC;IACrD;IACAH,2BAA2B,GAAG,IAAI;EACtC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
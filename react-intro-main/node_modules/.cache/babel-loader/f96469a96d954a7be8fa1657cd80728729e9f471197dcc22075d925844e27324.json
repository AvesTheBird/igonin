{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { renderMarkdown } from '../../markdownRenderer.js';\nimport { getBaseLayerHoverDelegate } from '../hover/hoverDelegate2.js';\nimport { getDefaultHoverDelegate } from '../hover/hoverDelegateFactory.js';\nimport { List } from '../list/listWidget.js';\nimport * as arrays from '../../../common/arrays.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { KeyCodeUtils } from '../../../common/keyCodes.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport { isMacintosh } from '../../../common/platform.js';\nimport './selectBoxCustom.css';\nimport { localize } from '../../../../nls.js';\nconst $ = dom.$;\nconst SELECT_OPTION_ENTRY_TEMPLATE_ID = 'selectOption.entry.template';\nclass SelectListRenderer {\n  get templateId() {\n    return SELECT_OPTION_ENTRY_TEMPLATE_ID;\n  }\n  renderTemplate(container) {\n    const data = Object.create(null);\n    data.root = container;\n    data.text = dom.append(container, $('.option-text'));\n    data.detail = dom.append(container, $('.option-detail'));\n    data.decoratorRight = dom.append(container, $('.option-decorator-right'));\n    return data;\n  }\n  renderElement(element, index, templateData) {\n    const data = templateData;\n    const text = element.text;\n    const detail = element.detail;\n    const decoratorRight = element.decoratorRight;\n    const isDisabled = element.isDisabled;\n    data.text.textContent = text;\n    data.detail.textContent = !!detail ? detail : '';\n    data.decoratorRight.innerText = !!decoratorRight ? decoratorRight : '';\n    // pseudo-select disabled option\n    if (isDisabled) {\n      data.root.classList.add('option-disabled');\n    } else {\n      // Make sure we do class removal from prior template rendering\n      data.root.classList.remove('option-disabled');\n    }\n  }\n  disposeTemplate(_templateData) {\n    // noop\n  }\n}\nexport class SelectBoxList extends Disposable {\n  static {\n    this.DEFAULT_DROPDOWN_MINIMUM_BOTTOM_MARGIN = 32;\n  }\n  static {\n    this.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN = 2;\n  }\n  static {\n    this.DEFAULT_MINIMUM_VISIBLE_OPTIONS = 3;\n  }\n  constructor(options, selected, contextViewProvider, styles, selectBoxOptions) {\n    super();\n    this.options = [];\n    this._currentSelection = 0;\n    this._hasDetails = false;\n    this._skipLayout = false;\n    this._sticky = false; // for dev purposes only\n    this._isVisible = false;\n    this.styles = styles;\n    this.selectBoxOptions = selectBoxOptions || Object.create(null);\n    if (typeof this.selectBoxOptions.minBottomMargin !== 'number') {\n      this.selectBoxOptions.minBottomMargin = SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_BOTTOM_MARGIN;\n    } else if (this.selectBoxOptions.minBottomMargin < 0) {\n      this.selectBoxOptions.minBottomMargin = 0;\n    }\n    this.selectElement = document.createElement('select');\n    // Use custom CSS vars for padding calculation\n    this.selectElement.className = 'monaco-select-box monaco-select-box-dropdown-padding';\n    if (typeof this.selectBoxOptions.ariaLabel === 'string') {\n      this.selectElement.setAttribute('aria-label', this.selectBoxOptions.ariaLabel);\n    }\n    if (typeof this.selectBoxOptions.ariaDescription === 'string') {\n      this.selectElement.setAttribute('aria-description', this.selectBoxOptions.ariaDescription);\n    }\n    this._onDidSelect = new Emitter();\n    this._register(this._onDidSelect);\n    this.registerListeners();\n    this.constructSelectDropDown(contextViewProvider);\n    this.selected = selected || 0;\n    if (options) {\n      this.setOptions(options, selected);\n    }\n    this.initStyleSheet();\n  }\n  setTitle(title) {\n    if (!this._hover && title) {\n      this._hover = this._register(getBaseLayerHoverDelegate().setupManagedHover(getDefaultHoverDelegate('mouse'), this.selectElement, title));\n    } else if (this._hover) {\n      this._hover.update(title);\n    }\n  }\n  // IDelegate - List renderer\n  getHeight() {\n    return 22;\n  }\n  getTemplateId() {\n    return SELECT_OPTION_ENTRY_TEMPLATE_ID;\n  }\n  constructSelectDropDown(contextViewProvider) {\n    // SetUp ContextView container to hold select Dropdown\n    this.contextViewProvider = contextViewProvider;\n    this.selectDropDownContainer = dom.$('.monaco-select-box-dropdown-container');\n    // Use custom CSS vars for padding calculation (shared with parent select)\n    this.selectDropDownContainer.classList.add('monaco-select-box-dropdown-padding');\n    // Setup container for select option details\n    this.selectionDetailsPane = dom.append(this.selectDropDownContainer, $('.select-box-details-pane'));\n    // Create span flex box item/div we can measure and control\n    const widthControlOuterDiv = dom.append(this.selectDropDownContainer, $('.select-box-dropdown-container-width-control'));\n    const widthControlInnerDiv = dom.append(widthControlOuterDiv, $('.width-control-div'));\n    this.widthControlElement = document.createElement('span');\n    this.widthControlElement.className = 'option-text-width-control';\n    dom.append(widthControlInnerDiv, this.widthControlElement);\n    // Always default to below position\n    this._dropDownPosition = 0 /* AnchorPosition.BELOW */;\n    // Inline stylesheet for themes\n    this.styleElement = dom.createStyleSheet(this.selectDropDownContainer);\n    // Prevent dragging of dropdown #114329\n    this.selectDropDownContainer.setAttribute('draggable', 'true');\n    this._register(dom.addDisposableListener(this.selectDropDownContainer, dom.EventType.DRAG_START, e => {\n      dom.EventHelper.stop(e, true);\n    }));\n  }\n  registerListeners() {\n    // Parent native select keyboard listeners\n    this._register(dom.addStandardDisposableListener(this.selectElement, 'change', e => {\n      this.selected = e.target.selectedIndex;\n      this._onDidSelect.fire({\n        index: e.target.selectedIndex,\n        selected: e.target.value\n      });\n      if (!!this.options[this.selected] && !!this.options[this.selected].text) {\n        this.setTitle(this.options[this.selected].text);\n      }\n    }));\n    // Have to implement both keyboard and mouse controllers to handle disabled options\n    // Intercept mouse events to override normal select actions on parents\n    this._register(dom.addDisposableListener(this.selectElement, dom.EventType.CLICK, e => {\n      dom.EventHelper.stop(e);\n      if (this._isVisible) {\n        this.hideSelectDropDown(true);\n      } else {\n        this.showSelectDropDown();\n      }\n    }));\n    this._register(dom.addDisposableListener(this.selectElement, dom.EventType.MOUSE_DOWN, e => {\n      dom.EventHelper.stop(e);\n    }));\n    // Intercept touch events\n    // The following implementation is slightly different from the mouse event handlers above.\n    // Use the following helper variable, otherwise the list flickers.\n    let listIsVisibleOnTouchStart;\n    this._register(dom.addDisposableListener(this.selectElement, 'touchstart', e => {\n      listIsVisibleOnTouchStart = this._isVisible;\n    }));\n    this._register(dom.addDisposableListener(this.selectElement, 'touchend', e => {\n      dom.EventHelper.stop(e);\n      if (listIsVisibleOnTouchStart) {\n        this.hideSelectDropDown(true);\n      } else {\n        this.showSelectDropDown();\n      }\n    }));\n    // Intercept keyboard handling\n    this._register(dom.addDisposableListener(this.selectElement, dom.EventType.KEY_DOWN, e => {\n      const event = new StandardKeyboardEvent(e);\n      let showDropDown = false;\n      // Create and drop down select list on keyboard select\n      if (isMacintosh) {\n        if (event.keyCode === 18 /* KeyCode.DownArrow */ || event.keyCode === 16 /* KeyCode.UpArrow */ || event.keyCode === 10 /* KeyCode.Space */ || event.keyCode === 3 /* KeyCode.Enter */) {\n          showDropDown = true;\n        }\n      } else {\n        if (event.keyCode === 18 /* KeyCode.DownArrow */ && event.altKey || event.keyCode === 16 /* KeyCode.UpArrow */ && event.altKey || event.keyCode === 10 /* KeyCode.Space */ || event.keyCode === 3 /* KeyCode.Enter */) {\n          showDropDown = true;\n        }\n      }\n      if (showDropDown) {\n        this.showSelectDropDown();\n        dom.EventHelper.stop(e, true);\n      }\n    }));\n  }\n  get onDidSelect() {\n    return this._onDidSelect.event;\n  }\n  setOptions(options, selected) {\n    if (!arrays.equals(this.options, options)) {\n      this.options = options;\n      this.selectElement.options.length = 0;\n      this._hasDetails = false;\n      this._cachedMaxDetailsHeight = undefined;\n      this.options.forEach((option, index) => {\n        this.selectElement.add(this.createOption(option.text, index, option.isDisabled));\n        if (typeof option.description === 'string') {\n          this._hasDetails = true;\n        }\n      });\n    }\n    if (selected !== undefined) {\n      this.select(selected);\n      // Set current = selected since this is not necessarily a user exit\n      this._currentSelection = this.selected;\n    }\n  }\n  setOptionsList() {\n    // Mirror options in drop-down\n    // Populate select list for non-native select mode\n    this.selectList?.splice(0, this.selectList.length, this.options);\n  }\n  select(index) {\n    if (index >= 0 && index < this.options.length) {\n      this.selected = index;\n    } else if (index > this.options.length - 1) {\n      // Adjust index to end of list\n      // This could make client out of sync with the select\n      this.select(this.options.length - 1);\n    } else if (this.selected < 0) {\n      this.selected = 0;\n    }\n    this.selectElement.selectedIndex = this.selected;\n    if (!!this.options[this.selected] && !!this.options[this.selected].text) {\n      this.setTitle(this.options[this.selected].text);\n    }\n  }\n  focus() {\n    if (this.selectElement) {\n      this.selectElement.tabIndex = 0;\n      this.selectElement.focus();\n    }\n  }\n  blur() {\n    if (this.selectElement) {\n      this.selectElement.tabIndex = -1;\n      this.selectElement.blur();\n    }\n  }\n  setFocusable(focusable) {\n    this.selectElement.tabIndex = focusable ? 0 : -1;\n  }\n  render(container) {\n    this.container = container;\n    container.classList.add('select-container');\n    container.appendChild(this.selectElement);\n    this.styleSelectElement();\n  }\n  initStyleSheet() {\n    const content = [];\n    // Style non-native select mode\n    if (this.styles.listFocusBackground) {\n      content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.focused { background-color: ${this.styles.listFocusBackground} !important; }`);\n    }\n    if (this.styles.listFocusForeground) {\n      content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.focused { color: ${this.styles.listFocusForeground} !important; }`);\n    }\n    if (this.styles.decoratorRightForeground) {\n      content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.focused) .option-decorator-right { color: ${this.styles.decoratorRightForeground}; }`);\n    }\n    if (this.styles.selectBackground && this.styles.selectBorder && this.styles.selectBorder !== this.styles.selectBackground) {\n      content.push(`.monaco-select-box-dropdown-container { border: 1px solid ${this.styles.selectBorder} } `);\n      content.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-top { border-top: 1px solid ${this.styles.selectBorder} } `);\n      content.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-bottom { border-bottom: 1px solid ${this.styles.selectBorder} } `);\n    } else if (this.styles.selectListBorder) {\n      content.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-top { border-top: 1px solid ${this.styles.selectListBorder} } `);\n      content.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-bottom { border-bottom: 1px solid ${this.styles.selectListBorder} } `);\n    }\n    // Hover foreground - ignore for disabled options\n    if (this.styles.listHoverForeground) {\n      content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.option-disabled):not(.focused):hover { color: ${this.styles.listHoverForeground} !important; }`);\n    }\n    // Hover background - ignore for disabled options\n    if (this.styles.listHoverBackground) {\n      content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.option-disabled):not(.focused):hover { background-color: ${this.styles.listHoverBackground} !important; }`);\n    }\n    // Match quick input outline styles - ignore for disabled options\n    if (this.styles.listFocusOutline) {\n      content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.focused { outline: 1.6px dotted ${this.styles.listFocusOutline} !important; outline-offset: -1.6px !important; }`);\n    }\n    if (this.styles.listHoverOutline) {\n      content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.option-disabled):not(.focused):hover { outline: 1.6px dashed ${this.styles.listHoverOutline} !important; outline-offset: -1.6px !important; }`);\n    }\n    // Clear list styles on focus and on hover for disabled options\n    content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.option-disabled.focused { background-color: transparent !important; color: inherit !important; outline: none !important; }`);\n    content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.option-disabled:hover { background-color: transparent !important; color: inherit !important; outline: none !important; }`);\n    this.styleElement.textContent = content.join('\\n');\n  }\n  styleSelectElement() {\n    const background = this.styles.selectBackground ?? '';\n    const foreground = this.styles.selectForeground ?? '';\n    const border = this.styles.selectBorder ?? '';\n    this.selectElement.style.backgroundColor = background;\n    this.selectElement.style.color = foreground;\n    this.selectElement.style.borderColor = border;\n  }\n  styleList() {\n    const background = this.styles.selectBackground ?? '';\n    const listBackground = dom.asCssValueWithDefault(this.styles.selectListBackground, background);\n    this.selectDropDownListContainer.style.backgroundColor = listBackground;\n    this.selectionDetailsPane.style.backgroundColor = listBackground;\n    const optionsBorder = this.styles.focusBorder ?? '';\n    this.selectDropDownContainer.style.outlineColor = optionsBorder;\n    this.selectDropDownContainer.style.outlineOffset = '-1px';\n    this.selectList.style(this.styles);\n  }\n  createOption(value, index, disabled) {\n    const option = document.createElement('option');\n    option.value = value;\n    option.text = value;\n    option.disabled = !!disabled;\n    return option;\n  }\n  // ContextView dropdown methods\n  showSelectDropDown() {\n    this.selectionDetailsPane.innerText = '';\n    if (!this.contextViewProvider || this._isVisible) {\n      return;\n    }\n    // Lazily create and populate list only at open, moved from constructor\n    this.createSelectList(this.selectDropDownContainer);\n    this.setOptionsList();\n    // This allows us to flip the position based on measurement\n    // Set drop-down position above/below from required height and margins\n    // If pre-layout cannot fit at least one option do not show drop-down\n    this.contextViewProvider.showContextView({\n      getAnchor: () => this.selectElement,\n      render: container => this.renderSelectDropDown(container, true),\n      layout: () => {\n        this.layoutSelectDropDown();\n      },\n      onHide: () => {\n        this.selectDropDownContainer.classList.remove('visible');\n        this.selectElement.classList.remove('synthetic-focus');\n      },\n      anchorPosition: this._dropDownPosition\n    }, this.selectBoxOptions.optionsAsChildren ? this.container : undefined);\n    // Hide so we can relay out\n    this._isVisible = true;\n    this.hideSelectDropDown(false);\n    this.contextViewProvider.showContextView({\n      getAnchor: () => this.selectElement,\n      render: container => this.renderSelectDropDown(container),\n      layout: () => this.layoutSelectDropDown(),\n      onHide: () => {\n        this.selectDropDownContainer.classList.remove('visible');\n        this.selectElement.classList.remove('synthetic-focus');\n      },\n      anchorPosition: this._dropDownPosition\n    }, this.selectBoxOptions.optionsAsChildren ? this.container : undefined);\n    // Track initial selection the case user escape, blur\n    this._currentSelection = this.selected;\n    this._isVisible = true;\n    this.selectElement.setAttribute('aria-expanded', 'true');\n  }\n  hideSelectDropDown(focusSelect) {\n    if (!this.contextViewProvider || !this._isVisible) {\n      return;\n    }\n    this._isVisible = false;\n    this.selectElement.setAttribute('aria-expanded', 'false');\n    if (focusSelect) {\n      this.selectElement.focus();\n    }\n    this.contextViewProvider.hideContextView();\n  }\n  renderSelectDropDown(container, preLayoutPosition) {\n    container.appendChild(this.selectDropDownContainer);\n    // Pre-Layout allows us to change position\n    this.layoutSelectDropDown(preLayoutPosition);\n    return {\n      dispose: () => {\n        // contextView will dispose itself if moving from one View to another\n        this.selectDropDownContainer.remove(); // remove to take out the CSS rules we add\n      }\n    };\n  }\n  // Iterate over detailed descriptions, find max height\n  measureMaxDetailsHeight() {\n    let maxDetailsPaneHeight = 0;\n    this.options.forEach((_option, index) => {\n      this.updateDetail(index);\n      if (this.selectionDetailsPane.offsetHeight > maxDetailsPaneHeight) {\n        maxDetailsPaneHeight = this.selectionDetailsPane.offsetHeight;\n      }\n    });\n    return maxDetailsPaneHeight;\n  }\n  layoutSelectDropDown(preLayoutPosition) {\n    // Avoid recursion from layout called in onListFocus\n    if (this._skipLayout) {\n      return false;\n    }\n    // Layout ContextView drop down select list and container\n    // Have to manage our vertical overflow, sizing, position below or above\n    // Position has to be determined and set prior to contextView instantiation\n    if (this.selectList) {\n      // Make visible to enable measurements\n      this.selectDropDownContainer.classList.add('visible');\n      const window = dom.getWindow(this.selectElement);\n      const selectPosition = dom.getDomNodePagePosition(this.selectElement);\n      const styles = dom.getWindow(this.selectElement).getComputedStyle(this.selectElement);\n      const verticalPadding = parseFloat(styles.getPropertyValue('--dropdown-padding-top')) + parseFloat(styles.getPropertyValue('--dropdown-padding-bottom'));\n      const maxSelectDropDownHeightBelow = window.innerHeight - selectPosition.top - selectPosition.height - (this.selectBoxOptions.minBottomMargin || 0);\n      const maxSelectDropDownHeightAbove = selectPosition.top - SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN;\n      // Determine optimal width - min(longest option), opt(parent select, excluding margins), max(ContextView controlled)\n      const selectWidth = this.selectElement.offsetWidth;\n      const selectMinWidth = this.setWidthControlElement(this.widthControlElement);\n      const selectOptimalWidth = Math.max(selectMinWidth, Math.round(selectWidth)).toString() + 'px';\n      this.selectDropDownContainer.style.width = selectOptimalWidth;\n      // Get initial list height and determine space above and below\n      this.selectList.getHTMLElement().style.height = '';\n      this.selectList.layout();\n      let listHeight = this.selectList.contentHeight;\n      if (this._hasDetails && this._cachedMaxDetailsHeight === undefined) {\n        this._cachedMaxDetailsHeight = this.measureMaxDetailsHeight();\n      }\n      const maxDetailsPaneHeight = this._hasDetails ? this._cachedMaxDetailsHeight : 0;\n      const minRequiredDropDownHeight = listHeight + verticalPadding + maxDetailsPaneHeight;\n      const maxVisibleOptionsBelow = Math.floor((maxSelectDropDownHeightBelow - verticalPadding - maxDetailsPaneHeight) / this.getHeight());\n      const maxVisibleOptionsAbove = Math.floor((maxSelectDropDownHeightAbove - verticalPadding - maxDetailsPaneHeight) / this.getHeight());\n      // If we are only doing pre-layout check/adjust position only\n      // Calculate vertical space available, flip up if insufficient\n      // Use reflected padding on parent select, ContextView style\n      // properties not available before DOM attachment\n      if (preLayoutPosition) {\n        // Check if select moved out of viewport , do not open\n        // If at least one option cannot be shown, don't open the drop-down or hide/remove if open\n        if (selectPosition.top + selectPosition.height > window.innerHeight - 22 || selectPosition.top < SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN || maxVisibleOptionsBelow < 1 && maxVisibleOptionsAbove < 1) {\n          // Indicate we cannot open\n          return false;\n        }\n        // Determine if we have to flip up\n        // Always show complete list items - never more than Max available vertical height\n        if (maxVisibleOptionsBelow < SelectBoxList.DEFAULT_MINIMUM_VISIBLE_OPTIONS && maxVisibleOptionsAbove > maxVisibleOptionsBelow && this.options.length > maxVisibleOptionsBelow) {\n          this._dropDownPosition = 1 /* AnchorPosition.ABOVE */;\n          this.selectDropDownListContainer.remove();\n          this.selectionDetailsPane.remove();\n          this.selectDropDownContainer.appendChild(this.selectionDetailsPane);\n          this.selectDropDownContainer.appendChild(this.selectDropDownListContainer);\n          this.selectionDetailsPane.classList.remove('border-top');\n          this.selectionDetailsPane.classList.add('border-bottom');\n        } else {\n          this._dropDownPosition = 0 /* AnchorPosition.BELOW */;\n          this.selectDropDownListContainer.remove();\n          this.selectionDetailsPane.remove();\n          this.selectDropDownContainer.appendChild(this.selectDropDownListContainer);\n          this.selectDropDownContainer.appendChild(this.selectionDetailsPane);\n          this.selectionDetailsPane.classList.remove('border-bottom');\n          this.selectionDetailsPane.classList.add('border-top');\n        }\n        // Do full layout on showSelectDropDown only\n        return true;\n      }\n      // Check if select out of viewport or cutting into status bar\n      if (selectPosition.top + selectPosition.height > window.innerHeight - 22 || selectPosition.top < SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN || this._dropDownPosition === 0 /* AnchorPosition.BELOW */ && maxVisibleOptionsBelow < 1 || this._dropDownPosition === 1 /* AnchorPosition.ABOVE */ && maxVisibleOptionsAbove < 1) {\n        // Cannot properly layout, close and hide\n        this.hideSelectDropDown(true);\n        return false;\n      }\n      // SetUp list dimensions and layout - account for container padding\n      // Use position to check above or below available space\n      if (this._dropDownPosition === 0 /* AnchorPosition.BELOW */) {\n        if (this._isVisible && maxVisibleOptionsBelow + maxVisibleOptionsAbove < 1) {\n          // If drop-down is visible, must be doing a DOM re-layout, hide since we don't fit\n          // Hide drop-down, hide contextview, focus on parent select\n          this.hideSelectDropDown(true);\n          return false;\n        }\n        // Adjust list height to max from select bottom to margin (default/minBottomMargin)\n        if (minRequiredDropDownHeight > maxSelectDropDownHeightBelow) {\n          listHeight = maxVisibleOptionsBelow * this.getHeight();\n        }\n      } else {\n        if (minRequiredDropDownHeight > maxSelectDropDownHeightAbove) {\n          listHeight = maxVisibleOptionsAbove * this.getHeight();\n        }\n      }\n      // Set adjusted list height and relayout\n      this.selectList.layout(listHeight);\n      this.selectList.domFocus();\n      // Finally set focus on selected item\n      if (this.selectList.length > 0) {\n        this.selectList.setFocus([this.selected || 0]);\n        this.selectList.reveal(this.selectList.getFocus()[0] || 0);\n      }\n      if (this._hasDetails) {\n        // Leave the selectDropDownContainer to size itself according to children (list + details) - #57447\n        this.selectList.getHTMLElement().style.height = listHeight + verticalPadding + 'px';\n        this.selectDropDownContainer.style.height = '';\n      } else {\n        this.selectDropDownContainer.style.height = listHeight + verticalPadding + 'px';\n      }\n      this.updateDetail(this.selected);\n      this.selectDropDownContainer.style.width = selectOptimalWidth;\n      // Maintain focus outline on parent select as well as list container - tabindex for focus\n      this.selectDropDownListContainer.setAttribute('tabindex', '0');\n      this.selectElement.classList.add('synthetic-focus');\n      this.selectDropDownContainer.classList.add('synthetic-focus');\n      return true;\n    } else {\n      return false;\n    }\n  }\n  setWidthControlElement(container) {\n    let elementWidth = 0;\n    if (container) {\n      let longest = 0;\n      let longestLength = 0;\n      this.options.forEach((option, index) => {\n        const detailLength = !!option.detail ? option.detail.length : 0;\n        const rightDecoratorLength = !!option.decoratorRight ? option.decoratorRight.length : 0;\n        const len = option.text.length + detailLength + rightDecoratorLength;\n        if (len > longestLength) {\n          longest = index;\n          longestLength = len;\n        }\n      });\n      container.textContent = this.options[longest].text + (!!this.options[longest].decoratorRight ? this.options[longest].decoratorRight + ' ' : '');\n      elementWidth = dom.getTotalWidth(container);\n    }\n    return elementWidth;\n  }\n  createSelectList(parent) {\n    // If we have already constructive list on open, skip\n    if (this.selectList) {\n      return;\n    }\n    // SetUp container for list\n    this.selectDropDownListContainer = dom.append(parent, $('.select-box-dropdown-list-container'));\n    this.listRenderer = new SelectListRenderer();\n    this.selectList = this._register(new List('SelectBoxCustom', this.selectDropDownListContainer, this, [this.listRenderer], {\n      useShadows: false,\n      verticalScrollMode: 3 /* ScrollbarVisibility.Visible */,\n      keyboardSupport: false,\n      mouseSupport: false,\n      accessibilityProvider: {\n        getAriaLabel: element => {\n          let label = element.text;\n          if (element.detail) {\n            label += `. ${element.detail}`;\n          }\n          if (element.decoratorRight) {\n            label += `. ${element.decoratorRight}`;\n          }\n          if (element.description) {\n            label += `. ${element.description}`;\n          }\n          return label;\n        },\n        getWidgetAriaLabel: () => localize({\n          key: 'selectBox',\n          comment: ['Behave like native select dropdown element.']\n        }, \"Select Box\"),\n        getRole: () => isMacintosh ? '' : 'option',\n        getWidgetRole: () => 'listbox'\n      }\n    }));\n    if (this.selectBoxOptions.ariaLabel) {\n      this.selectList.ariaLabel = this.selectBoxOptions.ariaLabel;\n    }\n    // SetUp list keyboard controller - control navigation, disabled items, focus\n    const onKeyDown = this._register(new DomEmitter(this.selectDropDownListContainer, 'keydown'));\n    const onSelectDropDownKeyDown = Event.chain(onKeyDown.event, $ => $.filter(() => this.selectList.length > 0).map(e => new StandardKeyboardEvent(e)));\n    this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 3 /* KeyCode.Enter */))(this.onEnter, this));\n    this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 2 /* KeyCode.Tab */))(this.onEnter, this)); // Tab should behave the same as enter, #79339\n    this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 9 /* KeyCode.Escape */))(this.onEscape, this));\n    this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 16 /* KeyCode.UpArrow */))(this.onUpArrow, this));\n    this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 18 /* KeyCode.DownArrow */))(this.onDownArrow, this));\n    this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 12 /* KeyCode.PageDown */))(this.onPageDown, this));\n    this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 11 /* KeyCode.PageUp */))(this.onPageUp, this));\n    this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 14 /* KeyCode.Home */))(this.onHome, this));\n    this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 13 /* KeyCode.End */))(this.onEnd, this));\n    this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode >= 21 /* KeyCode.Digit0 */ && e.keyCode <= 56 /* KeyCode.KeyZ */ || e.keyCode >= 85 /* KeyCode.Semicolon */ && e.keyCode <= 113 /* KeyCode.NumpadDivide */))(this.onCharacter, this));\n    // SetUp list mouse controller - control navigation, disabled items, focus\n    this._register(dom.addDisposableListener(this.selectList.getHTMLElement(), dom.EventType.POINTER_UP, e => this.onPointerUp(e)));\n    this._register(this.selectList.onMouseOver(e => typeof e.index !== 'undefined' && this.selectList.setFocus([e.index])));\n    this._register(this.selectList.onDidChangeFocus(e => this.onListFocus(e)));\n    this._register(dom.addDisposableListener(this.selectDropDownContainer, dom.EventType.FOCUS_OUT, e => {\n      if (!this._isVisible || dom.isAncestor(e.relatedTarget, this.selectDropDownContainer)) {\n        return;\n      }\n      this.onListBlur();\n    }));\n    this.selectList.getHTMLElement().setAttribute('aria-label', this.selectBoxOptions.ariaLabel || '');\n    this.selectList.getHTMLElement().setAttribute('aria-expanded', 'true');\n    this.styleList();\n  }\n  // List methods\n  // List mouse controller - active exit, select option, fire onDidSelect if change, return focus to parent select\n  // Also takes in touchend events\n  onPointerUp(e) {\n    if (!this.selectList.length) {\n      return;\n    }\n    dom.EventHelper.stop(e);\n    const target = e.target;\n    if (!target) {\n      return;\n    }\n    // Check our mouse event is on an option (not scrollbar)\n    if (target.classList.contains('slider')) {\n      return;\n    }\n    const listRowElement = target.closest('.monaco-list-row');\n    if (!listRowElement) {\n      return;\n    }\n    const index = Number(listRowElement.getAttribute('data-index'));\n    const disabled = listRowElement.classList.contains('option-disabled');\n    // Ignore mouse selection of disabled options\n    if (index >= 0 && index < this.options.length && !disabled) {\n      this.selected = index;\n      this.select(this.selected);\n      this.selectList.setFocus([this.selected]);\n      this.selectList.reveal(this.selectList.getFocus()[0]);\n      // Only fire if selection change\n      if (this.selected !== this._currentSelection) {\n        // Set current = selected\n        this._currentSelection = this.selected;\n        this._onDidSelect.fire({\n          index: this.selectElement.selectedIndex,\n          selected: this.options[this.selected].text\n        });\n        if (!!this.options[this.selected] && !!this.options[this.selected].text) {\n          this.setTitle(this.options[this.selected].text);\n        }\n      }\n      this.hideSelectDropDown(true);\n    }\n  }\n  // List Exit - passive - implicit no selection change, hide drop-down\n  onListBlur() {\n    if (this._sticky) {\n      return;\n    }\n    if (this.selected !== this._currentSelection) {\n      // Reset selected to current if no change\n      this.select(this._currentSelection);\n    }\n    this.hideSelectDropDown(false);\n  }\n  renderDescriptionMarkdown(text, actionHandler) {\n    const cleanRenderedMarkdown = element => {\n      for (let i = 0; i < element.childNodes.length; i++) {\n        const child = element.childNodes.item(i);\n        const tagName = child.tagName && child.tagName.toLowerCase();\n        if (tagName === 'img') {\n          child.remove();\n        } else {\n          cleanRenderedMarkdown(child);\n        }\n      }\n    };\n    const rendered = renderMarkdown({\n      value: text,\n      supportThemeIcons: true\n    }, {\n      actionHandler\n    });\n    rendered.element.classList.add('select-box-description-markdown');\n    cleanRenderedMarkdown(rendered.element);\n    return rendered.element;\n  }\n  // List Focus Change - passive - update details pane with newly focused element's data\n  onListFocus(e) {\n    // Skip during initial layout\n    if (!this._isVisible || !this._hasDetails) {\n      return;\n    }\n    this.updateDetail(e.indexes[0]);\n  }\n  updateDetail(selectedIndex) {\n    this.selectionDetailsPane.innerText = '';\n    const option = this.options[selectedIndex];\n    const description = option?.description ?? '';\n    const descriptionIsMarkdown = option?.descriptionIsMarkdown ?? false;\n    if (description) {\n      if (descriptionIsMarkdown) {\n        const actionHandler = option.descriptionMarkdownActionHandler;\n        this.selectionDetailsPane.appendChild(this.renderDescriptionMarkdown(description, actionHandler));\n      } else {\n        this.selectionDetailsPane.innerText = description;\n      }\n      this.selectionDetailsPane.style.display = 'block';\n    } else {\n      this.selectionDetailsPane.style.display = 'none';\n    }\n    // Avoid recursion\n    this._skipLayout = true;\n    this.contextViewProvider.layout();\n    this._skipLayout = false;\n  }\n  // List keyboard controller\n  // List exit - active - hide ContextView dropdown, reset selection, return focus to parent select\n  onEscape(e) {\n    dom.EventHelper.stop(e);\n    // Reset selection to value when opened\n    this.select(this._currentSelection);\n    this.hideSelectDropDown(true);\n  }\n  // List exit - active - hide ContextView dropdown, return focus to parent select, fire onDidSelect if change\n  onEnter(e) {\n    dom.EventHelper.stop(e);\n    // Only fire if selection change\n    if (this.selected !== this._currentSelection) {\n      this._currentSelection = this.selected;\n      this._onDidSelect.fire({\n        index: this.selectElement.selectedIndex,\n        selected: this.options[this.selected].text\n      });\n      if (!!this.options[this.selected] && !!this.options[this.selected].text) {\n        this.setTitle(this.options[this.selected].text);\n      }\n    }\n    this.hideSelectDropDown(true);\n  }\n  // List navigation - have to handle a disabled option (jump over)\n  onDownArrow(e) {\n    if (this.selected < this.options.length - 1) {\n      dom.EventHelper.stop(e, true);\n      // Skip disabled options\n      const nextOptionDisabled = this.options[this.selected + 1].isDisabled;\n      if (nextOptionDisabled && this.options.length > this.selected + 2) {\n        this.selected += 2;\n      } else if (nextOptionDisabled) {\n        return;\n      } else {\n        this.selected++;\n      }\n      // Set focus/selection - only fire event when closing drop-down or on blur\n      this.select(this.selected);\n      this.selectList.setFocus([this.selected]);\n      this.selectList.reveal(this.selectList.getFocus()[0]);\n    }\n  }\n  onUpArrow(e) {\n    if (this.selected > 0) {\n      dom.EventHelper.stop(e, true);\n      // Skip disabled options\n      const previousOptionDisabled = this.options[this.selected - 1].isDisabled;\n      if (previousOptionDisabled && this.selected > 1) {\n        this.selected -= 2;\n      } else {\n        this.selected--;\n      }\n      // Set focus/selection - only fire event when closing drop-down or on blur\n      this.select(this.selected);\n      this.selectList.setFocus([this.selected]);\n      this.selectList.reveal(this.selectList.getFocus()[0]);\n    }\n  }\n  onPageUp(e) {\n    dom.EventHelper.stop(e);\n    this.selectList.focusPreviousPage();\n    // Allow scrolling to settle\n    setTimeout(() => {\n      this.selected = this.selectList.getFocus()[0];\n      // Shift selection down if we land on a disabled option\n      if (this.options[this.selected].isDisabled && this.selected < this.options.length - 1) {\n        this.selected++;\n        this.selectList.setFocus([this.selected]);\n      }\n      this.selectList.reveal(this.selected);\n      this.select(this.selected);\n    }, 1);\n  }\n  onPageDown(e) {\n    dom.EventHelper.stop(e);\n    this.selectList.focusNextPage();\n    // Allow scrolling to settle\n    setTimeout(() => {\n      this.selected = this.selectList.getFocus()[0];\n      // Shift selection up if we land on a disabled option\n      if (this.options[this.selected].isDisabled && this.selected > 0) {\n        this.selected--;\n        this.selectList.setFocus([this.selected]);\n      }\n      this.selectList.reveal(this.selected);\n      this.select(this.selected);\n    }, 1);\n  }\n  onHome(e) {\n    dom.EventHelper.stop(e);\n    if (this.options.length < 2) {\n      return;\n    }\n    this.selected = 0;\n    if (this.options[this.selected].isDisabled && this.selected > 1) {\n      this.selected++;\n    }\n    this.selectList.setFocus([this.selected]);\n    this.selectList.reveal(this.selected);\n    this.select(this.selected);\n  }\n  onEnd(e) {\n    dom.EventHelper.stop(e);\n    if (this.options.length < 2) {\n      return;\n    }\n    this.selected = this.options.length - 1;\n    if (this.options[this.selected].isDisabled && this.selected > 1) {\n      this.selected--;\n    }\n    this.selectList.setFocus([this.selected]);\n    this.selectList.reveal(this.selected);\n    this.select(this.selected);\n  }\n  // Mimic option first character navigation of native select\n  onCharacter(e) {\n    const ch = KeyCodeUtils.toString(e.keyCode);\n    let optionIndex = -1;\n    for (let i = 0; i < this.options.length - 1; i++) {\n      optionIndex = (i + this.selected + 1) % this.options.length;\n      if (this.options[optionIndex].text.charAt(0).toUpperCase() === ch && !this.options[optionIndex].isDisabled) {\n        this.select(optionIndex);\n        this.selectList.setFocus([optionIndex]);\n        this.selectList.reveal(this.selectList.getFocus()[0]);\n        dom.EventHelper.stop(e);\n        break;\n      }\n    }\n  }\n  dispose() {\n    this.hideSelectDropDown(false);\n    super.dispose();\n  }\n}","map":{"version":3,"names":["dom","DomEmitter","StandardKeyboardEvent","renderMarkdown","getBaseLayerHoverDelegate","getDefaultHoverDelegate","List","arrays","Emitter","Event","KeyCodeUtils","Disposable","isMacintosh","localize","$","SELECT_OPTION_ENTRY_TEMPLATE_ID","SelectListRenderer","templateId","renderTemplate","container","data","Object","create","root","text","append","detail","decoratorRight","renderElement","element","index","templateData","isDisabled","textContent","innerText","classList","add","remove","disposeTemplate","_templateData","SelectBoxList","DEFAULT_DROPDOWN_MINIMUM_BOTTOM_MARGIN","DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN","DEFAULT_MINIMUM_VISIBLE_OPTIONS","constructor","options","selected","contextViewProvider","styles","selectBoxOptions","_currentSelection","_hasDetails","_skipLayout","_sticky","_isVisible","minBottomMargin","selectElement","document","createElement","className","ariaLabel","setAttribute","ariaDescription","_onDidSelect","_register","registerListeners","constructSelectDropDown","setOptions","initStyleSheet","setTitle","title","_hover","setupManagedHover","update","getHeight","getTemplateId","selectDropDownContainer","selectionDetailsPane","widthControlOuterDiv","widthControlInnerDiv","widthControlElement","_dropDownPosition","styleElement","createStyleSheet","addDisposableListener","EventType","DRAG_START","e","EventHelper","stop","addStandardDisposableListener","target","selectedIndex","fire","value","CLICK","hideSelectDropDown","showSelectDropDown","MOUSE_DOWN","listIsVisibleOnTouchStart","KEY_DOWN","event","showDropDown","keyCode","altKey","onDidSelect","equals","length","_cachedMaxDetailsHeight","undefined","forEach","option","createOption","description","select","setOptionsList","selectList","splice","focus","tabIndex","blur","setFocusable","focusable","render","appendChild","styleSelectElement","content","listFocusBackground","push","listFocusForeground","decoratorRightForeground","selectBackground","selectBorder","selectListBorder","listHoverForeground","listHoverBackground","listFocusOutline","listHoverOutline","join","background","foreground","selectForeground","border","style","backgroundColor","color","borderColor","styleList","listBackground","asCssValueWithDefault","selectListBackground","selectDropDownListContainer","optionsBorder","focusBorder","outlineColor","outlineOffset","disabled","createSelectList","showContextView","getAnchor","renderSelectDropDown","layout","layoutSelectDropDown","onHide","anchorPosition","optionsAsChildren","focusSelect","hideContextView","preLayoutPosition","dispose","measureMaxDetailsHeight","maxDetailsPaneHeight","_option","updateDetail","offsetHeight","window","getWindow","selectPosition","getDomNodePagePosition","getComputedStyle","verticalPadding","parseFloat","getPropertyValue","maxSelectDropDownHeightBelow","innerHeight","top","height","maxSelectDropDownHeightAbove","selectWidth","offsetWidth","selectMinWidth","setWidthControlElement","selectOptimalWidth","Math","max","round","toString","width","getHTMLElement","listHeight","contentHeight","minRequiredDropDownHeight","maxVisibleOptionsBelow","floor","maxVisibleOptionsAbove","domFocus","setFocus","reveal","getFocus","elementWidth","longest","longestLength","detailLength","rightDecoratorLength","len","getTotalWidth","parent","listRenderer","useShadows","verticalScrollMode","keyboardSupport","mouseSupport","accessibilityProvider","getAriaLabel","label","getWidgetAriaLabel","key","comment","getRole","getWidgetRole","onKeyDown","onSelectDropDownKeyDown","chain","filter","map","onEnter","onEscape","onUpArrow","onDownArrow","onPageDown","onPageUp","onHome","onEnd","onCharacter","POINTER_UP","onPointerUp","onMouseOver","onDidChangeFocus","onListFocus","FOCUS_OUT","isAncestor","relatedTarget","onListBlur","contains","listRowElement","closest","Number","getAttribute","renderDescriptionMarkdown","actionHandler","cleanRenderedMarkdown","i","childNodes","child","item","tagName","toLowerCase","rendered","supportThemeIcons","indexes","descriptionIsMarkdown","descriptionMarkdownActionHandler","display","nextOptionDisabled","previousOptionDisabled","focusPreviousPage","setTimeout","focusNextPage","ch","optionIndex","charAt","toUpperCase"],"sources":["D:/ospanel/domains/проекты open server/old/react/react-intro-main/node_modules/monaco-editor/esm/vs/base/browser/ui/selectBox/selectBoxCustom.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { renderMarkdown } from '../../markdownRenderer.js';\nimport { getBaseLayerHoverDelegate } from '../hover/hoverDelegate2.js';\nimport { getDefaultHoverDelegate } from '../hover/hoverDelegateFactory.js';\nimport { List } from '../list/listWidget.js';\nimport * as arrays from '../../../common/arrays.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { KeyCodeUtils } from '../../../common/keyCodes.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport { isMacintosh } from '../../../common/platform.js';\nimport './selectBoxCustom.css';\nimport { localize } from '../../../../nls.js';\nconst $ = dom.$;\nconst SELECT_OPTION_ENTRY_TEMPLATE_ID = 'selectOption.entry.template';\nclass SelectListRenderer {\n    get templateId() { return SELECT_OPTION_ENTRY_TEMPLATE_ID; }\n    renderTemplate(container) {\n        const data = Object.create(null);\n        data.root = container;\n        data.text = dom.append(container, $('.option-text'));\n        data.detail = dom.append(container, $('.option-detail'));\n        data.decoratorRight = dom.append(container, $('.option-decorator-right'));\n        return data;\n    }\n    renderElement(element, index, templateData) {\n        const data = templateData;\n        const text = element.text;\n        const detail = element.detail;\n        const decoratorRight = element.decoratorRight;\n        const isDisabled = element.isDisabled;\n        data.text.textContent = text;\n        data.detail.textContent = !!detail ? detail : '';\n        data.decoratorRight.innerText = !!decoratorRight ? decoratorRight : '';\n        // pseudo-select disabled option\n        if (isDisabled) {\n            data.root.classList.add('option-disabled');\n        }\n        else {\n            // Make sure we do class removal from prior template rendering\n            data.root.classList.remove('option-disabled');\n        }\n    }\n    disposeTemplate(_templateData) {\n        // noop\n    }\n}\nexport class SelectBoxList extends Disposable {\n    static { this.DEFAULT_DROPDOWN_MINIMUM_BOTTOM_MARGIN = 32; }\n    static { this.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN = 2; }\n    static { this.DEFAULT_MINIMUM_VISIBLE_OPTIONS = 3; }\n    constructor(options, selected, contextViewProvider, styles, selectBoxOptions) {\n        super();\n        this.options = [];\n        this._currentSelection = 0;\n        this._hasDetails = false;\n        this._skipLayout = false;\n        this._sticky = false; // for dev purposes only\n        this._isVisible = false;\n        this.styles = styles;\n        this.selectBoxOptions = selectBoxOptions || Object.create(null);\n        if (typeof this.selectBoxOptions.minBottomMargin !== 'number') {\n            this.selectBoxOptions.minBottomMargin = SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_BOTTOM_MARGIN;\n        }\n        else if (this.selectBoxOptions.minBottomMargin < 0) {\n            this.selectBoxOptions.minBottomMargin = 0;\n        }\n        this.selectElement = document.createElement('select');\n        // Use custom CSS vars for padding calculation\n        this.selectElement.className = 'monaco-select-box monaco-select-box-dropdown-padding';\n        if (typeof this.selectBoxOptions.ariaLabel === 'string') {\n            this.selectElement.setAttribute('aria-label', this.selectBoxOptions.ariaLabel);\n        }\n        if (typeof this.selectBoxOptions.ariaDescription === 'string') {\n            this.selectElement.setAttribute('aria-description', this.selectBoxOptions.ariaDescription);\n        }\n        this._onDidSelect = new Emitter();\n        this._register(this._onDidSelect);\n        this.registerListeners();\n        this.constructSelectDropDown(contextViewProvider);\n        this.selected = selected || 0;\n        if (options) {\n            this.setOptions(options, selected);\n        }\n        this.initStyleSheet();\n    }\n    setTitle(title) {\n        if (!this._hover && title) {\n            this._hover = this._register(getBaseLayerHoverDelegate().setupManagedHover(getDefaultHoverDelegate('mouse'), this.selectElement, title));\n        }\n        else if (this._hover) {\n            this._hover.update(title);\n        }\n    }\n    // IDelegate - List renderer\n    getHeight() {\n        return 22;\n    }\n    getTemplateId() {\n        return SELECT_OPTION_ENTRY_TEMPLATE_ID;\n    }\n    constructSelectDropDown(contextViewProvider) {\n        // SetUp ContextView container to hold select Dropdown\n        this.contextViewProvider = contextViewProvider;\n        this.selectDropDownContainer = dom.$('.monaco-select-box-dropdown-container');\n        // Use custom CSS vars for padding calculation (shared with parent select)\n        this.selectDropDownContainer.classList.add('monaco-select-box-dropdown-padding');\n        // Setup container for select option details\n        this.selectionDetailsPane = dom.append(this.selectDropDownContainer, $('.select-box-details-pane'));\n        // Create span flex box item/div we can measure and control\n        const widthControlOuterDiv = dom.append(this.selectDropDownContainer, $('.select-box-dropdown-container-width-control'));\n        const widthControlInnerDiv = dom.append(widthControlOuterDiv, $('.width-control-div'));\n        this.widthControlElement = document.createElement('span');\n        this.widthControlElement.className = 'option-text-width-control';\n        dom.append(widthControlInnerDiv, this.widthControlElement);\n        // Always default to below position\n        this._dropDownPosition = 0 /* AnchorPosition.BELOW */;\n        // Inline stylesheet for themes\n        this.styleElement = dom.createStyleSheet(this.selectDropDownContainer);\n        // Prevent dragging of dropdown #114329\n        this.selectDropDownContainer.setAttribute('draggable', 'true');\n        this._register(dom.addDisposableListener(this.selectDropDownContainer, dom.EventType.DRAG_START, (e) => {\n            dom.EventHelper.stop(e, true);\n        }));\n    }\n    registerListeners() {\n        // Parent native select keyboard listeners\n        this._register(dom.addStandardDisposableListener(this.selectElement, 'change', (e) => {\n            this.selected = e.target.selectedIndex;\n            this._onDidSelect.fire({\n                index: e.target.selectedIndex,\n                selected: e.target.value\n            });\n            if (!!this.options[this.selected] && !!this.options[this.selected].text) {\n                this.setTitle(this.options[this.selected].text);\n            }\n        }));\n        // Have to implement both keyboard and mouse controllers to handle disabled options\n        // Intercept mouse events to override normal select actions on parents\n        this._register(dom.addDisposableListener(this.selectElement, dom.EventType.CLICK, (e) => {\n            dom.EventHelper.stop(e);\n            if (this._isVisible) {\n                this.hideSelectDropDown(true);\n            }\n            else {\n                this.showSelectDropDown();\n            }\n        }));\n        this._register(dom.addDisposableListener(this.selectElement, dom.EventType.MOUSE_DOWN, (e) => {\n            dom.EventHelper.stop(e);\n        }));\n        // Intercept touch events\n        // The following implementation is slightly different from the mouse event handlers above.\n        // Use the following helper variable, otherwise the list flickers.\n        let listIsVisibleOnTouchStart;\n        this._register(dom.addDisposableListener(this.selectElement, 'touchstart', (e) => {\n            listIsVisibleOnTouchStart = this._isVisible;\n        }));\n        this._register(dom.addDisposableListener(this.selectElement, 'touchend', (e) => {\n            dom.EventHelper.stop(e);\n            if (listIsVisibleOnTouchStart) {\n                this.hideSelectDropDown(true);\n            }\n            else {\n                this.showSelectDropDown();\n            }\n        }));\n        // Intercept keyboard handling\n        this._register(dom.addDisposableListener(this.selectElement, dom.EventType.KEY_DOWN, (e) => {\n            const event = new StandardKeyboardEvent(e);\n            let showDropDown = false;\n            // Create and drop down select list on keyboard select\n            if (isMacintosh) {\n                if (event.keyCode === 18 /* KeyCode.DownArrow */ || event.keyCode === 16 /* KeyCode.UpArrow */ || event.keyCode === 10 /* KeyCode.Space */ || event.keyCode === 3 /* KeyCode.Enter */) {\n                    showDropDown = true;\n                }\n            }\n            else {\n                if (event.keyCode === 18 /* KeyCode.DownArrow */ && event.altKey || event.keyCode === 16 /* KeyCode.UpArrow */ && event.altKey || event.keyCode === 10 /* KeyCode.Space */ || event.keyCode === 3 /* KeyCode.Enter */) {\n                    showDropDown = true;\n                }\n            }\n            if (showDropDown) {\n                this.showSelectDropDown();\n                dom.EventHelper.stop(e, true);\n            }\n        }));\n    }\n    get onDidSelect() {\n        return this._onDidSelect.event;\n    }\n    setOptions(options, selected) {\n        if (!arrays.equals(this.options, options)) {\n            this.options = options;\n            this.selectElement.options.length = 0;\n            this._hasDetails = false;\n            this._cachedMaxDetailsHeight = undefined;\n            this.options.forEach((option, index) => {\n                this.selectElement.add(this.createOption(option.text, index, option.isDisabled));\n                if (typeof option.description === 'string') {\n                    this._hasDetails = true;\n                }\n            });\n        }\n        if (selected !== undefined) {\n            this.select(selected);\n            // Set current = selected since this is not necessarily a user exit\n            this._currentSelection = this.selected;\n        }\n    }\n    setOptionsList() {\n        // Mirror options in drop-down\n        // Populate select list for non-native select mode\n        this.selectList?.splice(0, this.selectList.length, this.options);\n    }\n    select(index) {\n        if (index >= 0 && index < this.options.length) {\n            this.selected = index;\n        }\n        else if (index > this.options.length - 1) {\n            // Adjust index to end of list\n            // This could make client out of sync with the select\n            this.select(this.options.length - 1);\n        }\n        else if (this.selected < 0) {\n            this.selected = 0;\n        }\n        this.selectElement.selectedIndex = this.selected;\n        if (!!this.options[this.selected] && !!this.options[this.selected].text) {\n            this.setTitle(this.options[this.selected].text);\n        }\n    }\n    focus() {\n        if (this.selectElement) {\n            this.selectElement.tabIndex = 0;\n            this.selectElement.focus();\n        }\n    }\n    blur() {\n        if (this.selectElement) {\n            this.selectElement.tabIndex = -1;\n            this.selectElement.blur();\n        }\n    }\n    setFocusable(focusable) {\n        this.selectElement.tabIndex = focusable ? 0 : -1;\n    }\n    render(container) {\n        this.container = container;\n        container.classList.add('select-container');\n        container.appendChild(this.selectElement);\n        this.styleSelectElement();\n    }\n    initStyleSheet() {\n        const content = [];\n        // Style non-native select mode\n        if (this.styles.listFocusBackground) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.focused { background-color: ${this.styles.listFocusBackground} !important; }`);\n        }\n        if (this.styles.listFocusForeground) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.focused { color: ${this.styles.listFocusForeground} !important; }`);\n        }\n        if (this.styles.decoratorRightForeground) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.focused) .option-decorator-right { color: ${this.styles.decoratorRightForeground}; }`);\n        }\n        if (this.styles.selectBackground && this.styles.selectBorder && this.styles.selectBorder !== this.styles.selectBackground) {\n            content.push(`.monaco-select-box-dropdown-container { border: 1px solid ${this.styles.selectBorder} } `);\n            content.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-top { border-top: 1px solid ${this.styles.selectBorder} } `);\n            content.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-bottom { border-bottom: 1px solid ${this.styles.selectBorder} } `);\n        }\n        else if (this.styles.selectListBorder) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-top { border-top: 1px solid ${this.styles.selectListBorder} } `);\n            content.push(`.monaco-select-box-dropdown-container > .select-box-details-pane.border-bottom { border-bottom: 1px solid ${this.styles.selectListBorder} } `);\n        }\n        // Hover foreground - ignore for disabled options\n        if (this.styles.listHoverForeground) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.option-disabled):not(.focused):hover { color: ${this.styles.listHoverForeground} !important; }`);\n        }\n        // Hover background - ignore for disabled options\n        if (this.styles.listHoverBackground) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.option-disabled):not(.focused):hover { background-color: ${this.styles.listHoverBackground} !important; }`);\n        }\n        // Match quick input outline styles - ignore for disabled options\n        if (this.styles.listFocusOutline) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.focused { outline: 1.6px dotted ${this.styles.listFocusOutline} !important; outline-offset: -1.6px !important; }`);\n        }\n        if (this.styles.listHoverOutline) {\n            content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row:not(.option-disabled):not(.focused):hover { outline: 1.6px dashed ${this.styles.listHoverOutline} !important; outline-offset: -1.6px !important; }`);\n        }\n        // Clear list styles on focus and on hover for disabled options\n        content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.option-disabled.focused { background-color: transparent !important; color: inherit !important; outline: none !important; }`);\n        content.push(`.monaco-select-box-dropdown-container > .select-box-dropdown-list-container .monaco-list .monaco-list-row.option-disabled:hover { background-color: transparent !important; color: inherit !important; outline: none !important; }`);\n        this.styleElement.textContent = content.join('\\n');\n    }\n    styleSelectElement() {\n        const background = this.styles.selectBackground ?? '';\n        const foreground = this.styles.selectForeground ?? '';\n        const border = this.styles.selectBorder ?? '';\n        this.selectElement.style.backgroundColor = background;\n        this.selectElement.style.color = foreground;\n        this.selectElement.style.borderColor = border;\n    }\n    styleList() {\n        const background = this.styles.selectBackground ?? '';\n        const listBackground = dom.asCssValueWithDefault(this.styles.selectListBackground, background);\n        this.selectDropDownListContainer.style.backgroundColor = listBackground;\n        this.selectionDetailsPane.style.backgroundColor = listBackground;\n        const optionsBorder = this.styles.focusBorder ?? '';\n        this.selectDropDownContainer.style.outlineColor = optionsBorder;\n        this.selectDropDownContainer.style.outlineOffset = '-1px';\n        this.selectList.style(this.styles);\n    }\n    createOption(value, index, disabled) {\n        const option = document.createElement('option');\n        option.value = value;\n        option.text = value;\n        option.disabled = !!disabled;\n        return option;\n    }\n    // ContextView dropdown methods\n    showSelectDropDown() {\n        this.selectionDetailsPane.innerText = '';\n        if (!this.contextViewProvider || this._isVisible) {\n            return;\n        }\n        // Lazily create and populate list only at open, moved from constructor\n        this.createSelectList(this.selectDropDownContainer);\n        this.setOptionsList();\n        // This allows us to flip the position based on measurement\n        // Set drop-down position above/below from required height and margins\n        // If pre-layout cannot fit at least one option do not show drop-down\n        this.contextViewProvider.showContextView({\n            getAnchor: () => this.selectElement,\n            render: (container) => this.renderSelectDropDown(container, true),\n            layout: () => {\n                this.layoutSelectDropDown();\n            },\n            onHide: () => {\n                this.selectDropDownContainer.classList.remove('visible');\n                this.selectElement.classList.remove('synthetic-focus');\n            },\n            anchorPosition: this._dropDownPosition\n        }, this.selectBoxOptions.optionsAsChildren ? this.container : undefined);\n        // Hide so we can relay out\n        this._isVisible = true;\n        this.hideSelectDropDown(false);\n        this.contextViewProvider.showContextView({\n            getAnchor: () => this.selectElement,\n            render: (container) => this.renderSelectDropDown(container),\n            layout: () => this.layoutSelectDropDown(),\n            onHide: () => {\n                this.selectDropDownContainer.classList.remove('visible');\n                this.selectElement.classList.remove('synthetic-focus');\n            },\n            anchorPosition: this._dropDownPosition\n        }, this.selectBoxOptions.optionsAsChildren ? this.container : undefined);\n        // Track initial selection the case user escape, blur\n        this._currentSelection = this.selected;\n        this._isVisible = true;\n        this.selectElement.setAttribute('aria-expanded', 'true');\n    }\n    hideSelectDropDown(focusSelect) {\n        if (!this.contextViewProvider || !this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this.selectElement.setAttribute('aria-expanded', 'false');\n        if (focusSelect) {\n            this.selectElement.focus();\n        }\n        this.contextViewProvider.hideContextView();\n    }\n    renderSelectDropDown(container, preLayoutPosition) {\n        container.appendChild(this.selectDropDownContainer);\n        // Pre-Layout allows us to change position\n        this.layoutSelectDropDown(preLayoutPosition);\n        return {\n            dispose: () => {\n                // contextView will dispose itself if moving from one View to another\n                this.selectDropDownContainer.remove(); // remove to take out the CSS rules we add\n            }\n        };\n    }\n    // Iterate over detailed descriptions, find max height\n    measureMaxDetailsHeight() {\n        let maxDetailsPaneHeight = 0;\n        this.options.forEach((_option, index) => {\n            this.updateDetail(index);\n            if (this.selectionDetailsPane.offsetHeight > maxDetailsPaneHeight) {\n                maxDetailsPaneHeight = this.selectionDetailsPane.offsetHeight;\n            }\n        });\n        return maxDetailsPaneHeight;\n    }\n    layoutSelectDropDown(preLayoutPosition) {\n        // Avoid recursion from layout called in onListFocus\n        if (this._skipLayout) {\n            return false;\n        }\n        // Layout ContextView drop down select list and container\n        // Have to manage our vertical overflow, sizing, position below or above\n        // Position has to be determined and set prior to contextView instantiation\n        if (this.selectList) {\n            // Make visible to enable measurements\n            this.selectDropDownContainer.classList.add('visible');\n            const window = dom.getWindow(this.selectElement);\n            const selectPosition = dom.getDomNodePagePosition(this.selectElement);\n            const styles = dom.getWindow(this.selectElement).getComputedStyle(this.selectElement);\n            const verticalPadding = parseFloat(styles.getPropertyValue('--dropdown-padding-top')) + parseFloat(styles.getPropertyValue('--dropdown-padding-bottom'));\n            const maxSelectDropDownHeightBelow = (window.innerHeight - selectPosition.top - selectPosition.height - (this.selectBoxOptions.minBottomMargin || 0));\n            const maxSelectDropDownHeightAbove = (selectPosition.top - SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN);\n            // Determine optimal width - min(longest option), opt(parent select, excluding margins), max(ContextView controlled)\n            const selectWidth = this.selectElement.offsetWidth;\n            const selectMinWidth = this.setWidthControlElement(this.widthControlElement);\n            const selectOptimalWidth = Math.max(selectMinWidth, Math.round(selectWidth)).toString() + 'px';\n            this.selectDropDownContainer.style.width = selectOptimalWidth;\n            // Get initial list height and determine space above and below\n            this.selectList.getHTMLElement().style.height = '';\n            this.selectList.layout();\n            let listHeight = this.selectList.contentHeight;\n            if (this._hasDetails && this._cachedMaxDetailsHeight === undefined) {\n                this._cachedMaxDetailsHeight = this.measureMaxDetailsHeight();\n            }\n            const maxDetailsPaneHeight = this._hasDetails ? this._cachedMaxDetailsHeight : 0;\n            const minRequiredDropDownHeight = listHeight + verticalPadding + maxDetailsPaneHeight;\n            const maxVisibleOptionsBelow = ((Math.floor((maxSelectDropDownHeightBelow - verticalPadding - maxDetailsPaneHeight) / this.getHeight())));\n            const maxVisibleOptionsAbove = ((Math.floor((maxSelectDropDownHeightAbove - verticalPadding - maxDetailsPaneHeight) / this.getHeight())));\n            // If we are only doing pre-layout check/adjust position only\n            // Calculate vertical space available, flip up if insufficient\n            // Use reflected padding on parent select, ContextView style\n            // properties not available before DOM attachment\n            if (preLayoutPosition) {\n                // Check if select moved out of viewport , do not open\n                // If at least one option cannot be shown, don't open the drop-down or hide/remove if open\n                if ((selectPosition.top + selectPosition.height) > (window.innerHeight - 22)\n                    || selectPosition.top < SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN\n                    || ((maxVisibleOptionsBelow < 1) && (maxVisibleOptionsAbove < 1))) {\n                    // Indicate we cannot open\n                    return false;\n                }\n                // Determine if we have to flip up\n                // Always show complete list items - never more than Max available vertical height\n                if (maxVisibleOptionsBelow < SelectBoxList.DEFAULT_MINIMUM_VISIBLE_OPTIONS\n                    && maxVisibleOptionsAbove > maxVisibleOptionsBelow\n                    && this.options.length > maxVisibleOptionsBelow) {\n                    this._dropDownPosition = 1 /* AnchorPosition.ABOVE */;\n                    this.selectDropDownListContainer.remove();\n                    this.selectionDetailsPane.remove();\n                    this.selectDropDownContainer.appendChild(this.selectionDetailsPane);\n                    this.selectDropDownContainer.appendChild(this.selectDropDownListContainer);\n                    this.selectionDetailsPane.classList.remove('border-top');\n                    this.selectionDetailsPane.classList.add('border-bottom');\n                }\n                else {\n                    this._dropDownPosition = 0 /* AnchorPosition.BELOW */;\n                    this.selectDropDownListContainer.remove();\n                    this.selectionDetailsPane.remove();\n                    this.selectDropDownContainer.appendChild(this.selectDropDownListContainer);\n                    this.selectDropDownContainer.appendChild(this.selectionDetailsPane);\n                    this.selectionDetailsPane.classList.remove('border-bottom');\n                    this.selectionDetailsPane.classList.add('border-top');\n                }\n                // Do full layout on showSelectDropDown only\n                return true;\n            }\n            // Check if select out of viewport or cutting into status bar\n            if ((selectPosition.top + selectPosition.height) > (window.innerHeight - 22)\n                || selectPosition.top < SelectBoxList.DEFAULT_DROPDOWN_MINIMUM_TOP_MARGIN\n                || (this._dropDownPosition === 0 /* AnchorPosition.BELOW */ && maxVisibleOptionsBelow < 1)\n                || (this._dropDownPosition === 1 /* AnchorPosition.ABOVE */ && maxVisibleOptionsAbove < 1)) {\n                // Cannot properly layout, close and hide\n                this.hideSelectDropDown(true);\n                return false;\n            }\n            // SetUp list dimensions and layout - account for container padding\n            // Use position to check above or below available space\n            if (this._dropDownPosition === 0 /* AnchorPosition.BELOW */) {\n                if (this._isVisible && maxVisibleOptionsBelow + maxVisibleOptionsAbove < 1) {\n                    // If drop-down is visible, must be doing a DOM re-layout, hide since we don't fit\n                    // Hide drop-down, hide contextview, focus on parent select\n                    this.hideSelectDropDown(true);\n                    return false;\n                }\n                // Adjust list height to max from select bottom to margin (default/minBottomMargin)\n                if (minRequiredDropDownHeight > maxSelectDropDownHeightBelow) {\n                    listHeight = (maxVisibleOptionsBelow * this.getHeight());\n                }\n            }\n            else {\n                if (minRequiredDropDownHeight > maxSelectDropDownHeightAbove) {\n                    listHeight = (maxVisibleOptionsAbove * this.getHeight());\n                }\n            }\n            // Set adjusted list height and relayout\n            this.selectList.layout(listHeight);\n            this.selectList.domFocus();\n            // Finally set focus on selected item\n            if (this.selectList.length > 0) {\n                this.selectList.setFocus([this.selected || 0]);\n                this.selectList.reveal(this.selectList.getFocus()[0] || 0);\n            }\n            if (this._hasDetails) {\n                // Leave the selectDropDownContainer to size itself according to children (list + details) - #57447\n                this.selectList.getHTMLElement().style.height = (listHeight + verticalPadding) + 'px';\n                this.selectDropDownContainer.style.height = '';\n            }\n            else {\n                this.selectDropDownContainer.style.height = (listHeight + verticalPadding) + 'px';\n            }\n            this.updateDetail(this.selected);\n            this.selectDropDownContainer.style.width = selectOptimalWidth;\n            // Maintain focus outline on parent select as well as list container - tabindex for focus\n            this.selectDropDownListContainer.setAttribute('tabindex', '0');\n            this.selectElement.classList.add('synthetic-focus');\n            this.selectDropDownContainer.classList.add('synthetic-focus');\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    setWidthControlElement(container) {\n        let elementWidth = 0;\n        if (container) {\n            let longest = 0;\n            let longestLength = 0;\n            this.options.forEach((option, index) => {\n                const detailLength = !!option.detail ? option.detail.length : 0;\n                const rightDecoratorLength = !!option.decoratorRight ? option.decoratorRight.length : 0;\n                const len = option.text.length + detailLength + rightDecoratorLength;\n                if (len > longestLength) {\n                    longest = index;\n                    longestLength = len;\n                }\n            });\n            container.textContent = this.options[longest].text + (!!this.options[longest].decoratorRight ? (this.options[longest].decoratorRight + ' ') : '');\n            elementWidth = dom.getTotalWidth(container);\n        }\n        return elementWidth;\n    }\n    createSelectList(parent) {\n        // If we have already constructive list on open, skip\n        if (this.selectList) {\n            return;\n        }\n        // SetUp container for list\n        this.selectDropDownListContainer = dom.append(parent, $('.select-box-dropdown-list-container'));\n        this.listRenderer = new SelectListRenderer();\n        this.selectList = this._register(new List('SelectBoxCustom', this.selectDropDownListContainer, this, [this.listRenderer], {\n            useShadows: false,\n            verticalScrollMode: 3 /* ScrollbarVisibility.Visible */,\n            keyboardSupport: false,\n            mouseSupport: false,\n            accessibilityProvider: {\n                getAriaLabel: element => {\n                    let label = element.text;\n                    if (element.detail) {\n                        label += `. ${element.detail}`;\n                    }\n                    if (element.decoratorRight) {\n                        label += `. ${element.decoratorRight}`;\n                    }\n                    if (element.description) {\n                        label += `. ${element.description}`;\n                    }\n                    return label;\n                },\n                getWidgetAriaLabel: () => localize({ key: 'selectBox', comment: ['Behave like native select dropdown element.'] }, \"Select Box\"),\n                getRole: () => isMacintosh ? '' : 'option',\n                getWidgetRole: () => 'listbox'\n            }\n        }));\n        if (this.selectBoxOptions.ariaLabel) {\n            this.selectList.ariaLabel = this.selectBoxOptions.ariaLabel;\n        }\n        // SetUp list keyboard controller - control navigation, disabled items, focus\n        const onKeyDown = this._register(new DomEmitter(this.selectDropDownListContainer, 'keydown'));\n        const onSelectDropDownKeyDown = Event.chain(onKeyDown.event, $ => $.filter(() => this.selectList.length > 0)\n            .map(e => new StandardKeyboardEvent(e)));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 3 /* KeyCode.Enter */))(this.onEnter, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 2 /* KeyCode.Tab */))(this.onEnter, this)); // Tab should behave the same as enter, #79339\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 9 /* KeyCode.Escape */))(this.onEscape, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 16 /* KeyCode.UpArrow */))(this.onUpArrow, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 18 /* KeyCode.DownArrow */))(this.onDownArrow, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 12 /* KeyCode.PageDown */))(this.onPageDown, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 11 /* KeyCode.PageUp */))(this.onPageUp, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 14 /* KeyCode.Home */))(this.onHome, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => e.keyCode === 13 /* KeyCode.End */))(this.onEnd, this));\n        this._register(Event.chain(onSelectDropDownKeyDown, $ => $.filter(e => (e.keyCode >= 21 /* KeyCode.Digit0 */ && e.keyCode <= 56 /* KeyCode.KeyZ */) || (e.keyCode >= 85 /* KeyCode.Semicolon */ && e.keyCode <= 113 /* KeyCode.NumpadDivide */)))(this.onCharacter, this));\n        // SetUp list mouse controller - control navigation, disabled items, focus\n        this._register(dom.addDisposableListener(this.selectList.getHTMLElement(), dom.EventType.POINTER_UP, e => this.onPointerUp(e)));\n        this._register(this.selectList.onMouseOver(e => typeof e.index !== 'undefined' && this.selectList.setFocus([e.index])));\n        this._register(this.selectList.onDidChangeFocus(e => this.onListFocus(e)));\n        this._register(dom.addDisposableListener(this.selectDropDownContainer, dom.EventType.FOCUS_OUT, e => {\n            if (!this._isVisible || dom.isAncestor(e.relatedTarget, this.selectDropDownContainer)) {\n                return;\n            }\n            this.onListBlur();\n        }));\n        this.selectList.getHTMLElement().setAttribute('aria-label', this.selectBoxOptions.ariaLabel || '');\n        this.selectList.getHTMLElement().setAttribute('aria-expanded', 'true');\n        this.styleList();\n    }\n    // List methods\n    // List mouse controller - active exit, select option, fire onDidSelect if change, return focus to parent select\n    // Also takes in touchend events\n    onPointerUp(e) {\n        if (!this.selectList.length) {\n            return;\n        }\n        dom.EventHelper.stop(e);\n        const target = e.target;\n        if (!target) {\n            return;\n        }\n        // Check our mouse event is on an option (not scrollbar)\n        if (target.classList.contains('slider')) {\n            return;\n        }\n        const listRowElement = target.closest('.monaco-list-row');\n        if (!listRowElement) {\n            return;\n        }\n        const index = Number(listRowElement.getAttribute('data-index'));\n        const disabled = listRowElement.classList.contains('option-disabled');\n        // Ignore mouse selection of disabled options\n        if (index >= 0 && index < this.options.length && !disabled) {\n            this.selected = index;\n            this.select(this.selected);\n            this.selectList.setFocus([this.selected]);\n            this.selectList.reveal(this.selectList.getFocus()[0]);\n            // Only fire if selection change\n            if (this.selected !== this._currentSelection) {\n                // Set current = selected\n                this._currentSelection = this.selected;\n                this._onDidSelect.fire({\n                    index: this.selectElement.selectedIndex,\n                    selected: this.options[this.selected].text\n                });\n                if (!!this.options[this.selected] && !!this.options[this.selected].text) {\n                    this.setTitle(this.options[this.selected].text);\n                }\n            }\n            this.hideSelectDropDown(true);\n        }\n    }\n    // List Exit - passive - implicit no selection change, hide drop-down\n    onListBlur() {\n        if (this._sticky) {\n            return;\n        }\n        if (this.selected !== this._currentSelection) {\n            // Reset selected to current if no change\n            this.select(this._currentSelection);\n        }\n        this.hideSelectDropDown(false);\n    }\n    renderDescriptionMarkdown(text, actionHandler) {\n        const cleanRenderedMarkdown = (element) => {\n            for (let i = 0; i < element.childNodes.length; i++) {\n                const child = element.childNodes.item(i);\n                const tagName = child.tagName && child.tagName.toLowerCase();\n                if (tagName === 'img') {\n                    child.remove();\n                }\n                else {\n                    cleanRenderedMarkdown(child);\n                }\n            }\n        };\n        const rendered = renderMarkdown({ value: text, supportThemeIcons: true }, { actionHandler });\n        rendered.element.classList.add('select-box-description-markdown');\n        cleanRenderedMarkdown(rendered.element);\n        return rendered.element;\n    }\n    // List Focus Change - passive - update details pane with newly focused element's data\n    onListFocus(e) {\n        // Skip during initial layout\n        if (!this._isVisible || !this._hasDetails) {\n            return;\n        }\n        this.updateDetail(e.indexes[0]);\n    }\n    updateDetail(selectedIndex) {\n        this.selectionDetailsPane.innerText = '';\n        const option = this.options[selectedIndex];\n        const description = option?.description ?? '';\n        const descriptionIsMarkdown = option?.descriptionIsMarkdown ?? false;\n        if (description) {\n            if (descriptionIsMarkdown) {\n                const actionHandler = option.descriptionMarkdownActionHandler;\n                this.selectionDetailsPane.appendChild(this.renderDescriptionMarkdown(description, actionHandler));\n            }\n            else {\n                this.selectionDetailsPane.innerText = description;\n            }\n            this.selectionDetailsPane.style.display = 'block';\n        }\n        else {\n            this.selectionDetailsPane.style.display = 'none';\n        }\n        // Avoid recursion\n        this._skipLayout = true;\n        this.contextViewProvider.layout();\n        this._skipLayout = false;\n    }\n    // List keyboard controller\n    // List exit - active - hide ContextView dropdown, reset selection, return focus to parent select\n    onEscape(e) {\n        dom.EventHelper.stop(e);\n        // Reset selection to value when opened\n        this.select(this._currentSelection);\n        this.hideSelectDropDown(true);\n    }\n    // List exit - active - hide ContextView dropdown, return focus to parent select, fire onDidSelect if change\n    onEnter(e) {\n        dom.EventHelper.stop(e);\n        // Only fire if selection change\n        if (this.selected !== this._currentSelection) {\n            this._currentSelection = this.selected;\n            this._onDidSelect.fire({\n                index: this.selectElement.selectedIndex,\n                selected: this.options[this.selected].text\n            });\n            if (!!this.options[this.selected] && !!this.options[this.selected].text) {\n                this.setTitle(this.options[this.selected].text);\n            }\n        }\n        this.hideSelectDropDown(true);\n    }\n    // List navigation - have to handle a disabled option (jump over)\n    onDownArrow(e) {\n        if (this.selected < this.options.length - 1) {\n            dom.EventHelper.stop(e, true);\n            // Skip disabled options\n            const nextOptionDisabled = this.options[this.selected + 1].isDisabled;\n            if (nextOptionDisabled && this.options.length > this.selected + 2) {\n                this.selected += 2;\n            }\n            else if (nextOptionDisabled) {\n                return;\n            }\n            else {\n                this.selected++;\n            }\n            // Set focus/selection - only fire event when closing drop-down or on blur\n            this.select(this.selected);\n            this.selectList.setFocus([this.selected]);\n            this.selectList.reveal(this.selectList.getFocus()[0]);\n        }\n    }\n    onUpArrow(e) {\n        if (this.selected > 0) {\n            dom.EventHelper.stop(e, true);\n            // Skip disabled options\n            const previousOptionDisabled = this.options[this.selected - 1].isDisabled;\n            if (previousOptionDisabled && this.selected > 1) {\n                this.selected -= 2;\n            }\n            else {\n                this.selected--;\n            }\n            // Set focus/selection - only fire event when closing drop-down or on blur\n            this.select(this.selected);\n            this.selectList.setFocus([this.selected]);\n            this.selectList.reveal(this.selectList.getFocus()[0]);\n        }\n    }\n    onPageUp(e) {\n        dom.EventHelper.stop(e);\n        this.selectList.focusPreviousPage();\n        // Allow scrolling to settle\n        setTimeout(() => {\n            this.selected = this.selectList.getFocus()[0];\n            // Shift selection down if we land on a disabled option\n            if (this.options[this.selected].isDisabled && this.selected < this.options.length - 1) {\n                this.selected++;\n                this.selectList.setFocus([this.selected]);\n            }\n            this.selectList.reveal(this.selected);\n            this.select(this.selected);\n        }, 1);\n    }\n    onPageDown(e) {\n        dom.EventHelper.stop(e);\n        this.selectList.focusNextPage();\n        // Allow scrolling to settle\n        setTimeout(() => {\n            this.selected = this.selectList.getFocus()[0];\n            // Shift selection up if we land on a disabled option\n            if (this.options[this.selected].isDisabled && this.selected > 0) {\n                this.selected--;\n                this.selectList.setFocus([this.selected]);\n            }\n            this.selectList.reveal(this.selected);\n            this.select(this.selected);\n        }, 1);\n    }\n    onHome(e) {\n        dom.EventHelper.stop(e);\n        if (this.options.length < 2) {\n            return;\n        }\n        this.selected = 0;\n        if (this.options[this.selected].isDisabled && this.selected > 1) {\n            this.selected++;\n        }\n        this.selectList.setFocus([this.selected]);\n        this.selectList.reveal(this.selected);\n        this.select(this.selected);\n    }\n    onEnd(e) {\n        dom.EventHelper.stop(e);\n        if (this.options.length < 2) {\n            return;\n        }\n        this.selected = this.options.length - 1;\n        if (this.options[this.selected].isDisabled && this.selected > 1) {\n            this.selected--;\n        }\n        this.selectList.setFocus([this.selected]);\n        this.selectList.reveal(this.selected);\n        this.select(this.selected);\n    }\n    // Mimic option first character navigation of native select\n    onCharacter(e) {\n        const ch = KeyCodeUtils.toString(e.keyCode);\n        let optionIndex = -1;\n        for (let i = 0; i < this.options.length - 1; i++) {\n            optionIndex = (i + this.selected + 1) % this.options.length;\n            if (this.options[optionIndex].text.charAt(0).toUpperCase() === ch && !this.options[optionIndex].isDisabled) {\n                this.select(optionIndex);\n                this.selectList.setFocus([optionIndex]);\n                this.selectList.reveal(this.selectList.getFocus()[0]);\n                dom.EventHelper.stop(e);\n                break;\n            }\n        }\n    }\n    dispose() {\n        this.hideSelectDropDown(false);\n        super.dispose();\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { isNullish } from '../../util/Utils';\n/**\n * Action to change the attribute of a cell's user object.\n * There is no method on the graph model that uses this\n * action. To use the action, you can use the code shown\n * in the example below.\n *\n * Example:\n *\n * To change the attributeName in the cell's user object\n * to attributeValue, use the following code:\n *\n * ```javascript\n * model.beginUpdate();\n * try\n * {\n *   var edit = new mxCellAttributeChange(\n *     cell, attributeName, attributeValue);\n *   model.execute(edit);\n * }\n * finally\n * {\n *   model.endUpdate();\n * }\n * ```\n *\n * Constructor: mxCellAttributeChange\n *\n * Constructs a change of a attribute of the DOM node\n * stored as the value of the given {@link Cell}`.\n */\nclass CellAttributeChange {\n  constructor(cell, attribute, value) {\n    this.cell = cell;\n    this.attribute = attribute;\n    this.value = value;\n    this.previous = value;\n  }\n  /**\n   * Changes the attribute of the cell's user object by\n   * using {@link Cell#setAttribute}.\n   */\n  execute() {\n    const tmp = this.cell.getAttribute(this.attribute);\n    if (isNullish(this.previous)) {\n      this.cell.value.removeAttribute(this.attribute);\n    } else {\n      this.cell.setAttribute(this.attribute, this.previous);\n    }\n    this.previous = tmp;\n  }\n}\nexport default CellAttributeChange;","map":{"version":3,"names":["isNullish","CellAttributeChange","constructor","cell","attribute","value","previous","execute","tmp","getAttribute","removeAttribute","setAttribute"],"sources":["D:/OSPanel/domains/react/react-intro-main/node_modules/@maxgraph/core/dist/view/undoable_changes/CellAttributeChange.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { isNullish } from '../../util/Utils';\n/**\n * Action to change the attribute of a cell's user object.\n * There is no method on the graph model that uses this\n * action. To use the action, you can use the code shown\n * in the example below.\n *\n * Example:\n *\n * To change the attributeName in the cell's user object\n * to attributeValue, use the following code:\n *\n * ```javascript\n * model.beginUpdate();\n * try\n * {\n *   var edit = new mxCellAttributeChange(\n *     cell, attributeName, attributeValue);\n *   model.execute(edit);\n * }\n * finally\n * {\n *   model.endUpdate();\n * }\n * ```\n *\n * Constructor: mxCellAttributeChange\n *\n * Constructs a change of a attribute of the DOM node\n * stored as the value of the given {@link Cell}`.\n */\nclass CellAttributeChange {\n    constructor(cell, attribute, value) {\n        this.cell = cell;\n        this.attribute = attribute;\n        this.value = value;\n        this.previous = value;\n    }\n    /**\n     * Changes the attribute of the cell's user object by\n     * using {@link Cell#setAttribute}.\n     */\n    execute() {\n        const tmp = this.cell.getAttribute(this.attribute);\n        if (isNullish(this.previous)) {\n            this.cell.value.removeAttribute(this.attribute);\n        }\n        else {\n            this.cell.setAttribute(this.attribute, this.previous);\n        }\n        this.previous = tmp;\n    }\n}\nexport default CellAttributeChange;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,CAAC;EACtBC,WAAWA,CAACC,IAAI,EAAEC,SAAS,EAAEC,KAAK,EAAE;IAChC,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,QAAQ,GAAGD,KAAK;EACzB;EACA;AACJ;AACA;AACA;EACIE,OAAOA,CAAA,EAAG;IACN,MAAMC,GAAG,GAAG,IAAI,CAACL,IAAI,CAACM,YAAY,CAAC,IAAI,CAACL,SAAS,CAAC;IAClD,IAAIJ,SAAS,CAAC,IAAI,CAACM,QAAQ,CAAC,EAAE;MAC1B,IAAI,CAACH,IAAI,CAACE,KAAK,CAACK,eAAe,CAAC,IAAI,CAACN,SAAS,CAAC;IACnD,CAAC,MACI;MACD,IAAI,CAACD,IAAI,CAACQ,YAAY,CAAC,IAAI,CAACP,SAAS,EAAE,IAAI,CAACE,QAAQ,CAAC;IACzD;IACA,IAAI,CAACA,QAAQ,GAAGE,GAAG;EACvB;AACJ;AACA,eAAeP,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _ReferencesController;\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar ReferencesController_1;\nimport { createCancelablePromise } from '../../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../../base/common/errors.js';\nimport { KeyChord } from '../../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { ICodeEditorService } from '../../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { getOuterEditor, PeekContext } from '../../../peekView/browser/peekView.js';\nimport * as nls from '../../../../../nls.js';\nimport { CommandsRegistry } from '../../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IListService, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse, WorkbenchTreeElementCanExpand } from '../../../../../platform/list/browser/listService.js';\nimport { INotificationService } from '../../../../../platform/notification/common/notification.js';\nimport { IStorageService } from '../../../../../platform/storage/common/storage.js';\nimport { OneReference } from '../referencesModel.js';\nimport { LayoutData, ReferenceWidget } from './referencesWidget.js';\nimport { EditorContextKeys } from '../../../../common/editorContextKeys.js';\nimport { InputFocusedContext } from '../../../../../platform/contextkey/common/contextkeys.js';\nexport const ctxReferenceSearchVisible = new RawContextKey('referenceSearchVisible', false, nls.localize('referenceSearchVisible', \"Whether reference peek is visible, like 'Peek References' or 'Peek Definition'\"));\nlet ReferencesController = (_ReferencesController = class ReferencesController {\n  static get(editor) {\n    return editor.getContribution(ReferencesController_1.ID);\n  }\n  constructor(_defaultTreeKeyboardSupport, _editor, contextKeyService, _editorService, _notificationService, _instantiationService, _storageService, _configurationService) {\n    this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;\n    this._editor = _editor;\n    this._editorService = _editorService;\n    this._notificationService = _notificationService;\n    this._instantiationService = _instantiationService;\n    this._storageService = _storageService;\n    this._configurationService = _configurationService;\n    this._disposables = new DisposableStore();\n    this._requestIdPool = 0;\n    this._ignoreModelChangeEvent = false;\n    this._referenceSearchVisible = ctxReferenceSearchVisible.bindTo(contextKeyService);\n  }\n  dispose() {\n    var _this$_widget, _this$_model;\n    this._referenceSearchVisible.reset();\n    this._disposables.dispose();\n    (_this$_widget = this._widget) === null || _this$_widget === void 0 || _this$_widget.dispose();\n    (_this$_model = this._model) === null || _this$_model === void 0 || _this$_model.dispose();\n    this._widget = undefined;\n    this._model = undefined;\n  }\n  toggleWidget(range, modelPromise, peekMode) {\n    // close current widget and return early is position didn't change\n    let widgetPosition;\n    if (this._widget) {\n      widgetPosition = this._widget.position;\n    }\n    this.closeWidget();\n    if (!!widgetPosition && range.containsPosition(widgetPosition)) {\n      return;\n    }\n    this._peekMode = peekMode;\n    this._referenceSearchVisible.set(true);\n    // close the widget on model/mode changes\n    this._disposables.add(this._editor.onDidChangeModelLanguage(() => {\n      this.closeWidget();\n    }));\n    this._disposables.add(this._editor.onDidChangeModel(() => {\n      if (!this._ignoreModelChangeEvent) {\n        this.closeWidget();\n      }\n    }));\n    const storageKey = 'peekViewLayout';\n    const data = LayoutData.fromJSON(this._storageService.get(storageKey, 0 /* StorageScope.PROFILE */, '{}'));\n    this._widget = this._instantiationService.createInstance(ReferenceWidget, this._editor, this._defaultTreeKeyboardSupport, data);\n    this._widget.setTitle(nls.localize('labelLoading', \"Loading...\"));\n    this._widget.show(range);\n    this._disposables.add(this._widget.onDidClose(() => {\n      modelPromise.cancel();\n      if (this._widget) {\n        this._storageService.store(storageKey, JSON.stringify(this._widget.layoutData), 0 /* StorageScope.PROFILE */, 1 /* StorageTarget.MACHINE */);\n        if (!this._widget.isClosing) {\n          // to prevent calling this too many times, check whether it was already closing.\n          this.closeWidget();\n        }\n        this._widget = undefined;\n      } else {\n        this.closeWidget();\n      }\n    }));\n    this._disposables.add(this._widget.onDidSelectReference(event => {\n      const {\n        element,\n        kind\n      } = event;\n      if (!element) {\n        return;\n      }\n      switch (kind) {\n        case 'open':\n          if (event.source !== 'editor' || !this._configurationService.getValue('editor.stablePeek')) {\n            // when stable peek is configured we don't close\n            // the peek window on selecting the editor\n            this.openReference(element, false, false);\n          }\n          break;\n        case 'side':\n          this.openReference(element, true, false);\n          break;\n        case 'goto':\n          if (peekMode) {\n            this._gotoReference(element, true);\n          } else {\n            this.openReference(element, false, true);\n          }\n          break;\n      }\n    }));\n    const requestId = ++this._requestIdPool;\n    modelPromise.then(model => {\n      var _this$_model2;\n      // still current request? widget still open?\n      if (requestId !== this._requestIdPool || !this._widget) {\n        model.dispose();\n        return undefined;\n      }\n      (_this$_model2 = this._model) === null || _this$_model2 === void 0 || _this$_model2.dispose();\n      this._model = model;\n      // show widget\n      return this._widget.setModel(this._model).then(() => {\n        if (this._widget && this._model && this._editor.hasModel()) {\n          // might have been closed\n          // set title\n          if (!this._model.isEmpty) {\n            this._widget.setMetaTitle(nls.localize('metaTitle.N', \"{0} ({1})\", this._model.title, this._model.references.length));\n          } else {\n            this._widget.setMetaTitle('');\n          }\n          // set 'best' selection\n          const uri = this._editor.getModel().uri;\n          const pos = new Position(range.startLineNumber, range.startColumn);\n          const selection = this._model.nearestReference(uri, pos);\n          if (selection) {\n            return this._widget.setSelection(selection).then(() => {\n              if (this._widget && this._editor.getOption(87 /* EditorOption.peekWidgetDefaultFocus */) === 'editor') {\n                this._widget.focusOnPreviewEditor();\n              }\n            });\n          }\n        }\n        return undefined;\n      });\n    }, error => {\n      this._notificationService.error(error);\n    });\n  }\n  changeFocusBetweenPreviewAndReferences() {\n    if (!this._widget) {\n      // can be called while still resolving...\n      return;\n    }\n    if (this._widget.isPreviewEditorFocused()) {\n      this._widget.focusOnReferenceTree();\n    } else {\n      this._widget.focusOnPreviewEditor();\n    }\n  }\n  async goToNextOrPreviousReference(fwd) {\n    if (!this._editor.hasModel() || !this._model || !this._widget) {\n      // can be called while still resolving...\n      return;\n    }\n    const currentPosition = this._widget.position;\n    if (!currentPosition) {\n      return;\n    }\n    const source = this._model.nearestReference(this._editor.getModel().uri, currentPosition);\n    if (!source) {\n      return;\n    }\n    const target = this._model.nextOrPreviousReference(source, fwd);\n    const editorFocus = this._editor.hasTextFocus();\n    const previewEditorFocus = this._widget.isPreviewEditorFocused();\n    await this._widget.setSelection(target);\n    await this._gotoReference(target, false);\n    if (editorFocus) {\n      this._editor.focus();\n    } else if (this._widget && previewEditorFocus) {\n      this._widget.focusOnPreviewEditor();\n    }\n  }\n  async revealReference(reference) {\n    if (!this._editor.hasModel() || !this._model || !this._widget) {\n      // can be called while still resolving...\n      return;\n    }\n    await this._widget.revealReference(reference);\n  }\n  closeWidget() {\n    var _this$_widget2, _this$_model3;\n    let focusEditor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    (_this$_widget2 = this._widget) === null || _this$_widget2 === void 0 || _this$_widget2.dispose();\n    (_this$_model3 = this._model) === null || _this$_model3 === void 0 || _this$_model3.dispose();\n    this._referenceSearchVisible.reset();\n    this._disposables.clear();\n    this._widget = undefined;\n    this._model = undefined;\n    if (focusEditor) {\n      this._editor.focus();\n    }\n    this._requestIdPool += 1; // Cancel pending requests\n  }\n  _gotoReference(ref, pinned) {\n    var _this$_widget3;\n    (_this$_widget3 = this._widget) === null || _this$_widget3 === void 0 || _this$_widget3.hide();\n    this._ignoreModelChangeEvent = true;\n    const range = Range.lift(ref.range).collapseToStart();\n    return this._editorService.openCodeEditor({\n      resource: ref.uri,\n      options: {\n        selection: range,\n        selectionSource: \"code.jump\" /* TextEditorSelectionSource.JUMP */,\n        pinned\n      }\n    }, this._editor).then(openedEditor => {\n      this._ignoreModelChangeEvent = false;\n      if (!openedEditor || !this._widget) {\n        // something went wrong...\n        this.closeWidget();\n        return;\n      }\n      if (this._editor === openedEditor) {\n        //\n        this._widget.show(range);\n        this._widget.focusOnReferenceTree();\n      } else {\n        var _this$_peekMode;\n        // we opened a different editor instance which means a different controller instance.\n        // therefore we stop with this controller and continue with the other\n        const other = ReferencesController_1.get(openedEditor);\n        const model = this._model.clone();\n        this.closeWidget();\n        openedEditor.focus();\n        other === null || other === void 0 || other.toggleWidget(range, createCancelablePromise(_ => Promise.resolve(model)), (_this$_peekMode = this._peekMode) !== null && _this$_peekMode !== void 0 ? _this$_peekMode : false);\n      }\n    }, err => {\n      this._ignoreModelChangeEvent = false;\n      onUnexpectedError(err);\n    });\n  }\n  openReference(ref, sideBySide, pinned) {\n    // clear stage\n    if (!sideBySide) {\n      this.closeWidget();\n    }\n    const {\n      uri,\n      range\n    } = ref;\n    this._editorService.openCodeEditor({\n      resource: uri,\n      options: {\n        selection: range,\n        selectionSource: \"code.jump\" /* TextEditorSelectionSource.JUMP */,\n        pinned\n      }\n    }, this._editor, sideBySide);\n  }\n}, ReferencesController_1 = _ReferencesController, _ReferencesController.ID = 'editor.contrib.referencesController', _ReferencesController);\nReferencesController = ReferencesController_1 = __decorate([__param(2, IContextKeyService), __param(3, ICodeEditorService), __param(4, INotificationService), __param(5, IInstantiationService), __param(6, IStorageService), __param(7, IConfigurationService)], ReferencesController);\nexport { ReferencesController };\nfunction withController(accessor, fn) {\n  const outerEditor = getOuterEditor(accessor);\n  if (!outerEditor) {\n    return;\n  }\n  const controller = ReferencesController.get(outerEditor);\n  if (controller) {\n    fn(controller);\n  }\n}\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n  id: 'togglePeekWidgetFocus',\n  weight: 100 /* KeybindingWeight.EditorContrib */,\n  primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 60 /* KeyCode.F2 */),\n  when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n  handler(accessor) {\n    withController(accessor, controller => {\n      controller.changeFocusBetweenPreviewAndReferences();\n    });\n  }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n  id: 'goToNextReference',\n  weight: 100 /* KeybindingWeight.EditorContrib */ - 10,\n  primary: 62 /* KeyCode.F4 */,\n  secondary: [70 /* KeyCode.F12 */],\n  when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n  handler(accessor) {\n    withController(accessor, controller => {\n      controller.goToNextOrPreviousReference(true);\n    });\n  }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n  id: 'goToPreviousReference',\n  weight: 100 /* KeybindingWeight.EditorContrib */ - 10,\n  primary: 1024 /* KeyMod.Shift */ | 62 /* KeyCode.F4 */,\n  secondary: [1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */],\n  when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n  handler(accessor) {\n    withController(accessor, controller => {\n      controller.goToNextOrPreviousReference(false);\n    });\n  }\n});\n// commands that aren't needed anymore because there is now ContextKeyExpr.OR\nCommandsRegistry.registerCommandAlias('goToNextReferenceFromEmbeddedEditor', 'goToNextReference');\nCommandsRegistry.registerCommandAlias('goToPreviousReferenceFromEmbeddedEditor', 'goToPreviousReference');\n// close\nCommandsRegistry.registerCommandAlias('closeReferenceSearchEditor', 'closeReferenceSearch');\nCommandsRegistry.registerCommand('closeReferenceSearch', accessor => withController(accessor, controller => controller.closeWidget()));\nKeybindingsRegistry.registerKeybindingRule({\n  id: 'closeReferenceSearch',\n  weight: 100 /* KeybindingWeight.EditorContrib */ - 101,\n  primary: 9 /* KeyCode.Escape */,\n  secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */],\n  when: ContextKeyExpr.and(PeekContext.inPeekEditor, ContextKeyExpr.not('config.editor.stablePeek'))\n});\nKeybindingsRegistry.registerKeybindingRule({\n  id: 'closeReferenceSearch',\n  weight: 200 /* KeybindingWeight.WorkbenchContrib */ + 50,\n  primary: 9 /* KeyCode.Escape */,\n  secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */],\n  when: ContextKeyExpr.and(ctxReferenceSearchVisible, ContextKeyExpr.not('config.editor.stablePeek'), ContextKeyExpr.or(EditorContextKeys.editorTextFocus, InputFocusedContext.negate()))\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n  id: 'revealReference',\n  weight: 200 /* KeybindingWeight.WorkbenchContrib */,\n  primary: 3 /* KeyCode.Enter */,\n  mac: {\n    primary: 3 /* KeyCode.Enter */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */]\n  },\n  when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse.negate(), WorkbenchTreeElementCanExpand.negate()),\n  handler(accessor) {\n    var _listService$lastFocu;\n    const listService = accessor.get(IListService);\n    const focus = (_listService$lastFocu = listService.lastFocusedList) === null || _listService$lastFocu === void 0 ? void 0 : _listService$lastFocu.getFocus();\n    if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n      withController(accessor, controller => controller.revealReference(focus[0]));\n    }\n  }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n  id: 'openReferenceToSide',\n  weight: 100 /* KeybindingWeight.EditorContrib */,\n  primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n  mac: {\n    primary: 256 /* KeyMod.WinCtrl */ | 3 /* KeyCode.Enter */\n  },\n  when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse.negate(), WorkbenchTreeElementCanExpand.negate()),\n  handler(accessor) {\n    var _listService$lastFocu2;\n    const listService = accessor.get(IListService);\n    const focus = (_listService$lastFocu2 = listService.lastFocusedList) === null || _listService$lastFocu2 === void 0 ? void 0 : _listService$lastFocu2.getFocus();\n    if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n      withController(accessor, controller => controller.openReference(focus[0], true, true));\n    }\n  }\n});\nCommandsRegistry.registerCommand('openReference', accessor => {\n  var _listService$lastFocu3;\n  const listService = accessor.get(IListService);\n  const focus = (_listService$lastFocu3 = listService.lastFocusedList) === null || _listService$lastFocu3 === void 0 ? void 0 : _listService$lastFocu3.getFocus();\n  if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n    withController(accessor, controller => controller.openReference(focus[0], false, true));\n  }\n});","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","ReferencesController_1","createCancelablePromise","onUnexpectedError","KeyChord","DisposableStore","ICodeEditorService","Position","Range","getOuterEditor","PeekContext","nls","CommandsRegistry","IConfigurationService","ContextKeyExpr","IContextKeyService","RawContextKey","IInstantiationService","KeybindingsRegistry","IListService","WorkbenchListFocusContextKey","WorkbenchTreeElementCanCollapse","WorkbenchTreeElementCanExpand","INotificationService","IStorageService","OneReference","LayoutData","ReferenceWidget","EditorContextKeys","InputFocusedContext","ctxReferenceSearchVisible","localize","ReferencesController","_ReferencesController","get","editor","getContribution","ID","constructor","_defaultTreeKeyboardSupport","_editor","contextKeyService","_editorService","_notificationService","_instantiationService","_storageService","_configurationService","_disposables","_requestIdPool","_ignoreModelChangeEvent","_referenceSearchVisible","bindTo","dispose","_this$_widget","_this$_model","reset","_widget","_model","undefined","toggleWidget","range","modelPromise","peekMode","widgetPosition","position","closeWidget","containsPosition","_peekMode","set","add","onDidChangeModelLanguage","onDidChangeModel","storageKey","data","fromJSON","createInstance","setTitle","show","onDidClose","cancel","store","JSON","stringify","layoutData","isClosing","onDidSelectReference","event","element","kind","source","getValue","openReference","_gotoReference","requestId","then","model","_this$_model2","setModel","hasModel","isEmpty","setMetaTitle","title","references","uri","getModel","pos","startLineNumber","startColumn","selection","nearestReference","setSelection","getOption","focusOnPreviewEditor","error","changeFocusBetweenPreviewAndReferences","isPreviewEditorFocused","focusOnReferenceTree","goToNextOrPreviousReference","fwd","currentPosition","nextOrPreviousReference","editorFocus","hasTextFocus","previewEditorFocus","focus","revealReference","reference","_this$_widget2","_this$_model3","focusEditor","clear","ref","pinned","_this$_widget3","hide","lift","collapseToStart","openCodeEditor","resource","options","selectionSource","openedEditor","_this$_peekMode","other","clone","_","Promise","resolve","err","sideBySide","withController","accessor","fn","outerEditor","controller","registerCommandAndKeybindingRule","id","weight","primary","when","or","inPeekEditor","handler","secondary","registerCommandAlias","registerCommand","registerKeybindingRule","and","not","editorTextFocus","negate","mac","_listService$lastFocu","listService","lastFocusedList","getFocus","Array","isArray","_listService$lastFocu2","_listService$lastFocu3"],"sources":["D:/ospanel/domains/react/react-intro-main/node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/peek/referencesController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar ReferencesController_1;\nimport { createCancelablePromise } from '../../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../../base/common/errors.js';\nimport { KeyChord } from '../../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../../base/common/lifecycle.js';\nimport { ICodeEditorService } from '../../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { getOuterEditor, PeekContext } from '../../../peekView/browser/peekView.js';\nimport * as nls from '../../../../../nls.js';\nimport { CommandsRegistry } from '../../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { IListService, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse, WorkbenchTreeElementCanExpand } from '../../../../../platform/list/browser/listService.js';\nimport { INotificationService } from '../../../../../platform/notification/common/notification.js';\nimport { IStorageService } from '../../../../../platform/storage/common/storage.js';\nimport { OneReference } from '../referencesModel.js';\nimport { LayoutData, ReferenceWidget } from './referencesWidget.js';\nimport { EditorContextKeys } from '../../../../common/editorContextKeys.js';\nimport { InputFocusedContext } from '../../../../../platform/contextkey/common/contextkeys.js';\nexport const ctxReferenceSearchVisible = new RawContextKey('referenceSearchVisible', false, nls.localize('referenceSearchVisible', \"Whether reference peek is visible, like 'Peek References' or 'Peek Definition'\"));\nlet ReferencesController = class ReferencesController {\n    static { ReferencesController_1 = this; }\n    static { this.ID = 'editor.contrib.referencesController'; }\n    static get(editor) {\n        return editor.getContribution(ReferencesController_1.ID);\n    }\n    constructor(_defaultTreeKeyboardSupport, _editor, contextKeyService, _editorService, _notificationService, _instantiationService, _storageService, _configurationService) {\n        this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;\n        this._editor = _editor;\n        this._editorService = _editorService;\n        this._notificationService = _notificationService;\n        this._instantiationService = _instantiationService;\n        this._storageService = _storageService;\n        this._configurationService = _configurationService;\n        this._disposables = new DisposableStore();\n        this._requestIdPool = 0;\n        this._ignoreModelChangeEvent = false;\n        this._referenceSearchVisible = ctxReferenceSearchVisible.bindTo(contextKeyService);\n    }\n    dispose() {\n        this._referenceSearchVisible.reset();\n        this._disposables.dispose();\n        this._widget?.dispose();\n        this._model?.dispose();\n        this._widget = undefined;\n        this._model = undefined;\n    }\n    toggleWidget(range, modelPromise, peekMode) {\n        // close current widget and return early is position didn't change\n        let widgetPosition;\n        if (this._widget) {\n            widgetPosition = this._widget.position;\n        }\n        this.closeWidget();\n        if (!!widgetPosition && range.containsPosition(widgetPosition)) {\n            return;\n        }\n        this._peekMode = peekMode;\n        this._referenceSearchVisible.set(true);\n        // close the widget on model/mode changes\n        this._disposables.add(this._editor.onDidChangeModelLanguage(() => { this.closeWidget(); }));\n        this._disposables.add(this._editor.onDidChangeModel(() => {\n            if (!this._ignoreModelChangeEvent) {\n                this.closeWidget();\n            }\n        }));\n        const storageKey = 'peekViewLayout';\n        const data = LayoutData.fromJSON(this._storageService.get(storageKey, 0 /* StorageScope.PROFILE */, '{}'));\n        this._widget = this._instantiationService.createInstance(ReferenceWidget, this._editor, this._defaultTreeKeyboardSupport, data);\n        this._widget.setTitle(nls.localize('labelLoading', \"Loading...\"));\n        this._widget.show(range);\n        this._disposables.add(this._widget.onDidClose(() => {\n            modelPromise.cancel();\n            if (this._widget) {\n                this._storageService.store(storageKey, JSON.stringify(this._widget.layoutData), 0 /* StorageScope.PROFILE */, 1 /* StorageTarget.MACHINE */);\n                if (!this._widget.isClosing) {\n                    // to prevent calling this too many times, check whether it was already closing.\n                    this.closeWidget();\n                }\n                this._widget = undefined;\n            }\n            else {\n                this.closeWidget();\n            }\n        }));\n        this._disposables.add(this._widget.onDidSelectReference(event => {\n            const { element, kind } = event;\n            if (!element) {\n                return;\n            }\n            switch (kind) {\n                case 'open':\n                    if (event.source !== 'editor' || !this._configurationService.getValue('editor.stablePeek')) {\n                        // when stable peek is configured we don't close\n                        // the peek window on selecting the editor\n                        this.openReference(element, false, false);\n                    }\n                    break;\n                case 'side':\n                    this.openReference(element, true, false);\n                    break;\n                case 'goto':\n                    if (peekMode) {\n                        this._gotoReference(element, true);\n                    }\n                    else {\n                        this.openReference(element, false, true);\n                    }\n                    break;\n            }\n        }));\n        const requestId = ++this._requestIdPool;\n        modelPromise.then(model => {\n            // still current request? widget still open?\n            if (requestId !== this._requestIdPool || !this._widget) {\n                model.dispose();\n                return undefined;\n            }\n            this._model?.dispose();\n            this._model = model;\n            // show widget\n            return this._widget.setModel(this._model).then(() => {\n                if (this._widget && this._model && this._editor.hasModel()) { // might have been closed\n                    // set title\n                    if (!this._model.isEmpty) {\n                        this._widget.setMetaTitle(nls.localize('metaTitle.N', \"{0} ({1})\", this._model.title, this._model.references.length));\n                    }\n                    else {\n                        this._widget.setMetaTitle('');\n                    }\n                    // set 'best' selection\n                    const uri = this._editor.getModel().uri;\n                    const pos = new Position(range.startLineNumber, range.startColumn);\n                    const selection = this._model.nearestReference(uri, pos);\n                    if (selection) {\n                        return this._widget.setSelection(selection).then(() => {\n                            if (this._widget && this._editor.getOption(87 /* EditorOption.peekWidgetDefaultFocus */) === 'editor') {\n                                this._widget.focusOnPreviewEditor();\n                            }\n                        });\n                    }\n                }\n                return undefined;\n            });\n        }, error => {\n            this._notificationService.error(error);\n        });\n    }\n    changeFocusBetweenPreviewAndReferences() {\n        if (!this._widget) {\n            // can be called while still resolving...\n            return;\n        }\n        if (this._widget.isPreviewEditorFocused()) {\n            this._widget.focusOnReferenceTree();\n        }\n        else {\n            this._widget.focusOnPreviewEditor();\n        }\n    }\n    async goToNextOrPreviousReference(fwd) {\n        if (!this._editor.hasModel() || !this._model || !this._widget) {\n            // can be called while still resolving...\n            return;\n        }\n        const currentPosition = this._widget.position;\n        if (!currentPosition) {\n            return;\n        }\n        const source = this._model.nearestReference(this._editor.getModel().uri, currentPosition);\n        if (!source) {\n            return;\n        }\n        const target = this._model.nextOrPreviousReference(source, fwd);\n        const editorFocus = this._editor.hasTextFocus();\n        const previewEditorFocus = this._widget.isPreviewEditorFocused();\n        await this._widget.setSelection(target);\n        await this._gotoReference(target, false);\n        if (editorFocus) {\n            this._editor.focus();\n        }\n        else if (this._widget && previewEditorFocus) {\n            this._widget.focusOnPreviewEditor();\n        }\n    }\n    async revealReference(reference) {\n        if (!this._editor.hasModel() || !this._model || !this._widget) {\n            // can be called while still resolving...\n            return;\n        }\n        await this._widget.revealReference(reference);\n    }\n    closeWidget(focusEditor = true) {\n        this._widget?.dispose();\n        this._model?.dispose();\n        this._referenceSearchVisible.reset();\n        this._disposables.clear();\n        this._widget = undefined;\n        this._model = undefined;\n        if (focusEditor) {\n            this._editor.focus();\n        }\n        this._requestIdPool += 1; // Cancel pending requests\n    }\n    _gotoReference(ref, pinned) {\n        this._widget?.hide();\n        this._ignoreModelChangeEvent = true;\n        const range = Range.lift(ref.range).collapseToStart();\n        return this._editorService.openCodeEditor({\n            resource: ref.uri,\n            options: { selection: range, selectionSource: \"code.jump\" /* TextEditorSelectionSource.JUMP */, pinned }\n        }, this._editor).then(openedEditor => {\n            this._ignoreModelChangeEvent = false;\n            if (!openedEditor || !this._widget) {\n                // something went wrong...\n                this.closeWidget();\n                return;\n            }\n            if (this._editor === openedEditor) {\n                //\n                this._widget.show(range);\n                this._widget.focusOnReferenceTree();\n            }\n            else {\n                // we opened a different editor instance which means a different controller instance.\n                // therefore we stop with this controller and continue with the other\n                const other = ReferencesController_1.get(openedEditor);\n                const model = this._model.clone();\n                this.closeWidget();\n                openedEditor.focus();\n                other?.toggleWidget(range, createCancelablePromise(_ => Promise.resolve(model)), this._peekMode ?? false);\n            }\n        }, (err) => {\n            this._ignoreModelChangeEvent = false;\n            onUnexpectedError(err);\n        });\n    }\n    openReference(ref, sideBySide, pinned) {\n        // clear stage\n        if (!sideBySide) {\n            this.closeWidget();\n        }\n        const { uri, range } = ref;\n        this._editorService.openCodeEditor({\n            resource: uri,\n            options: { selection: range, selectionSource: \"code.jump\" /* TextEditorSelectionSource.JUMP */, pinned }\n        }, this._editor, sideBySide);\n    }\n};\nReferencesController = ReferencesController_1 = __decorate([\n    __param(2, IContextKeyService),\n    __param(3, ICodeEditorService),\n    __param(4, INotificationService),\n    __param(5, IInstantiationService),\n    __param(6, IStorageService),\n    __param(7, IConfigurationService)\n], ReferencesController);\nexport { ReferencesController };\nfunction withController(accessor, fn) {\n    const outerEditor = getOuterEditor(accessor);\n    if (!outerEditor) {\n        return;\n    }\n    const controller = ReferencesController.get(outerEditor);\n    if (controller) {\n        fn(controller);\n    }\n}\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'togglePeekWidgetFocus',\n    weight: 100 /* KeybindingWeight.EditorContrib */,\n    primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 60 /* KeyCode.F2 */),\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n    handler(accessor) {\n        withController(accessor, controller => {\n            controller.changeFocusBetweenPreviewAndReferences();\n        });\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'goToNextReference',\n    weight: 100 /* KeybindingWeight.EditorContrib */ - 10,\n    primary: 62 /* KeyCode.F4 */,\n    secondary: [70 /* KeyCode.F12 */],\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n    handler(accessor) {\n        withController(accessor, controller => {\n            controller.goToNextOrPreviousReference(true);\n        });\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'goToPreviousReference',\n    weight: 100 /* KeybindingWeight.EditorContrib */ - 10,\n    primary: 1024 /* KeyMod.Shift */ | 62 /* KeyCode.F4 */,\n    secondary: [1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */],\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\n    handler(accessor) {\n        withController(accessor, controller => {\n            controller.goToNextOrPreviousReference(false);\n        });\n    }\n});\n// commands that aren't needed anymore because there is now ContextKeyExpr.OR\nCommandsRegistry.registerCommandAlias('goToNextReferenceFromEmbeddedEditor', 'goToNextReference');\nCommandsRegistry.registerCommandAlias('goToPreviousReferenceFromEmbeddedEditor', 'goToPreviousReference');\n// close\nCommandsRegistry.registerCommandAlias('closeReferenceSearchEditor', 'closeReferenceSearch');\nCommandsRegistry.registerCommand('closeReferenceSearch', accessor => withController(accessor, controller => controller.closeWidget()));\nKeybindingsRegistry.registerKeybindingRule({\n    id: 'closeReferenceSearch',\n    weight: 100 /* KeybindingWeight.EditorContrib */ - 101,\n    primary: 9 /* KeyCode.Escape */,\n    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */],\n    when: ContextKeyExpr.and(PeekContext.inPeekEditor, ContextKeyExpr.not('config.editor.stablePeek'))\n});\nKeybindingsRegistry.registerKeybindingRule({\n    id: 'closeReferenceSearch',\n    weight: 200 /* KeybindingWeight.WorkbenchContrib */ + 50,\n    primary: 9 /* KeyCode.Escape */,\n    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */],\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, ContextKeyExpr.not('config.editor.stablePeek'), ContextKeyExpr.or(EditorContextKeys.editorTextFocus, InputFocusedContext.negate()))\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'revealReference',\n    weight: 200 /* KeybindingWeight.WorkbenchContrib */,\n    primary: 3 /* KeyCode.Enter */,\n    mac: {\n        primary: 3 /* KeyCode.Enter */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */]\n    },\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse.negate(), WorkbenchTreeElementCanExpand.negate()),\n    handler(accessor) {\n        const listService = accessor.get(IListService);\n        const focus = listService.lastFocusedList?.getFocus();\n        if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n            withController(accessor, controller => controller.revealReference(focus[0]));\n        }\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'openReferenceToSide',\n    weight: 100 /* KeybindingWeight.EditorContrib */,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n    mac: {\n        primary: 256 /* KeyMod.WinCtrl */ | 3 /* KeyCode.Enter */\n    },\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey, WorkbenchTreeElementCanCollapse.negate(), WorkbenchTreeElementCanExpand.negate()),\n    handler(accessor) {\n        const listService = accessor.get(IListService);\n        const focus = listService.lastFocusedList?.getFocus();\n        if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n            withController(accessor, controller => controller.openReference(focus[0], true, true));\n        }\n    }\n});\nCommandsRegistry.registerCommand('openReference', (accessor) => {\n    const listService = accessor.get(IListService);\n    const focus = listService.lastFocusedList?.getFocus();\n    if (Array.isArray(focus) && focus[0] instanceof OneReference) {\n        withController(accessor, controller => controller.openReference(focus[0], false, true));\n    }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
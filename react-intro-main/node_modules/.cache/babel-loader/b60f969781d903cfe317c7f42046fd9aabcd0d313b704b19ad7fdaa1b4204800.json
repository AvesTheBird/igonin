{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { getClientX, getClientY, getSource, isMouseEvent, isPopupTrigger } from '../../util/EventUtils';\nimport { isAncestorNode } from '../../util/domUtils';\n/**\n * Base class for all mouse events in mxGraph. A listener for this event should\n * implement the following methods:\n *\n * ```javascript\n * graph.addMouseListener(\n * {\n *   mouseDown: (sender, evt)=>\n *   {\n *     MaxLog.debug('mouseDown');\n *   },\n *   mouseMove: (sender, evt)=>\n *   {\n *     MaxLog.debug('mouseMove');\n *   },\n *   mouseUp: (sender, evt)=>\n *   {\n *     MaxLog.debug('mouseUp');\n *   }\n * });\n * ```\n *\n * Constructor: mxMouseEvent\n *\n * Constructs a new event object for the given arguments.\n *\n * @param evt Native mouse event.\n * @param state Optional <CellState> under the mouse.\n */\nclass InternalMouseEvent {\n  constructor(evt, state = null) {\n    /**\n     * Holds the consumed state of this event.\n     */\n    this.consumed = false;\n    this.evt = evt;\n    this.state = state;\n    this.sourceState = state;\n    // graphX and graphY are updated right after this constructor is executed,\n    // so let them default to 0 and make them not nullable.\n    this.graphX = 0;\n    this.graphY = 0;\n  }\n  /**\n   * Returns <evt>.\n   */\n  getEvent() {\n    return this.evt;\n  }\n  /**\n   * Returns the target DOM element using {@link Event#getSource} for <evt>.\n   */\n  getSource() {\n    return getSource(this.evt);\n  }\n  /**\n   * Returns true if the given {@link Shape} is the source of <evt>.\n   */\n  isSource(shape) {\n    return shape ? isAncestorNode(shape.node, this.getSource()) : false;\n  }\n  /**\n   * Returns <evt.clientX>.\n   */\n  getX() {\n    return getClientX(this.getEvent());\n  }\n  /**\n   * Returns <evt.clientY>.\n   */\n  getY() {\n    return getClientY(this.getEvent());\n  }\n  /**\n   * Returns <graphX>.\n   */\n  getGraphX() {\n    return this.graphX;\n  }\n  /**\n   * Returns <graphY>.\n   */\n  getGraphY() {\n    return this.graphY;\n  }\n  /**\n   * Returns <state>.\n   */\n  getState() {\n    return this.state;\n  }\n  /**\n   * Returns the <Cell> in <state> is not null.\n   */\n  getCell() {\n    const state = this.getState();\n    return state ? state.cell : null;\n  }\n  /**\n   * Returns true if the event is a popup trigger.\n   */\n  isPopupTrigger() {\n    return isPopupTrigger(this.getEvent());\n  }\n  /**\n   * Returns <consumed>.\n   */\n  isConsumed() {\n    return this.consumed;\n  }\n  /**\n   * Sets <consumed> to true and invokes preventDefault on the native event\n   * if such a method is defined. This is used mainly to avoid the cursor from\n   * being changed to a text cursor in Webkit. You can use the preventDefault\n   * flag to disable this functionality.\n   *\n   * @param preventDefault Specifies if the native event should be canceled. Default\n   * is true.\n   */\n  consume(preventDefault) {\n    preventDefault = preventDefault ? preventDefault : window.TouchEvent && this.evt instanceof TouchEvent || isMouseEvent(this.evt);\n    if (preventDefault && this.evt.preventDefault) {\n      this.evt.preventDefault();\n    }\n    // Sets local consumed state\n    this.consumed = true;\n  }\n}\nexport default InternalMouseEvent;","map":{"version":3,"names":["getClientX","getClientY","getSource","isMouseEvent","isPopupTrigger","isAncestorNode","InternalMouseEvent","constructor","evt","state","consumed","sourceState","graphX","graphY","getEvent","isSource","shape","node","getX","getY","getGraphX","getGraphY","getState","getCell","cell","isConsumed","consume","preventDefault","window","TouchEvent"],"sources":["D:/ospanel/domains/react/react-intro-main/node_modules/@maxgraph/core/dist/view/event/InternalMouseEvent.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { getClientX, getClientY, getSource, isMouseEvent, isPopupTrigger, } from '../../util/EventUtils';\nimport { isAncestorNode } from '../../util/domUtils';\n/**\n * Base class for all mouse events in mxGraph. A listener for this event should\n * implement the following methods:\n *\n * ```javascript\n * graph.addMouseListener(\n * {\n *   mouseDown: (sender, evt)=>\n *   {\n *     MaxLog.debug('mouseDown');\n *   },\n *   mouseMove: (sender, evt)=>\n *   {\n *     MaxLog.debug('mouseMove');\n *   },\n *   mouseUp: (sender, evt)=>\n *   {\n *     MaxLog.debug('mouseUp');\n *   }\n * });\n * ```\n *\n * Constructor: mxMouseEvent\n *\n * Constructs a new event object for the given arguments.\n *\n * @param evt Native mouse event.\n * @param state Optional <CellState> under the mouse.\n */\nclass InternalMouseEvent {\n    constructor(evt, state = null) {\n        /**\n         * Holds the consumed state of this event.\n         */\n        this.consumed = false;\n        this.evt = evt;\n        this.state = state;\n        this.sourceState = state;\n        // graphX and graphY are updated right after this constructor is executed,\n        // so let them default to 0 and make them not nullable.\n        this.graphX = 0;\n        this.graphY = 0;\n    }\n    /**\n     * Returns <evt>.\n     */\n    getEvent() {\n        return this.evt;\n    }\n    /**\n     * Returns the target DOM element using {@link Event#getSource} for <evt>.\n     */\n    getSource() {\n        return getSource(this.evt);\n    }\n    /**\n     * Returns true if the given {@link Shape} is the source of <evt>.\n     */\n    isSource(shape) {\n        return shape ? isAncestorNode(shape.node, this.getSource()) : false;\n    }\n    /**\n     * Returns <evt.clientX>.\n     */\n    getX() {\n        return getClientX(this.getEvent());\n    }\n    /**\n     * Returns <evt.clientY>.\n     */\n    getY() {\n        return getClientY(this.getEvent());\n    }\n    /**\n     * Returns <graphX>.\n     */\n    getGraphX() {\n        return this.graphX;\n    }\n    /**\n     * Returns <graphY>.\n     */\n    getGraphY() {\n        return this.graphY;\n    }\n    /**\n     * Returns <state>.\n     */\n    getState() {\n        return this.state;\n    }\n    /**\n     * Returns the <Cell> in <state> is not null.\n     */\n    getCell() {\n        const state = this.getState();\n        return state ? state.cell : null;\n    }\n    /**\n     * Returns true if the event is a popup trigger.\n     */\n    isPopupTrigger() {\n        return isPopupTrigger(this.getEvent());\n    }\n    /**\n     * Returns <consumed>.\n     */\n    isConsumed() {\n        return this.consumed;\n    }\n    /**\n     * Sets <consumed> to true and invokes preventDefault on the native event\n     * if such a method is defined. This is used mainly to avoid the cursor from\n     * being changed to a text cursor in Webkit. You can use the preventDefault\n     * flag to disable this functionality.\n     *\n     * @param preventDefault Specifies if the native event should be canceled. Default\n     * is true.\n     */\n    consume(preventDefault) {\n        preventDefault = preventDefault\n            ? preventDefault\n            : (window.TouchEvent && this.evt instanceof TouchEvent) || isMouseEvent(this.evt);\n        if (preventDefault && this.evt.preventDefault) {\n            this.evt.preventDefault();\n        }\n        // Sets local consumed state\n        this.consumed = true;\n    }\n}\nexport default InternalMouseEvent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
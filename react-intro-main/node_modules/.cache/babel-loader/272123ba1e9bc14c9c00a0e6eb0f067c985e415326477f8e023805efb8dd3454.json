{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { isNotNullish } from '../../util/Utils';\nimport { mod } from '../../util/mathUtils';\nimport { getAlignmentAsPoint, matchBinaryMask } from '../../util/styleUtils';\nimport Client from '../../Client';\nimport { ABSOLUTE_LINE_HEIGHT, ALIGN, DEFAULT_FONTFAMILY, DEFAULT_FONTSIZE, DIRECTION, FONT, LINE_HEIGHT, NONE, NS_SVG, NS_XLINK, SHADOWCOLOR, WORD_WRAP } from '../../util/Constants';\nimport Rectangle from '../geometry/Rectangle';\nimport AbstractCanvas2D from './AbstractCanvas2D';\nimport { getXml } from '../../util/xmlUtils';\nimport { isNode, write } from '../../util/domUtils';\nimport { htmlEntities, trim } from '../../util/StringUtils';\n// Activates workaround for gradient ID resolution if base tag is used.\nconst useAbsoluteIds = typeof DOMParser === 'function' && !Client.IS_CHROMEAPP && !Client.IS_EDGE && document.getElementsByTagName('base').length > 0;\n/**\n * Extends {@link mxAbstractCanvas2D} to implement a canvas for SVG. This canvas writes all calls as SVG output to the\n * given SVG root node.\n *\n * ```javascript\n * var svgDoc = mxUtils.createXmlDocument();\n * var root = (svgDoc.createElementNS != null) ?\n * \t\tsvgDoc.createElementNS(mxConstants.NS_SVG, 'svg') : svgDoc.createElement('svg');\n *\n * if (svgDoc.createElementNS == null)\n * {\n *   root.setAttribute('xmlns', mxConstants.NS_SVG);\n *   root.setAttribute('xmlns:xlink', mxConstants.NS_XLINK);\n * }\n * else\n * {\n *   root.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:xlink', mxConstants.NS_XLINK);\n * }\n *\n * var bounds = graph.getGraphBounds();\n * root.setAttribute('width', (bounds.x + bounds.width + 4) + 'px');\n * root.setAttribute('height', (bounds.y + bounds.height + 4) + 'px');\n * root.setAttribute('version', '1.1');\n *\n * svgDoc.appendChild(root);\n *\n * var svgCanvas = new mxSvgCanvas2D(root);\n * ```\n *\n *\n * To disable anti-aliasing in the output, use the following code.\n * ```javascript\n * graph.view.canvas.ownerSVGElement.setAttribute('shape-rendering', 'crispEdges');\n * ```\n * Or set the respective attribute in the SVG element directly.\n */\nclass SvgCanvas2D extends AbstractCanvas2D {\n  constructor(root, styleEnabled) {\n    super();\n    this.defs = null;\n    this.styleEnabled = true;\n    /**\n     * Holds the current DOM node.\n     */\n    this.node = null;\n    /**\n     * Specifies if plain text output should match the vertical HTML alignment.\n     * @default true.\n     */\n    this.matchHtmlAlignment = true;\n    /**\n     * Specifies if text output should be enabled.\n     * @default true\n     */\n    this.textEnabled = true;\n    /**\n     * Specifies if use of foreignObject for HTML markup is allowed.\n     * @default true\n     */\n    this.foEnabled = true;\n    /**\n     * Specifies the fallback text for unsupported foreignObjects in exported documents.\n     * If this is set to `null` then no fallback text is added to the exported document.\n     * @default [Object]\n     */\n    this.foAltText = '[Object]';\n    /**\n     * Offset to be used for foreignObjects.\n     * @default 0\n     */\n    this.foOffset = 0;\n    /**\n     * Offset to be used for text elements.\n     * @default 0\n     */\n    this.textOffset = 0;\n    /**\n     * Offset to be used for image elements.\n     * @default 0\n     */\n    this.imageOffset = 0;\n    /**\n     * Adds transparent paths for strokes.\n     * @default 0\n     */\n    this.strokeTolerance = 0;\n    /**\n     * Minimum stroke width for output.\n     * @default 1\n     */\n    this.minStrokeWidth = 1;\n    /**\n     * Local counter for references in SVG export.\n     * @default 0\n     */\n    this.refCount = 0;\n    /**\n     * Correction factor for {@link mxConstants.LINE_HEIGHT} in HTML output.\n     * @default 1\n     */\n    this.lineHeightCorrection = 1;\n    /**\n     * Default value for active pointer events.\n     * @default all\n     */\n    this.pointerEventsValue = 'all';\n    /**\n     * Padding to be added for text that is not wrapped to account for differences in font metrics on different platforms in pixels.\n     * @default 10.\n     */\n    this.fontMetricsPadding = 10;\n    /**\n     * Specifies if offsetWidth and offsetHeight should be cached. This is used to speed up repaint of text in {@link updateText}.\n     * @default true\n     */\n    this.cacheOffsetSize = true;\n    this.originalRoot = null;\n    /**\n     * Reference to the container for the SVG content.\n     */\n    this.root = root;\n    /**\n     * Local cache of gradients for quick lookups.\n     */\n    this.gradients = {};\n    /**\n     * Reference to the defs section of the SVG document. Only for export.\n     */\n    this.defs = null;\n    /**\n     * Stores the value of styleEnabled passed to the constructor.\n     */\n    this.styleEnabled = styleEnabled != null ? styleEnabled : false;\n    let svg = null;\n    // Adds optional defs section for export\n    if (root.ownerDocument !== document) {\n      let node = root;\n      // Finds owner SVG element in XML DOM\n      while (node && node.nodeName !== 'svg') {\n        node = node.parentElement;\n      }\n      svg = node;\n    }\n    if (svg) {\n      // Tries to get existing defs section\n      const tmp = svg.getElementsByTagName('defs');\n      if (tmp.length > 0) {\n        this.defs = svg.getElementsByTagName('defs')[0];\n      }\n      // Adds defs section if none exists\n      if (!this.defs) {\n        this.defs = this.createElement('defs');\n        if (svg.firstChild != null) {\n          svg.insertBefore(this.defs, svg.firstChild);\n        } else {\n          svg.appendChild(this.defs);\n        }\n      }\n      // Adds stylesheet\n      if (this.styleEnabled) {\n        this.defs.appendChild(this.createStyle());\n      }\n    }\n  }\n  /**\n   * Rounds all numbers to 2 decimal points.\n   */\n  format(value) {\n    return parseFloat(value.toFixed(2));\n  }\n  /**\n   * Returns the URL of the page without the hash part. This needs to use href to\n   * include any search part with no params (ie question mark alone). This is a\n   * workaround for the fact that window.location.search is empty if there is\n   * no search string behind the question mark.\n   */\n  getBaseUrl() {\n    let {\n      href\n    } = window.location;\n    const hash = href.lastIndexOf('#');\n    if (hash > 0) {\n      href = href.substring(0, hash);\n    }\n    return href;\n  }\n  /**\n   * Returns any offsets for rendering pixels.\n   */\n  reset() {\n    super.reset();\n    this.gradients = {};\n  }\n  end() {\n    return;\n  }\n  /**\n   * Creates the optional style section.\n   */\n  createStyle() {\n    const style = this.createElement('style');\n    style.setAttribute('type', 'text/css');\n    write(style, \"svg{font-family:\".concat(DEFAULT_FONTFAMILY, \";font-size:\").concat(DEFAULT_FONTSIZE, \";fill:none;stroke-miterlimit:10}\"));\n    return style;\n  }\n  /**\n   * Private helper function to create SVG elements\n   */\n  createElement(tagName, namespace) {\n    var _this$root;\n    return (_this$root = this.root) === null || _this$root === void 0 ? void 0 : _this$root.ownerDocument.createElementNS(namespace || NS_SVG, tagName);\n  }\n  /**\n   * Returns the alternate text string for the given foreignObject.\n   */\n  getAlternateText(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation) {\n    return isNotNullish(str) ? this.foAltText : null;\n  }\n  /**\n   * Returns the alternate content for the given foreignObject.\n   */\n  createAlternateContent(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation) {\n    const text = this.getAlternateText(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation);\n    const s = this.state;\n    if (isNotNullish(text) && s.fontSize > 0) {\n      const dy = valign === ALIGN.TOP ? 1 : valign === ALIGN.BOTTOM ? 0 : 0.3;\n      const anchor = align === ALIGN.RIGHT ? 'end' : align === ALIGN.LEFT ? 'start' : 'middle';\n      const alt = this.createElement('text');\n      alt.setAttribute('x', String(Math.round(x + s.dx)));\n      alt.setAttribute('y', String(Math.round(y + s.dy + dy * s.fontSize)));\n      alt.setAttribute('fill', s.fontColor || 'black');\n      alt.setAttribute('font-family', s.fontFamily);\n      alt.setAttribute('font-size', \"\".concat(Math.round(s.fontSize), \"px\"));\n      // Text-anchor start is default in SVG\n      anchor !== 'start' && alt.setAttribute('text-anchor', anchor);\n      const fontStyle = s.fontStyle;\n      matchBinaryMask(fontStyle, FONT.BOLD) && alt.setAttribute('font-weight', 'bold');\n      matchBinaryMask(fontStyle, FONT.ITALIC) && alt.setAttribute('font-style', 'italic');\n      const txtDecor = [];\n      matchBinaryMask(fontStyle, FONT.UNDERLINE) && txtDecor.push('underline');\n      matchBinaryMask(fontStyle, FONT.STRIKETHROUGH) && txtDecor.push('line-through');\n      txtDecor.length > 0 && alt.setAttribute('text-decoration', txtDecor.join(' '));\n      write(alt, text);\n      return alt;\n    }\n    return null;\n  }\n  /**\n   * Private helper function to create SVG elements\n   */\n  createGradientId(start, end, alpha1, alpha2, direction) {\n    // Removes illegal characters from gradient ID\n    if (start.charAt(0) === '#') {\n      start = start.substring(1);\n    }\n    if (end.charAt(0) === '#') {\n      end = end.substring(1);\n    }\n    // Workaround for gradient IDs not working in Safari 5 / Chrome 6\n    // if they contain uppercase characters\n    start = \"\".concat(start.toLowerCase(), \"-\").concat(alpha1);\n    end = \"\".concat(end.toLowerCase(), \"-\").concat(alpha2);\n    // Wrong gradient directions possible?\n    let dir = null;\n    if (direction == null || direction === DIRECTION.SOUTH) {\n      dir = 's';\n    } else if (direction === DIRECTION.EAST) {\n      dir = 'e';\n    } else {\n      const tmp = start;\n      start = end;\n      end = tmp;\n      if (direction === DIRECTION.NORTH) {\n        dir = 's';\n      } else if (direction === DIRECTION.WEST) {\n        dir = 'e';\n      }\n    }\n    return \"mx-gradient-\".concat(start, \"-\").concat(end, \"-\").concat(dir);\n  }\n  /**\n   * Private helper function to create SVG elements\n   */\n  getSvgGradient(start, end, alpha1, alpha2, direction) {\n    const id = this.createGradientId(start, end, alpha1, alpha2, direction);\n    let gradient = this.gradients[id];\n    if (!gradient) {\n      const svg = this.root.ownerSVGElement;\n      let counter = 0;\n      let tmpId = \"\".concat(id, \"-\").concat(counter);\n      if (svg) {\n        gradient = svg.ownerDocument.getElementById(tmpId);\n        while (gradient && gradient.ownerSVGElement !== svg) {\n          tmpId = \"\".concat(id, \"-\").concat(counter++);\n          gradient = svg.ownerDocument.getElementById(tmpId);\n        }\n      } else {\n        // Uses shorter IDs for export\n        tmpId = \"id\".concat(++this.refCount);\n      }\n      if (!gradient) {\n        gradient = this.createSvgGradient(start, end, alpha1, alpha2, direction);\n        gradient.setAttribute('id', tmpId);\n        if (this.defs) {\n          this.defs.appendChild(gradient);\n        } else if (svg) {\n          svg.appendChild(gradient);\n        }\n      }\n      this.gradients[id] = gradient;\n    }\n    return gradient.getAttribute('id');\n  }\n  /**\n   * Creates the given SVG gradient.\n   */\n  createSvgGradient(start, end, alpha1, alpha2, direction) {\n    const gradient = this.createElement('linearGradient');\n    gradient.setAttribute('x1', '0%');\n    gradient.setAttribute('y1', '0%');\n    gradient.setAttribute('x2', '0%');\n    gradient.setAttribute('y2', '0%');\n    if (direction == null || direction === DIRECTION.SOUTH) {\n      gradient.setAttribute('y2', '100%');\n    } else if (direction === DIRECTION.EAST) {\n      gradient.setAttribute('x2', '100%');\n    } else if (direction === DIRECTION.NORTH) {\n      gradient.setAttribute('y1', '100%');\n    } else if (direction === DIRECTION.WEST) {\n      gradient.setAttribute('x1', '100%');\n    }\n    let op = alpha1 < 1 ? \";stop-opacity:\".concat(alpha1) : '';\n    let stop = this.createElement('stop');\n    stop.setAttribute('offset', '0%');\n    stop.setAttribute('style', \"stop-color:\".concat(start).concat(op));\n    gradient.appendChild(stop);\n    op = alpha2 < 1 ? \";stop-opacity:\".concat(alpha2) : '';\n    stop = this.createElement('stop');\n    stop.setAttribute('offset', '100%');\n    stop.setAttribute('style', \"stop-color:\".concat(end).concat(op));\n    gradient.appendChild(stop);\n    return gradient;\n  }\n  /**\n   * Private helper function to create SVG elements\n   */\n  addNode(filled, stroked) {\n    const {\n      node\n    } = this;\n    const s = this.state;\n    if (node) {\n      if (node.nodeName === 'path') {\n        // Checks if the path is not empty\n        if (this.path && this.path.length > 0) {\n          node.setAttribute('d', this.path.join(' '));\n        } else {\n          return;\n        }\n      }\n      if (filled && s.fillColor !== NONE) {\n        this.updateFill();\n      } else if (!this.styleEnabled) {\n        // Workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=814952\n        if (node.nodeName === 'ellipse' && Client.IS_FF) {\n          node.setAttribute('fill', 'transparent');\n        } else {\n          node.setAttribute('fill', NONE);\n        }\n        // Sets the actual filled state for stroke tolerance\n        filled = false;\n      }\n      if (stroked && s.strokeColor !== NONE) {\n        this.updateStroke();\n      } else if (!this.styleEnabled) {\n        node.setAttribute('stroke', NONE);\n      }\n      if (s.transform && s.transform.length > 0) {\n        node.setAttribute('transform', s.transform);\n      }\n      if (s.shadow) {\n        this.root.appendChild(this.createShadow(node));\n      }\n      // Adds stroke tolerance\n      if (this.strokeTolerance > 0 && !filled) {\n        this.root.appendChild(this.createTolerance(node));\n      }\n      // Adds pointer events\n      if (this.pointerEvents) {\n        node.setAttribute('pointer-events', this.pointerEventsValue);\n      }\n      // Enables clicks for nodes inside a link element\n      else if (!this.pointerEvents && !this.originalRoot) {\n        node.setAttribute('pointer-events', NONE);\n      }\n      // Removes invisible nodes from output if they don't handle events\n      if (node.nodeName !== 'rect' && node.nodeName !== 'path' && node.nodeName !== 'ellipse' || node.getAttribute('fill') !== NONE && node.getAttribute('fill') !== 'transparent' || node.getAttribute('stroke') !== NONE || node.getAttribute('pointer-events') !== NONE) {\n        // LATER: Update existing DOM for performance\n        this.root.appendChild(node);\n      }\n      this.node = null;\n    }\n  }\n  /**\n   * Transfers the stroke attributes from <state> to <node>.\n   */\n  updateFill() {\n    const s = this.state;\n    if (s.alpha < 1 || s.fillAlpha < 1) {\n      this.node.setAttribute('fill-opacity', String(s.alpha * s.fillAlpha));\n    }\n    if (s.fillColor !== NONE) {\n      if (s.gradientColor !== NONE) {\n        var _this$root2;\n        const id = this.getSvgGradient(s.fillColor, s.gradientColor, s.gradientFillAlpha, s.gradientAlpha, s.gradientDirection);\n        if (((_this$root2 = this.root) === null || _this$root2 === void 0 ? void 0 : _this$root2.ownerDocument) === document && useAbsoluteIds) {\n          // Workaround for no fill with base tag in page (escape brackets)\n          const base = this.getBaseUrl().replace(/([()])/g, '\\\\$1');\n          this.node.setAttribute('fill', \"url(\".concat(base, \"#\").concat(id, \")\"));\n        } else {\n          this.node.setAttribute('fill', \"url(#\".concat(id, \")\"));\n        }\n      } else {\n        this.node.setAttribute('fill', s.fillColor.toLowerCase());\n      }\n    }\n  }\n  /**\n   * Returns the current stroke width (>= 1), ie. max(1, this.format(this.state.strokeWidth * this.state.scale)).\n   */\n  getCurrentStrokeWidth() {\n    return Math.max(this.minStrokeWidth, Math.max(0.01, this.format(this.state.strokeWidth * this.state.scale)));\n  }\n  /**\n   * Transfers the stroke attributes from {@link mxAbstractCanvas2D.state} to {@link node}.\n   */\n  updateStroke() {\n    const s = this.state;\n    if (s.strokeColor && s.strokeColor !== NONE) {\n      this.node.setAttribute('stroke', s.strokeColor.toLowerCase());\n    }\n    if (s.alpha < 1 || s.strokeAlpha < 1) {\n      this.node.setAttribute('stroke-opacity', String(s.alpha * s.strokeAlpha));\n    }\n    const sw = this.getCurrentStrokeWidth();\n    if (sw !== 1) {\n      this.node.setAttribute('stroke-width', String(sw));\n    }\n    if (this.node.nodeName === 'path') {\n      this.updateStrokeAttributes();\n    }\n    if (s.dashed) {\n      this.node.setAttribute('stroke-dasharray', this.createDashPattern((s.fixDash ? 1 : s.strokeWidth) * s.scale));\n    }\n  }\n  /**\n   * Transfers the stroke attributes from {@link mxAbstractCanvas2D.state} to {@link node}.\n   */\n  updateStrokeAttributes() {\n    const s = this.state;\n    // Linejoin miter is default in SVG\n    if (s.lineJoin && s.lineJoin !== 'miter') {\n      this.node.setAttribute('stroke-linejoin', s.lineJoin);\n    }\n    if (s.lineCap) {\n      // flat is called butt in SVG\n      let value = s.lineCap;\n      if (value === 'flat') {\n        value = 'butt';\n      }\n      // Linecap butt is default in SVG\n      if (value !== 'butt') {\n        this.node.setAttribute('stroke-linecap', value);\n      }\n    }\n    // Miterlimit 10 is default in our document\n    if (s.miterLimit != null && (!this.styleEnabled || s.miterLimit !== 10)) {\n      this.node.setAttribute('stroke-miterlimit', String(s.miterLimit));\n    }\n  }\n  /**\n   * Creates the SVG dash pattern for the given state.\n   */\n  createDashPattern(scale) {\n    const pat = [];\n    if (typeof this.state.dashPattern === 'string') {\n      const dash = this.state.dashPattern.split(' ');\n      if (dash.length > 0) {\n        for (let i = 0; i < dash.length; i += 1) {\n          pat[i] = Number(dash[i]) * scale;\n        }\n      }\n    }\n    return pat.join(' ');\n  }\n  /**\n   * Creates a hit detection tolerance shape for the given node.\n   */\n  createTolerance(node) {\n    const tol = node.cloneNode(true);\n    const sw = parseFloat(tol.getAttribute('stroke-width') || '1') + this.strokeTolerance;\n    tol.setAttribute('pointer-events', 'stroke');\n    tol.setAttribute('visibility', 'hidden');\n    tol.removeAttribute('stroke-dasharray');\n    tol.setAttribute('stroke-width', String(sw));\n    tol.setAttribute('fill', 'none');\n    tol.setAttribute('stroke', 'white');\n    return tol;\n  }\n  /**\n   * Creates a shadow for the given node.\n   */\n  createShadow(node) {\n    const shadow = node.cloneNode(true);\n    const s = this.state;\n    // Firefox uses transparent for no fill in ellipses\n    if (shadow.getAttribute('fill') !== 'none' && (!Client.IS_FF || shadow.getAttribute('fill') !== 'transparent')) {\n      shadow.setAttribute('fill', s.shadowColor ? s.shadow : SHADOWCOLOR);\n    }\n    if (shadow.getAttribute('stroke') !== 'none' && s.shadowColor && s.shadowColor !== NONE) {\n      shadow.setAttribute('stroke', s.shadowColor);\n    }\n    shadow.setAttribute('transform', \"translate(\".concat(this.format(s.shadowDx * s.scale), \",\").concat(this.format(s.shadowDy * s.scale), \")\").concat(s.transform || ''));\n    shadow.setAttribute('opacity', String(s.shadowAlpha));\n    return shadow;\n  }\n  /**\n   * Experimental implementation for hyperlinks.\n   */\n  setLink(link) {\n    if (!link) {\n      this.root = this.originalRoot;\n    } else {\n      this.originalRoot = this.root;\n      const node = this.createElement('a');\n      // Workaround for implicit namespace handling in HTML5 export, IE adds NS1 namespace so use code below\n      // in all IE versions except quirks mode. KNOWN: Adds xlink namespace to each image tag in output.\n      if (node.setAttributeNS == null || this.root.ownerDocument !== document) {\n        node.setAttribute('xlink:href', link);\n      } else {\n        node.setAttributeNS(NS_XLINK, 'xlink:href', link);\n      }\n      this.root.appendChild(node);\n      this.root = node;\n    }\n  }\n  /**\n   * Sets the rotation of the canvas. Note that rotation cannot be concatenated.\n   */\n  rotate(theta, flipH, flipV, cx, cy) {\n    if (theta !== 0 || flipH || flipV) {\n      const s = this.state;\n      cx += s.dx;\n      cy += s.dy;\n      cx *= s.scale;\n      cy *= s.scale;\n      s.transform = s.transform || '';\n      // This implementation uses custom scale/translate and built-in rotation\n      // Rotation state is part of the AffineTransform in state.transform\n      if (flipH && flipV) {\n        theta += 180;\n      } else if (flipH !== flipV) {\n        const tx = flipH ? cx : 0;\n        const sx = flipH ? -1 : 1;\n        const ty = flipV ? cy : 0;\n        const sy = flipV ? -1 : 1;\n        s.transform += \"translate(\".concat(this.format(tx), \",\").concat(this.format(ty), \")\") + \"scale(\".concat(this.format(sx), \",\").concat(this.format(sy), \")\") + \"translate(\".concat(this.format(-tx), \",\").concat(this.format(-ty), \")\");\n      }\n      if (flipH ? !flipV : flipV) {\n        theta *= -1;\n      }\n      if (theta !== 0) {\n        s.transform += \"rotate(\".concat(this.format(theta), \",\").concat(this.format(cx), \",\").concat(this.format(cy), \")\");\n      }\n      s.rotation += theta;\n      s.rotationCx = cx;\n      s.rotationCy = cy;\n    }\n  }\n  /**\n   * Extends superclass to create path.\n   */\n  begin() {\n    super.begin();\n    this.node = this.createElement('path');\n  }\n  /**\n   * Private helper function to create SVG elements\n   */\n  rect(x, y, w, h) {\n    const s = this.state;\n    const n = this.createElement('rect');\n    n.setAttribute('x', String(this.format((x + s.dx) * s.scale)));\n    n.setAttribute('y', String(this.format((y + s.dy) * s.scale)));\n    n.setAttribute('width', String(this.format(w * s.scale)));\n    n.setAttribute('height', String(this.format(h * s.scale)));\n    this.node = n;\n  }\n  /**\n   * Private helper function to create SVG elements\n   */\n  roundrect(x, y, w, h, dx, dy) {\n    this.rect(x, y, w, h);\n    if (dx > 0) {\n      this.node.setAttribute('rx', String(this.format(dx * this.state.scale)));\n    }\n    if (dy > 0) {\n      this.node.setAttribute('ry', String(this.format(dy * this.state.scale)));\n    }\n  }\n  /**\n   * Private helper function to create SVG elements\n   */\n  ellipse(x, y, w, h) {\n    const s = this.state;\n    const n = this.createElement('ellipse');\n    // No rounding for consistent output with 1.x\n    n.setAttribute('cx', String(this.format((x + w / 2 + s.dx) * s.scale)));\n    n.setAttribute('cy', String(this.format((y + h / 2 + s.dy) * s.scale)));\n    n.setAttribute('rx', String(w / 2 * s.scale));\n    n.setAttribute('ry', String(h / 2 * s.scale));\n    this.node = n;\n  }\n  /**\n   * Private helper function to create SVG elements\n   */\n  image(x, y, w, h, src) {\n    let aspect = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n    let flipH = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n    let flipV = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;\n    src = this.converter.convert(src);\n    const s = this.state;\n    x += s.dx;\n    y += s.dy;\n    const node = this.createElement('image');\n    node.setAttribute('x', String(this.format(x * s.scale) + this.imageOffset));\n    node.setAttribute('y', String(this.format(y * s.scale) + this.imageOffset));\n    node.setAttribute('width', String(this.format(w * s.scale)));\n    node.setAttribute('height', String(this.format(h * s.scale)));\n    // Workaround for missing namespace support\n    if (!node.setAttributeNS) {\n      node.setAttribute('xlink:href', src);\n    } else {\n      node.setAttributeNS(NS_XLINK, 'xlink:href', src);\n    }\n    if (!aspect) {\n      node.setAttribute('preserveAspectRatio', 'none');\n    }\n    if (s.alpha < 1 || s.fillAlpha < 1) {\n      node.setAttribute('opacity', String(s.alpha * s.fillAlpha));\n    }\n    let tr = this.state.transform || '';\n    if (flipH || flipV) {\n      let sx = 1;\n      let sy = 1;\n      let dx = 0;\n      let dy = 0;\n      if (flipH) {\n        sx = -1;\n        dx = -w - 2 * x;\n      }\n      if (flipV) {\n        sy = -1;\n        dy = -h - 2 * y;\n      }\n      // Adds image transformation to existing transform\n      tr += \"scale(\".concat(sx, \",\").concat(sy, \")translate(\").concat(dx * s.scale, \",\").concat(dy * s.scale, \")\");\n    }\n    if (tr.length > 0) {\n      node.setAttribute('transform', tr);\n    }\n    if (!this.pointerEvents) {\n      node.setAttribute('pointer-events', 'none');\n    }\n    this.root.appendChild(node);\n  }\n  /**\n   * Converts the given HTML string to XHTML.\n   */\n  convertHtml(val) {\n    const doc = new DOMParser().parseFromString(val, 'text/html');\n    if (doc != null) {\n      val = new XMLSerializer().serializeToString(doc.body);\n      // Extracts body content from DOM\n      if (val.substring(0, 5) === '<body') {\n        val = val.substring(val.indexOf('>', 5) + 1);\n      }\n      if (val.substring(val.length - 7, val.length) === '</body>') {\n        val = val.substring(0, val.length - 7);\n      }\n    }\n    return val;\n  }\n  /**\n   * Private helper function to create SVG elements\n   * Note: signature changed in mxgraph 4.1.0\n   */\n  createDiv(str) {\n    let val = str;\n    if (!isNode(val)) {\n      val = \"<div><div>\".concat(this.convertHtml(val), \"</div></div>\");\n    }\n    if (document.createElementNS) {\n      const div = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      if (isNode(val)) {\n        const n = val;\n        const div2 = document.createElement('div');\n        const div3 = div2.cloneNode(false);\n        // Creates a copy for export\n        if (this.root.ownerDocument !== document) {\n          div2.appendChild(n.cloneNode(true));\n        } else {\n          div2.appendChild(n);\n        }\n        div3.appendChild(div2);\n        div.appendChild(div3);\n      } else {\n        div.innerHTML = val;\n      }\n      return div;\n    }\n    if (isNode(val)) {\n      val = \"<div><div>\".concat(getXml(val), \"</div></div>\");\n    }\n    val = \"<div xmlns=\\\"http://www.w3.org/1999/xhtml\\\">\".concat(val, \"</div>\");\n    // NOTE: FF 3.6 crashes if content CSS contains \"height:100%\"\n    return new DOMParser().parseFromString(val, 'text/xml').documentElement;\n  }\n  /**\n   * Updates existing DOM nodes for text rendering. LATER: Merge common parts with text function below.\n   */\n  updateText(x, y, w, h, align, valign, wrap, overflow, clip, rotation, node) {\n    if (node && node.firstChild && node.firstChild.firstChild) {\n      this.updateTextNodes(x, y, w, h, align, valign, wrap, overflow, clip, rotation, node.firstChild);\n    }\n  }\n  /**\n   * Creates a foreignObject for the given string and adds it to the given root.\n   */\n  addForeignObject(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir, div, root) {\n    var _this$root3;\n    const group = this.createElement('g');\n    const fo = this.createElement('foreignObject');\n    // Workarounds for print clipping and static position in Safari\n    fo.setAttribute('style', 'overflow: visible; text-align: left;');\n    fo.setAttribute('pointer-events', 'none');\n    fo.appendChild(div);\n    group.appendChild(fo);\n    this.updateTextNodes(x, y, w, h, align, valign, wrap, overflow, clip, rotation, group);\n    // Alternate content if foreignObject not supported\n    if (((_this$root3 = this.root) === null || _this$root3 === void 0 ? void 0 : _this$root3.ownerDocument) !== document) {\n      const alt = this.createAlternateContent(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation);\n      if (alt != null) {\n        fo.setAttribute('requiredFeatures', 'http://www.w3.org/TR/SVG11/feature#Extensibility');\n        const sw = this.createElement('switch');\n        sw.appendChild(fo);\n        sw.appendChild(alt);\n        group.appendChild(sw);\n      }\n    }\n    root.appendChild(group);\n  }\n  /**\n   * Updates existing DOM nodes for text rendering.\n   */\n  updateTextNodes(x, y, w, h, align, valign, wrap, overflow, clip, rotation, g) {\n    const s = this.state.scale;\n    SvgCanvas2D.createCss(w + 2, h, align, valign, wrap, overflow, clip, this.state.fontBackgroundColor != null ? this.state.fontBackgroundColor : null, this.state.fontBorderColor != null ? this.state.fontBorderColor : null, \"display: flex; align-items: unsafe \".concat(valign === ALIGN.TOP ? 'flex-start' : valign === ALIGN.BOTTOM ? 'flex-end' : 'center', \"; \") + \"justify-content: unsafe \".concat(align === ALIGN.LEFT ? 'flex-start' : align === ALIGN.RIGHT ? 'flex-end' : 'center', \"; \"), this.getTextCss(), s, (dx, dy, flex, item, block) => {\n      x += this.state.dx;\n      y += this.state.dy;\n      const fo = g.firstChild;\n      const div = fo.firstChild;\n      const box = div.firstChild;\n      const text = box.firstChild;\n      const r = (this.rotateHtml ? this.state.rotation : 0) + (rotation != null ? rotation : 0);\n      let t = (this.foOffset !== 0 ? \"translate(\".concat(this.foOffset, \" \").concat(this.foOffset, \")\") : '') + (s !== 1 ? \"scale(\".concat(s, \")\") : '');\n      text.setAttribute('style', block);\n      box.setAttribute('style', item);\n      // Workaround for clipping in Webkit with scrolling and zoom\n      fo.setAttribute('width', \"\".concat(Math.ceil(1 / Math.min(1, s) * 100), \"%\"));\n      fo.setAttribute('height', \"\".concat(Math.ceil(1 / Math.min(1, s) * 100), \"%\"));\n      const yp = Math.round(y + dy);\n      // Allows for negative values which are causing problems with\n      // transformed content where the top edge of the foreignObject\n      // limits the text box being moved further up in the diagram.\n      // KNOWN: Possible clipping problems with zoom and scrolling\n      // but this is normally not used with scrollbars as the\n      // coordinates are always positive with scrollbars.\n      // Margin-top is ignored in Safari and no negative values allowed\n      // for padding.\n      if (yp < 0) {\n        fo.setAttribute('y', String(yp));\n      } else {\n        fo.removeAttribute('y');\n        flex += \"padding-top: \".concat(yp, \"px; \");\n      }\n      div.setAttribute('style', \"\".concat(flex, \"margin-left: \").concat(Math.round(x + dx), \"px;\"));\n      t += r !== 0 ? \"rotate(\".concat(r, \" \").concat(x, \" \").concat(y, \")\") : '';\n      // Output allows for reflow but Safari cannot use absolute position,\n      // transforms or opacity. https://bugs.webkit.org/show_bug.cgi?id=23113\n      if (t !== '') {\n        g.setAttribute('transform', t);\n      } else {\n        g.removeAttribute('transform');\n      }\n      if (this.state.alpha !== 1) {\n        g.setAttribute('opacity', String(this.state.alpha));\n      } else {\n        g.removeAttribute('opacity');\n      }\n    });\n  }\n  /**\n   * Private helper function to create SVG elements\n   */\n  getTextCss() {\n    const s = this.state;\n    const lh = ABSOLUTE_LINE_HEIGHT ? \"\".concat(s.fontSize * LINE_HEIGHT, \"px\") : LINE_HEIGHT * this.lineHeightCorrection;\n    let css = \"display: inline-block; font-size: \".concat(s.fontSize, \"px; \") + \"font-family: \".concat(s.fontFamily, \"; color: \").concat(s.fontColor, \"; line-height: \").concat(lh, \"; pointer-events: \").concat(this.pointerEvents ? this.pointerEventsValue : 'none', \"; \");\n    const fontStyle = s.fontStyle;\n    matchBinaryMask(fontStyle, FONT.BOLD) && (css += 'font-weight: bold; ');\n    matchBinaryMask(fontStyle, FONT.ITALIC) && (css += 'font-style: italic; ');\n    const txtDecor = [];\n    matchBinaryMask(fontStyle, FONT.UNDERLINE) && txtDecor.push('underline');\n    matchBinaryMask(fontStyle, FONT.STRIKETHROUGH) && txtDecor.push('line-through');\n    txtDecor.length > 0 && (css += \"text-decoration: \".concat(txtDecor.join(' '), \"; \"));\n    return css;\n  }\n  /**\n   * Paints the given text. Possible values for format are empty string for plain\n   * text and html for HTML markup. Note that HTML markup is only supported if\n   * foreignObject is supported and <foEnabled> is true. (This means IE9 and later\n   * does currently not support HTML text as part of shapes.)\n   */\n  text(x, y, w, h, str, align, valign, wrap, format, overflow, clip) {\n    let rotation = arguments.length > 11 && arguments[11] !== undefined ? arguments[11] : 0;\n    let dir = arguments.length > 12 ? arguments[12] : undefined;\n    if (this.textEnabled && str != null) {\n      rotation = rotation != null ? rotation : 0;\n      if (this.foEnabled && format === 'html') {\n        const div = this.createDiv(str);\n        // Ignores invalid XHTML labels\n        if (div != null) {\n          if (dir != null) {\n            div.setAttribute('dir', dir);\n          }\n          this.addForeignObject(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir, div, this.root);\n        }\n      } else {\n        this.plainText(x + this.state.dx, y + this.state.dy, w, h, str, align, valign, wrap, overflow, clip, rotation, dir);\n      }\n    }\n  }\n  /**\n   * Creates a clip for the given coordinates.\n   */\n  createClip(x, y, w, h) {\n    x = Math.round(x);\n    y = Math.round(y);\n    w = Math.round(w);\n    h = Math.round(h);\n    const id = \"mx-clip-\".concat(x, \"-\").concat(y, \"-\").concat(w, \"-\").concat(h);\n    let counter = 0;\n    let tmp = \"\".concat(id, \"-\").concat(counter);\n    // Resolves ID conflicts\n    while (document.getElementById(tmp) != null) {\n      tmp = \"\".concat(id, \"-\").concat(++counter);\n    }\n    const clip = this.createElement('clipPath');\n    clip.setAttribute('id', tmp);\n    const rect = this.createElement('rect');\n    rect.setAttribute('x', String(x));\n    rect.setAttribute('y', String(y));\n    rect.setAttribute('width', String(w));\n    rect.setAttribute('height', String(h));\n    clip.appendChild(rect);\n    return clip;\n  }\n  /**\n   * Paints the given text. Possible values for format are empty string for\n   * plain text and html for HTML markup.\n   */\n  plainText(x, y, w, h, str, align, valign, wrap, overflow, clip) {\n    let rotation = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : 0;\n    let dir = arguments.length > 11 ? arguments[11] : undefined;\n    const s = this.state;\n    const size = s.fontSize;\n    const node = this.createElement('g');\n    let tr = s.transform || '';\n    this.updateFont(node);\n    // Ignores pointer events\n    if (!this.pointerEvents && this.originalRoot == null) {\n      node.setAttribute('pointer-events', 'none');\n    }\n    // Non-rotated text\n    if (rotation !== 0) {\n      tr += \"rotate(\".concat(rotation, \",\").concat(this.format(x * s.scale), \",\").concat(this.format(y * s.scale), \")\");\n    }\n    if (dir != null) {\n      node.setAttribute('direction', dir);\n    }\n    if (clip && w > 0 && h > 0) {\n      let cx = x;\n      let cy = y;\n      if (align === ALIGN.CENTER) {\n        cx -= w / 2;\n      } else if (align === ALIGN.RIGHT) {\n        cx -= w;\n      }\n      if (overflow !== 'fill') {\n        if (valign === ALIGN.MIDDLE) {\n          cy -= h / 2;\n        } else if (valign === ALIGN.BOTTOM) {\n          cy -= h;\n        }\n      }\n      // LATER: Remove spacing from clip rectangle\n      const c = this.createClip(cx * s.scale - 2, cy * s.scale - 2, w * s.scale + 4, h * s.scale + 4);\n      if (this.defs != null) {\n        this.defs.appendChild(c);\n      } else {\n        // Makes sure clip is removed with referencing node\n        this.root.appendChild(c);\n      }\n      if (!Client.IS_CHROMEAPP && !Client.IS_EDGE && this.root.ownerDocument === document) {\n        // Workaround for potential base tag\n        const base = this.getBaseUrl().replace(/([()])/g, '\\\\$1');\n        node.setAttribute('clip-path', \"url(\".concat(base, \"#\").concat(c.getAttribute('id'), \")\"));\n      } else {\n        node.setAttribute('clip-path', \"url(#\".concat(c.getAttribute('id'), \")\"));\n      }\n    }\n    // Default is left\n    const anchor = align === ALIGN.RIGHT ? 'end' : align === ALIGN.CENTER ? 'middle' : 'start';\n    // Text-anchor start is default in SVG\n    if (anchor !== 'start') {\n      node.setAttribute('text-anchor', anchor);\n    }\n    if (!this.styleEnabled || size !== DEFAULT_FONTSIZE) {\n      node.setAttribute('font-size', \"\".concat(size * s.scale, \"px\"));\n    }\n    if (tr.length > 0) {\n      node.setAttribute('transform', tr);\n    }\n    if (s.alpha < 1) {\n      node.setAttribute('opacity', String(s.alpha));\n    }\n    const lines = str.split('\\n');\n    const lh = Math.round(size * LINE_HEIGHT);\n    const textHeight = size + (lines.length - 1) * lh;\n    let cy = y + size - 1;\n    if (valign === ALIGN.MIDDLE) {\n      if (overflow === 'fill') {\n        cy -= h / 2;\n      } else {\n        const dy = (this.matchHtmlAlignment && clip && h > 0 ? Math.min(textHeight, h) : textHeight) / 2;\n        cy -= dy;\n      }\n    } else if (valign === ALIGN.BOTTOM) {\n      if (overflow === 'fill') {\n        cy -= h;\n      } else {\n        const dy = this.matchHtmlAlignment && clip && h > 0 ? Math.min(textHeight, h) : textHeight;\n        cy -= dy + 1;\n      }\n    }\n    for (let i = 0; i < lines.length; i += 1) {\n      const line = trim(lines[i]);\n      // Workaround for bounding box of empty lines and spaces\n      if (line) {\n        const text = this.createElement('text');\n        // LATER: Match horizontal HTML alignment\n        text.setAttribute('x', String(this.format(x * s.scale) + this.textOffset));\n        text.setAttribute('y', String(this.format(cy * s.scale) + this.textOffset));\n        write(text, line);\n        node.appendChild(text);\n      }\n      cy += lh;\n    }\n    this.root.appendChild(node);\n    this.addTextBackground(node, str, x, y, w, overflow === 'fill' ? h : textHeight, align, valign, overflow);\n  }\n  /**\n   * Updates the text properties for the given node. (NOTE: For this to work in\n   * IE, the given node must be a text or tspan element.)\n   */\n  updateFont(node) {\n    const s = this.state;\n    if (s.fontColor && s.fontColor !== NONE) {\n      node.setAttribute('fill', s.fontColor);\n    }\n    if (!this.styleEnabled || s.fontFamily !== DEFAULT_FONTFAMILY) {\n      node.setAttribute('font-family', s.fontFamily);\n    }\n    const fontStyle = s.fontStyle;\n    matchBinaryMask(fontStyle, FONT.BOLD) && node.setAttribute('font-weight', 'bold');\n    matchBinaryMask(fontStyle, FONT.ITALIC) && node.setAttribute('font-style', 'italic');\n    const txtDecor = [];\n    matchBinaryMask(fontStyle, FONT.UNDERLINE) && txtDecor.push('underline');\n    matchBinaryMask(fontStyle, FONT.STRIKETHROUGH) && txtDecor.push('line-through');\n    txtDecor.length > 0 && node.setAttribute('text-decoration', txtDecor.join(' '));\n  }\n  /**\n   * Background color and border\n   */\n  addTextBackground(node, str, x, y, w, h, align, valign, overflow) {\n    const s = this.state;\n    if (s.fontBackgroundColor != null || s.fontBorderColor != null) {\n      let bbox = null;\n      if (overflow === 'fill' || overflow === 'width') {\n        if (align === ALIGN.CENTER) {\n          x -= w / 2;\n        } else if (align === ALIGN.RIGHT) {\n          x -= w;\n        }\n        if (valign === ALIGN.MIDDLE) {\n          y -= h / 2;\n        } else if (valign === ALIGN.BOTTOM) {\n          y -= h;\n        }\n        bbox = new Rectangle((x + 1) * s.scale, y * s.scale, (w - 2) * s.scale, (h + 2) * s.scale);\n        // @ts-ignore check for getBBox\n      } else if (node.getBBox != null && this.root.ownerDocument === document) {\n        // Uses getBBox only if inside document for correct size\n        try {\n          // @ts-ignore getBBox exists\n          bbox = node.getBBox();\n          bbox = new Rectangle(bbox.x, bbox.y + 1, bbox.width, bbox.height + 0);\n        } catch (e) {\n          // Ignores NS_ERROR_FAILURE in FF if container display is none.\n        }\n      }\n      if (bbox == null || bbox.width === 0 || bbox.height === 0) {\n        // Computes size if not in document or no getBBox available\n        const div = document.createElement('div');\n        // Wrapping and clipping can be ignored here\n        div.style.lineHeight = ABSOLUTE_LINE_HEIGHT ? \"\".concat(s.fontSize * LINE_HEIGHT, \"px\") : String(LINE_HEIGHT);\n        div.style.fontSize = \"\".concat(s.fontSize, \"px\");\n        div.style.fontFamily = s.fontFamily;\n        div.style.whiteSpace = 'nowrap';\n        div.style.position = 'absolute';\n        div.style.visibility = 'hidden';\n        div.style.display = 'inline-block';\n        matchBinaryMask(s.fontStyle, FONT.BOLD) && (div.style.fontWeight = 'bold');\n        matchBinaryMask(s.fontStyle, FONT.ITALIC) && (div.style.fontStyle = 'italic');\n        str = htmlEntities(str, false);\n        div.innerHTML = str.replace(/\\n/g, '<br/>');\n        document.body.appendChild(div);\n        const w = div.offsetWidth;\n        const h = div.offsetHeight;\n        document.body.removeChild(div);\n        if (align === ALIGN.CENTER) {\n          x -= w / 2;\n        } else if (align === ALIGN.RIGHT) {\n          x -= w;\n        }\n        if (valign === ALIGN.MIDDLE) {\n          y -= h / 2;\n        } else if (valign === ALIGN.BOTTOM) {\n          y -= h;\n        }\n        bbox = new Rectangle((x + 1) * s.scale, (y + 2) * s.scale, w * s.scale, (h + 1) * s.scale);\n      }\n      if (bbox != null) {\n        var _this$root4;\n        const n = this.createElement('rect');\n        n.setAttribute('fill', s.fontBackgroundColor || 'none');\n        n.setAttribute('stroke', s.fontBorderColor || 'none');\n        n.setAttribute('x', String(Math.floor(bbox.x - 1)));\n        n.setAttribute('y', String(Math.floor(bbox.y - 1)));\n        n.setAttribute('width', String(Math.ceil(bbox.width + 2)));\n        n.setAttribute('height', String(Math.ceil(bbox.height)));\n        const sw = s.fontBorderColor ? Math.max(1, this.format(s.scale)) : 0;\n        n.setAttribute('stroke-width', String(sw));\n        // Workaround for crisp rendering - only required if not exporting\n        if (((_this$root4 = this.root) === null || _this$root4 === void 0 ? void 0 : _this$root4.ownerDocument) === document && mod(sw, 2) === 1) {\n          n.setAttribute('transform', 'translate(0.5, 0.5)');\n        }\n        node.insertBefore(n, node.firstChild);\n      }\n    }\n  }\n  /**\n   * Paints the outline of the current path.\n   */\n  stroke() {\n    this.addNode(false, true);\n  }\n  /**\n   * Fills the current path.\n   */\n  fill() {\n    this.addNode(true, false);\n  }\n  /**\n   * Fills and paints the outline of the current path.\n   */\n  fillAndStroke() {\n    this.addNode(true, true);\n  }\n}\n/**\n * Updates existing DOM nodes for text rendering.\n */\nSvgCanvas2D.createCss = (w, h, align, valign, wrap, overflow, clip, bg, border, flex, block, scale, callback) => {\n  let item = \"box-sizing: border-box; font-size: 0; text-align: \".concat(align === ALIGN.LEFT ? 'left' : align === ALIGN.RIGHT ? 'right' : 'center', \"; \");\n  const pt = getAlignmentAsPoint(align, valign);\n  let ofl = 'overflow: hidden; ';\n  let fw = 'width: 1px; ';\n  let fh = 'height: 1px; ';\n  let dx = pt.x * w;\n  let dy = pt.y * h;\n  if (clip) {\n    fw = \"width: \".concat(Math.round(w), \"px; \");\n    item += \"max-height: \".concat(Math.round(h), \"px; \");\n    dy = 0;\n  } else if (overflow === 'fill') {\n    fw = \"width: \".concat(Math.round(w), \"px; \");\n    fh = \"height: \".concat(Math.round(h), \"px; \");\n    block += 'width: 100%; height: 100%; ';\n    item += fw + fh;\n  } else if (overflow === 'width') {\n    fw = \"width: \".concat(Math.round(w), \"px; \");\n    block += 'width: 100%; ';\n    item += fw;\n    dy = 0;\n    if (h > 0) {\n      item += \"max-height: \".concat(Math.round(h), \"px; \");\n    }\n  } else {\n    ofl = '';\n    dy = 0;\n  }\n  let bgc = '';\n  if (bg) {\n    bgc += \"background-color: \".concat(bg, \"; \");\n  }\n  if (border) {\n    bgc += \"border: 1px solid \".concat(border, \"; \");\n  }\n  if (ofl == '' || clip) {\n    block += bgc;\n  } else {\n    item += bgc;\n  }\n  if (wrap && w > 0) {\n    block += \"white-space: normal; word-wrap: \".concat(WORD_WRAP, \"; \");\n    fw = \"width: \".concat(Math.round(w), \"px; \");\n    if (ofl !== '' && overflow !== 'fill') {\n      dy = 0;\n    }\n  } else {\n    block += 'white-space: nowrap; ';\n    if (ofl === '') {\n      dx = 0;\n    }\n  }\n  callback(dx, dy, flex + fw + fh, item + ofl, block, ofl);\n};\nexport default SvgCanvas2D;","map":{"version":3,"names":["isNotNullish","mod","getAlignmentAsPoint","matchBinaryMask","Client","ABSOLUTE_LINE_HEIGHT","ALIGN","DEFAULT_FONTFAMILY","DEFAULT_FONTSIZE","DIRECTION","FONT","LINE_HEIGHT","NONE","NS_SVG","NS_XLINK","SHADOWCOLOR","WORD_WRAP","Rectangle","AbstractCanvas2D","getXml","isNode","write","htmlEntities","trim","useAbsoluteIds","DOMParser","IS_CHROMEAPP","IS_EDGE","document","getElementsByTagName","length","SvgCanvas2D","constructor","root","styleEnabled","defs","node","matchHtmlAlignment","textEnabled","foEnabled","foAltText","foOffset","textOffset","imageOffset","strokeTolerance","minStrokeWidth","refCount","lineHeightCorrection","pointerEventsValue","fontMetricsPadding","cacheOffsetSize","originalRoot","gradients","svg","ownerDocument","nodeName","parentElement","tmp","createElement","firstChild","insertBefore","appendChild","createStyle","format","value","parseFloat","toFixed","getBaseUrl","href","window","location","hash","lastIndexOf","substring","reset","end","style","setAttribute","concat","tagName","namespace","_this$root","createElementNS","getAlternateText","fo","x","y","w","h","str","align","valign","wrap","overflow","clip","rotation","createAlternateContent","text","s","state","fontSize","dy","TOP","BOTTOM","anchor","RIGHT","LEFT","alt","String","Math","round","dx","fontColor","fontFamily","fontStyle","BOLD","ITALIC","txtDecor","UNDERLINE","push","STRIKETHROUGH","join","createGradientId","start","alpha1","alpha2","direction","charAt","toLowerCase","dir","SOUTH","EAST","NORTH","WEST","getSvgGradient","id","gradient","ownerSVGElement","counter","tmpId","getElementById","createSvgGradient","getAttribute","op","stop","addNode","filled","stroked","path","fillColor","updateFill","IS_FF","strokeColor","updateStroke","transform","shadow","createShadow","createTolerance","pointerEvents","alpha","fillAlpha","gradientColor","_this$root2","gradientFillAlpha","gradientAlpha","gradientDirection","base","replace","getCurrentStrokeWidth","max","strokeWidth","scale","strokeAlpha","sw","updateStrokeAttributes","dashed","createDashPattern","fixDash","lineJoin","lineCap","miterLimit","pat","dashPattern","dash","split","i","Number","tol","cloneNode","removeAttribute","shadowColor","shadowDx","shadowDy","shadowAlpha","setLink","link","setAttributeNS","rotate","theta","flipH","flipV","cx","cy","tx","sx","ty","sy","rotationCx","rotationCy","begin","rect","n","roundrect","ellipse","image","src","aspect","arguments","undefined","converter","convert","tr","convertHtml","val","doc","parseFromString","XMLSerializer","serializeToString","body","indexOf","createDiv","div","div2","div3","innerHTML","documentElement","updateText","updateTextNodes","addForeignObject","_this$root3","group","g","createCss","fontBackgroundColor","fontBorderColor","getTextCss","flex","item","block","box","r","rotateHtml","t","ceil","min","yp","lh","css","plainText","createClip","size","updateFont","CENTER","MIDDLE","c","lines","textHeight","line","addTextBackground","bbox","getBBox","width","height","e","lineHeight","whiteSpace","position","visibility","display","fontWeight","offsetWidth","offsetHeight","removeChild","_this$root4","floor","stroke","fill","fillAndStroke","bg","border","callback","pt","ofl","fw","fh","bgc"],"sources":["D:/ospanel/domains/react/react-intro-main/node_modules/@maxgraph/core/dist/view/canvas/SvgCanvas2D.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { isNotNullish } from '../../util/Utils';\nimport { mod } from '../../util/mathUtils';\nimport { getAlignmentAsPoint, matchBinaryMask } from '../../util/styleUtils';\nimport Client from '../../Client';\nimport { ABSOLUTE_LINE_HEIGHT, ALIGN, DEFAULT_FONTFAMILY, DEFAULT_FONTSIZE, DIRECTION, FONT, LINE_HEIGHT, NONE, NS_SVG, NS_XLINK, SHADOWCOLOR, WORD_WRAP, } from '../../util/Constants';\nimport Rectangle from '../geometry/Rectangle';\nimport AbstractCanvas2D from './AbstractCanvas2D';\nimport { getXml } from '../../util/xmlUtils';\nimport { isNode, write } from '../../util/domUtils';\nimport { htmlEntities, trim } from '../../util/StringUtils';\n// Activates workaround for gradient ID resolution if base tag is used.\nconst useAbsoluteIds = typeof DOMParser === 'function' &&\n    !Client.IS_CHROMEAPP &&\n    !Client.IS_EDGE &&\n    document.getElementsByTagName('base').length > 0;\n/**\n * Extends {@link mxAbstractCanvas2D} to implement a canvas for SVG. This canvas writes all calls as SVG output to the\n * given SVG root node.\n *\n * ```javascript\n * var svgDoc = mxUtils.createXmlDocument();\n * var root = (svgDoc.createElementNS != null) ?\n * \t\tsvgDoc.createElementNS(mxConstants.NS_SVG, 'svg') : svgDoc.createElement('svg');\n *\n * if (svgDoc.createElementNS == null)\n * {\n *   root.setAttribute('xmlns', mxConstants.NS_SVG);\n *   root.setAttribute('xmlns:xlink', mxConstants.NS_XLINK);\n * }\n * else\n * {\n *   root.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:xlink', mxConstants.NS_XLINK);\n * }\n *\n * var bounds = graph.getGraphBounds();\n * root.setAttribute('width', (bounds.x + bounds.width + 4) + 'px');\n * root.setAttribute('height', (bounds.y + bounds.height + 4) + 'px');\n * root.setAttribute('version', '1.1');\n *\n * svgDoc.appendChild(root);\n *\n * var svgCanvas = new mxSvgCanvas2D(root);\n * ```\n *\n *\n * To disable anti-aliasing in the output, use the following code.\n * ```javascript\n * graph.view.canvas.ownerSVGElement.setAttribute('shape-rendering', 'crispEdges');\n * ```\n * Or set the respective attribute in the SVG element directly.\n */\nclass SvgCanvas2D extends AbstractCanvas2D {\n    constructor(root, styleEnabled) {\n        super();\n        this.defs = null;\n        this.styleEnabled = true;\n        /**\n         * Holds the current DOM node.\n         */\n        this.node = null;\n        /**\n         * Specifies if plain text output should match the vertical HTML alignment.\n         * @default true.\n         */\n        this.matchHtmlAlignment = true;\n        /**\n         * Specifies if text output should be enabled.\n         * @default true\n         */\n        this.textEnabled = true;\n        /**\n         * Specifies if use of foreignObject for HTML markup is allowed.\n         * @default true\n         */\n        this.foEnabled = true;\n        /**\n         * Specifies the fallback text for unsupported foreignObjects in exported documents.\n         * If this is set to `null` then no fallback text is added to the exported document.\n         * @default [Object]\n         */\n        this.foAltText = '[Object]';\n        /**\n         * Offset to be used for foreignObjects.\n         * @default 0\n         */\n        this.foOffset = 0;\n        /**\n         * Offset to be used for text elements.\n         * @default 0\n         */\n        this.textOffset = 0;\n        /**\n         * Offset to be used for image elements.\n         * @default 0\n         */\n        this.imageOffset = 0;\n        /**\n         * Adds transparent paths for strokes.\n         * @default 0\n         */\n        this.strokeTolerance = 0;\n        /**\n         * Minimum stroke width for output.\n         * @default 1\n         */\n        this.minStrokeWidth = 1;\n        /**\n         * Local counter for references in SVG export.\n         * @default 0\n         */\n        this.refCount = 0;\n        /**\n         * Correction factor for {@link mxConstants.LINE_HEIGHT} in HTML output.\n         * @default 1\n         */\n        this.lineHeightCorrection = 1;\n        /**\n         * Default value for active pointer events.\n         * @default all\n         */\n        this.pointerEventsValue = 'all';\n        /**\n         * Padding to be added for text that is not wrapped to account for differences in font metrics on different platforms in pixels.\n         * @default 10.\n         */\n        this.fontMetricsPadding = 10;\n        /**\n         * Specifies if offsetWidth and offsetHeight should be cached. This is used to speed up repaint of text in {@link updateText}.\n         * @default true\n         */\n        this.cacheOffsetSize = true;\n        this.originalRoot = null;\n        /**\n         * Reference to the container for the SVG content.\n         */\n        this.root = root;\n        /**\n         * Local cache of gradients for quick lookups.\n         */\n        this.gradients = {};\n        /**\n         * Reference to the defs section of the SVG document. Only for export.\n         */\n        this.defs = null;\n        /**\n         * Stores the value of styleEnabled passed to the constructor.\n         */\n        this.styleEnabled = styleEnabled != null ? styleEnabled : false;\n        let svg = null;\n        // Adds optional defs section for export\n        if (root.ownerDocument !== document) {\n            let node = root;\n            // Finds owner SVG element in XML DOM\n            while (node && node.nodeName !== 'svg') {\n                node = node.parentElement;\n            }\n            svg = node;\n        }\n        if (svg) {\n            // Tries to get existing defs section\n            const tmp = svg.getElementsByTagName('defs');\n            if (tmp.length > 0) {\n                this.defs = svg.getElementsByTagName('defs')[0];\n            }\n            // Adds defs section if none exists\n            if (!this.defs) {\n                this.defs = this.createElement('defs');\n                if (svg.firstChild != null) {\n                    svg.insertBefore(this.defs, svg.firstChild);\n                }\n                else {\n                    svg.appendChild(this.defs);\n                }\n            }\n            // Adds stylesheet\n            if (this.styleEnabled) {\n                this.defs.appendChild(this.createStyle());\n            }\n        }\n    }\n    /**\n     * Rounds all numbers to 2 decimal points.\n     */\n    format(value) {\n        return parseFloat(value.toFixed(2));\n    }\n    /**\n     * Returns the URL of the page without the hash part. This needs to use href to\n     * include any search part with no params (ie question mark alone). This is a\n     * workaround for the fact that window.location.search is empty if there is\n     * no search string behind the question mark.\n     */\n    getBaseUrl() {\n        let { href } = window.location;\n        const hash = href.lastIndexOf('#');\n        if (hash > 0) {\n            href = href.substring(0, hash);\n        }\n        return href;\n    }\n    /**\n     * Returns any offsets for rendering pixels.\n     */\n    reset() {\n        super.reset();\n        this.gradients = {};\n    }\n    end() {\n        return;\n    }\n    /**\n     * Creates the optional style section.\n     */\n    createStyle() {\n        const style = this.createElement('style');\n        style.setAttribute('type', 'text/css');\n        write(style, `svg{font-family:${DEFAULT_FONTFAMILY};font-size:${DEFAULT_FONTSIZE};fill:none;stroke-miterlimit:10}`);\n        return style;\n    }\n    /**\n     * Private helper function to create SVG elements\n     */\n    createElement(tagName, namespace) {\n        return this.root?.ownerDocument.createElementNS(namespace || NS_SVG, tagName);\n    }\n    /**\n     * Returns the alternate text string for the given foreignObject.\n     */\n    getAlternateText(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation) {\n        return isNotNullish(str) ? this.foAltText : null;\n    }\n    /**\n     * Returns the alternate content for the given foreignObject.\n     */\n    createAlternateContent(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation) {\n        const text = this.getAlternateText(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation);\n        const s = this.state;\n        if (isNotNullish(text) && s.fontSize > 0) {\n            const dy = valign === ALIGN.TOP ? 1 : valign === ALIGN.BOTTOM ? 0 : 0.3;\n            const anchor = align === ALIGN.RIGHT ? 'end' : align === ALIGN.LEFT ? 'start' : 'middle';\n            const alt = this.createElement('text');\n            alt.setAttribute('x', String(Math.round(x + s.dx)));\n            alt.setAttribute('y', String(Math.round(y + s.dy + dy * s.fontSize)));\n            alt.setAttribute('fill', s.fontColor || 'black');\n            alt.setAttribute('font-family', s.fontFamily);\n            alt.setAttribute('font-size', `${Math.round(s.fontSize)}px`);\n            // Text-anchor start is default in SVG\n            anchor !== 'start' && alt.setAttribute('text-anchor', anchor);\n            const fontStyle = s.fontStyle;\n            matchBinaryMask(fontStyle, FONT.BOLD) && alt.setAttribute('font-weight', 'bold');\n            matchBinaryMask(fontStyle, FONT.ITALIC) &&\n                alt.setAttribute('font-style', 'italic');\n            const txtDecor = [];\n            matchBinaryMask(fontStyle, FONT.UNDERLINE) && txtDecor.push('underline');\n            matchBinaryMask(fontStyle, FONT.STRIKETHROUGH) && txtDecor.push('line-through');\n            txtDecor.length > 0 && alt.setAttribute('text-decoration', txtDecor.join(' '));\n            write(alt, text);\n            return alt;\n        }\n        return null;\n    }\n    /**\n     * Private helper function to create SVG elements\n     */\n    createGradientId(start, end, alpha1, alpha2, direction) {\n        // Removes illegal characters from gradient ID\n        if (start.charAt(0) === '#') {\n            start = start.substring(1);\n        }\n        if (end.charAt(0) === '#') {\n            end = end.substring(1);\n        }\n        // Workaround for gradient IDs not working in Safari 5 / Chrome 6\n        // if they contain uppercase characters\n        start = `${start.toLowerCase()}-${alpha1}`;\n        end = `${end.toLowerCase()}-${alpha2}`;\n        // Wrong gradient directions possible?\n        let dir = null;\n        if (direction == null || direction === DIRECTION.SOUTH) {\n            dir = 's';\n        }\n        else if (direction === DIRECTION.EAST) {\n            dir = 'e';\n        }\n        else {\n            const tmp = start;\n            start = end;\n            end = tmp;\n            if (direction === DIRECTION.NORTH) {\n                dir = 's';\n            }\n            else if (direction === DIRECTION.WEST) {\n                dir = 'e';\n            }\n        }\n        return `mx-gradient-${start}-${end}-${dir}`;\n    }\n    /**\n     * Private helper function to create SVG elements\n     */\n    getSvgGradient(start, end, alpha1, alpha2, direction) {\n        const id = this.createGradientId(start, end, alpha1, alpha2, direction);\n        let gradient = this.gradients[id];\n        if (!gradient) {\n            const svg = this.root.ownerSVGElement;\n            let counter = 0;\n            let tmpId = `${id}-${counter}`;\n            if (svg) {\n                gradient = svg.ownerDocument.getElementById(tmpId);\n                while (gradient && gradient.ownerSVGElement !== svg) {\n                    tmpId = `${id}-${counter++}`;\n                    gradient = svg.ownerDocument.getElementById(tmpId);\n                }\n            }\n            else {\n                // Uses shorter IDs for export\n                tmpId = `id${++this.refCount}`;\n            }\n            if (!gradient) {\n                gradient = this.createSvgGradient(start, end, alpha1, alpha2, direction);\n                gradient.setAttribute('id', tmpId);\n                if (this.defs) {\n                    this.defs.appendChild(gradient);\n                }\n                else if (svg) {\n                    svg.appendChild(gradient);\n                }\n            }\n            this.gradients[id] = gradient;\n        }\n        return gradient.getAttribute('id');\n    }\n    /**\n     * Creates the given SVG gradient.\n     */\n    createSvgGradient(start, end, alpha1, alpha2, direction) {\n        const gradient = this.createElement('linearGradient');\n        gradient.setAttribute('x1', '0%');\n        gradient.setAttribute('y1', '0%');\n        gradient.setAttribute('x2', '0%');\n        gradient.setAttribute('y2', '0%');\n        if (direction == null || direction === DIRECTION.SOUTH) {\n            gradient.setAttribute('y2', '100%');\n        }\n        else if (direction === DIRECTION.EAST) {\n            gradient.setAttribute('x2', '100%');\n        }\n        else if (direction === DIRECTION.NORTH) {\n            gradient.setAttribute('y1', '100%');\n        }\n        else if (direction === DIRECTION.WEST) {\n            gradient.setAttribute('x1', '100%');\n        }\n        let op = alpha1 < 1 ? `;stop-opacity:${alpha1}` : '';\n        let stop = this.createElement('stop');\n        stop.setAttribute('offset', '0%');\n        stop.setAttribute('style', `stop-color:${start}${op}`);\n        gradient.appendChild(stop);\n        op = alpha2 < 1 ? `;stop-opacity:${alpha2}` : '';\n        stop = this.createElement('stop');\n        stop.setAttribute('offset', '100%');\n        stop.setAttribute('style', `stop-color:${end}${op}`);\n        gradient.appendChild(stop);\n        return gradient;\n    }\n    /**\n     * Private helper function to create SVG elements\n     */\n    addNode(filled, stroked) {\n        const { node } = this;\n        const s = this.state;\n        if (node) {\n            if (node.nodeName === 'path') {\n                // Checks if the path is not empty\n                if (this.path && this.path.length > 0) {\n                    node.setAttribute('d', this.path.join(' '));\n                }\n                else {\n                    return;\n                }\n            }\n            if (filled && s.fillColor !== NONE) {\n                this.updateFill();\n            }\n            else if (!this.styleEnabled) {\n                // Workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=814952\n                if (node.nodeName === 'ellipse' && Client.IS_FF) {\n                    node.setAttribute('fill', 'transparent');\n                }\n                else {\n                    node.setAttribute('fill', NONE);\n                }\n                // Sets the actual filled state for stroke tolerance\n                filled = false;\n            }\n            if (stroked && s.strokeColor !== NONE) {\n                this.updateStroke();\n            }\n            else if (!this.styleEnabled) {\n                node.setAttribute('stroke', NONE);\n            }\n            if (s.transform && s.transform.length > 0) {\n                node.setAttribute('transform', s.transform);\n            }\n            if (s.shadow) {\n                this.root.appendChild(this.createShadow(node));\n            }\n            // Adds stroke tolerance\n            if (this.strokeTolerance > 0 && !filled) {\n                this.root.appendChild(this.createTolerance(node));\n            }\n            // Adds pointer events\n            if (this.pointerEvents) {\n                node.setAttribute('pointer-events', this.pointerEventsValue);\n            }\n            // Enables clicks for nodes inside a link element\n            else if (!this.pointerEvents && !this.originalRoot) {\n                node.setAttribute('pointer-events', NONE);\n            }\n            // Removes invisible nodes from output if they don't handle events\n            if ((node.nodeName !== 'rect' &&\n                node.nodeName !== 'path' &&\n                node.nodeName !== 'ellipse') ||\n                (node.getAttribute('fill') !== NONE &&\n                    node.getAttribute('fill') !== 'transparent') ||\n                node.getAttribute('stroke') !== NONE ||\n                node.getAttribute('pointer-events') !== NONE) {\n                // LATER: Update existing DOM for performance\n                this.root.appendChild(node);\n            }\n            this.node = null;\n        }\n    }\n    /**\n     * Transfers the stroke attributes from <state> to <node>.\n     */\n    updateFill() {\n        const s = this.state;\n        if (s.alpha < 1 || s.fillAlpha < 1) {\n            this.node.setAttribute('fill-opacity', String(s.alpha * s.fillAlpha));\n        }\n        if (s.fillColor !== NONE) {\n            if (s.gradientColor !== NONE) {\n                const id = this.getSvgGradient(s.fillColor, s.gradientColor, s.gradientFillAlpha, s.gradientAlpha, s.gradientDirection);\n                if (this.root?.ownerDocument === document && useAbsoluteIds) {\n                    // Workaround for no fill with base tag in page (escape brackets)\n                    const base = this.getBaseUrl().replace(/([()])/g, '\\\\$1');\n                    this.node.setAttribute('fill', `url(${base}#${id})`);\n                }\n                else {\n                    this.node.setAttribute('fill', `url(#${id})`);\n                }\n            }\n            else {\n                this.node.setAttribute('fill', s.fillColor.toLowerCase());\n            }\n        }\n    }\n    /**\n     * Returns the current stroke width (>= 1), ie. max(1, this.format(this.state.strokeWidth * this.state.scale)).\n     */\n    getCurrentStrokeWidth() {\n        return Math.max(this.minStrokeWidth, Math.max(0.01, this.format(this.state.strokeWidth * this.state.scale)));\n    }\n    /**\n     * Transfers the stroke attributes from {@link mxAbstractCanvas2D.state} to {@link node}.\n     */\n    updateStroke() {\n        const s = this.state;\n        if (s.strokeColor && s.strokeColor !== NONE) {\n            this.node.setAttribute('stroke', s.strokeColor.toLowerCase());\n        }\n        if (s.alpha < 1 || s.strokeAlpha < 1) {\n            this.node.setAttribute('stroke-opacity', String(s.alpha * s.strokeAlpha));\n        }\n        const sw = this.getCurrentStrokeWidth();\n        if (sw !== 1) {\n            this.node.setAttribute('stroke-width', String(sw));\n        }\n        if (this.node.nodeName === 'path') {\n            this.updateStrokeAttributes();\n        }\n        if (s.dashed) {\n            this.node.setAttribute('stroke-dasharray', this.createDashPattern((s.fixDash ? 1 : s.strokeWidth) * s.scale));\n        }\n    }\n    /**\n     * Transfers the stroke attributes from {@link mxAbstractCanvas2D.state} to {@link node}.\n     */\n    updateStrokeAttributes() {\n        const s = this.state;\n        // Linejoin miter is default in SVG\n        if (s.lineJoin && s.lineJoin !== 'miter') {\n            this.node.setAttribute('stroke-linejoin', s.lineJoin);\n        }\n        if (s.lineCap) {\n            // flat is called butt in SVG\n            let value = s.lineCap;\n            if (value === 'flat') {\n                value = 'butt';\n            }\n            // Linecap butt is default in SVG\n            if (value !== 'butt') {\n                this.node.setAttribute('stroke-linecap', value);\n            }\n        }\n        // Miterlimit 10 is default in our document\n        if (s.miterLimit != null && (!this.styleEnabled || s.miterLimit !== 10)) {\n            this.node.setAttribute('stroke-miterlimit', String(s.miterLimit));\n        }\n    }\n    /**\n     * Creates the SVG dash pattern for the given state.\n     */\n    createDashPattern(scale) {\n        const pat = [];\n        if (typeof this.state.dashPattern === 'string') {\n            const dash = this.state.dashPattern.split(' ');\n            if (dash.length > 0) {\n                for (let i = 0; i < dash.length; i += 1) {\n                    pat[i] = Number(dash[i]) * scale;\n                }\n            }\n        }\n        return pat.join(' ');\n    }\n    /**\n     * Creates a hit detection tolerance shape for the given node.\n     */\n    createTolerance(node) {\n        const tol = node.cloneNode(true);\n        const sw = parseFloat(tol.getAttribute('stroke-width') || '1') + this.strokeTolerance;\n        tol.setAttribute('pointer-events', 'stroke');\n        tol.setAttribute('visibility', 'hidden');\n        tol.removeAttribute('stroke-dasharray');\n        tol.setAttribute('stroke-width', String(sw));\n        tol.setAttribute('fill', 'none');\n        tol.setAttribute('stroke', 'white');\n        return tol;\n    }\n    /**\n     * Creates a shadow for the given node.\n     */\n    createShadow(node) {\n        const shadow = node.cloneNode(true);\n        const s = this.state;\n        // Firefox uses transparent for no fill in ellipses\n        if (shadow.getAttribute('fill') !== 'none' &&\n            (!Client.IS_FF || shadow.getAttribute('fill') !== 'transparent')) {\n            shadow.setAttribute('fill', (s.shadowColor ? s.shadow : SHADOWCOLOR));\n        }\n        if (shadow.getAttribute('stroke') !== 'none' &&\n            s.shadowColor &&\n            s.shadowColor !== NONE) {\n            shadow.setAttribute('stroke', s.shadowColor);\n        }\n        shadow.setAttribute('transform', `translate(${this.format(s.shadowDx * s.scale)},${this.format(s.shadowDy * s.scale)})${s.transform || ''}`);\n        shadow.setAttribute('opacity', String(s.shadowAlpha));\n        return shadow;\n    }\n    /**\n     * Experimental implementation for hyperlinks.\n     */\n    setLink(link) {\n        if (!link) {\n            this.root = this.originalRoot;\n        }\n        else {\n            this.originalRoot = this.root;\n            const node = this.createElement('a');\n            // Workaround for implicit namespace handling in HTML5 export, IE adds NS1 namespace so use code below\n            // in all IE versions except quirks mode. KNOWN: Adds xlink namespace to each image tag in output.\n            if (node.setAttributeNS == null || this.root.ownerDocument !== document) {\n                node.setAttribute('xlink:href', link);\n            }\n            else {\n                node.setAttributeNS(NS_XLINK, 'xlink:href', link);\n            }\n            this.root.appendChild(node);\n            this.root = node;\n        }\n    }\n    /**\n     * Sets the rotation of the canvas. Note that rotation cannot be concatenated.\n     */\n    rotate(theta, flipH, flipV, cx, cy) {\n        if (theta !== 0 || flipH || flipV) {\n            const s = this.state;\n            cx += s.dx;\n            cy += s.dy;\n            cx *= s.scale;\n            cy *= s.scale;\n            s.transform = s.transform || '';\n            // This implementation uses custom scale/translate and built-in rotation\n            // Rotation state is part of the AffineTransform in state.transform\n            if (flipH && flipV) {\n                theta += 180;\n            }\n            else if (flipH !== flipV) {\n                const tx = flipH ? cx : 0;\n                const sx = flipH ? -1 : 1;\n                const ty = flipV ? cy : 0;\n                const sy = flipV ? -1 : 1;\n                s.transform +=\n                    `translate(${this.format(tx)},${this.format(ty)})` +\n                        `scale(${this.format(sx)},${this.format(sy)})` +\n                        `translate(${this.format(-tx)},${this.format(-ty)})`;\n            }\n            if (flipH ? !flipV : flipV) {\n                theta *= -1;\n            }\n            if (theta !== 0) {\n                s.transform += `rotate(${this.format(theta)},${this.format(cx)},${this.format(cy)})`;\n            }\n            s.rotation += theta;\n            s.rotationCx = cx;\n            s.rotationCy = cy;\n        }\n    }\n    /**\n     * Extends superclass to create path.\n     */\n    begin() {\n        super.begin();\n        this.node = this.createElement('path');\n    }\n    /**\n     * Private helper function to create SVG elements\n     */\n    rect(x, y, w, h) {\n        const s = this.state;\n        const n = this.createElement('rect');\n        n.setAttribute('x', String(this.format((x + s.dx) * s.scale)));\n        n.setAttribute('y', String(this.format((y + s.dy) * s.scale)));\n        n.setAttribute('width', String(this.format(w * s.scale)));\n        n.setAttribute('height', String(this.format(h * s.scale)));\n        this.node = n;\n    }\n    /**\n     * Private helper function to create SVG elements\n     */\n    roundrect(x, y, w, h, dx, dy) {\n        this.rect(x, y, w, h);\n        if (dx > 0) {\n            this.node.setAttribute('rx', String(this.format(dx * this.state.scale)));\n        }\n        if (dy > 0) {\n            this.node.setAttribute('ry', String(this.format(dy * this.state.scale)));\n        }\n    }\n    /**\n     * Private helper function to create SVG elements\n     */\n    ellipse(x, y, w, h) {\n        const s = this.state;\n        const n = this.createElement('ellipse');\n        // No rounding for consistent output with 1.x\n        n.setAttribute('cx', String(this.format((x + w / 2 + s.dx) * s.scale)));\n        n.setAttribute('cy', String(this.format((y + h / 2 + s.dy) * s.scale)));\n        n.setAttribute('rx', String((w / 2) * s.scale));\n        n.setAttribute('ry', String((h / 2) * s.scale));\n        this.node = n;\n    }\n    /**\n     * Private helper function to create SVG elements\n     */\n    image(x, y, w, h, src, aspect = true, flipH = false, flipV = false) {\n        src = this.converter.convert(src);\n        const s = this.state;\n        x += s.dx;\n        y += s.dy;\n        const node = this.createElement('image');\n        node.setAttribute('x', String(this.format(x * s.scale) + this.imageOffset));\n        node.setAttribute('y', String(this.format(y * s.scale) + this.imageOffset));\n        node.setAttribute('width', String(this.format(w * s.scale)));\n        node.setAttribute('height', String(this.format(h * s.scale)));\n        // Workaround for missing namespace support\n        if (!node.setAttributeNS) {\n            node.setAttribute('xlink:href', src);\n        }\n        else {\n            node.setAttributeNS(NS_XLINK, 'xlink:href', src);\n        }\n        if (!aspect) {\n            node.setAttribute('preserveAspectRatio', 'none');\n        }\n        if (s.alpha < 1 || s.fillAlpha < 1) {\n            node.setAttribute('opacity', String(s.alpha * s.fillAlpha));\n        }\n        let tr = this.state.transform || '';\n        if (flipH || flipV) {\n            let sx = 1;\n            let sy = 1;\n            let dx = 0;\n            let dy = 0;\n            if (flipH) {\n                sx = -1;\n                dx = -w - 2 * x;\n            }\n            if (flipV) {\n                sy = -1;\n                dy = -h - 2 * y;\n            }\n            // Adds image transformation to existing transform\n            tr += `scale(${sx},${sy})translate(${dx * s.scale},${dy * s.scale})`;\n        }\n        if (tr.length > 0) {\n            node.setAttribute('transform', tr);\n        }\n        if (!this.pointerEvents) {\n            node.setAttribute('pointer-events', 'none');\n        }\n        this.root.appendChild(node);\n    }\n    /**\n     * Converts the given HTML string to XHTML.\n     */\n    convertHtml(val) {\n        const doc = new DOMParser().parseFromString(val, 'text/html');\n        if (doc != null) {\n            val = new XMLSerializer().serializeToString(doc.body);\n            // Extracts body content from DOM\n            if (val.substring(0, 5) === '<body') {\n                val = val.substring(val.indexOf('>', 5) + 1);\n            }\n            if (val.substring(val.length - 7, val.length) === '</body>') {\n                val = val.substring(0, val.length - 7);\n            }\n        }\n        return val;\n    }\n    /**\n     * Private helper function to create SVG elements\n     * Note: signature changed in mxgraph 4.1.0\n     */\n    createDiv(str) {\n        let val = str;\n        if (!isNode(val)) {\n            val = `<div><div>${this.convertHtml(val)}</div></div>`;\n        }\n        if (document.createElementNS) {\n            const div = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n            if (isNode(val)) {\n                const n = val;\n                const div2 = document.createElement('div');\n                const div3 = div2.cloneNode(false);\n                // Creates a copy for export\n                if (this.root.ownerDocument !== document) {\n                    div2.appendChild(n.cloneNode(true));\n                }\n                else {\n                    div2.appendChild(n);\n                }\n                div3.appendChild(div2);\n                div.appendChild(div3);\n            }\n            else {\n                div.innerHTML = val;\n            }\n            return div;\n        }\n        if (isNode(val)) {\n            val = `<div><div>${getXml(val)}</div></div>`;\n        }\n        val = `<div xmlns=\"http://www.w3.org/1999/xhtml\">${val}</div>`;\n        // NOTE: FF 3.6 crashes if content CSS contains \"height:100%\"\n        return new DOMParser().parseFromString(val, 'text/xml').documentElement;\n    }\n    /**\n     * Updates existing DOM nodes for text rendering. LATER: Merge common parts with text function below.\n     */\n    updateText(x, y, w, h, align, valign, wrap, overflow, clip, rotation, node) {\n        if (node && node.firstChild && node.firstChild.firstChild) {\n            this.updateTextNodes(x, y, w, h, align, valign, wrap, overflow, clip, rotation, node.firstChild);\n        }\n    }\n    /**\n     * Creates a foreignObject for the given string and adds it to the given root.\n     */\n    addForeignObject(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir, div, root) {\n        const group = this.createElement('g');\n        const fo = this.createElement('foreignObject');\n        // Workarounds for print clipping and static position in Safari\n        fo.setAttribute('style', 'overflow: visible; text-align: left;');\n        fo.setAttribute('pointer-events', 'none');\n        fo.appendChild(div);\n        group.appendChild(fo);\n        this.updateTextNodes(x, y, w, h, align, valign, wrap, overflow, clip, rotation, group);\n        // Alternate content if foreignObject not supported\n        if (this.root?.ownerDocument !== document) {\n            const alt = this.createAlternateContent(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation);\n            if (alt != null) {\n                fo.setAttribute('requiredFeatures', 'http://www.w3.org/TR/SVG11/feature#Extensibility');\n                const sw = this.createElement('switch');\n                sw.appendChild(fo);\n                sw.appendChild(alt);\n                group.appendChild(sw);\n            }\n        }\n        root.appendChild(group);\n    }\n    /**\n     * Updates existing DOM nodes for text rendering.\n     */\n    updateTextNodes(x, y, w, h, align, valign, wrap, overflow, clip, rotation, g) {\n        const s = this.state.scale;\n        SvgCanvas2D.createCss(w + 2, h, align, valign, wrap, overflow, clip, this.state.fontBackgroundColor != null ? this.state.fontBackgroundColor : null, this.state.fontBorderColor != null ? this.state.fontBorderColor : null, `display: flex; align-items: unsafe ${valign === ALIGN.TOP\n            ? 'flex-start'\n            : valign === ALIGN.BOTTOM\n                ? 'flex-end'\n                : 'center'}; ` +\n            `justify-content: unsafe ${align === ALIGN.LEFT\n                ? 'flex-start'\n                : align === ALIGN.RIGHT\n                    ? 'flex-end'\n                    : 'center'}; `, this.getTextCss(), s, (dx, dy, flex, item, block) => {\n            x += this.state.dx;\n            y += this.state.dy;\n            const fo = g.firstChild;\n            const div = fo.firstChild;\n            const box = div.firstChild;\n            const text = box.firstChild;\n            const r = (this.rotateHtml ? this.state.rotation : 0) + (rotation != null ? rotation : 0);\n            let t = (this.foOffset !== 0 ? `translate(${this.foOffset} ${this.foOffset})` : '') +\n                (s !== 1 ? `scale(${s})` : '');\n            text.setAttribute('style', block);\n            box.setAttribute('style', item);\n            // Workaround for clipping in Webkit with scrolling and zoom\n            fo.setAttribute('width', `${Math.ceil((1 / Math.min(1, s)) * 100)}%`);\n            fo.setAttribute('height', `${Math.ceil((1 / Math.min(1, s)) * 100)}%`);\n            const yp = Math.round(y + dy);\n            // Allows for negative values which are causing problems with\n            // transformed content where the top edge of the foreignObject\n            // limits the text box being moved further up in the diagram.\n            // KNOWN: Possible clipping problems with zoom and scrolling\n            // but this is normally not used with scrollbars as the\n            // coordinates are always positive with scrollbars.\n            // Margin-top is ignored in Safari and no negative values allowed\n            // for padding.\n            if (yp < 0) {\n                fo.setAttribute('y', String(yp));\n            }\n            else {\n                fo.removeAttribute('y');\n                flex += `padding-top: ${yp}px; `;\n            }\n            div.setAttribute('style', `${flex}margin-left: ${Math.round(x + dx)}px;`);\n            t += r !== 0 ? `rotate(${r} ${x} ${y})` : '';\n            // Output allows for reflow but Safari cannot use absolute position,\n            // transforms or opacity. https://bugs.webkit.org/show_bug.cgi?id=23113\n            if (t !== '') {\n                g.setAttribute('transform', t);\n            }\n            else {\n                g.removeAttribute('transform');\n            }\n            if (this.state.alpha !== 1) {\n                g.setAttribute('opacity', String(this.state.alpha));\n            }\n            else {\n                g.removeAttribute('opacity');\n            }\n        });\n    }\n    /**\n     * Private helper function to create SVG elements\n     */\n    getTextCss() {\n        const s = this.state;\n        const lh = ABSOLUTE_LINE_HEIGHT\n            ? `${s.fontSize * LINE_HEIGHT}px`\n            : LINE_HEIGHT * this.lineHeightCorrection;\n        let css = `display: inline-block; font-size: ${s.fontSize}px; ` +\n            `font-family: ${s.fontFamily}; color: ${s.fontColor}; line-height: ${lh}; pointer-events: ${this.pointerEvents ? this.pointerEventsValue : 'none'}; `;\n        const fontStyle = s.fontStyle;\n        matchBinaryMask(fontStyle, FONT.BOLD) && (css += 'font-weight: bold; ');\n        matchBinaryMask(fontStyle, FONT.ITALIC) && (css += 'font-style: italic; ');\n        const txtDecor = [];\n        matchBinaryMask(fontStyle, FONT.UNDERLINE) && txtDecor.push('underline');\n        matchBinaryMask(fontStyle, FONT.STRIKETHROUGH) && txtDecor.push('line-through');\n        txtDecor.length > 0 && (css += `text-decoration: ${txtDecor.join(' ')}; `);\n        return css;\n    }\n    /**\n     * Paints the given text. Possible values for format are empty string for plain\n     * text and html for HTML markup. Note that HTML markup is only supported if\n     * foreignObject is supported and <foEnabled> is true. (This means IE9 and later\n     * does currently not support HTML text as part of shapes.)\n     */\n    text(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation = 0, dir) {\n        if (this.textEnabled && str != null) {\n            rotation = rotation != null ? rotation : 0;\n            if (this.foEnabled && format === 'html') {\n                const div = this.createDiv(str);\n                // Ignores invalid XHTML labels\n                if (div != null) {\n                    if (dir != null) {\n                        div.setAttribute('dir', dir);\n                    }\n                    this.addForeignObject(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir, div, this.root);\n                }\n            }\n            else {\n                this.plainText(x + this.state.dx, y + this.state.dy, w, h, str, align, valign, wrap, overflow, clip, rotation, dir);\n            }\n        }\n    }\n    /**\n     * Creates a clip for the given coordinates.\n     */\n    createClip(x, y, w, h) {\n        x = Math.round(x);\n        y = Math.round(y);\n        w = Math.round(w);\n        h = Math.round(h);\n        const id = `mx-clip-${x}-${y}-${w}-${h}`;\n        let counter = 0;\n        let tmp = `${id}-${counter}`;\n        // Resolves ID conflicts\n        while (document.getElementById(tmp) != null) {\n            tmp = `${id}-${++counter}`;\n        }\n        const clip = this.createElement('clipPath');\n        clip.setAttribute('id', tmp);\n        const rect = this.createElement('rect');\n        rect.setAttribute('x', String(x));\n        rect.setAttribute('y', String(y));\n        rect.setAttribute('width', String(w));\n        rect.setAttribute('height', String(h));\n        clip.appendChild(rect);\n        return clip;\n    }\n    /**\n     * Paints the given text. Possible values for format are empty string for\n     * plain text and html for HTML markup.\n     */\n    plainText(x, y, w, h, str, align, valign, wrap, overflow, clip, rotation = 0, dir) {\n        const s = this.state;\n        const size = s.fontSize;\n        const node = this.createElement('g');\n        let tr = s.transform || '';\n        this.updateFont(node);\n        // Ignores pointer events\n        if (!this.pointerEvents && this.originalRoot == null) {\n            node.setAttribute('pointer-events', 'none');\n        }\n        // Non-rotated text\n        if (rotation !== 0) {\n            tr += `rotate(${rotation},${this.format(x * s.scale)},${this.format(y * s.scale)})`;\n        }\n        if (dir != null) {\n            node.setAttribute('direction', dir);\n        }\n        if (clip && w > 0 && h > 0) {\n            let cx = x;\n            let cy = y;\n            if (align === ALIGN.CENTER) {\n                cx -= w / 2;\n            }\n            else if (align === ALIGN.RIGHT) {\n                cx -= w;\n            }\n            if (overflow !== 'fill') {\n                if (valign === ALIGN.MIDDLE) {\n                    cy -= h / 2;\n                }\n                else if (valign === ALIGN.BOTTOM) {\n                    cy -= h;\n                }\n            }\n            // LATER: Remove spacing from clip rectangle\n            const c = this.createClip(cx * s.scale - 2, cy * s.scale - 2, w * s.scale + 4, h * s.scale + 4);\n            if (this.defs != null) {\n                this.defs.appendChild(c);\n            }\n            else {\n                // Makes sure clip is removed with referencing node\n                this.root.appendChild(c);\n            }\n            if (!Client.IS_CHROMEAPP &&\n                !Client.IS_EDGE &&\n                this.root.ownerDocument === document) {\n                // Workaround for potential base tag\n                const base = this.getBaseUrl().replace(/([()])/g, '\\\\$1');\n                node.setAttribute('clip-path', `url(${base}#${c.getAttribute('id')})`);\n            }\n            else {\n                node.setAttribute('clip-path', `url(#${c.getAttribute('id')})`);\n            }\n        }\n        // Default is left\n        const anchor = align === ALIGN.RIGHT ? 'end' : align === ALIGN.CENTER ? 'middle' : 'start';\n        // Text-anchor start is default in SVG\n        if (anchor !== 'start') {\n            node.setAttribute('text-anchor', anchor);\n        }\n        if (!this.styleEnabled || size !== DEFAULT_FONTSIZE) {\n            node.setAttribute('font-size', `${size * s.scale}px`);\n        }\n        if (tr.length > 0) {\n            node.setAttribute('transform', tr);\n        }\n        if (s.alpha < 1) {\n            node.setAttribute('opacity', String(s.alpha));\n        }\n        const lines = str.split('\\n');\n        const lh = Math.round(size * LINE_HEIGHT);\n        const textHeight = size + (lines.length - 1) * lh;\n        let cy = y + size - 1;\n        if (valign === ALIGN.MIDDLE) {\n            if (overflow === 'fill') {\n                cy -= h / 2;\n            }\n            else {\n                const dy = (this.matchHtmlAlignment && clip && h > 0\n                    ? Math.min(textHeight, h)\n                    : textHeight) / 2;\n                cy -= dy;\n            }\n        }\n        else if (valign === ALIGN.BOTTOM) {\n            if (overflow === 'fill') {\n                cy -= h;\n            }\n            else {\n                const dy = this.matchHtmlAlignment && clip && h > 0 ? Math.min(textHeight, h) : textHeight;\n                cy -= dy + 1;\n            }\n        }\n        for (let i = 0; i < lines.length; i += 1) {\n            const line = trim(lines[i]);\n            // Workaround for bounding box of empty lines and spaces\n            if (line) {\n                const text = this.createElement('text');\n                // LATER: Match horizontal HTML alignment\n                text.setAttribute('x', String(this.format(x * s.scale) + this.textOffset));\n                text.setAttribute('y', String(this.format(cy * s.scale) + this.textOffset));\n                write(text, line);\n                node.appendChild(text);\n            }\n            cy += lh;\n        }\n        this.root.appendChild(node);\n        this.addTextBackground(node, str, x, y, w, overflow === 'fill' ? h : textHeight, align, valign, overflow);\n    }\n    /**\n     * Updates the text properties for the given node. (NOTE: For this to work in\n     * IE, the given node must be a text or tspan element.)\n     */\n    updateFont(node) {\n        const s = this.state;\n        if (s.fontColor && s.fontColor !== NONE) {\n            node.setAttribute('fill', s.fontColor);\n        }\n        if (!this.styleEnabled || s.fontFamily !== DEFAULT_FONTFAMILY) {\n            node.setAttribute('font-family', s.fontFamily);\n        }\n        const fontStyle = s.fontStyle;\n        matchBinaryMask(fontStyle, FONT.BOLD) && node.setAttribute('font-weight', 'bold');\n        matchBinaryMask(fontStyle, FONT.ITALIC) && node.setAttribute('font-style', 'italic');\n        const txtDecor = [];\n        matchBinaryMask(fontStyle, FONT.UNDERLINE) && txtDecor.push('underline');\n        matchBinaryMask(fontStyle, FONT.STRIKETHROUGH) && txtDecor.push('line-through');\n        txtDecor.length > 0 && node.setAttribute('text-decoration', txtDecor.join(' '));\n    }\n    /**\n     * Background color and border\n     */\n    addTextBackground(node, str, x, y, w, h, align, valign, overflow) {\n        const s = this.state;\n        if (s.fontBackgroundColor != null || s.fontBorderColor != null) {\n            let bbox = null;\n            if (overflow === 'fill' || overflow === 'width') {\n                if (align === ALIGN.CENTER) {\n                    x -= w / 2;\n                }\n                else if (align === ALIGN.RIGHT) {\n                    x -= w;\n                }\n                if (valign === ALIGN.MIDDLE) {\n                    y -= h / 2;\n                }\n                else if (valign === ALIGN.BOTTOM) {\n                    y -= h;\n                }\n                bbox = new Rectangle((x + 1) * s.scale, y * s.scale, (w - 2) * s.scale, (h + 2) * s.scale);\n                // @ts-ignore check for getBBox\n            }\n            else if (node.getBBox != null && this.root.ownerDocument === document) {\n                // Uses getBBox only if inside document for correct size\n                try {\n                    // @ts-ignore getBBox exists\n                    bbox = node.getBBox();\n                    bbox = new Rectangle(bbox.x, bbox.y + 1, bbox.width, bbox.height + 0);\n                }\n                catch (e) {\n                    // Ignores NS_ERROR_FAILURE in FF if container display is none.\n                }\n            }\n            if (bbox == null || bbox.width === 0 || bbox.height === 0) {\n                // Computes size if not in document or no getBBox available\n                const div = document.createElement('div');\n                // Wrapping and clipping can be ignored here\n                div.style.lineHeight = ABSOLUTE_LINE_HEIGHT\n                    ? `${s.fontSize * LINE_HEIGHT}px`\n                    : String(LINE_HEIGHT);\n                div.style.fontSize = `${s.fontSize}px`;\n                div.style.fontFamily = s.fontFamily;\n                div.style.whiteSpace = 'nowrap';\n                div.style.position = 'absolute';\n                div.style.visibility = 'hidden';\n                div.style.display = 'inline-block';\n                matchBinaryMask(s.fontStyle, FONT.BOLD) && (div.style.fontWeight = 'bold');\n                matchBinaryMask(s.fontStyle, FONT.ITALIC) && (div.style.fontStyle = 'italic');\n                str = htmlEntities(str, false);\n                div.innerHTML = str.replace(/\\n/g, '<br/>');\n                document.body.appendChild(div);\n                const w = div.offsetWidth;\n                const h = div.offsetHeight;\n                document.body.removeChild(div);\n                if (align === ALIGN.CENTER) {\n                    x -= w / 2;\n                }\n                else if (align === ALIGN.RIGHT) {\n                    x -= w;\n                }\n                if (valign === ALIGN.MIDDLE) {\n                    y -= h / 2;\n                }\n                else if (valign === ALIGN.BOTTOM) {\n                    y -= h;\n                }\n                bbox = new Rectangle((x + 1) * s.scale, (y + 2) * s.scale, w * s.scale, (h + 1) * s.scale);\n            }\n            if (bbox != null) {\n                const n = this.createElement('rect');\n                n.setAttribute('fill', s.fontBackgroundColor || 'none');\n                n.setAttribute('stroke', s.fontBorderColor || 'none');\n                n.setAttribute('x', String(Math.floor(bbox.x - 1)));\n                n.setAttribute('y', String(Math.floor(bbox.y - 1)));\n                n.setAttribute('width', String(Math.ceil(bbox.width + 2)));\n                n.setAttribute('height', String(Math.ceil(bbox.height)));\n                const sw = s.fontBorderColor ? Math.max(1, this.format(s.scale)) : 0;\n                n.setAttribute('stroke-width', String(sw));\n                // Workaround for crisp rendering - only required if not exporting\n                if (this.root?.ownerDocument === document && mod(sw, 2) === 1) {\n                    n.setAttribute('transform', 'translate(0.5, 0.5)');\n                }\n                node.insertBefore(n, node.firstChild);\n            }\n        }\n    }\n    /**\n     * Paints the outline of the current path.\n     */\n    stroke() {\n        this.addNode(false, true);\n    }\n    /**\n     * Fills the current path.\n     */\n    fill() {\n        this.addNode(true, false);\n    }\n    /**\n     * Fills and paints the outline of the current path.\n     */\n    fillAndStroke() {\n        this.addNode(true, true);\n    }\n}\n/**\n * Updates existing DOM nodes for text rendering.\n */\nSvgCanvas2D.createCss = (w, h, align, valign, wrap, overflow, clip, bg, border, flex, block, scale, callback) => {\n    let item = `box-sizing: border-box; font-size: 0; text-align: ${align === ALIGN.LEFT ? 'left' : align === ALIGN.RIGHT ? 'right' : 'center'}; `;\n    const pt = getAlignmentAsPoint(align, valign);\n    let ofl = 'overflow: hidden; ';\n    let fw = 'width: 1px; ';\n    let fh = 'height: 1px; ';\n    let dx = pt.x * w;\n    let dy = pt.y * h;\n    if (clip) {\n        fw = `width: ${Math.round(w)}px; `;\n        item += `max-height: ${Math.round(h)}px; `;\n        dy = 0;\n    }\n    else if (overflow === 'fill') {\n        fw = `width: ${Math.round(w)}px; `;\n        fh = `height: ${Math.round(h)}px; `;\n        block += 'width: 100%; height: 100%; ';\n        item += fw + fh;\n    }\n    else if (overflow === 'width') {\n        fw = `width: ${Math.round(w)}px; `;\n        block += 'width: 100%; ';\n        item += fw;\n        dy = 0;\n        if (h > 0) {\n            item += `max-height: ${Math.round(h)}px; `;\n        }\n    }\n    else {\n        ofl = '';\n        dy = 0;\n    }\n    let bgc = '';\n    if (bg) {\n        bgc += `background-color: ${bg}; `;\n    }\n    if (border) {\n        bgc += `border: 1px solid ${border}; `;\n    }\n    if (ofl == '' || clip) {\n        block += bgc;\n    }\n    else {\n        item += bgc;\n    }\n    if (wrap && w > 0) {\n        block += `white-space: normal; word-wrap: ${WORD_WRAP}; `;\n        fw = `width: ${Math.round(w)}px; `;\n        if (ofl !== '' && overflow !== 'fill') {\n            dy = 0;\n        }\n    }\n    else {\n        block += 'white-space: nowrap; ';\n        if (ofl === '') {\n            dx = 0;\n        }\n    }\n    callback(dx, dy, flex + fw + fh, item + ofl, block, ofl);\n};\nexport default SvgCanvas2D;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
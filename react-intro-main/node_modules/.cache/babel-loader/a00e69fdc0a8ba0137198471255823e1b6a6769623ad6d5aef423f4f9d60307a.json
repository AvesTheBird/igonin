{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport EventSource from '../view/event/EventSource';\nimport { fit, getDocumentScrollOrigin } from '../util/styleUtils';\nimport EventObject from '../view/event/EventObject';\nimport Client from '../Client';\nimport InternalEvent from '../view/event/InternalEvent';\nimport { write } from '../util/domUtils';\nimport { isLeftMouseButton } from '../util/EventUtils';\n/**\n * Basic popup menu. To add a vertical scrollbar to a given submenu, the\n * following code can be used.\n *\n * ```javascript\n * let mxPopupMenuShowMenu = showMenu;\n * showMenu = ()=>\n * {\n *   mxPopupMenuShowMenu.apply(this, arguments);\n *\n *   this.div.style.overflowY = 'auto';\n *   this.div.style.overflowX = 'hidden';\n *   this.div.style.maxHeight = '160px';\n * };\n * ```\n *\n * Constructor: mxPopupMenu\n *\n * Constructs a popupmenu.\n *\n * Event: mxEvent.SHOW\n *\n * Fires after the menu has been shown in <popup>.\n */\nclass MaxPopupMenu extends EventSource {\n  constructor(factoryMethod) {\n    super();\n    this.activeRow = null;\n    this.eventReceiver = null;\n    /**\n     * URL of the image to be used for the submenu icon.\n     */\n    this.submenuImage = \"\".concat(Client.imageBasePath, \"/submenu.gif\");\n    /**\n     * Specifies the zIndex for the popupmenu and its shadow. Default is 1006.\n     */\n    this.zIndex = 10006;\n    /**\n     * Specifies if popupmenus should be activated by clicking the left mouse\n     * button. Default is false.\n     */\n    this.useLeftButtonForPopup = false;\n    /**\n     * Specifies if events are handled. Default is true.\n     */\n    this.enabled = true;\n    /**\n     * Contains the number of times <addItem> has been called for a new menu.\n     */\n    this.itemCount = 0;\n    /**\n     * Specifies if submenus should be expanded on mouseover. Default is false.\n     */\n    this.autoExpand = false;\n    /**\n     * Specifies if separators should only be added if a menu item follows them.\n     * Default is false.\n     */\n    this.smartSeparators = false;\n    /**\n     * Specifies if any labels should be visible. Default is true.\n     */\n    this.labels = true;\n    this.willAddSeparator = false;\n    this.containsItems = false;\n    if (factoryMethod) {\n      this.factoryMethod = factoryMethod;\n    }\n    // Adds the inner table\n    this.table = document.createElement('table');\n    this.table.className = 'mxPopupMenu';\n    this.tbody = document.createElement('tbody');\n    this.table.appendChild(this.tbody);\n    // Adds the outer div\n    this.div = document.createElement('div');\n    this.div.className = 'mxPopupMenu';\n    this.div.style.display = 'inline';\n    this.div.style.zIndex = String(this.zIndex);\n    this.div.appendChild(this.table);\n    // Disables the context menu on the outer div\n    InternalEvent.disableContextMenu(this.div);\n  }\n  /**\n   * Returns true if events are handled. This implementation\n   * returns <enabled>.\n   */\n  isEnabled() {\n    return this.enabled;\n  }\n  /**\n   * Enables or disables event handling. This implementation\n   * updates <enabled>.\n   */\n  setEnabled(enabled) {\n    this.enabled = enabled;\n  }\n  /**\n   * Returns true if the given event is a popupmenu trigger for the optional\n   * given cell.\n   *\n   * @param me {@link MouseEvent} that represents the mouse event.\n   */\n  isPopupTrigger(me) {\n    return me.isPopupTrigger() || this.useLeftButtonForPopup && isLeftMouseButton(me.getEvent());\n  }\n  /**\n   * Adds the given item to the given parent item. If no parent item is specified\n   * then the item is added to the top-level menu. The return value may be used\n   * as the parent argument, ie. as a submenu item. The return value is the table\n   * row that represents the item.\n   *\n   * Paramters:\n   *\n   * title - String that represents the title of the menu item.\n   * image - Optional URL for the image icon.\n   * funct - Function associated that takes a mouseup or touchend event.\n   * parent - Optional item returned by <addItem>.\n   * iconCls - Optional string that represents the CSS class for the image icon.\n   * IconsCls is ignored if image is given.\n   * enabled - Optional boolean indicating if the item is enabled. Default is true.\n   * active - Optional boolean indicating if the menu should implement any event handling.\n   * Default is true.\n   * noHover - Optional boolean to disable hover state.\n   */\n  addItem(title, image, funct) {\n    var _parent, _parent$tbody;\n    let parent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    let iconCls = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    let enabled = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n    let active = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : true;\n    let noHover = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;\n    parent = (_parent = parent) !== null && _parent !== void 0 ? _parent : this;\n    this.itemCount++;\n    // Smart separators only added if element contains items\n    if (parent.willAddSeparator) {\n      if (parent.containsItems) {\n        this.addSeparator(parent, true);\n      }\n      parent.willAddSeparator = false;\n    }\n    parent.containsItems = true;\n    const tr = document.createElement('tr');\n    tr.className = 'mxPopupMenuItem';\n    const col1 = document.createElement('td');\n    col1.className = 'mxPopupMenuIcon';\n    // Adds the given image into the first column\n    if (image) {\n      const img = document.createElement('img');\n      img.src = image;\n      col1.appendChild(img);\n    } else if (iconCls) {\n      const div = document.createElement('div');\n      div.className = iconCls;\n      col1.appendChild(div);\n    }\n    tr.appendChild(col1);\n    if (this.labels) {\n      const col2 = document.createElement('td');\n      col2.className = \"mxPopupMenuItem\".concat(!enabled ? ' mxDisabled' : '');\n      write(col2, title);\n      col2.align = 'left';\n      tr.appendChild(col2);\n      const col3 = document.createElement('td');\n      col3.className = \"mxPopupMenuItem\".concat(!enabled ? ' mxDisabled' : '');\n      col3.style.paddingRight = '6px';\n      col3.style.textAlign = 'right';\n      tr.appendChild(col3);\n      if (parent.div == null) {\n        this.createSubmenu(parent);\n      }\n    }\n    (_parent$tbody = parent.tbody) === null || _parent$tbody === void 0 || _parent$tbody.appendChild(tr);\n    if (active && enabled) {\n      InternalEvent.addGestureListeners(tr, evt => {\n        this.eventReceiver = tr;\n        if (parent && parent.activeRow != tr && parent.activeRow != parent) {\n          if (parent.activeRow != null && parent.activeRow.div.parentNode != null) {\n            this.hideSubmenu(parent);\n          }\n          if (tr.div != null) {\n            this.showSubmenu(parent, tr);\n            parent.activeRow = tr;\n          }\n        }\n        InternalEvent.consume(evt);\n      }, evt => {\n        if (parent && parent.activeRow != tr && parent.activeRow != parent) {\n          if (parent.activeRow != null && parent.activeRow.div.parentNode != null) {\n            this.hideSubmenu(parent);\n          }\n          if (this.autoExpand && tr.div != null) {\n            this.showSubmenu(parent, tr);\n            parent.activeRow = tr;\n          }\n        }\n        // Sets hover style because TR in IE doesn't have hover\n        if (!noHover) {\n          tr.className = 'mxPopupMenuItemHover';\n        }\n      }, evt => {\n        // EventReceiver avoids clicks on a submenu item\n        // which has just been shown in the mousedown\n        if (this.eventReceiver == tr) {\n          if (parent && parent.activeRow != tr) {\n            this.hideMenu();\n          }\n          if (funct != null) {\n            funct(evt);\n          }\n        }\n        this.eventReceiver = null;\n        InternalEvent.consume(evt);\n      });\n      // Resets hover style because TR in IE doesn't have hover\n      if (!noHover) {\n        InternalEvent.addListener(tr, 'mouseout', evt => {\n          tr.className = 'mxPopupMenuItem';\n        });\n      }\n    }\n    return tr;\n  }\n  /**\n   * Adds a checkmark to the given menuitem.\n   */\n  addCheckmark(item, img) {\n    if (item.firstChild) {\n      const td = item.firstChild.nextSibling;\n      td.style.backgroundImage = \"url('\".concat(img, \"')\");\n      td.style.backgroundRepeat = 'no-repeat';\n      td.style.backgroundPosition = '2px 50%';\n    }\n  }\n  /**\n   * Creates the nodes required to add submenu items inside the given parent\n   * item. This is called in <addItem> if a parent item is used for the first\n   * time. This adds various DOM nodes and a <submenuImage> to the parent.\n   *\n   * @param parent An item returned by <addItem>.\n   */\n  createSubmenu(parent) {\n    var _parent$firstChild;\n    parent.table = document.createElement('table');\n    parent.table.className = 'mxPopupMenu';\n    parent.tbody = document.createElement('tbody');\n    parent.table.appendChild(parent.tbody);\n    parent.div = document.createElement('div');\n    parent.div.className = 'mxPopupMenu';\n    parent.div.style.position = 'absolute';\n    parent.div.style.display = 'inline';\n    parent.div.style.zIndex = String(this.zIndex);\n    parent.div.appendChild(parent.table);\n    const img = document.createElement('img');\n    img.setAttribute('src', this.submenuImage);\n    // Last column of the submenu item in the parent menu\n    if ((_parent$firstChild = parent.firstChild) !== null && _parent$firstChild !== void 0 && (_parent$firstChild = _parent$firstChild.nextSibling) !== null && _parent$firstChild !== void 0 && _parent$firstChild.nextSibling) {\n      const td = parent.firstChild.nextSibling.nextSibling;\n      td.appendChild(img);\n    }\n  }\n  /**\n   * Shows the submenu inside the given parent row.\n   */\n  showSubmenu(parent, row) {\n    if (row.div != null) {\n      row.div.style.left = \"\".concat(parent.div.offsetLeft + row.offsetLeft + row.offsetWidth - 1, \"px\");\n      row.div.style.top = \"\".concat(parent.div.offsetTop + row.offsetTop, \"px\");\n      document.body.appendChild(row.div);\n      // Moves the submenu to the left side if there is no space\n      const left = row.div.offsetLeft;\n      const width = row.div.offsetWidth;\n      const offset = getDocumentScrollOrigin(document);\n      const b = document.body;\n      const d = document.documentElement;\n      const right = offset.x + (b.clientWidth || d.clientWidth);\n      if (left + width > right) {\n        row.div.style.left = \"\".concat(Math.max(0, parent.div.offsetLeft - width - 6), \"px\");\n      }\n      fit(row.div);\n    }\n  }\n  /**\n   * Adds a horizontal separator in the given parent item or the top-level menu\n   * if no parent is specified.\n   *\n   * @param parent Optional item returned by <addItem>.\n   * @param force Optional boolean to ignore <smartSeparators>. Default is false.\n   */\n  addSeparator() {\n    let parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    // Defaults to this instance if no parent (submenu) specified, but\n    // all the necessary DOM elements are present as in PopupMenuItem\n    parent = parent || this;\n    if (this.smartSeparators && !force) {\n      parent.willAddSeparator = true;\n    } else if (parent.tbody) {\n      parent.willAddSeparator = false;\n      const tr = document.createElement('tr');\n      const col1 = document.createElement('td');\n      col1.className = 'mxPopupMenuIcon';\n      col1.style.padding = '0 0 0 0px';\n      tr.appendChild(col1);\n      const col2 = document.createElement('td');\n      col2.style.padding = '0 0 0 0px';\n      col2.setAttribute('colSpan', '2');\n      const hr = document.createElement('hr');\n      hr.setAttribute('size', '1');\n      col2.appendChild(hr);\n      tr.appendChild(col2);\n      parent.tbody.appendChild(tr);\n    }\n  }\n  /**\n   * Shows the popup menu for the given event and cell.\n   *\n   * Example:\n   *\n   * ```javascript\n   * graph.getPlugin('PanningHandler').popup(x, y, cell, evt)\n   * {\n   *   mxUtils.alert('Hello, World!');\n   * }\n   * ```\n   */\n  popup(x, y, cell, evt) {\n    if (this.div != null && this.tbody != null && this.factoryMethod != null) {\n      this.div.style.left = \"\".concat(x, \"px\");\n      this.div.style.top = \"\".concat(y, \"px\");\n      // Removes all child nodes from the existing menu\n      while (this.tbody.firstChild != null) {\n        InternalEvent.release(this.tbody.firstChild);\n        this.tbody.removeChild(this.tbody.firstChild);\n      }\n      this.itemCount = 0;\n      this.factoryMethod(this, cell, evt);\n      if (this.itemCount > 0) {\n        this.showMenu();\n        this.fireEvent(new EventObject(InternalEvent.SHOW));\n      }\n    }\n  }\n  /**\n   * Returns true if the menu is showing.\n   */\n  isMenuShowing() {\n    return this.div != null && this.div.parentNode == document.body;\n  }\n  /**\n   * Shows the menu.\n   */\n  showMenu() {\n    // Fits the div inside the viewport\n    document.body.appendChild(this.div);\n    fit(this.div);\n  }\n  /**\n   * Removes the menu and all submenus.\n   */\n  hideMenu() {\n    if (this.div != null) {\n      if (this.div.parentNode != null) {\n        this.div.parentNode.removeChild(this.div);\n      }\n      this.hideSubmenu(this);\n      this.containsItems = false;\n      this.fireEvent(new EventObject(InternalEvent.HIDE));\n    }\n  }\n  /**\n   * Removes all submenus inside the given parent.\n   *\n   * @param parent An item returned by <addItem>.\n   */\n  hideSubmenu(parent) {\n    if (parent.activeRow != null) {\n      this.hideSubmenu(parent.activeRow);\n      if (parent.activeRow.div.parentNode != null) {\n        parent.activeRow.div.parentNode.removeChild(parent.activeRow.div);\n      }\n      parent.activeRow = null;\n    }\n  }\n  /**\n   * Destroys the handler and all its resources and DOM nodes.\n   */\n  destroy() {\n    if (this.div != null) {\n      InternalEvent.release(this.div);\n      if (this.div.parentNode != null) {\n        this.div.parentNode.removeChild(this.div);\n      }\n    }\n  }\n}\nexport default MaxPopupMenu;","map":{"version":3,"names":["EventSource","fit","getDocumentScrollOrigin","EventObject","Client","InternalEvent","write","isLeftMouseButton","MaxPopupMenu","constructor","factoryMethod","activeRow","eventReceiver","submenuImage","concat","imageBasePath","zIndex","useLeftButtonForPopup","enabled","itemCount","autoExpand","smartSeparators","labels","willAddSeparator","containsItems","table","document","createElement","className","tbody","appendChild","div","style","display","String","disableContextMenu","isEnabled","setEnabled","isPopupTrigger","me","getEvent","addItem","title","image","funct","_parent","_parent$tbody","parent","arguments","length","undefined","iconCls","active","noHover","addSeparator","tr","col1","img","src","col2","align","col3","paddingRight","textAlign","createSubmenu","addGestureListeners","evt","parentNode","hideSubmenu","showSubmenu","consume","hideMenu","addListener","addCheckmark","item","firstChild","td","nextSibling","backgroundImage","backgroundRepeat","backgroundPosition","_parent$firstChild","position","setAttribute","row","left","offsetLeft","offsetWidth","top","offsetTop","body","width","offset","b","d","documentElement","right","x","clientWidth","Math","max","force","padding","hr","popup","y","cell","release","removeChild","showMenu","fireEvent","SHOW","isMenuShowing","HIDE","destroy"],"sources":["D:/ospanel/domains/проекты open server/old/react/react-intro-main/node_modules/@maxgraph/core/dist/gui/MaxPopupMenu.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport EventSource from '../view/event/EventSource';\nimport { fit, getDocumentScrollOrigin } from '../util/styleUtils';\nimport EventObject from '../view/event/EventObject';\nimport Client from '../Client';\nimport InternalEvent from '../view/event/InternalEvent';\nimport { write } from '../util/domUtils';\nimport { isLeftMouseButton } from '../util/EventUtils';\n/**\n * Basic popup menu. To add a vertical scrollbar to a given submenu, the\n * following code can be used.\n *\n * ```javascript\n * let mxPopupMenuShowMenu = showMenu;\n * showMenu = ()=>\n * {\n *   mxPopupMenuShowMenu.apply(this, arguments);\n *\n *   this.div.style.overflowY = 'auto';\n *   this.div.style.overflowX = 'hidden';\n *   this.div.style.maxHeight = '160px';\n * };\n * ```\n *\n * Constructor: mxPopupMenu\n *\n * Constructs a popupmenu.\n *\n * Event: mxEvent.SHOW\n *\n * Fires after the menu has been shown in <popup>.\n */\nclass MaxPopupMenu extends EventSource {\n    constructor(factoryMethod) {\n        super();\n        this.activeRow = null;\n        this.eventReceiver = null;\n        /**\n         * URL of the image to be used for the submenu icon.\n         */\n        this.submenuImage = `${Client.imageBasePath}/submenu.gif`;\n        /**\n         * Specifies the zIndex for the popupmenu and its shadow. Default is 1006.\n         */\n        this.zIndex = 10006;\n        /**\n         * Specifies if popupmenus should be activated by clicking the left mouse\n         * button. Default is false.\n         */\n        this.useLeftButtonForPopup = false;\n        /**\n         * Specifies if events are handled. Default is true.\n         */\n        this.enabled = true;\n        /**\n         * Contains the number of times <addItem> has been called for a new menu.\n         */\n        this.itemCount = 0;\n        /**\n         * Specifies if submenus should be expanded on mouseover. Default is false.\n         */\n        this.autoExpand = false;\n        /**\n         * Specifies if separators should only be added if a menu item follows them.\n         * Default is false.\n         */\n        this.smartSeparators = false;\n        /**\n         * Specifies if any labels should be visible. Default is true.\n         */\n        this.labels = true;\n        this.willAddSeparator = false;\n        this.containsItems = false;\n        if (factoryMethod) {\n            this.factoryMethod = factoryMethod;\n        }\n        // Adds the inner table\n        this.table = document.createElement('table');\n        this.table.className = 'mxPopupMenu';\n        this.tbody = document.createElement('tbody');\n        this.table.appendChild(this.tbody);\n        // Adds the outer div\n        this.div = document.createElement('div');\n        this.div.className = 'mxPopupMenu';\n        this.div.style.display = 'inline';\n        this.div.style.zIndex = String(this.zIndex);\n        this.div.appendChild(this.table);\n        // Disables the context menu on the outer div\n        InternalEvent.disableContextMenu(this.div);\n    }\n    /**\n     * Returns true if events are handled. This implementation\n     * returns <enabled>.\n     */\n    isEnabled() {\n        return this.enabled;\n    }\n    /**\n     * Enables or disables event handling. This implementation\n     * updates <enabled>.\n     */\n    setEnabled(enabled) {\n        this.enabled = enabled;\n    }\n    /**\n     * Returns true if the given event is a popupmenu trigger for the optional\n     * given cell.\n     *\n     * @param me {@link MouseEvent} that represents the mouse event.\n     */\n    isPopupTrigger(me) {\n        return (me.isPopupTrigger() ||\n            (this.useLeftButtonForPopup && isLeftMouseButton(me.getEvent())));\n    }\n    /**\n     * Adds the given item to the given parent item. If no parent item is specified\n     * then the item is added to the top-level menu. The return value may be used\n     * as the parent argument, ie. as a submenu item. The return value is the table\n     * row that represents the item.\n     *\n     * Paramters:\n     *\n     * title - String that represents the title of the menu item.\n     * image - Optional URL for the image icon.\n     * funct - Function associated that takes a mouseup or touchend event.\n     * parent - Optional item returned by <addItem>.\n     * iconCls - Optional string that represents the CSS class for the image icon.\n     * IconsCls is ignored if image is given.\n     * enabled - Optional boolean indicating if the item is enabled. Default is true.\n     * active - Optional boolean indicating if the menu should implement any event handling.\n     * Default is true.\n     * noHover - Optional boolean to disable hover state.\n     */\n    addItem(title, image, funct, parent = null, iconCls = null, enabled = true, active = true, noHover = false) {\n        parent = (parent ?? this);\n        this.itemCount++;\n        // Smart separators only added if element contains items\n        if (parent.willAddSeparator) {\n            if (parent.containsItems) {\n                this.addSeparator(parent, true);\n            }\n            parent.willAddSeparator = false;\n        }\n        parent.containsItems = true;\n        const tr = document.createElement('tr');\n        tr.className = 'mxPopupMenuItem';\n        const col1 = document.createElement('td');\n        col1.className = 'mxPopupMenuIcon';\n        // Adds the given image into the first column\n        if (image) {\n            const img = document.createElement('img');\n            img.src = image;\n            col1.appendChild(img);\n        }\n        else if (iconCls) {\n            const div = document.createElement('div');\n            div.className = iconCls;\n            col1.appendChild(div);\n        }\n        tr.appendChild(col1);\n        if (this.labels) {\n            const col2 = document.createElement('td');\n            col2.className = `mxPopupMenuItem${!enabled ? ' mxDisabled' : ''}`;\n            write(col2, title);\n            col2.align = 'left';\n            tr.appendChild(col2);\n            const col3 = document.createElement('td');\n            col3.className = `mxPopupMenuItem${!enabled ? ' mxDisabled' : ''}`;\n            col3.style.paddingRight = '6px';\n            col3.style.textAlign = 'right';\n            tr.appendChild(col3);\n            if (parent.div == null) {\n                this.createSubmenu(parent);\n            }\n        }\n        parent.tbody?.appendChild(tr);\n        if (active && enabled) {\n            InternalEvent.addGestureListeners(tr, (evt) => {\n                this.eventReceiver = tr;\n                if (parent && parent.activeRow != tr && parent.activeRow != parent) {\n                    if (parent.activeRow != null && parent.activeRow.div.parentNode != null) {\n                        this.hideSubmenu(parent);\n                    }\n                    if (tr.div != null) {\n                        this.showSubmenu(parent, tr);\n                        parent.activeRow = tr;\n                    }\n                }\n                InternalEvent.consume(evt);\n            }, (evt) => {\n                if (parent && parent.activeRow != tr && parent.activeRow != parent) {\n                    if (parent.activeRow != null && parent.activeRow.div.parentNode != null) {\n                        this.hideSubmenu(parent);\n                    }\n                    if (this.autoExpand && tr.div != null) {\n                        this.showSubmenu(parent, tr);\n                        parent.activeRow = tr;\n                    }\n                }\n                // Sets hover style because TR in IE doesn't have hover\n                if (!noHover) {\n                    tr.className = 'mxPopupMenuItemHover';\n                }\n            }, (evt) => {\n                // EventReceiver avoids clicks on a submenu item\n                // which has just been shown in the mousedown\n                if (this.eventReceiver == tr) {\n                    if (parent && parent.activeRow != tr) {\n                        this.hideMenu();\n                    }\n                    if (funct != null) {\n                        funct(evt);\n                    }\n                }\n                this.eventReceiver = null;\n                InternalEvent.consume(evt);\n            });\n            // Resets hover style because TR in IE doesn't have hover\n            if (!noHover) {\n                InternalEvent.addListener(tr, 'mouseout', (evt) => {\n                    tr.className = 'mxPopupMenuItem';\n                });\n            }\n        }\n        return tr;\n    }\n    /**\n     * Adds a checkmark to the given menuitem.\n     */\n    addCheckmark(item, img) {\n        if (item.firstChild) {\n            const td = item.firstChild.nextSibling;\n            td.style.backgroundImage = `url('${img}')`;\n            td.style.backgroundRepeat = 'no-repeat';\n            td.style.backgroundPosition = '2px 50%';\n        }\n    }\n    /**\n     * Creates the nodes required to add submenu items inside the given parent\n     * item. This is called in <addItem> if a parent item is used for the first\n     * time. This adds various DOM nodes and a <submenuImage> to the parent.\n     *\n     * @param parent An item returned by <addItem>.\n     */\n    createSubmenu(parent) {\n        parent.table = document.createElement('table');\n        parent.table.className = 'mxPopupMenu';\n        parent.tbody = document.createElement('tbody');\n        parent.table.appendChild(parent.tbody);\n        parent.div = document.createElement('div');\n        parent.div.className = 'mxPopupMenu';\n        parent.div.style.position = 'absolute';\n        parent.div.style.display = 'inline';\n        parent.div.style.zIndex = String(this.zIndex);\n        parent.div.appendChild(parent.table);\n        const img = document.createElement('img');\n        img.setAttribute('src', this.submenuImage);\n        // Last column of the submenu item in the parent menu\n        if (parent.firstChild?.nextSibling?.nextSibling) {\n            const td = parent.firstChild.nextSibling.nextSibling;\n            td.appendChild(img);\n        }\n    }\n    /**\n     * Shows the submenu inside the given parent row.\n     */\n    showSubmenu(parent, row) {\n        if (row.div != null) {\n            row.div.style.left = `${parent.div.offsetLeft + row.offsetLeft + row.offsetWidth - 1}px`;\n            row.div.style.top = `${parent.div.offsetTop + row.offsetTop}px`;\n            document.body.appendChild(row.div);\n            // Moves the submenu to the left side if there is no space\n            const left = row.div.offsetLeft;\n            const width = row.div.offsetWidth;\n            const offset = getDocumentScrollOrigin(document);\n            const b = document.body;\n            const d = document.documentElement;\n            const right = offset.x + (b.clientWidth || d.clientWidth);\n            if (left + width > right) {\n                row.div.style.left = `${Math.max(0, parent.div.offsetLeft - width - 6)}px`;\n            }\n            fit(row.div);\n        }\n    }\n    /**\n     * Adds a horizontal separator in the given parent item or the top-level menu\n     * if no parent is specified.\n     *\n     * @param parent Optional item returned by <addItem>.\n     * @param force Optional boolean to ignore <smartSeparators>. Default is false.\n     */\n    addSeparator(parent = null, force = false) {\n        // Defaults to this instance if no parent (submenu) specified, but\n        // all the necessary DOM elements are present as in PopupMenuItem\n        parent = (parent || this);\n        if (this.smartSeparators && !force) {\n            parent.willAddSeparator = true;\n        }\n        else if (parent.tbody) {\n            parent.willAddSeparator = false;\n            const tr = document.createElement('tr');\n            const col1 = document.createElement('td');\n            col1.className = 'mxPopupMenuIcon';\n            col1.style.padding = '0 0 0 0px';\n            tr.appendChild(col1);\n            const col2 = document.createElement('td');\n            col2.style.padding = '0 0 0 0px';\n            col2.setAttribute('colSpan', '2');\n            const hr = document.createElement('hr');\n            hr.setAttribute('size', '1');\n            col2.appendChild(hr);\n            tr.appendChild(col2);\n            parent.tbody.appendChild(tr);\n        }\n    }\n    /**\n     * Shows the popup menu for the given event and cell.\n     *\n     * Example:\n     *\n     * ```javascript\n     * graph.getPlugin('PanningHandler').popup(x, y, cell, evt)\n     * {\n     *   mxUtils.alert('Hello, World!');\n     * }\n     * ```\n     */\n    popup(x, y, cell, evt) {\n        if (this.div != null && this.tbody != null && this.factoryMethod != null) {\n            this.div.style.left = `${x}px`;\n            this.div.style.top = `${y}px`;\n            // Removes all child nodes from the existing menu\n            while (this.tbody.firstChild != null) {\n                InternalEvent.release(this.tbody.firstChild);\n                this.tbody.removeChild(this.tbody.firstChild);\n            }\n            this.itemCount = 0;\n            this.factoryMethod(this, cell, evt);\n            if (this.itemCount > 0) {\n                this.showMenu();\n                this.fireEvent(new EventObject(InternalEvent.SHOW));\n            }\n        }\n    }\n    /**\n     * Returns true if the menu is showing.\n     */\n    isMenuShowing() {\n        return this.div != null && this.div.parentNode == document.body;\n    }\n    /**\n     * Shows the menu.\n     */\n    showMenu() {\n        // Fits the div inside the viewport\n        document.body.appendChild(this.div);\n        fit(this.div);\n    }\n    /**\n     * Removes the menu and all submenus.\n     */\n    hideMenu() {\n        if (this.div != null) {\n            if (this.div.parentNode != null) {\n                this.div.parentNode.removeChild(this.div);\n            }\n            this.hideSubmenu(this);\n            this.containsItems = false;\n            this.fireEvent(new EventObject(InternalEvent.HIDE));\n        }\n    }\n    /**\n     * Removes all submenus inside the given parent.\n     *\n     * @param parent An item returned by <addItem>.\n     */\n    hideSubmenu(parent) {\n        if (parent.activeRow != null) {\n            this.hideSubmenu(parent.activeRow);\n            if (parent.activeRow.div.parentNode != null) {\n                parent.activeRow.div.parentNode.removeChild(parent.activeRow.div);\n            }\n            parent.activeRow = null;\n        }\n    }\n    /**\n     * Destroys the handler and all its resources and DOM nodes.\n     */\n    destroy() {\n        if (this.div != null) {\n            InternalEvent.release(this.div);\n            if (this.div.parentNode != null) {\n                this.div.parentNode.removeChild(this.div);\n            }\n        }\n    }\n}\nexport default MaxPopupMenu;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
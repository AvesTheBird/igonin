{"ast":null,"code":"var _CodeActionController;\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar CodeActionController_1;\nimport { getDomNodePagePosition } from '../../../../base/browser/dom.js';\nimport * as aria from '../../../../base/browser/ui/aria/aria.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Lazy } from '../../../../base/common/lazy.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ApplyCodeActionReason, applyCodeAction } from './codeAction.js';\nimport { CodeActionKeybindingResolver } from './codeActionKeybindingResolver.js';\nimport { toMenuItems } from './codeActionMenu.js';\nimport { LightBulbWidget } from './lightBulbWidget.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport { localize } from '../../../../nls.js';\nimport { IActionWidgetService } from '../../../../platform/actionWidget/browser/actionWidget.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IMarkerService } from '../../../../platform/markers/common/markers.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { editorFindMatchHighlight, editorFindMatchHighlightBorder } from '../../../../platform/theme/common/colorRegistry.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { CodeActionKind, CodeActionTriggerSource } from '../common/types.js';\nimport { CodeActionModel } from './codeActionModel.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nconst DECORATION_CLASS_NAME = 'quickfix-edit-highlight';\nlet CodeActionController = (_CodeActionController = class CodeActionController extends Disposable {\n  static get(editor) {\n    return editor.getContribution(CodeActionController_1.ID);\n  }\n  constructor(editor, markerService, contextKeyService, instantiationService, languageFeaturesService, progressService, _commandService, _configurationService, _actionWidgetService, _instantiationService, _telemetryService) {\n    super();\n    this._commandService = _commandService;\n    this._configurationService = _configurationService;\n    this._actionWidgetService = _actionWidgetService;\n    this._instantiationService = _instantiationService;\n    this._telemetryService = _telemetryService;\n    this._activeCodeActions = this._register(new MutableDisposable());\n    this._showDisabled = false;\n    this._disposed = false;\n    this._editor = editor;\n    this._model = this._register(new CodeActionModel(this._editor, languageFeaturesService.codeActionProvider, markerService, contextKeyService, progressService, _configurationService, this._telemetryService));\n    this._register(this._model.onDidChangeState(newState => this.update(newState)));\n    this._lightBulbWidget = new Lazy(() => {\n      const widget = this._editor.getContribution(LightBulbWidget.ID);\n      if (widget) {\n        this._register(widget.onClick(e => this.showCodeActionsFromLightbulb(e.actions, e)));\n      }\n      return widget;\n    });\n    this._resolver = instantiationService.createInstance(CodeActionKeybindingResolver);\n    this._register(this._editor.onDidLayoutChange(() => this._actionWidgetService.hide()));\n  }\n  dispose() {\n    this._disposed = true;\n    super.dispose();\n  }\n  async showCodeActionsFromLightbulb(actions, at) {\n    if (actions.allAIFixes && actions.validActions.length === 1) {\n      const actionItem = actions.validActions[0];\n      const command = actionItem.action.command;\n      if (command && command.id === 'inlineChat.start') {\n        if (command.arguments && command.arguments.length >= 1) {\n          command.arguments[0] = {\n            ...command.arguments[0],\n            autoSend: false\n          };\n        }\n      }\n      await this._applyCodeAction(actionItem, false, false, ApplyCodeActionReason.FromAILightbulb);\n      return;\n    }\n    await this.showCodeActionList(actions, at, {\n      includeDisabledActions: false,\n      fromLightbulb: true\n    });\n  }\n  showCodeActions(_trigger, actions, at) {\n    return this.showCodeActionList(actions, at, {\n      includeDisabledActions: false,\n      fromLightbulb: false\n    });\n  }\n  manualTriggerAtCurrentPosition(notAvailableMessage, triggerAction, filter, autoApply) {\n    var _MessageController$ge;\n    if (!this._editor.hasModel()) {\n      return;\n    }\n    (_MessageController$ge = MessageController.get(this._editor)) === null || _MessageController$ge === void 0 || _MessageController$ge.closeMessage();\n    const triggerPosition = this._editor.getPosition();\n    this._trigger({\n      type: 1 /* CodeActionTriggerType.Invoke */,\n      triggerAction,\n      filter,\n      autoApply,\n      context: {\n        notAvailableMessage,\n        position: triggerPosition\n      }\n    });\n  }\n  _trigger(trigger) {\n    return this._model.trigger(trigger);\n  }\n  async _applyCodeAction(action, retrigger, preview, actionReason) {\n    try {\n      await this._instantiationService.invokeFunction(applyCodeAction, action, actionReason, {\n        preview,\n        editor: this._editor\n      });\n    } finally {\n      if (retrigger) {\n        this._trigger({\n          type: 2 /* CodeActionTriggerType.Auto */,\n          triggerAction: CodeActionTriggerSource.QuickFix,\n          filter: {}\n        });\n      }\n    }\n  }\n  hideLightBulbWidget() {\n    var _this$_lightBulbWidge, _this$_lightBulbWidge2;\n    (_this$_lightBulbWidge = this._lightBulbWidget.rawValue) === null || _this$_lightBulbWidge === void 0 || _this$_lightBulbWidge.hide();\n    (_this$_lightBulbWidge2 = this._lightBulbWidget.rawValue) === null || _this$_lightBulbWidge2 === void 0 || _this$_lightBulbWidge2.gutterHide();\n  }\n  async update(newState) {\n    var _this$_lightBulbWidge3;\n    if (newState.type !== 1 /* CodeActionsState.Type.Triggered */) {\n      this.hideLightBulbWidget();\n      return;\n    }\n    let actions;\n    try {\n      actions = await newState.actions;\n    } catch (e) {\n      onUnexpectedError(e);\n      return;\n    }\n    if (this._disposed) {\n      return;\n    }\n    const selection = this._editor.getSelection();\n    if ((selection === null || selection === void 0 ? void 0 : selection.startLineNumber) !== newState.position.lineNumber) {\n      return;\n    }\n    (_this$_lightBulbWidge3 = this._lightBulbWidget.value) === null || _this$_lightBulbWidge3 === void 0 || _this$_lightBulbWidge3.update(actions, newState.trigger, newState.position);\n    if (newState.trigger.type === 1 /* CodeActionTriggerType.Invoke */) {\n      var _newState$trigger$fil, _newState$trigger$fil2;\n      if ((_newState$trigger$fil = newState.trigger.filter) !== null && _newState$trigger$fil !== void 0 && _newState$trigger$fil.include) {\n        // Triggered for specific scope\n        // Check to see if we want to auto apply.\n        const validActionToApply = this.tryGetValidActionToApply(newState.trigger, actions);\n        if (validActionToApply) {\n          try {\n            this.hideLightBulbWidget();\n            await this._applyCodeAction(validActionToApply, false, false, ApplyCodeActionReason.FromCodeActions);\n          } finally {\n            actions.dispose();\n          }\n          return;\n        }\n        // Check to see if there is an action that we would have applied were it not invalid\n        if (newState.trigger.context) {\n          const invalidAction = this.getInvalidActionThatWouldHaveBeenApplied(newState.trigger, actions);\n          if (invalidAction && invalidAction.action.disabled) {\n            var _MessageController$ge2;\n            (_MessageController$ge2 = MessageController.get(this._editor)) === null || _MessageController$ge2 === void 0 || _MessageController$ge2.showMessage(invalidAction.action.disabled, newState.trigger.context.position);\n            actions.dispose();\n            return;\n          }\n        }\n      }\n      const includeDisabledActions = !!((_newState$trigger$fil2 = newState.trigger.filter) !== null && _newState$trigger$fil2 !== void 0 && _newState$trigger$fil2.include);\n      if (newState.trigger.context) {\n        if (!actions.allActions.length || !includeDisabledActions && !actions.validActions.length) {\n          var _MessageController$ge3;\n          (_MessageController$ge3 = MessageController.get(this._editor)) === null || _MessageController$ge3 === void 0 || _MessageController$ge3.showMessage(newState.trigger.context.notAvailableMessage, newState.trigger.context.position);\n          this._activeCodeActions.value = actions;\n          actions.dispose();\n          return;\n        }\n      }\n      this._activeCodeActions.value = actions;\n      this.showCodeActionList(actions, this.toCoords(newState.position), {\n        includeDisabledActions,\n        fromLightbulb: false\n      });\n    } else {\n      // auto magically triggered\n      if (this._actionWidgetService.isVisible) {\n        // TODO: Figure out if we should update the showing menu?\n        actions.dispose();\n      } else {\n        this._activeCodeActions.value = actions;\n      }\n    }\n  }\n  getInvalidActionThatWouldHaveBeenApplied(trigger, actions) {\n    if (!actions.allActions.length) {\n      return undefined;\n    }\n    if (trigger.autoApply === \"first\" /* CodeActionAutoApply.First */ && actions.validActions.length === 0 || trigger.autoApply === \"ifSingle\" /* CodeActionAutoApply.IfSingle */ && actions.allActions.length === 1) {\n      return actions.allActions.find(_ref => {\n        let {\n          action\n        } = _ref;\n        return action.disabled;\n      });\n    }\n    return undefined;\n  }\n  tryGetValidActionToApply(trigger, actions) {\n    if (!actions.validActions.length) {\n      return undefined;\n    }\n    if (trigger.autoApply === \"first\" /* CodeActionAutoApply.First */ && actions.validActions.length > 0 || trigger.autoApply === \"ifSingle\" /* CodeActionAutoApply.IfSingle */ && actions.validActions.length === 1) {\n      return actions.validActions[0];\n    }\n    return undefined;\n  }\n  async showCodeActionList(actions, at, options) {\n    const currentDecorations = this._editor.createDecorationsCollection();\n    const editorDom = this._editor.getDomNode();\n    if (!editorDom) {\n      return;\n    }\n    const actionsToShow = options.includeDisabledActions && (this._showDisabled || actions.validActions.length === 0) ? actions.allActions : actions.validActions;\n    if (!actionsToShow.length) {\n      return;\n    }\n    const anchor = Position.isIPosition(at) ? this.toCoords(at) : at;\n    const delegate = {\n      onSelect: async (action, preview) => {\n        this._applyCodeAction(action, /* retrigger */true, !!preview, options.fromLightbulb ? ApplyCodeActionReason.FromAILightbulb : ApplyCodeActionReason.FromCodeActions);\n        this._actionWidgetService.hide(false);\n        currentDecorations.clear();\n      },\n      onHide: didCancel => {\n        var _this$_editor;\n        (_this$_editor = this._editor) === null || _this$_editor === void 0 || _this$_editor.focus();\n        currentDecorations.clear();\n      },\n      onHover: async (action, token) => {\n        var _action$action$edit;\n        if (token.isCancellationRequested) {\n          return;\n        }\n        let canPreview = false;\n        const actionKind = action.action.kind;\n        if (actionKind) {\n          const hierarchicalKind = new HierarchicalKind(actionKind);\n          const refactorKinds = [CodeActionKind.RefactorExtract, CodeActionKind.RefactorInline, CodeActionKind.RefactorRewrite, CodeActionKind.RefactorMove, CodeActionKind.Source];\n          canPreview = refactorKinds.some(refactorKind => refactorKind.contains(hierarchicalKind));\n        }\n        return {\n          canPreview: canPreview || !!((_action$action$edit = action.action.edit) !== null && _action$action$edit !== void 0 && _action$action$edit.edits.length)\n        };\n      },\n      onFocus: action => {\n        if (action && action.action) {\n          const ranges = action.action.ranges;\n          const diagnostics = action.action.diagnostics;\n          currentDecorations.clear();\n          if (ranges && ranges.length > 0) {\n            // Handles case for `fix all` where there are multiple diagnostics.\n            const decorations = diagnostics && (diagnostics === null || diagnostics === void 0 ? void 0 : diagnostics.length) > 1 ? diagnostics.map(diagnostic => ({\n              range: diagnostic,\n              options: CodeActionController_1.DECORATION\n            })) : ranges.map(range => ({\n              range,\n              options: CodeActionController_1.DECORATION\n            }));\n            currentDecorations.set(decorations);\n          } else if (diagnostics && diagnostics.length > 0) {\n            const decorations = diagnostics.map(diagnostic => ({\n              range: diagnostic,\n              options: CodeActionController_1.DECORATION\n            }));\n            currentDecorations.set(decorations);\n            const diagnostic = diagnostics[0];\n            if (diagnostic.startLineNumber && diagnostic.startColumn) {\n              var _this$_editor$getMode;\n              const selectionText = (_this$_editor$getMode = this._editor.getModel()) === null || _this$_editor$getMode === void 0 || (_this$_editor$getMode = _this$_editor$getMode.getWordAtPosition({\n                lineNumber: diagnostic.startLineNumber,\n                column: diagnostic.startColumn\n              })) === null || _this$_editor$getMode === void 0 ? void 0 : _this$_editor$getMode.word;\n              aria.status(localize('editingNewSelection', \"Context: {0} at line {1} and column {2}.\", selectionText, diagnostic.startLineNumber, diagnostic.startColumn));\n            }\n          }\n        } else {\n          currentDecorations.clear();\n        }\n      }\n    };\n    this._actionWidgetService.show('codeActionWidget', true, toMenuItems(actionsToShow, this._shouldShowHeaders(), this._resolver.getResolver()), delegate, anchor, editorDom, this._getActionBarActions(actions, at, options));\n  }\n  toCoords(position) {\n    if (!this._editor.hasModel()) {\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n    this._editor.revealPosition(position, 1 /* ScrollType.Immediate */);\n    this._editor.render();\n    // Translate to absolute editor position\n    const cursorCoords = this._editor.getScrolledVisiblePosition(position);\n    const editorCoords = getDomNodePagePosition(this._editor.getDomNode());\n    const x = editorCoords.left + cursorCoords.left;\n    const y = editorCoords.top + cursorCoords.top + cursorCoords.height;\n    return {\n      x,\n      y\n    };\n  }\n  _shouldShowHeaders() {\n    var _this$_editor2;\n    const model = (_this$_editor2 = this._editor) === null || _this$_editor2 === void 0 ? void 0 : _this$_editor2.getModel();\n    return this._configurationService.getValue('editor.codeActionWidget.showHeaders', {\n      resource: model === null || model === void 0 ? void 0 : model.uri\n    });\n  }\n  _getActionBarActions(actions, at, options) {\n    if (options.fromLightbulb) {\n      return [];\n    }\n    const resultActions = actions.documentation.map(command => {\n      var _command$tooltip;\n      return {\n        id: command.id,\n        label: command.title,\n        tooltip: (_command$tooltip = command.tooltip) !== null && _command$tooltip !== void 0 ? _command$tooltip : '',\n        class: undefined,\n        enabled: true,\n        run: () => {\n          var _command$arguments;\n          return this._commandService.executeCommand(command.id, ...((_command$arguments = command.arguments) !== null && _command$arguments !== void 0 ? _command$arguments : []));\n        }\n      };\n    });\n    if (options.includeDisabledActions && actions.validActions.length > 0 && actions.allActions.length !== actions.validActions.length) {\n      resultActions.push(this._showDisabled ? {\n        id: 'hideMoreActions',\n        label: localize('hideMoreActions', 'Hide Disabled'),\n        enabled: true,\n        tooltip: '',\n        class: undefined,\n        run: () => {\n          this._showDisabled = false;\n          return this.showCodeActionList(actions, at, options);\n        }\n      } : {\n        id: 'showMoreActions',\n        label: localize('showMoreActions', 'Show Disabled'),\n        enabled: true,\n        tooltip: '',\n        class: undefined,\n        run: () => {\n          this._showDisabled = true;\n          return this.showCodeActionList(actions, at, options);\n        }\n      });\n    }\n    return resultActions;\n  }\n}, CodeActionController_1 = _CodeActionController, _CodeActionController.ID = 'editor.contrib.codeActionController', _CodeActionController.DECORATION = ModelDecorationOptions.register({\n  description: 'quickfix-highlight',\n  className: DECORATION_CLASS_NAME\n}), _CodeActionController);\nCodeActionController = CodeActionController_1 = __decorate([__param(1, IMarkerService), __param(2, IContextKeyService), __param(3, IInstantiationService), __param(4, ILanguageFeaturesService), __param(5, IEditorProgressService), __param(6, ICommandService), __param(7, IConfigurationService), __param(8, IActionWidgetService), __param(9, IInstantiationService), __param(10, ITelemetryService)], CodeActionController);\nexport { CodeActionController };\nregisterThemingParticipant((theme, collector) => {\n  const addBackgroundColorRule = (selector, color) => {\n    if (color) {\n      collector.addRule(\".monaco-editor \".concat(selector, \" { background-color: \").concat(color, \"; }\"));\n    }\n  };\n  addBackgroundColorRule('.quickfix-edit-highlight', theme.getColor(editorFindMatchHighlight));\n  const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\n  if (findMatchHighlightBorder) {\n    collector.addRule(\".monaco-editor .quickfix-edit-highlight { border: 1px \".concat(isHighContrast(theme.type) ? 'dotted' : 'solid', \" \").concat(findMatchHighlightBorder, \"; box-sizing: border-box; }\"));\n  }\n});","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","CodeActionController_1","getDomNodePagePosition","aria","onUnexpectedError","Lazy","Disposable","MutableDisposable","Position","ModelDecorationOptions","ILanguageFeaturesService","ApplyCodeActionReason","applyCodeAction","CodeActionKeybindingResolver","toMenuItems","LightBulbWidget","MessageController","localize","IActionWidgetService","ICommandService","IConfigurationService","IContextKeyService","IInstantiationService","IMarkerService","IEditorProgressService","editorFindMatchHighlight","editorFindMatchHighlightBorder","isHighContrast","registerThemingParticipant","CodeActionKind","CodeActionTriggerSource","CodeActionModel","HierarchicalKind","ITelemetryService","DECORATION_CLASS_NAME","CodeActionController","_CodeActionController","get","editor","getContribution","ID","constructor","markerService","contextKeyService","instantiationService","languageFeaturesService","progressService","_commandService","_configurationService","_actionWidgetService","_instantiationService","_telemetryService","_activeCodeActions","_register","_showDisabled","_disposed","_editor","_model","codeActionProvider","onDidChangeState","newState","update","_lightBulbWidget","widget","onClick","e","showCodeActionsFromLightbulb","actions","_resolver","createInstance","onDidLayoutChange","hide","dispose","at","allAIFixes","validActions","actionItem","command","action","id","autoSend","_applyCodeAction","FromAILightbulb","showCodeActionList","includeDisabledActions","fromLightbulb","showCodeActions","_trigger","manualTriggerAtCurrentPosition","notAvailableMessage","triggerAction","filter","autoApply","_MessageController$ge","hasModel","closeMessage","triggerPosition","getPosition","type","context","position","trigger","retrigger","preview","actionReason","invokeFunction","QuickFix","hideLightBulbWidget","_this$_lightBulbWidge","_this$_lightBulbWidge2","rawValue","gutterHide","_this$_lightBulbWidge3","selection","getSelection","startLineNumber","lineNumber","value","_newState$trigger$fil","_newState$trigger$fil2","include","validActionToApply","tryGetValidActionToApply","FromCodeActions","invalidAction","getInvalidActionThatWouldHaveBeenApplied","disabled","_MessageController$ge2","showMessage","allActions","_MessageController$ge3","toCoords","isVisible","undefined","find","_ref","options","currentDecorations","createDecorationsCollection","editorDom","getDomNode","actionsToShow","anchor","isIPosition","delegate","onSelect","clear","onHide","didCancel","_this$_editor","focus","onHover","token","_action$action$edit","isCancellationRequested","canPreview","actionKind","kind","hierarchicalKind","refactorKinds","RefactorExtract","RefactorInline","RefactorRewrite","RefactorMove","Source","some","refactorKind","contains","edit","edits","onFocus","ranges","diagnostics","decorations","map","diagnostic","range","DECORATION","set","startColumn","_this$_editor$getMode","selectionText","getModel","getWordAtPosition","column","word","status","show","_shouldShowHeaders","getResolver","_getActionBarActions","x","y","revealPosition","render","cursorCoords","getScrolledVisiblePosition","editorCoords","left","top","height","_this$_editor2","model","getValue","resource","uri","resultActions","documentation","_command$tooltip","label","title","tooltip","class","enabled","run","_command$arguments","executeCommand","push","register","description","className","theme","collector","addBackgroundColorRule","selector","color","addRule","concat","getColor","findMatchHighlightBorder"],"sources":["D:/ospanel/domains/react/react-intro-main/node_modules/monaco-editor/esm/vs/editor/contrib/codeAction/browser/codeActionController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar CodeActionController_1;\nimport { getDomNodePagePosition } from '../../../../base/browser/dom.js';\nimport * as aria from '../../../../base/browser/ui/aria/aria.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Lazy } from '../../../../base/common/lazy.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ApplyCodeActionReason, applyCodeAction } from './codeAction.js';\nimport { CodeActionKeybindingResolver } from './codeActionKeybindingResolver.js';\nimport { toMenuItems } from './codeActionMenu.js';\nimport { LightBulbWidget } from './lightBulbWidget.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport { localize } from '../../../../nls.js';\nimport { IActionWidgetService } from '../../../../platform/actionWidget/browser/actionWidget.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IMarkerService } from '../../../../platform/markers/common/markers.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { editorFindMatchHighlight, editorFindMatchHighlightBorder } from '../../../../platform/theme/common/colorRegistry.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { CodeActionKind, CodeActionTriggerSource } from '../common/types.js';\nimport { CodeActionModel } from './codeActionModel.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nconst DECORATION_CLASS_NAME = 'quickfix-edit-highlight';\nlet CodeActionController = class CodeActionController extends Disposable {\n    static { CodeActionController_1 = this; }\n    static { this.ID = 'editor.contrib.codeActionController'; }\n    static get(editor) {\n        return editor.getContribution(CodeActionController_1.ID);\n    }\n    constructor(editor, markerService, contextKeyService, instantiationService, languageFeaturesService, progressService, _commandService, _configurationService, _actionWidgetService, _instantiationService, _telemetryService) {\n        super();\n        this._commandService = _commandService;\n        this._configurationService = _configurationService;\n        this._actionWidgetService = _actionWidgetService;\n        this._instantiationService = _instantiationService;\n        this._telemetryService = _telemetryService;\n        this._activeCodeActions = this._register(new MutableDisposable());\n        this._showDisabled = false;\n        this._disposed = false;\n        this._editor = editor;\n        this._model = this._register(new CodeActionModel(this._editor, languageFeaturesService.codeActionProvider, markerService, contextKeyService, progressService, _configurationService, this._telemetryService));\n        this._register(this._model.onDidChangeState(newState => this.update(newState)));\n        this._lightBulbWidget = new Lazy(() => {\n            const widget = this._editor.getContribution(LightBulbWidget.ID);\n            if (widget) {\n                this._register(widget.onClick(e => this.showCodeActionsFromLightbulb(e.actions, e)));\n            }\n            return widget;\n        });\n        this._resolver = instantiationService.createInstance(CodeActionKeybindingResolver);\n        this._register(this._editor.onDidLayoutChange(() => this._actionWidgetService.hide()));\n    }\n    dispose() {\n        this._disposed = true;\n        super.dispose();\n    }\n    async showCodeActionsFromLightbulb(actions, at) {\n        if (actions.allAIFixes && actions.validActions.length === 1) {\n            const actionItem = actions.validActions[0];\n            const command = actionItem.action.command;\n            if (command && command.id === 'inlineChat.start') {\n                if (command.arguments && command.arguments.length >= 1) {\n                    command.arguments[0] = { ...command.arguments[0], autoSend: false };\n                }\n            }\n            await this._applyCodeAction(actionItem, false, false, ApplyCodeActionReason.FromAILightbulb);\n            return;\n        }\n        await this.showCodeActionList(actions, at, { includeDisabledActions: false, fromLightbulb: true });\n    }\n    showCodeActions(_trigger, actions, at) {\n        return this.showCodeActionList(actions, at, { includeDisabledActions: false, fromLightbulb: false });\n    }\n    manualTriggerAtCurrentPosition(notAvailableMessage, triggerAction, filter, autoApply) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        MessageController.get(this._editor)?.closeMessage();\n        const triggerPosition = this._editor.getPosition();\n        this._trigger({ type: 1 /* CodeActionTriggerType.Invoke */, triggerAction, filter, autoApply, context: { notAvailableMessage, position: triggerPosition } });\n    }\n    _trigger(trigger) {\n        return this._model.trigger(trigger);\n    }\n    async _applyCodeAction(action, retrigger, preview, actionReason) {\n        try {\n            await this._instantiationService.invokeFunction(applyCodeAction, action, actionReason, { preview, editor: this._editor });\n        }\n        finally {\n            if (retrigger) {\n                this._trigger({ type: 2 /* CodeActionTriggerType.Auto */, triggerAction: CodeActionTriggerSource.QuickFix, filter: {} });\n            }\n        }\n    }\n    hideLightBulbWidget() {\n        this._lightBulbWidget.rawValue?.hide();\n        this._lightBulbWidget.rawValue?.gutterHide();\n    }\n    async update(newState) {\n        if (newState.type !== 1 /* CodeActionsState.Type.Triggered */) {\n            this.hideLightBulbWidget();\n            return;\n        }\n        let actions;\n        try {\n            actions = await newState.actions;\n        }\n        catch (e) {\n            onUnexpectedError(e);\n            return;\n        }\n        if (this._disposed) {\n            return;\n        }\n        const selection = this._editor.getSelection();\n        if (selection?.startLineNumber !== newState.position.lineNumber) {\n            return;\n        }\n        this._lightBulbWidget.value?.update(actions, newState.trigger, newState.position);\n        if (newState.trigger.type === 1 /* CodeActionTriggerType.Invoke */) {\n            if (newState.trigger.filter?.include) { // Triggered for specific scope\n                // Check to see if we want to auto apply.\n                const validActionToApply = this.tryGetValidActionToApply(newState.trigger, actions);\n                if (validActionToApply) {\n                    try {\n                        this.hideLightBulbWidget();\n                        await this._applyCodeAction(validActionToApply, false, false, ApplyCodeActionReason.FromCodeActions);\n                    }\n                    finally {\n                        actions.dispose();\n                    }\n                    return;\n                }\n                // Check to see if there is an action that we would have applied were it not invalid\n                if (newState.trigger.context) {\n                    const invalidAction = this.getInvalidActionThatWouldHaveBeenApplied(newState.trigger, actions);\n                    if (invalidAction && invalidAction.action.disabled) {\n                        MessageController.get(this._editor)?.showMessage(invalidAction.action.disabled, newState.trigger.context.position);\n                        actions.dispose();\n                        return;\n                    }\n                }\n            }\n            const includeDisabledActions = !!newState.trigger.filter?.include;\n            if (newState.trigger.context) {\n                if (!actions.allActions.length || !includeDisabledActions && !actions.validActions.length) {\n                    MessageController.get(this._editor)?.showMessage(newState.trigger.context.notAvailableMessage, newState.trigger.context.position);\n                    this._activeCodeActions.value = actions;\n                    actions.dispose();\n                    return;\n                }\n            }\n            this._activeCodeActions.value = actions;\n            this.showCodeActionList(actions, this.toCoords(newState.position), { includeDisabledActions, fromLightbulb: false });\n        }\n        else {\n            // auto magically triggered\n            if (this._actionWidgetService.isVisible) {\n                // TODO: Figure out if we should update the showing menu?\n                actions.dispose();\n            }\n            else {\n                this._activeCodeActions.value = actions;\n            }\n        }\n    }\n    getInvalidActionThatWouldHaveBeenApplied(trigger, actions) {\n        if (!actions.allActions.length) {\n            return undefined;\n        }\n        if ((trigger.autoApply === \"first\" /* CodeActionAutoApply.First */ && actions.validActions.length === 0)\n            || (trigger.autoApply === \"ifSingle\" /* CodeActionAutoApply.IfSingle */ && actions.allActions.length === 1)) {\n            return actions.allActions.find(({ action }) => action.disabled);\n        }\n        return undefined;\n    }\n    tryGetValidActionToApply(trigger, actions) {\n        if (!actions.validActions.length) {\n            return undefined;\n        }\n        if ((trigger.autoApply === \"first\" /* CodeActionAutoApply.First */ && actions.validActions.length > 0)\n            || (trigger.autoApply === \"ifSingle\" /* CodeActionAutoApply.IfSingle */ && actions.validActions.length === 1)) {\n            return actions.validActions[0];\n        }\n        return undefined;\n    }\n    static { this.DECORATION = ModelDecorationOptions.register({\n        description: 'quickfix-highlight',\n        className: DECORATION_CLASS_NAME\n    }); }\n    async showCodeActionList(actions, at, options) {\n        const currentDecorations = this._editor.createDecorationsCollection();\n        const editorDom = this._editor.getDomNode();\n        if (!editorDom) {\n            return;\n        }\n        const actionsToShow = options.includeDisabledActions && (this._showDisabled || actions.validActions.length === 0) ? actions.allActions : actions.validActions;\n        if (!actionsToShow.length) {\n            return;\n        }\n        const anchor = Position.isIPosition(at) ? this.toCoords(at) : at;\n        const delegate = {\n            onSelect: async (action, preview) => {\n                this._applyCodeAction(action, /* retrigger */ true, !!preview, options.fromLightbulb ? ApplyCodeActionReason.FromAILightbulb : ApplyCodeActionReason.FromCodeActions);\n                this._actionWidgetService.hide(false);\n                currentDecorations.clear();\n            },\n            onHide: (didCancel) => {\n                this._editor?.focus();\n                currentDecorations.clear();\n            },\n            onHover: async (action, token) => {\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                let canPreview = false;\n                const actionKind = action.action.kind;\n                if (actionKind) {\n                    const hierarchicalKind = new HierarchicalKind(actionKind);\n                    const refactorKinds = [\n                        CodeActionKind.RefactorExtract,\n                        CodeActionKind.RefactorInline,\n                        CodeActionKind.RefactorRewrite,\n                        CodeActionKind.RefactorMove,\n                        CodeActionKind.Source\n                    ];\n                    canPreview = refactorKinds.some(refactorKind => refactorKind.contains(hierarchicalKind));\n                }\n                return { canPreview: canPreview || !!action.action.edit?.edits.length };\n            },\n            onFocus: (action) => {\n                if (action && action.action) {\n                    const ranges = action.action.ranges;\n                    const diagnostics = action.action.diagnostics;\n                    currentDecorations.clear();\n                    if (ranges && ranges.length > 0) {\n                        // Handles case for `fix all` where there are multiple diagnostics.\n                        const decorations = (diagnostics && diagnostics?.length > 1)\n                            ? diagnostics.map(diagnostic => ({ range: diagnostic, options: CodeActionController_1.DECORATION }))\n                            : ranges.map(range => ({ range, options: CodeActionController_1.DECORATION }));\n                        currentDecorations.set(decorations);\n                    }\n                    else if (diagnostics && diagnostics.length > 0) {\n                        const decorations = diagnostics.map(diagnostic => ({ range: diagnostic, options: CodeActionController_1.DECORATION }));\n                        currentDecorations.set(decorations);\n                        const diagnostic = diagnostics[0];\n                        if (diagnostic.startLineNumber && diagnostic.startColumn) {\n                            const selectionText = this._editor.getModel()?.getWordAtPosition({ lineNumber: diagnostic.startLineNumber, column: diagnostic.startColumn })?.word;\n                            aria.status(localize('editingNewSelection', \"Context: {0} at line {1} and column {2}.\", selectionText, diagnostic.startLineNumber, diagnostic.startColumn));\n                        }\n                    }\n                }\n                else {\n                    currentDecorations.clear();\n                }\n            }\n        };\n        this._actionWidgetService.show('codeActionWidget', true, toMenuItems(actionsToShow, this._shouldShowHeaders(), this._resolver.getResolver()), delegate, anchor, editorDom, this._getActionBarActions(actions, at, options));\n    }\n    toCoords(position) {\n        if (!this._editor.hasModel()) {\n            return { x: 0, y: 0 };\n        }\n        this._editor.revealPosition(position, 1 /* ScrollType.Immediate */);\n        this._editor.render();\n        // Translate to absolute editor position\n        const cursorCoords = this._editor.getScrolledVisiblePosition(position);\n        const editorCoords = getDomNodePagePosition(this._editor.getDomNode());\n        const x = editorCoords.left + cursorCoords.left;\n        const y = editorCoords.top + cursorCoords.top + cursorCoords.height;\n        return { x, y };\n    }\n    _shouldShowHeaders() {\n        const model = this._editor?.getModel();\n        return this._configurationService.getValue('editor.codeActionWidget.showHeaders', { resource: model?.uri });\n    }\n    _getActionBarActions(actions, at, options) {\n        if (options.fromLightbulb) {\n            return [];\n        }\n        const resultActions = actions.documentation.map((command) => ({\n            id: command.id,\n            label: command.title,\n            tooltip: command.tooltip ?? '',\n            class: undefined,\n            enabled: true,\n            run: () => this._commandService.executeCommand(command.id, ...(command.arguments ?? [])),\n        }));\n        if (options.includeDisabledActions && actions.validActions.length > 0 && actions.allActions.length !== actions.validActions.length) {\n            resultActions.push(this._showDisabled ? {\n                id: 'hideMoreActions',\n                label: localize('hideMoreActions', 'Hide Disabled'),\n                enabled: true,\n                tooltip: '',\n                class: undefined,\n                run: () => {\n                    this._showDisabled = false;\n                    return this.showCodeActionList(actions, at, options);\n                }\n            } : {\n                id: 'showMoreActions',\n                label: localize('showMoreActions', 'Show Disabled'),\n                enabled: true,\n                tooltip: '',\n                class: undefined,\n                run: () => {\n                    this._showDisabled = true;\n                    return this.showCodeActionList(actions, at, options);\n                }\n            });\n        }\n        return resultActions;\n    }\n};\nCodeActionController = CodeActionController_1 = __decorate([\n    __param(1, IMarkerService),\n    __param(2, IContextKeyService),\n    __param(3, IInstantiationService),\n    __param(4, ILanguageFeaturesService),\n    __param(5, IEditorProgressService),\n    __param(6, ICommandService),\n    __param(7, IConfigurationService),\n    __param(8, IActionWidgetService),\n    __param(9, IInstantiationService),\n    __param(10, ITelemetryService)\n], CodeActionController);\nexport { CodeActionController };\nregisterThemingParticipant((theme, collector) => {\n    const addBackgroundColorRule = (selector, color) => {\n        if (color) {\n            collector.addRule(`.monaco-editor ${selector} { background-color: ${color}; }`);\n        }\n    };\n    addBackgroundColorRule('.quickfix-edit-highlight', theme.getColor(editorFindMatchHighlight));\n    const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\n    if (findMatchHighlightBorder) {\n        collector.addRule(`.monaco-editor .quickfix-edit-highlight { border: 1px ${isHighContrast(theme.type) ? 'dotted' : 'solid'} ${findMatchHighlightBorder}; box-sizing: border-box; }`);\n    }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
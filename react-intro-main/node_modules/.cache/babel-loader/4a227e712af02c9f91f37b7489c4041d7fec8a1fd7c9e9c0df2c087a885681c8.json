{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Client from '../Client';\nimport InternalEvent from '../view/event/InternalEvent';\nimport { write, writeln } from '../util/domUtils';\nimport Translations from '../util/Translations';\n/**\n * A simple class for creating HTML forms.\n *\n * @class MaxForm\n */\nclass MaxForm {\n  constructor(className) {\n    this.table = document.createElement('table');\n    this.table.className = className;\n    this.body = document.createElement('tbody');\n    this.table.appendChild(this.body);\n  }\n  /**\n   * Returns the table that contains this form.\n   */\n  getTable() {\n    return this.table;\n  }\n  /**\n   * Helper method to add an OK and Cancel button using the respective\n   * functions.\n   */\n  addButtons(okFunct, cancelFunct) {\n    const tr = document.createElement('tr');\n    let td = document.createElement('td');\n    tr.appendChild(td);\n    td = document.createElement('td');\n    // Adds the ok button\n    let button = document.createElement('button');\n    write(button, Translations.get('ok') || 'OK');\n    td.appendChild(button);\n    InternalEvent.addListener(button, 'click', () => {\n      okFunct();\n    });\n    // Adds the cancel button\n    button = document.createElement('button');\n    write(button, Translations.get('cancel') || 'Cancel');\n    td.appendChild(button);\n    InternalEvent.addListener(button, 'click', () => {\n      cancelFunct();\n    });\n    tr.appendChild(td);\n    this.body.appendChild(tr);\n  }\n  /**\n   * Adds an input for the given name, type and value and returns it.\n   */\n  addText(name, value, type = 'text') {\n    const input = document.createElement('input');\n    input.setAttribute('type', type);\n    input.value = value;\n    return this.addField(name, input);\n  }\n  /**\n   * Adds a checkbox for the given name and value and returns the textfield.\n   */\n  addCheckbox(name, value) {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'checkbox');\n    this.addField(name, input);\n    // IE can only change the checked value if the input is inside the DOM\n    if (value) {\n      input.checked = true;\n    }\n    return input;\n  }\n  /**\n   * Adds a textarea for the given name and value and returns the textarea.\n   */\n  addTextarea(name, value, rows) {\n    const input = document.createElement('textarea');\n    if (Client.IS_NS) {\n      rows--;\n    }\n    input.setAttribute('rows', String(rows || 2));\n    input.value = value;\n    return this.addField(name, input);\n  }\n  /**\n   * Adds a combo for the given name and returns the combo.\n   */\n  addCombo(name, isMultiSelect, size) {\n    const select = document.createElement('select');\n    if (size != null) {\n      select.setAttribute('size', String(size));\n    }\n    if (isMultiSelect) {\n      select.setAttribute('multiple', 'true');\n    }\n    return this.addField(name, select);\n  }\n  /**\n   * Adds an option for the given label to the specified combo.\n   */\n  addOption(combo, label, value, isSelected) {\n    const option = document.createElement('option');\n    writeln(option, label);\n    option.setAttribute('value', value);\n    if (isSelected) {\n      option.setAttribute('selected', String(isSelected));\n    }\n    combo.appendChild(option);\n  }\n  /**\n   * Adds a new row with the name and the input field in two columns and\n   * returns the given input.\n   */\n  addField(name, input) {\n    const tr = document.createElement('tr');\n    let td = document.createElement('td');\n    write(td, name);\n    tr.appendChild(td);\n    td = document.createElement('td');\n    td.appendChild(input);\n    tr.appendChild(td);\n    this.body.appendChild(tr);\n    return input;\n  }\n}\nexport default MaxForm;","map":{"version":3,"names":["Client","InternalEvent","write","writeln","Translations","MaxForm","constructor","className","table","document","createElement","body","appendChild","getTable","addButtons","okFunct","cancelFunct","tr","td","button","get","addListener","addText","name","value","type","input","setAttribute","addField","addCheckbox","checked","addTextarea","rows","IS_NS","String","addCombo","isMultiSelect","size","select","addOption","combo","label","isSelected","option"],"sources":["D:/OSPanel/domains/react/react-intro-main/node_modules/@maxgraph/core/dist/gui/MaxForm.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Client from '../Client';\nimport InternalEvent from '../view/event/InternalEvent';\nimport { write, writeln } from '../util/domUtils';\nimport Translations from '../util/Translations';\n/**\n * A simple class for creating HTML forms.\n *\n * @class MaxForm\n */\nclass MaxForm {\n    constructor(className) {\n        this.table = document.createElement('table');\n        this.table.className = className;\n        this.body = document.createElement('tbody');\n        this.table.appendChild(this.body);\n    }\n    /**\n     * Returns the table that contains this form.\n     */\n    getTable() {\n        return this.table;\n    }\n    /**\n     * Helper method to add an OK and Cancel button using the respective\n     * functions.\n     */\n    addButtons(okFunct, cancelFunct) {\n        const tr = document.createElement('tr');\n        let td = document.createElement('td');\n        tr.appendChild(td);\n        td = document.createElement('td');\n        // Adds the ok button\n        let button = document.createElement('button');\n        write(button, Translations.get('ok') || 'OK');\n        td.appendChild(button);\n        InternalEvent.addListener(button, 'click', () => {\n            okFunct();\n        });\n        // Adds the cancel button\n        button = document.createElement('button');\n        write(button, Translations.get('cancel') || 'Cancel');\n        td.appendChild(button);\n        InternalEvent.addListener(button, 'click', () => {\n            cancelFunct();\n        });\n        tr.appendChild(td);\n        this.body.appendChild(tr);\n    }\n    /**\n     * Adds an input for the given name, type and value and returns it.\n     */\n    addText(name, value, type = 'text') {\n        const input = document.createElement('input');\n        input.setAttribute('type', type);\n        input.value = value;\n        return this.addField(name, input);\n    }\n    /**\n     * Adds a checkbox for the given name and value and returns the textfield.\n     */\n    addCheckbox(name, value) {\n        const input = document.createElement('input');\n        input.setAttribute('type', 'checkbox');\n        this.addField(name, input);\n        // IE can only change the checked value if the input is inside the DOM\n        if (value) {\n            input.checked = true;\n        }\n        return input;\n    }\n    /**\n     * Adds a textarea for the given name and value and returns the textarea.\n     */\n    addTextarea(name, value, rows) {\n        const input = document.createElement('textarea');\n        if (Client.IS_NS) {\n            rows--;\n        }\n        input.setAttribute('rows', String(rows || 2));\n        input.value = value;\n        return this.addField(name, input);\n    }\n    /**\n     * Adds a combo for the given name and returns the combo.\n     */\n    addCombo(name, isMultiSelect, size) {\n        const select = document.createElement('select');\n        if (size != null) {\n            select.setAttribute('size', String(size));\n        }\n        if (isMultiSelect) {\n            select.setAttribute('multiple', 'true');\n        }\n        return this.addField(name, select);\n    }\n    /**\n     * Adds an option for the given label to the specified combo.\n     */\n    addOption(combo, label, value, isSelected) {\n        const option = document.createElement('option');\n        writeln(option, label);\n        option.setAttribute('value', value);\n        if (isSelected) {\n            option.setAttribute('selected', String(isSelected));\n        }\n        combo.appendChild(option);\n    }\n    /**\n     * Adds a new row with the name and the input field in two columns and\n     * returns the given input.\n     */\n    addField(name, input) {\n        const tr = document.createElement('tr');\n        let td = document.createElement('td');\n        write(td, name);\n        tr.appendChild(td);\n        td = document.createElement('td');\n        td.appendChild(input);\n        tr.appendChild(td);\n        this.body.appendChild(tr);\n        return input;\n    }\n}\nexport default MaxForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
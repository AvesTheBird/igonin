{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { isCodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction2 } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport * as corePosition from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { isLocationLink } from '../../../common/languages.js';\nimport { ReferencesController } from './peek/referencesController.js';\nimport { ReferencesModel } from './referencesModel.js';\nimport { ISymbolNavigationService } from './symbolNavigation.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport { PeekContext } from '../../peekView/browser/peekView.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId, MenuRegistry, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { getDeclarationsAtPosition, getDefinitionsAtPosition, getImplementationsAtPosition, getReferencesAtPosition, getTypeDefinitionsAtPosition } from './goToSymbol.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { IsWebContext } from '../../../../platform/contextkey/common/contextkeys.js';\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n  submenu: MenuId.EditorContextPeek,\n  title: nls.localize('peek.submenu', \"Peek\"),\n  group: 'navigation',\n  order: 100\n});\nexport class SymbolNavigationAnchor {\n  static is(thing) {\n    if (!thing || typeof thing !== 'object') {\n      return false;\n    }\n    if (thing instanceof SymbolNavigationAnchor) {\n      return true;\n    }\n    if (corePosition.Position.isIPosition(thing.position) && thing.model) {\n      return true;\n    }\n    return false;\n  }\n  constructor(model, position) {\n    this.model = model;\n    this.position = position;\n  }\n}\nexport class SymbolNavigationAction extends EditorAction2 {\n  static {\n    this._allSymbolNavigationCommands = new Map();\n  }\n  static {\n    this._activeAlternativeCommands = new Set();\n  }\n  static all() {\n    return SymbolNavigationAction._allSymbolNavigationCommands.values();\n  }\n  static _patchConfig(opts) {\n    const result = {\n      ...opts,\n      f1: true\n    };\n    // patch context menu when clause\n    if (result.menu) {\n      for (const item of Iterable.wrap(result.menu)) {\n        if (item.id === MenuId.EditorContext || item.id === MenuId.EditorContextPeek) {\n          item.when = ContextKeyExpr.and(opts.precondition, item.when);\n        }\n      }\n    }\n    return result;\n  }\n  constructor(configuration, opts) {\n    super(SymbolNavigationAction._patchConfig(opts));\n    this.configuration = configuration;\n    SymbolNavigationAction._allSymbolNavigationCommands.set(opts.id, this);\n  }\n  runEditorCommand(accessor, editor, arg, range) {\n    if (!editor.hasModel()) {\n      return Promise.resolve(undefined);\n    }\n    const notificationService = accessor.get(INotificationService);\n    const editorService = accessor.get(ICodeEditorService);\n    const progressService = accessor.get(IEditorProgressService);\n    const symbolNavService = accessor.get(ISymbolNavigationService);\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const instaService = accessor.get(IInstantiationService);\n    const model = editor.getModel();\n    const position = editor.getPosition();\n    const anchor = SymbolNavigationAnchor.is(arg) ? arg : new SymbolNavigationAnchor(model, position);\n    const cts = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */);\n    const promise = raceCancellation(this._getLocationModel(languageFeaturesService, anchor.model, anchor.position, cts.token), cts.token).then(async references => {\n      if (!references || cts.token.isCancellationRequested) {\n        return;\n      }\n      alert(references.ariaMessage);\n      let altAction;\n      if (references.referenceAt(model.uri, position)) {\n        const altActionId = this._getAlternativeCommand(editor);\n        if (!SymbolNavigationAction._activeAlternativeCommands.has(altActionId) && SymbolNavigationAction._allSymbolNavigationCommands.has(altActionId)) {\n          altAction = SymbolNavigationAction._allSymbolNavigationCommands.get(altActionId);\n        }\n      }\n      const referenceCount = references.references.length;\n      if (referenceCount === 0) {\n        // no result -> show message\n        if (!this.configuration.muteMessage) {\n          const info = model.getWordAtPosition(position);\n          MessageController.get(editor)?.showMessage(this._getNoResultFoundMessage(info), position);\n        }\n      } else if (referenceCount === 1 && altAction) {\n        // already at the only result, run alternative\n        SymbolNavigationAction._activeAlternativeCommands.add(this.desc.id);\n        instaService.invokeFunction(accessor => altAction.runEditorCommand(accessor, editor, arg, range).finally(() => {\n          SymbolNavigationAction._activeAlternativeCommands.delete(this.desc.id);\n        }));\n      } else {\n        // normal results handling\n        return this._onResult(editorService, symbolNavService, editor, references, range);\n      }\n    }, err => {\n      // report an error\n      notificationService.error(err);\n    }).finally(() => {\n      cts.dispose();\n    });\n    progressService.showWhile(promise, 250);\n    return promise;\n  }\n  async _onResult(editorService, symbolNavService, editor, model, range) {\n    const gotoLocation = this._getGoToPreference(editor);\n    if (!(editor instanceof EmbeddedCodeEditorWidget) && (this.configuration.openInPeek || gotoLocation === 'peek' && model.references.length > 1)) {\n      this._openInPeek(editor, model, range);\n    } else {\n      const next = model.firstReference();\n      const peek = model.references.length > 1 && gotoLocation === 'gotoAndPeek';\n      const targetEditor = await this._openReference(editor, editorService, next, this.configuration.openToSide, !peek);\n      if (peek && targetEditor) {\n        this._openInPeek(targetEditor, model, range);\n      } else {\n        model.dispose();\n      }\n      // keep remaining locations around when using\n      // 'goto'-mode\n      if (gotoLocation === 'goto') {\n        symbolNavService.put(next);\n      }\n    }\n  }\n  async _openReference(editor, editorService, reference, sideBySide, highlight) {\n    // range is the target-selection-range when we have one\n    // and the fallback is the 'full' range\n    let range = undefined;\n    if (isLocationLink(reference)) {\n      range = reference.targetSelectionRange;\n    }\n    if (!range) {\n      range = reference.range;\n    }\n    if (!range) {\n      return undefined;\n    }\n    const targetEditor = await editorService.openCodeEditor({\n      resource: reference.uri,\n      options: {\n        selection: Range.collapseToStart(range),\n        selectionRevealType: 3 /* TextEditorSelectionRevealType.NearTopIfOutsideViewport */,\n        selectionSource: \"code.jump\" /* TextEditorSelectionSource.JUMP */\n      }\n    }, editor, sideBySide);\n    if (!targetEditor) {\n      return undefined;\n    }\n    if (highlight) {\n      const modelNow = targetEditor.getModel();\n      const decorations = targetEditor.createDecorationsCollection([{\n        range,\n        options: {\n          description: 'symbol-navigate-action-highlight',\n          className: 'symbolHighlight'\n        }\n      }]);\n      setTimeout(() => {\n        if (targetEditor.getModel() === modelNow) {\n          decorations.clear();\n        }\n      }, 350);\n    }\n    return targetEditor;\n  }\n  _openInPeek(target, model, range) {\n    const controller = ReferencesController.get(target);\n    if (controller && target.hasModel()) {\n      controller.toggleWidget(range ?? target.getSelection(), createCancelablePromise(_ => Promise.resolve(model)), this.configuration.openInPeek);\n    } else {\n      model.dispose();\n    }\n  }\n}\n//#region --- DEFINITION\nexport class DefinitionAction extends SymbolNavigationAction {\n  async _getLocationModel(languageFeaturesService, model, position, token) {\n    return new ReferencesModel(await getDefinitionsAtPosition(languageFeaturesService.definitionProvider, model, position, false, token), nls.localize('def.title', 'Definitions'));\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('noResultWord', \"No definition found for '{0}'\", info.word) : nls.localize('generic.noResults', \"No definition found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeDefinitionCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).multipleDefinitions;\n  }\n}\nregisterAction2(class GoToDefinitionAction extends DefinitionAction {\n  static {\n    this.id = 'editor.action.revealDefinition';\n  }\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: GoToDefinitionAction.id,\n      title: {\n        ...nls.localize2('actions.goToDecl.label', \"Go to Definition\"),\n        mnemonicTitle: nls.localize({\n          key: 'miGotoDefinition',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&Definition\")\n      },\n      precondition: EditorContextKeys.hasDefinitionProvider,\n      keybinding: [{\n        when: EditorContextKeys.editorTextFocus,\n        primary: 70 /* KeyCode.F12 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }, {\n        when: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, IsWebContext),\n        primary: 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }],\n      menu: [{\n        id: MenuId.EditorContext,\n        group: 'navigation',\n        order: 1.1\n      }, {\n        id: MenuId.MenubarGoMenu,\n        precondition: null,\n        group: '4_symbol_nav',\n        order: 2\n      }]\n    });\n    CommandsRegistry.registerCommandAlias('editor.action.goToDeclaration', GoToDefinitionAction.id);\n  }\n});\nregisterAction2(class OpenDefinitionToSideAction extends DefinitionAction {\n  static {\n    this.id = 'editor.action.revealDefinitionAside';\n  }\n  constructor() {\n    super({\n      openToSide: true,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: OpenDefinitionToSideAction.id,\n      title: nls.localize2('actions.goToDeclToSide.label', \"Open Definition to the Side\"),\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      keybinding: [{\n        when: EditorContextKeys.editorTextFocus,\n        primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 70 /* KeyCode.F12 */),\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }, {\n        when: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, IsWebContext),\n        primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */),\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }]\n    });\n    CommandsRegistry.registerCommandAlias('editor.action.openDeclarationToTheSide', OpenDefinitionToSideAction.id);\n  }\n});\nregisterAction2(class PeekDefinitionAction extends DefinitionAction {\n  static {\n    this.id = 'editor.action.peekDefinition';\n  }\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: PeekDefinitionAction.id,\n      title: nls.localize2('actions.previewDecl.label', \"Peek Definition\"),\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      keybinding: {\n        when: EditorContextKeys.editorTextFocus,\n        primary: 512 /* KeyMod.Alt */ | 70 /* KeyCode.F12 */,\n        linux: {\n          primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 68 /* KeyCode.F10 */\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menu: {\n        id: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 2\n      }\n    });\n    CommandsRegistry.registerCommandAlias('editor.action.previewDeclaration', PeekDefinitionAction.id);\n  }\n});\n//#endregion\n//#region --- DECLARATION\nclass DeclarationAction extends SymbolNavigationAction {\n  async _getLocationModel(languageFeaturesService, model, position, token) {\n    return new ReferencesModel(await getDeclarationsAtPosition(languageFeaturesService.declarationProvider, model, position, false, token), nls.localize('decl.title', 'Declarations'));\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word) : nls.localize('decl.generic.noResults', \"No declaration found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeDeclarationCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).multipleDeclarations;\n  }\n}\nregisterAction2(class GoToDeclarationAction extends DeclarationAction {\n  static {\n    this.id = 'editor.action.revealDeclaration';\n  }\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: GoToDeclarationAction.id,\n      title: {\n        ...nls.localize2('actions.goToDeclaration.label', \"Go to Declaration\"),\n        mnemonicTitle: nls.localize({\n          key: 'miGotoDeclaration',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&Declaration\")\n      },\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      menu: [{\n        id: MenuId.EditorContext,\n        group: 'navigation',\n        order: 1.3\n      }, {\n        id: MenuId.MenubarGoMenu,\n        precondition: null,\n        group: '4_symbol_nav',\n        order: 3\n      }]\n    });\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word) : nls.localize('decl.generic.noResults', \"No declaration found\");\n  }\n});\nregisterAction2(class PeekDeclarationAction extends DeclarationAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: 'editor.action.peekDeclaration',\n      title: nls.localize2('actions.peekDecl.label', \"Peek Declaration\"),\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      menu: {\n        id: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 3\n      }\n    });\n  }\n});\n//#endregion\n//#region --- TYPE DEFINITION\nclass TypeDefinitionAction extends SymbolNavigationAction {\n  async _getLocationModel(languageFeaturesService, model, position, token) {\n    return new ReferencesModel(await getTypeDefinitionsAtPosition(languageFeaturesService.typeDefinitionProvider, model, position, false, token), nls.localize('typedef.title', 'Type Definitions'));\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('goToTypeDefinition.noResultWord', \"No type definition found for '{0}'\", info.word) : nls.localize('goToTypeDefinition.generic.noResults', \"No type definition found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeTypeDefinitionCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).multipleTypeDefinitions;\n  }\n}\nregisterAction2(class GoToTypeDefinitionAction extends TypeDefinitionAction {\n  static {\n    this.ID = 'editor.action.goToTypeDefinition';\n  }\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: GoToTypeDefinitionAction.ID,\n      title: {\n        ...nls.localize2('actions.goToTypeDefinition.label', \"Go to Type Definition\"),\n        mnemonicTitle: nls.localize({\n          key: 'miGotoTypeDefinition',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&Type Definition\")\n      },\n      precondition: EditorContextKeys.hasTypeDefinitionProvider,\n      keybinding: {\n        when: EditorContextKeys.editorTextFocus,\n        primary: 0,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menu: [{\n        id: MenuId.EditorContext,\n        group: 'navigation',\n        order: 1.4\n      }, {\n        id: MenuId.MenubarGoMenu,\n        precondition: null,\n        group: '4_symbol_nav',\n        order: 3\n      }]\n    });\n  }\n});\nregisterAction2(class PeekTypeDefinitionAction extends TypeDefinitionAction {\n  static {\n    this.ID = 'editor.action.peekTypeDefinition';\n  }\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: PeekTypeDefinitionAction.ID,\n      title: nls.localize2('actions.peekTypeDefinition.label', \"Peek Type Definition\"),\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      menu: {\n        id: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 4\n      }\n    });\n  }\n});\n//#endregion\n//#region --- IMPLEMENTATION\nclass ImplementationAction extends SymbolNavigationAction {\n  async _getLocationModel(languageFeaturesService, model, position, token) {\n    return new ReferencesModel(await getImplementationsAtPosition(languageFeaturesService.implementationProvider, model, position, false, token), nls.localize('impl.title', 'Implementations'));\n  }\n  _getNoResultFoundMessage(info) {\n    return info && info.word ? nls.localize('goToImplementation.noResultWord', \"No implementation found for '{0}'\", info.word) : nls.localize('goToImplementation.generic.noResults', \"No implementation found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeImplementationCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).multipleImplementations;\n  }\n}\nregisterAction2(class GoToImplementationAction extends ImplementationAction {\n  static {\n    this.ID = 'editor.action.goToImplementation';\n  }\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: GoToImplementationAction.ID,\n      title: {\n        ...nls.localize2('actions.goToImplementation.label', \"Go to Implementations\"),\n        mnemonicTitle: nls.localize({\n          key: 'miGotoImplementation',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&Implementations\")\n      },\n      precondition: EditorContextKeys.hasImplementationProvider,\n      keybinding: {\n        when: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menu: [{\n        id: MenuId.EditorContext,\n        group: 'navigation',\n        order: 1.45\n      }, {\n        id: MenuId.MenubarGoMenu,\n        precondition: null,\n        group: '4_symbol_nav',\n        order: 4\n      }]\n    });\n  }\n});\nregisterAction2(class PeekImplementationAction extends ImplementationAction {\n  static {\n    this.ID = 'editor.action.peekImplementation';\n  }\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: PeekImplementationAction.ID,\n      title: nls.localize2('actions.peekImplementation.label', \"Peek Implementations\"),\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      keybinding: {\n        when: EditorContextKeys.editorTextFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menu: {\n        id: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 5\n      }\n    });\n  }\n});\n//#endregion\n//#region --- REFERENCES\nclass ReferencesAction extends SymbolNavigationAction {\n  _getNoResultFoundMessage(info) {\n    return info ? nls.localize('references.no', \"No references found for '{0}'\", info.word) : nls.localize('references.noGeneric', \"No references found\");\n  }\n  _getAlternativeCommand(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeReferenceCommand;\n  }\n  _getGoToPreference(editor) {\n    return editor.getOption(58 /* EditorOption.gotoLocation */).multipleReferences;\n  }\n}\nregisterAction2(class GoToReferencesAction extends ReferencesAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: false,\n      muteMessage: false\n    }, {\n      id: 'editor.action.goToReferences',\n      title: {\n        ...nls.localize2('goToReferences.label', \"Go to References\"),\n        mnemonicTitle: nls.localize({\n          key: 'miGotoReference',\n          comment: ['&& denotes a mnemonic']\n        }, \"Go to &&References\")\n      },\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      keybinding: {\n        when: EditorContextKeys.editorTextFocus,\n        primary: 1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      menu: [{\n        id: MenuId.EditorContext,\n        group: 'navigation',\n        order: 1.45\n      }, {\n        id: MenuId.MenubarGoMenu,\n        precondition: null,\n        group: '4_symbol_nav',\n        order: 5\n      }]\n    });\n  }\n  async _getLocationModel(languageFeaturesService, model, position, token) {\n    return new ReferencesModel(await getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, true, false, token), nls.localize('ref.title', 'References'));\n  }\n});\nregisterAction2(class PeekReferencesAction extends ReferencesAction {\n  constructor() {\n    super({\n      openToSide: false,\n      openInPeek: true,\n      muteMessage: false\n    }, {\n      id: 'editor.action.referenceSearch.trigger',\n      title: nls.localize2('references.action.label', \"Peek References\"),\n      precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n      menu: {\n        id: MenuId.EditorContextPeek,\n        group: 'peek',\n        order: 6\n      }\n    });\n  }\n  async _getLocationModel(languageFeaturesService, model, position, token) {\n    return new ReferencesModel(await getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, false, false, token), nls.localize('ref.title', 'References'));\n  }\n});\n//#endregion\n//#region --- GENERIC goto symbols command\nclass GenericGoToLocationAction extends SymbolNavigationAction {\n  constructor(config, _references, _gotoMultipleBehaviour) {\n    super(config, {\n      id: 'editor.action.goToLocation',\n      title: nls.localize2('label.generic', \"Go to Any Symbol\"),\n      precondition: ContextKeyExpr.and(PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated())\n    });\n    this._references = _references;\n    this._gotoMultipleBehaviour = _gotoMultipleBehaviour;\n  }\n  async _getLocationModel(languageFeaturesService, _model, _position, _token) {\n    return new ReferencesModel(this._references, nls.localize('generic.title', 'Locations'));\n  }\n  _getNoResultFoundMessage(info) {\n    return info && nls.localize('generic.noResult', \"No results for '{0}'\", info.word) || '';\n  }\n  _getGoToPreference(editor) {\n    return this._gotoMultipleBehaviour ?? editor.getOption(58 /* EditorOption.gotoLocation */).multipleReferences;\n  }\n  _getAlternativeCommand() {\n    return '';\n  }\n}\nCommandsRegistry.registerCommand({\n  id: 'editor.action.goToLocations',\n  metadata: {\n    description: 'Go to locations from a position in a file',\n    args: [{\n      name: 'uri',\n      description: 'The text document in which to start',\n      constraint: URI\n    }, {\n      name: 'position',\n      description: 'The position at which to start',\n      constraint: corePosition.Position.isIPosition\n    }, {\n      name: 'locations',\n      description: 'An array of locations.',\n      constraint: Array\n    }, {\n      name: 'multiple',\n      description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto`'\n    }, {\n      name: 'noResultsMessage',\n      description: 'Human readable message that shows when locations is empty.'\n    }]\n  },\n  handler: async (accessor, resource, position, references, multiple, noResultsMessage, openInPeek) => {\n    assertType(URI.isUri(resource));\n    assertType(corePosition.Position.isIPosition(position));\n    assertType(Array.isArray(references));\n    assertType(typeof multiple === 'undefined' || typeof multiple === 'string');\n    assertType(typeof openInPeek === 'undefined' || typeof openInPeek === 'boolean');\n    const editorService = accessor.get(ICodeEditorService);\n    const editor = await editorService.openCodeEditor({\n      resource\n    }, editorService.getFocusedCodeEditor());\n    if (isCodeEditor(editor)) {\n      editor.setPosition(position);\n      editor.revealPositionInCenterIfOutsideViewport(position, 0 /* ScrollType.Smooth */);\n      return editor.invokeWithinContext(accessor => {\n        const command = new class extends GenericGoToLocationAction {\n          _getNoResultFoundMessage(info) {\n            return noResultsMessage || super._getNoResultFoundMessage(info);\n          }\n        }({\n          muteMessage: !Boolean(noResultsMessage),\n          openInPeek: Boolean(openInPeek),\n          openToSide: false\n        }, references, multiple);\n        accessor.get(IInstantiationService).invokeFunction(command.run.bind(command), editor);\n      });\n    }\n  }\n});\nCommandsRegistry.registerCommand({\n  id: 'editor.action.peekLocations',\n  metadata: {\n    description: 'Peek locations from a position in a file',\n    args: [{\n      name: 'uri',\n      description: 'The text document in which to start',\n      constraint: URI\n    }, {\n      name: 'position',\n      description: 'The position at which to start',\n      constraint: corePosition.Position.isIPosition\n    }, {\n      name: 'locations',\n      description: 'An array of locations.',\n      constraint: Array\n    }, {\n      name: 'multiple',\n      description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto`'\n    }]\n  },\n  handler: async (accessor, resource, position, references, multiple) => {\n    accessor.get(ICommandService).executeCommand('editor.action.goToLocations', resource, position, references, multiple, undefined, true);\n  }\n});\n//#endregion\n//#region --- REFERENCE search special commands\nCommandsRegistry.registerCommand({\n  id: 'editor.action.findReferences',\n  handler: (accessor, resource, position) => {\n    assertType(URI.isUri(resource));\n    assertType(corePosition.Position.isIPosition(position));\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    const codeEditorService = accessor.get(ICodeEditorService);\n    return codeEditorService.openCodeEditor({\n      resource\n    }, codeEditorService.getFocusedCodeEditor()).then(control => {\n      if (!isCodeEditor(control) || !control.hasModel()) {\n        return undefined;\n      }\n      const controller = ReferencesController.get(control);\n      if (!controller) {\n        return undefined;\n      }\n      const references = createCancelablePromise(token => getReferencesAtPosition(languageFeaturesService.referenceProvider, control.getModel(), corePosition.Position.lift(position), false, false, token).then(references => new ReferencesModel(references, nls.localize('ref.title', 'References'))));\n      const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n      return Promise.resolve(controller.toggleWidget(range, references, false));\n    });\n  }\n});\n// use NEW command\nCommandsRegistry.registerCommandAlias('editor.action.showReferences', 'editor.action.peekLocations');\n//#endregion","map":{"version":3,"names":["alert","createCancelablePromise","raceCancellation","KeyChord","assertType","URI","EditorStateCancellationTokenSource","isCodeEditor","EditorAction2","ICodeEditorService","EmbeddedCodeEditorWidget","corePosition","Range","EditorContextKeys","isLocationLink","ReferencesController","ReferencesModel","ISymbolNavigationService","MessageController","PeekContext","nls","MenuId","MenuRegistry","registerAction2","CommandsRegistry","ICommandService","ContextKeyExpr","IInstantiationService","INotificationService","IEditorProgressService","getDeclarationsAtPosition","getDefinitionsAtPosition","getImplementationsAtPosition","getReferencesAtPosition","getTypeDefinitionsAtPosition","ILanguageFeaturesService","Iterable","IsWebContext","appendMenuItem","EditorContext","submenu","EditorContextPeek","title","localize","group","order","SymbolNavigationAnchor","is","thing","Position","isIPosition","position","model","constructor","SymbolNavigationAction","_allSymbolNavigationCommands","Map","_activeAlternativeCommands","Set","all","values","_patchConfig","opts","result","f1","menu","item","wrap","id","when","and","precondition","configuration","set","runEditorCommand","accessor","editor","arg","range","hasModel","Promise","resolve","undefined","notificationService","get","editorService","progressService","symbolNavService","languageFeaturesService","instaService","getModel","getPosition","anchor","cts","promise","_getLocationModel","token","then","references","isCancellationRequested","ariaMessage","altAction","referenceAt","uri","altActionId","_getAlternativeCommand","has","referenceCount","length","muteMessage","info","getWordAtPosition","showMessage","_getNoResultFoundMessage","add","desc","invokeFunction","finally","delete","_onResult","err","error","dispose","showWhile","gotoLocation","_getGoToPreference","openInPeek","_openInPeek","next","firstReference","peek","targetEditor","_openReference","openToSide","put","reference","sideBySide","highlight","targetSelectionRange","openCodeEditor","resource","options","selection","collapseToStart","selectionRevealType","selectionSource","modelNow","decorations","createDecorationsCollection","description","className","setTimeout","clear","target","controller","toggleWidget","getSelection","_","DefinitionAction","definitionProvider","word","getOption","alternativeDefinitionCommand","multipleDefinitions","GoToDefinitionAction","localize2","mnemonicTitle","key","comment","hasDefinitionProvider","keybinding","editorTextFocus","primary","weight","MenubarGoMenu","registerCommandAlias","OpenDefinitionToSideAction","isInEmbeddedEditor","toNegated","PeekDefinitionAction","notInPeekEditor","linux","DeclarationAction","declarationProvider","alternativeDeclarationCommand","multipleDeclarations","GoToDeclarationAction","hasDeclarationProvider","PeekDeclarationAction","TypeDefinitionAction","typeDefinitionProvider","alternativeTypeDefinitionCommand","multipleTypeDefinitions","GoToTypeDefinitionAction","ID","hasTypeDefinitionProvider","PeekTypeDefinitionAction","ImplementationAction","implementationProvider","alternativeImplementationCommand","multipleImplementations","GoToImplementationAction","hasImplementationProvider","PeekImplementationAction","ReferencesAction","alternativeReferenceCommand","multipleReferences","GoToReferencesAction","hasReferenceProvider","referenceProvider","PeekReferencesAction","GenericGoToLocationAction","config","_references","_gotoMultipleBehaviour","_model","_position","_token","registerCommand","metadata","args","name","constraint","Array","handler","multiple","noResultsMessage","isUri","isArray","getFocusedCodeEditor","setPosition","revealPositionInCenterIfOutsideViewport","invokeWithinContext","command","Boolean","run","bind","executeCommand","codeEditorService","control","lift","lineNumber","column"],"sources":["D:/OSPanel/domains/react/react-intro-main/node_modules/monaco-editor/esm/vs/editor/contrib/gotoSymbol/browser/goToCommands.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { isCodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction2 } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport * as corePosition from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { isLocationLink } from '../../../common/languages.js';\nimport { ReferencesController } from './peek/referencesController.js';\nimport { ReferencesModel } from './referencesModel.js';\nimport { ISymbolNavigationService } from './symbolNavigation.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport { PeekContext } from '../../peekView/browser/peekView.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId, MenuRegistry, registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { getDeclarationsAtPosition, getDefinitionsAtPosition, getImplementationsAtPosition, getReferencesAtPosition, getTypeDefinitionsAtPosition } from './goToSymbol.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { IsWebContext } from '../../../../platform/contextkey/common/contextkeys.js';\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\n    submenu: MenuId.EditorContextPeek,\n    title: nls.localize('peek.submenu', \"Peek\"),\n    group: 'navigation',\n    order: 100\n});\nexport class SymbolNavigationAnchor {\n    static is(thing) {\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        if (thing instanceof SymbolNavigationAnchor) {\n            return true;\n        }\n        if (corePosition.Position.isIPosition(thing.position) && thing.model) {\n            return true;\n        }\n        return false;\n    }\n    constructor(model, position) {\n        this.model = model;\n        this.position = position;\n    }\n}\nexport class SymbolNavigationAction extends EditorAction2 {\n    static { this._allSymbolNavigationCommands = new Map(); }\n    static { this._activeAlternativeCommands = new Set(); }\n    static all() {\n        return SymbolNavigationAction._allSymbolNavigationCommands.values();\n    }\n    static _patchConfig(opts) {\n        const result = { ...opts, f1: true };\n        // patch context menu when clause\n        if (result.menu) {\n            for (const item of Iterable.wrap(result.menu)) {\n                if (item.id === MenuId.EditorContext || item.id === MenuId.EditorContextPeek) {\n                    item.when = ContextKeyExpr.and(opts.precondition, item.when);\n                }\n            }\n        }\n        return result;\n    }\n    constructor(configuration, opts) {\n        super(SymbolNavigationAction._patchConfig(opts));\n        this.configuration = configuration;\n        SymbolNavigationAction._allSymbolNavigationCommands.set(opts.id, this);\n    }\n    runEditorCommand(accessor, editor, arg, range) {\n        if (!editor.hasModel()) {\n            return Promise.resolve(undefined);\n        }\n        const notificationService = accessor.get(INotificationService);\n        const editorService = accessor.get(ICodeEditorService);\n        const progressService = accessor.get(IEditorProgressService);\n        const symbolNavService = accessor.get(ISymbolNavigationService);\n        const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n        const instaService = accessor.get(IInstantiationService);\n        const model = editor.getModel();\n        const position = editor.getPosition();\n        const anchor = SymbolNavigationAnchor.is(arg) ? arg : new SymbolNavigationAnchor(model, position);\n        const cts = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */);\n        const promise = raceCancellation(this._getLocationModel(languageFeaturesService, anchor.model, anchor.position, cts.token), cts.token).then(async (references) => {\n            if (!references || cts.token.isCancellationRequested) {\n                return;\n            }\n            alert(references.ariaMessage);\n            let altAction;\n            if (references.referenceAt(model.uri, position)) {\n                const altActionId = this._getAlternativeCommand(editor);\n                if (!SymbolNavigationAction._activeAlternativeCommands.has(altActionId) && SymbolNavigationAction._allSymbolNavigationCommands.has(altActionId)) {\n                    altAction = SymbolNavigationAction._allSymbolNavigationCommands.get(altActionId);\n                }\n            }\n            const referenceCount = references.references.length;\n            if (referenceCount === 0) {\n                // no result -> show message\n                if (!this.configuration.muteMessage) {\n                    const info = model.getWordAtPosition(position);\n                    MessageController.get(editor)?.showMessage(this._getNoResultFoundMessage(info), position);\n                }\n            }\n            else if (referenceCount === 1 && altAction) {\n                // already at the only result, run alternative\n                SymbolNavigationAction._activeAlternativeCommands.add(this.desc.id);\n                instaService.invokeFunction((accessor) => altAction.runEditorCommand(accessor, editor, arg, range).finally(() => {\n                    SymbolNavigationAction._activeAlternativeCommands.delete(this.desc.id);\n                }));\n            }\n            else {\n                // normal results handling\n                return this._onResult(editorService, symbolNavService, editor, references, range);\n            }\n        }, (err) => {\n            // report an error\n            notificationService.error(err);\n        }).finally(() => {\n            cts.dispose();\n        });\n        progressService.showWhile(promise, 250);\n        return promise;\n    }\n    async _onResult(editorService, symbolNavService, editor, model, range) {\n        const gotoLocation = this._getGoToPreference(editor);\n        if (!(editor instanceof EmbeddedCodeEditorWidget) && (this.configuration.openInPeek || (gotoLocation === 'peek' && model.references.length > 1))) {\n            this._openInPeek(editor, model, range);\n        }\n        else {\n            const next = model.firstReference();\n            const peek = model.references.length > 1 && gotoLocation === 'gotoAndPeek';\n            const targetEditor = await this._openReference(editor, editorService, next, this.configuration.openToSide, !peek);\n            if (peek && targetEditor) {\n                this._openInPeek(targetEditor, model, range);\n            }\n            else {\n                model.dispose();\n            }\n            // keep remaining locations around when using\n            // 'goto'-mode\n            if (gotoLocation === 'goto') {\n                symbolNavService.put(next);\n            }\n        }\n    }\n    async _openReference(editor, editorService, reference, sideBySide, highlight) {\n        // range is the target-selection-range when we have one\n        // and the fallback is the 'full' range\n        let range = undefined;\n        if (isLocationLink(reference)) {\n            range = reference.targetSelectionRange;\n        }\n        if (!range) {\n            range = reference.range;\n        }\n        if (!range) {\n            return undefined;\n        }\n        const targetEditor = await editorService.openCodeEditor({\n            resource: reference.uri,\n            options: {\n                selection: Range.collapseToStart(range),\n                selectionRevealType: 3 /* TextEditorSelectionRevealType.NearTopIfOutsideViewport */,\n                selectionSource: \"code.jump\" /* TextEditorSelectionSource.JUMP */\n            }\n        }, editor, sideBySide);\n        if (!targetEditor) {\n            return undefined;\n        }\n        if (highlight) {\n            const modelNow = targetEditor.getModel();\n            const decorations = targetEditor.createDecorationsCollection([{ range, options: { description: 'symbol-navigate-action-highlight', className: 'symbolHighlight' } }]);\n            setTimeout(() => {\n                if (targetEditor.getModel() === modelNow) {\n                    decorations.clear();\n                }\n            }, 350);\n        }\n        return targetEditor;\n    }\n    _openInPeek(target, model, range) {\n        const controller = ReferencesController.get(target);\n        if (controller && target.hasModel()) {\n            controller.toggleWidget(range ?? target.getSelection(), createCancelablePromise(_ => Promise.resolve(model)), this.configuration.openInPeek);\n        }\n        else {\n            model.dispose();\n        }\n    }\n}\n//#region --- DEFINITION\nexport class DefinitionAction extends SymbolNavigationAction {\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getDefinitionsAtPosition(languageFeaturesService.definitionProvider, model, position, false, token), nls.localize('def.title', 'Definitions'));\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('noResultWord', \"No definition found for '{0}'\", info.word)\n            : nls.localize('generic.noResults', \"No definition found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeDefinitionCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).multipleDefinitions;\n    }\n}\nregisterAction2(class GoToDefinitionAction extends DefinitionAction {\n    static { this.id = 'editor.action.revealDefinition'; }\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: false,\n            muteMessage: false\n        }, {\n            id: GoToDefinitionAction.id,\n            title: {\n                ...nls.localize2('actions.goToDecl.label', \"Go to Definition\"),\n                mnemonicTitle: nls.localize({ key: 'miGotoDefinition', comment: ['&& denotes a mnemonic'] }, \"Go to &&Definition\"),\n            },\n            precondition: EditorContextKeys.hasDefinitionProvider,\n            keybinding: [{\n                    when: EditorContextKeys.editorTextFocus,\n                    primary: 70 /* KeyCode.F12 */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    when: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, IsWebContext),\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }],\n            menu: [{\n                    id: MenuId.EditorContext,\n                    group: 'navigation',\n                    order: 1.1\n                }, {\n                    id: MenuId.MenubarGoMenu,\n                    precondition: null,\n                    group: '4_symbol_nav',\n                    order: 2,\n                }]\n        });\n        CommandsRegistry.registerCommandAlias('editor.action.goToDeclaration', GoToDefinitionAction.id);\n    }\n});\nregisterAction2(class OpenDefinitionToSideAction extends DefinitionAction {\n    static { this.id = 'editor.action.revealDefinitionAside'; }\n    constructor() {\n        super({\n            openToSide: true,\n            openInPeek: false,\n            muteMessage: false\n        }, {\n            id: OpenDefinitionToSideAction.id,\n            title: nls.localize2('actions.goToDeclToSide.label', \"Open Definition to the Side\"),\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            keybinding: [{\n                    when: EditorContextKeys.editorTextFocus,\n                    primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 70 /* KeyCode.F12 */),\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    when: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, IsWebContext),\n                    primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */),\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }]\n        });\n        CommandsRegistry.registerCommandAlias('editor.action.openDeclarationToTheSide', OpenDefinitionToSideAction.id);\n    }\n});\nregisterAction2(class PeekDefinitionAction extends DefinitionAction {\n    static { this.id = 'editor.action.peekDefinition'; }\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: true,\n            muteMessage: false\n        }, {\n            id: PeekDefinitionAction.id,\n            title: nls.localize2('actions.previewDecl.label', \"Peek Definition\"),\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            keybinding: {\n                when: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 70 /* KeyCode.F12 */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 68 /* KeyCode.F10 */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menu: {\n                id: MenuId.EditorContextPeek,\n                group: 'peek',\n                order: 2\n            }\n        });\n        CommandsRegistry.registerCommandAlias('editor.action.previewDeclaration', PeekDefinitionAction.id);\n    }\n});\n//#endregion\n//#region --- DECLARATION\nclass DeclarationAction extends SymbolNavigationAction {\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getDeclarationsAtPosition(languageFeaturesService.declarationProvider, model, position, false, token), nls.localize('decl.title', 'Declarations'));\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word)\n            : nls.localize('decl.generic.noResults', \"No declaration found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeDeclarationCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).multipleDeclarations;\n    }\n}\nregisterAction2(class GoToDeclarationAction extends DeclarationAction {\n    static { this.id = 'editor.action.revealDeclaration'; }\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: false,\n            muteMessage: false\n        }, {\n            id: GoToDeclarationAction.id,\n            title: {\n                ...nls.localize2('actions.goToDeclaration.label', \"Go to Declaration\"),\n                mnemonicTitle: nls.localize({ key: 'miGotoDeclaration', comment: ['&& denotes a mnemonic'] }, \"Go to &&Declaration\"),\n            },\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            menu: [{\n                    id: MenuId.EditorContext,\n                    group: 'navigation',\n                    order: 1.3\n                }, {\n                    id: MenuId.MenubarGoMenu,\n                    precondition: null,\n                    group: '4_symbol_nav',\n                    order: 3,\n                }],\n        });\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word)\n            : nls.localize('decl.generic.noResults', \"No declaration found\");\n    }\n});\nregisterAction2(class PeekDeclarationAction extends DeclarationAction {\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: true,\n            muteMessage: false\n        }, {\n            id: 'editor.action.peekDeclaration',\n            title: nls.localize2('actions.peekDecl.label', \"Peek Declaration\"),\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            menu: {\n                id: MenuId.EditorContextPeek,\n                group: 'peek',\n                order: 3\n            }\n        });\n    }\n});\n//#endregion\n//#region --- TYPE DEFINITION\nclass TypeDefinitionAction extends SymbolNavigationAction {\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getTypeDefinitionsAtPosition(languageFeaturesService.typeDefinitionProvider, model, position, false, token), nls.localize('typedef.title', 'Type Definitions'));\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('goToTypeDefinition.noResultWord', \"No type definition found for '{0}'\", info.word)\n            : nls.localize('goToTypeDefinition.generic.noResults', \"No type definition found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeTypeDefinitionCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).multipleTypeDefinitions;\n    }\n}\nregisterAction2(class GoToTypeDefinitionAction extends TypeDefinitionAction {\n    static { this.ID = 'editor.action.goToTypeDefinition'; }\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: false,\n            muteMessage: false\n        }, {\n            id: GoToTypeDefinitionAction.ID,\n            title: {\n                ...nls.localize2('actions.goToTypeDefinition.label', \"Go to Type Definition\"),\n                mnemonicTitle: nls.localize({ key: 'miGotoTypeDefinition', comment: ['&& denotes a mnemonic'] }, \"Go to &&Type Definition\"),\n            },\n            precondition: EditorContextKeys.hasTypeDefinitionProvider,\n            keybinding: {\n                when: EditorContextKeys.editorTextFocus,\n                primary: 0,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menu: [{\n                    id: MenuId.EditorContext,\n                    group: 'navigation',\n                    order: 1.4\n                }, {\n                    id: MenuId.MenubarGoMenu,\n                    precondition: null,\n                    group: '4_symbol_nav',\n                    order: 3,\n                }]\n        });\n    }\n});\nregisterAction2(class PeekTypeDefinitionAction extends TypeDefinitionAction {\n    static { this.ID = 'editor.action.peekTypeDefinition'; }\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: true,\n            muteMessage: false\n        }, {\n            id: PeekTypeDefinitionAction.ID,\n            title: nls.localize2('actions.peekTypeDefinition.label', \"Peek Type Definition\"),\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            menu: {\n                id: MenuId.EditorContextPeek,\n                group: 'peek',\n                order: 4\n            }\n        });\n    }\n});\n//#endregion\n//#region --- IMPLEMENTATION\nclass ImplementationAction extends SymbolNavigationAction {\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getImplementationsAtPosition(languageFeaturesService.implementationProvider, model, position, false, token), nls.localize('impl.title', 'Implementations'));\n    }\n    _getNoResultFoundMessage(info) {\n        return info && info.word\n            ? nls.localize('goToImplementation.noResultWord', \"No implementation found for '{0}'\", info.word)\n            : nls.localize('goToImplementation.generic.noResults', \"No implementation found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeImplementationCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).multipleImplementations;\n    }\n}\nregisterAction2(class GoToImplementationAction extends ImplementationAction {\n    static { this.ID = 'editor.action.goToImplementation'; }\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: false,\n            muteMessage: false\n        }, {\n            id: GoToImplementationAction.ID,\n            title: {\n                ...nls.localize2('actions.goToImplementation.label', \"Go to Implementations\"),\n                mnemonicTitle: nls.localize({ key: 'miGotoImplementation', comment: ['&& denotes a mnemonic'] }, \"Go to &&Implementations\"),\n            },\n            precondition: EditorContextKeys.hasImplementationProvider,\n            keybinding: {\n                when: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 70 /* KeyCode.F12 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menu: [{\n                    id: MenuId.EditorContext,\n                    group: 'navigation',\n                    order: 1.45\n                }, {\n                    id: MenuId.MenubarGoMenu,\n                    precondition: null,\n                    group: '4_symbol_nav',\n                    order: 4,\n                }]\n        });\n    }\n});\nregisterAction2(class PeekImplementationAction extends ImplementationAction {\n    static { this.ID = 'editor.action.peekImplementation'; }\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: true,\n            muteMessage: false\n        }, {\n            id: PeekImplementationAction.ID,\n            title: nls.localize2('actions.peekImplementation.label', \"Peek Implementations\"),\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            keybinding: {\n                when: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menu: {\n                id: MenuId.EditorContextPeek,\n                group: 'peek',\n                order: 5\n            }\n        });\n    }\n});\n//#endregion\n//#region --- REFERENCES\nclass ReferencesAction extends SymbolNavigationAction {\n    _getNoResultFoundMessage(info) {\n        return info\n            ? nls.localize('references.no', \"No references found for '{0}'\", info.word)\n            : nls.localize('references.noGeneric', \"No references found\");\n    }\n    _getAlternativeCommand(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).alternativeReferenceCommand;\n    }\n    _getGoToPreference(editor) {\n        return editor.getOption(58 /* EditorOption.gotoLocation */).multipleReferences;\n    }\n}\nregisterAction2(class GoToReferencesAction extends ReferencesAction {\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: false,\n            muteMessage: false\n        }, {\n            id: 'editor.action.goToReferences',\n            title: {\n                ...nls.localize2('goToReferences.label', \"Go to References\"),\n                mnemonicTitle: nls.localize({ key: 'miGotoReference', comment: ['&& denotes a mnemonic'] }, \"Go to &&References\"),\n            },\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            keybinding: {\n                when: EditorContextKeys.editorTextFocus,\n                primary: 1024 /* KeyMod.Shift */ | 70 /* KeyCode.F12 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menu: [{\n                    id: MenuId.EditorContext,\n                    group: 'navigation',\n                    order: 1.45\n                }, {\n                    id: MenuId.MenubarGoMenu,\n                    precondition: null,\n                    group: '4_symbol_nav',\n                    order: 5,\n                }]\n        });\n    }\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, true, false, token), nls.localize('ref.title', 'References'));\n    }\n});\nregisterAction2(class PeekReferencesAction extends ReferencesAction {\n    constructor() {\n        super({\n            openToSide: false,\n            openInPeek: true,\n            muteMessage: false\n        }, {\n            id: 'editor.action.referenceSearch.trigger',\n            title: nls.localize2('references.action.label', \"Peek References\"),\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n            menu: {\n                id: MenuId.EditorContextPeek,\n                group: 'peek',\n                order: 6\n            }\n        });\n    }\n    async _getLocationModel(languageFeaturesService, model, position, token) {\n        return new ReferencesModel(await getReferencesAtPosition(languageFeaturesService.referenceProvider, model, position, false, false, token), nls.localize('ref.title', 'References'));\n    }\n});\n//#endregion\n//#region --- GENERIC goto symbols command\nclass GenericGoToLocationAction extends SymbolNavigationAction {\n    constructor(config, _references, _gotoMultipleBehaviour) {\n        super(config, {\n            id: 'editor.action.goToLocation',\n            title: nls.localize2('label.generic', \"Go to Any Symbol\"),\n            precondition: ContextKeyExpr.and(PeekContext.notInPeekEditor, EditorContextKeys.isInEmbeddedEditor.toNegated()),\n        });\n        this._references = _references;\n        this._gotoMultipleBehaviour = _gotoMultipleBehaviour;\n    }\n    async _getLocationModel(languageFeaturesService, _model, _position, _token) {\n        return new ReferencesModel(this._references, nls.localize('generic.title', 'Locations'));\n    }\n    _getNoResultFoundMessage(info) {\n        return info && nls.localize('generic.noResult', \"No results for '{0}'\", info.word) || '';\n    }\n    _getGoToPreference(editor) {\n        return this._gotoMultipleBehaviour ?? editor.getOption(58 /* EditorOption.gotoLocation */).multipleReferences;\n    }\n    _getAlternativeCommand() { return ''; }\n}\nCommandsRegistry.registerCommand({\n    id: 'editor.action.goToLocations',\n    metadata: {\n        description: 'Go to locations from a position in a file',\n        args: [\n            { name: 'uri', description: 'The text document in which to start', constraint: URI },\n            { name: 'position', description: 'The position at which to start', constraint: corePosition.Position.isIPosition },\n            { name: 'locations', description: 'An array of locations.', constraint: Array },\n            { name: 'multiple', description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto`' },\n            { name: 'noResultsMessage', description: 'Human readable message that shows when locations is empty.' },\n        ]\n    },\n    handler: async (accessor, resource, position, references, multiple, noResultsMessage, openInPeek) => {\n        assertType(URI.isUri(resource));\n        assertType(corePosition.Position.isIPosition(position));\n        assertType(Array.isArray(references));\n        assertType(typeof multiple === 'undefined' || typeof multiple === 'string');\n        assertType(typeof openInPeek === 'undefined' || typeof openInPeek === 'boolean');\n        const editorService = accessor.get(ICodeEditorService);\n        const editor = await editorService.openCodeEditor({ resource }, editorService.getFocusedCodeEditor());\n        if (isCodeEditor(editor)) {\n            editor.setPosition(position);\n            editor.revealPositionInCenterIfOutsideViewport(position, 0 /* ScrollType.Smooth */);\n            return editor.invokeWithinContext(accessor => {\n                const command = new class extends GenericGoToLocationAction {\n                    _getNoResultFoundMessage(info) {\n                        return noResultsMessage || super._getNoResultFoundMessage(info);\n                    }\n                }({\n                    muteMessage: !Boolean(noResultsMessage),\n                    openInPeek: Boolean(openInPeek),\n                    openToSide: false\n                }, references, multiple);\n                accessor.get(IInstantiationService).invokeFunction(command.run.bind(command), editor);\n            });\n        }\n    }\n});\nCommandsRegistry.registerCommand({\n    id: 'editor.action.peekLocations',\n    metadata: {\n        description: 'Peek locations from a position in a file',\n        args: [\n            { name: 'uri', description: 'The text document in which to start', constraint: URI },\n            { name: 'position', description: 'The position at which to start', constraint: corePosition.Position.isIPosition },\n            { name: 'locations', description: 'An array of locations.', constraint: Array },\n            { name: 'multiple', description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto`' },\n        ]\n    },\n    handler: async (accessor, resource, position, references, multiple) => {\n        accessor.get(ICommandService).executeCommand('editor.action.goToLocations', resource, position, references, multiple, undefined, true);\n    }\n});\n//#endregion\n//#region --- REFERENCE search special commands\nCommandsRegistry.registerCommand({\n    id: 'editor.action.findReferences',\n    handler: (accessor, resource, position) => {\n        assertType(URI.isUri(resource));\n        assertType(corePosition.Position.isIPosition(position));\n        const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n        const codeEditorService = accessor.get(ICodeEditorService);\n        return codeEditorService.openCodeEditor({ resource }, codeEditorService.getFocusedCodeEditor()).then(control => {\n            if (!isCodeEditor(control) || !control.hasModel()) {\n                return undefined;\n            }\n            const controller = ReferencesController.get(control);\n            if (!controller) {\n                return undefined;\n            }\n            const references = createCancelablePromise(token => getReferencesAtPosition(languageFeaturesService.referenceProvider, control.getModel(), corePosition.Position.lift(position), false, false, token).then(references => new ReferencesModel(references, nls.localize('ref.title', 'References'))));\n            const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n            return Promise.resolve(controller.toggleWidget(range, references, false));\n        });\n    }\n});\n// use NEW command\nCommandsRegistry.registerCommandAlias('editor.action.showReferences', 'editor.action.peekLocations');\n//#endregion\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
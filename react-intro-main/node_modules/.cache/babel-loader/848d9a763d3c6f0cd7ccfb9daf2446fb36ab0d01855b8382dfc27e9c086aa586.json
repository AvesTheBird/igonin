{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { IDENTITY_FIELD_NAME } from './Constants';\nimport { getFunctionName } from './StringUtils';\n/**\n * @class\n *\n * Identity for JavaScript objects and functions. This is implemented using\n * a simple incrementing counter which is stored in each object under\n * {@link FIELD_NAME}.\n *\n * The identity for an object does not change during its lifecycle.\n */\nclass ObjectIdentity {\n  /**\n   * Returns the ID for the given object or function.\n   */\n  static get(obj) {\n    if (obj) {\n      if (obj[IDENTITY_FIELD_NAME] === null || obj[IDENTITY_FIELD_NAME] === undefined) {\n        if (typeof obj === 'object') {\n          const ctor = getFunctionName(obj.constructor);\n          obj[IDENTITY_FIELD_NAME] = \"\".concat(ctor, \"#\").concat(ObjectIdentity.counter++);\n        } else if (typeof obj === 'function') {\n          obj[IDENTITY_FIELD_NAME] = \"Function#\".concat(ObjectIdentity.counter++);\n        }\n      }\n      return obj[IDENTITY_FIELD_NAME];\n    }\n    return null;\n  }\n  /**\n   * Deletes the ID from the given object or function.\n   */\n  static clear(obj) {\n    delete obj[IDENTITY_FIELD_NAME];\n  }\n}\n/**\n * Name of the field to be used to store the object ID. Default is\n * <code>mxObjectId</code>.\n */\nObjectIdentity.FIELD_NAME = IDENTITY_FIELD_NAME;\n/**\n * Current counter.\n */\nObjectIdentity.counter = 0;\nexport default ObjectIdentity;","map":{"version":3,"names":["IDENTITY_FIELD_NAME","getFunctionName","ObjectIdentity","get","obj","undefined","ctor","constructor","concat","counter","clear","FIELD_NAME"],"sources":["D:/ospanel/domains/react/react-intro/node_modules/@maxgraph/core/dist/util/ObjectIdentity.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { IDENTITY_FIELD_NAME } from './Constants';\nimport { getFunctionName } from './StringUtils';\n/**\n * @class\n *\n * Identity for JavaScript objects and functions. This is implemented using\n * a simple incrementing counter which is stored in each object under\n * {@link FIELD_NAME}.\n *\n * The identity for an object does not change during its lifecycle.\n */\nclass ObjectIdentity {\n    /**\n     * Returns the ID for the given object or function.\n     */\n    static get(obj) {\n        if (obj) {\n            if (obj[IDENTITY_FIELD_NAME] === null || obj[IDENTITY_FIELD_NAME] === undefined) {\n                if (typeof obj === 'object') {\n                    const ctor = getFunctionName(obj.constructor);\n                    obj[IDENTITY_FIELD_NAME] = `${ctor}#${ObjectIdentity.counter++}`;\n                }\n                else if (typeof obj === 'function') {\n                    obj[IDENTITY_FIELD_NAME] = `Function#${ObjectIdentity.counter++}`;\n                }\n            }\n            return obj[IDENTITY_FIELD_NAME];\n        }\n        return null;\n    }\n    /**\n     * Deletes the ID from the given object or function.\n     */\n    static clear(obj) {\n        delete obj[IDENTITY_FIELD_NAME];\n    }\n}\n/**\n * Name of the field to be used to store the object ID. Default is\n * <code>mxObjectId</code>.\n */\nObjectIdentity.FIELD_NAME = IDENTITY_FIELD_NAME;\n/**\n * Current counter.\n */\nObjectIdentity.counter = 0;\nexport default ObjectIdentity;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,mBAAmB,QAAQ,aAAa;AACjD,SAASC,eAAe,QAAQ,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,CAAC;EACjB;AACJ;AACA;EACI,OAAOC,GAAGA,CAACC,GAAG,EAAE;IACZ,IAAIA,GAAG,EAAE;MACL,IAAIA,GAAG,CAACJ,mBAAmB,CAAC,KAAK,IAAI,IAAII,GAAG,CAACJ,mBAAmB,CAAC,KAAKK,SAAS,EAAE;QAC7E,IAAI,OAAOD,GAAG,KAAK,QAAQ,EAAE;UACzB,MAAME,IAAI,GAAGL,eAAe,CAACG,GAAG,CAACG,WAAW,CAAC;UAC7CH,GAAG,CAACJ,mBAAmB,CAAC,MAAAQ,MAAA,CAAMF,IAAI,OAAAE,MAAA,CAAIN,cAAc,CAACO,OAAO,EAAE,CAAE;QACpE,CAAC,MACI,IAAI,OAAOL,GAAG,KAAK,UAAU,EAAE;UAChCA,GAAG,CAACJ,mBAAmB,CAAC,eAAAQ,MAAA,CAAeN,cAAc,CAACO,OAAO,EAAE,CAAE;QACrE;MACJ;MACA,OAAOL,GAAG,CAACJ,mBAAmB,CAAC;IACnC;IACA,OAAO,IAAI;EACf;EACA;AACJ;AACA;EACI,OAAOU,KAAKA,CAACN,GAAG,EAAE;IACd,OAAOA,GAAG,CAACJ,mBAAmB,CAAC;EACnC;AACJ;AACA;AACA;AACA;AACA;AACAE,cAAc,CAACS,UAAU,GAAGX,mBAAmB;AAC/C;AACA;AACA;AACAE,cAAc,CAACO,OAAO,GAAG,CAAC;AAC1B,eAAeP,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
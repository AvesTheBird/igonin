{"ast":null,"code":"'use strict';\n\nconst arcShape = require('./arc-shape.js');\nconst renderLabel = require('./render-label.js');\nconst renderArc = (Edge, from, to, shapeProps) => ['path', {\n  id: 'gmark_' + Edge.from + '_' + Edge.to,\n  d: shapeProps.d || 'M ' + from.x + ',' + from.y + ' ' + to.x + ',' + to.y,\n  style: shapeProps.style || 'fill:none;stroke:#00F;stroke-width:1'\n}];\nconst labeler = (lane, Events) => (element, i) => {\n  const text = element.node;\n  lane.period = element.period ? element.period : 1;\n  lane.phase = (element.phase ? element.phase * 2 : 0) + lane.xmin_cfg;\n  if (text) {\n    const stack = text.split('');\n    let pos = 0;\n    while (stack.length) {\n      const eventname = stack.shift();\n      if (eventname !== '.') {\n        Events[eventname] = {\n          x: lane.xs * (2 * pos * lane.period * lane.hscale - lane.phase) + lane.xlabel,\n          y: i * lane.yo + lane.y0 + lane.ys * 0.5\n        };\n      }\n      pos += 1;\n    }\n  }\n};\nconst archer = (res, Events, arcFontSize) => element => {\n  const words = element.trim().split(/\\s+/);\n  const Edge = {\n    words: words,\n    label: element.substring(words[0].length).substring(1),\n    from: words[0].substr(0, 1),\n    to: words[0].substr(-1, 1),\n    shape: words[0].slice(1, -1)\n  };\n  const from = Events[Edge.from];\n  const to = Events[Edge.to];\n  if (from && to) {\n    const shapeProps = arcShape(Edge, from, to);\n    const lx = shapeProps.lx;\n    const ly = shapeProps.ly;\n    res.push(renderArc(Edge, from, to, shapeProps));\n    if (Edge.label) {\n      res.push(renderLabel({\n        x: lx,\n        y: ly\n      }, Edge.label, arcFontSize));\n    }\n  }\n};\nfunction renderArcs(lanes, index, source, lane) {\n  const arcFontSize = source && source.config && source.config.arcFontSize ? source.config.arcFontSize : 11;\n  const res = ['g', {\n    id: 'wavearcs_' + index\n  }];\n  const Events = {};\n  if (Array.isArray(lanes)) {\n    lanes.map(labeler(lane, Events));\n    if (Array.isArray(source.edge)) {\n      source.edge.map(archer(res, Events, arcFontSize));\n    }\n    Object.keys(Events).map(function (k) {\n      if (k === k.toLowerCase()) {\n        if (Events[k].x > 0) {\n          res.push(renderLabel({\n            x: Events[k].x,\n            y: Events[k].y\n          }, k + '', arcFontSize));\n        }\n      }\n    });\n  }\n  return res;\n}\nmodule.exports = renderArcs;","map":{"version":3,"names":["arcShape","require","renderLabel","renderArc","Edge","from","to","shapeProps","id","d","x","y","style","labeler","lane","Events","element","i","text","node","period","phase","xmin_cfg","stack","split","pos","length","eventname","shift","xs","hscale","xlabel","yo","y0","ys","archer","res","arcFontSize","words","trim","label","substring","substr","shape","slice","lx","ly","push","renderArcs","lanes","index","source","config","Array","isArray","map","edge","Object","keys","k","toLowerCase","module","exports"],"sources":["D:/ospanel/domains/react/react-intro-main/node_modules/wavedrom/lib/render-arcs.js"],"sourcesContent":["'use strict';\n\nconst arcShape = require('./arc-shape.js');\nconst renderLabel = require('./render-label.js');\n\nconst renderArc = (Edge, from, to, shapeProps) =>\n    ['path', {\n        id: 'gmark_' + Edge.from + '_' + Edge.to,\n        d: shapeProps.d || 'M ' + from.x + ',' + from.y + ' ' + to.x + ',' + to.y,\n        style: shapeProps.style || 'fill:none;stroke:#00F;stroke-width:1'\n    }];\n\nconst labeler = (lane, Events) => (element, i) => {\n    const text = element.node;\n    lane.period = element.period ? element.period : 1;\n    lane.phase  = (element.phase ? element.phase * 2 : 0) + lane.xmin_cfg;\n    if (text) {\n        const stack = text.split('');\n        let pos = 0;\n        while (stack.length) {\n            const eventname = stack.shift();\n            if (eventname !== '.') {\n                Events[eventname] = {\n                    x: lane.xs * (2 * pos * lane.period * lane.hscale - lane.phase) + lane.xlabel,\n                    y: i * lane.yo + lane.y0 + lane.ys * 0.5\n                };\n            }\n            pos += 1;\n        }\n    }\n};\n\nconst archer = (res, Events, arcFontSize) => (element) => {\n    const words = element.trim().split(/\\s+/);\n    const Edge = {\n        words: words,\n        label: element.substring(words[0].length).substring(1),\n        from:  words[0].substr(0, 1),\n        to:    words[0].substr(-1, 1),\n        shape: words[0].slice(1, -1)\n    };\n    const from = Events[Edge.from];\n    const to = Events[Edge.to];\n\n    if (from && to) {\n        const shapeProps = arcShape(Edge, from, to);\n        const lx = shapeProps.lx;\n        const ly = shapeProps.ly;\n        res.push(renderArc(Edge, from, to, shapeProps));\n        if (Edge.label) {\n            res.push(renderLabel({x: lx, y: ly}, Edge.label, arcFontSize));\n        }\n    }\n};\n\nfunction renderArcs (lanes, index, source, lane) {\n    const arcFontSize = (source && source.config && source.config.arcFontSize)\n        ? source.config.arcFontSize\n        : 11;\n\n    const res = ['g', {id: 'wavearcs_' + index}];\n    const Events = {};\n    if (Array.isArray(lanes)) {\n        lanes.map(labeler(lane, Events));\n        if (Array.isArray(source.edge)) {\n            source.edge.map(archer(res, Events, arcFontSize));\n        }\n        Object.keys(Events).map(function (k) {\n            if (k === k.toLowerCase()) {\n                if (Events[k].x > 0) {\n                    res.push(renderLabel({\n                        x: Events[k].x,\n                        y: Events[k].y\n                    }, k + '', arcFontSize));\n                }\n            }\n        });\n    }\n    return res;\n}\n\nmodule.exports = renderArcs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\ospanel\\\\domains\\\\old\\\\react\\\\react-intro\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { YourComponent, FileUploader } from './components/GraphComponent'; // Предполагается, что FileUploader не экспортируется по умолчанию\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [graph, setGraph] = useState(''); // Используем состояние для хранения значения графа\n\n  // Функция для обновления графа\n  const handleChange = newValue => {\n    setGraph(newValue); // Сохраняем новое значение графа\n    console.log('ПОБЕДА');\n  };\n  console.log(handleChange);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FileUploader, {\n      graph2: graph\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YourComponent, {\n      graph: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"qHRcrmuj1kH5JFl2Mmysl/slsdU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","YourComponent","FileUploader","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","graph","setGraph","handleChange","newValue","console","log","children","graph2","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ospanel/domains/old/react/react-intro/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { YourComponent, FileUploader } from './components/GraphComponent'; // Предполагается, что FileUploader не экспортируется по умолчанию\n\nexport default function App() {\n  const [graph, setGraph] = useState(''); // Используем состояние для хранения значения графа\n  \n  // Функция для обновления графа\n  const handleChange = (newValue) => {\n    setGraph(newValue); // Сохраняем новое значение графа\n    console.log('ПОБЕДА');\n  };\n  console.log(handleChange);\n  return (\n    <>\n      {/* Передаем функцию обновления графа и текущее значение в FileUploader */}\n      <FileUploader graph2={graph} />\n      {/* Передаем функцию обновления графа в YourComponent */}\n      <YourComponent graph={handleChange} />\n    </>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,EAAEC,YAAY,QAAQ,6BAA6B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3E,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC;EACA,MAAMW,YAAY,GAAIC,QAAQ,IAAK;IACjCF,QAAQ,CAACE,QAAQ,CAAC,CAAC,CAAC;IACpBC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACvB,CAAC;EACDD,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;EACzB,oBACEP,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBAEEX,OAAA,CAACF,YAAY;MAACc,MAAM,EAAEP;IAAM;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE/BhB,OAAA,CAACH,aAAa;MAACQ,KAAK,EAAEE;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACtC,CAAC;AAEP;AAACZ,EAAA,CAjBuBD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { alert as alertFn } from '../../../../base/browser/ui/aria/aria.js';\nimport { Toggle } from '../../../../base/browser/ui/toggle/toggle.js';\nimport { Sash } from '../../../../base/browser/ui/sash/sash.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './findWidget.css';\nimport { Range } from '../../../common/core/range.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_REPLACE_INPUT_FOCUSED, FIND_IDS, MATCHES_LIMIT } from './findModel.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextScopedFindInput, ContextScopedReplaceInput } from '../../../../platform/history/browser/contextScopedHistoryWidget.js';\nimport { showHistoryKeybindingHint } from '../../../../platform/history/browser/historyWidgetKeybindingHint.js';\nimport { asCssVariable, contrastBorder, editorFindMatchForeground, editorFindMatchHighlightBorder, editorFindMatchHighlightForeground, editorFindRangeHighlightBorder, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon, widgetClose } from '../../../../platform/theme/common/iconRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport { defaultInputBoxStyles, defaultToggleStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { createInstantHoverDelegate, getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nconst findCollapsedIcon = registerIcon('find-collapsed', Codicon.chevronRight, nls.localize('findCollapsedIcon', 'Icon to indicate that the editor find widget is collapsed.'));\nconst findExpandedIcon = registerIcon('find-expanded', Codicon.chevronDown, nls.localize('findExpandedIcon', 'Icon to indicate that the editor find widget is expanded.'));\nexport const findSelectionIcon = registerIcon('find-selection', Codicon.selection, nls.localize('findSelectionIcon', 'Icon for \\'Find in Selection\\' in the editor find widget.'));\nexport const findReplaceIcon = registerIcon('find-replace', Codicon.replace, nls.localize('findReplaceIcon', 'Icon for \\'Replace\\' in the editor find widget.'));\nexport const findReplaceAllIcon = registerIcon('find-replace-all', Codicon.replaceAll, nls.localize('findReplaceAllIcon', 'Icon for \\'Replace All\\' in the editor find widget.'));\nexport const findPreviousMatchIcon = registerIcon('find-previous-match', Codicon.arrowUp, nls.localize('findPreviousMatchIcon', 'Icon for \\'Find Previous\\' in the editor find widget.'));\nexport const findNextMatchIcon = registerIcon('find-next-match', Codicon.arrowDown, nls.localize('findNextMatchIcon', 'Icon for \\'Find Next\\' in the editor find widget.'));\nconst NLS_FIND_DIALOG_LABEL = nls.localize('label.findDialog', \"Find / Replace\");\nconst NLS_FIND_INPUT_LABEL = nls.localize('label.find', \"Find\");\nconst NLS_FIND_INPUT_PLACEHOLDER = nls.localize('placeholder.find', \"Find\");\nconst NLS_PREVIOUS_MATCH_BTN_LABEL = nls.localize('label.previousMatchButton', \"Previous Match\");\nconst NLS_NEXT_MATCH_BTN_LABEL = nls.localize('label.nextMatchButton', \"Next Match\");\nconst NLS_TOGGLE_SELECTION_FIND_TITLE = nls.localize('label.toggleSelectionFind', \"Find in Selection\");\nconst NLS_CLOSE_BTN_LABEL = nls.localize('label.closeButton', \"Close\");\nconst NLS_REPLACE_INPUT_LABEL = nls.localize('label.replace', \"Replace\");\nconst NLS_REPLACE_INPUT_PLACEHOLDER = nls.localize('placeholder.replace', \"Replace\");\nconst NLS_REPLACE_BTN_LABEL = nls.localize('label.replaceButton', \"Replace\");\nconst NLS_REPLACE_ALL_BTN_LABEL = nls.localize('label.replaceAllButton', \"Replace All\");\nconst NLS_TOGGLE_REPLACE_MODE_BTN_LABEL = nls.localize('label.toggleReplaceButton', \"Toggle Replace\");\nconst NLS_MATCHES_COUNT_LIMIT_TITLE = nls.localize('title.matchesCountLimit', \"Only the first {0} results are highlighted, but all find operations work on the entire text.\", MATCHES_LIMIT);\nexport const NLS_MATCHES_LOCATION = nls.localize('label.matchesLocation', \"{0} of {1}\");\nexport const NLS_NO_RESULTS = nls.localize('label.noResults', \"No results\");\nconst FIND_WIDGET_INITIAL_WIDTH = 419;\nconst PART_WIDTH = 275;\nconst FIND_INPUT_AREA_WIDTH = PART_WIDTH - 54;\nlet MAX_MATCHES_COUNT_WIDTH = 69;\n// let FIND_ALL_CONTROLS_WIDTH = 17/** Find Input margin-left */ + (MAX_MATCHES_COUNT_WIDTH + 3 + 1) /** Match Results */ + 23 /** Button */ * 4 + 2/** sash */;\nconst FIND_INPUT_AREA_HEIGHT = 33; // The height of Find Widget when Replace Input is not visible.\nconst ctrlEnterReplaceAllWarningPromptedKey = 'ctrlEnterReplaceAll.windows.donotask';\nconst ctrlKeyMod = platform.isMacintosh ? 256 /* KeyMod.WinCtrl */ : 2048 /* KeyMod.CtrlCmd */;\nexport class FindWidgetViewZone {\n  constructor(afterLineNumber) {\n    this.afterLineNumber = afterLineNumber;\n    this.heightInPx = FIND_INPUT_AREA_HEIGHT;\n    this.suppressMouseDown = false;\n    this.domNode = document.createElement('div');\n    this.domNode.className = 'dock-find-viewzone';\n  }\n}\nfunction stopPropagationForMultiLineUpwards(event, value, textarea) {\n  const isMultiline = !!value.match(/\\n/);\n  if (textarea && isMultiline && textarea.selectionStart > 0) {\n    event.stopPropagation();\n    return;\n  }\n}\nfunction stopPropagationForMultiLineDownwards(event, value, textarea) {\n  const isMultiline = !!value.match(/\\n/);\n  if (textarea && isMultiline && textarea.selectionEnd < textarea.value.length) {\n    event.stopPropagation();\n    return;\n  }\n}\nexport class FindWidget extends Widget {\n  static {\n    this.ID = 'editor.contrib.findWidget';\n  }\n  constructor(codeEditor, controller, state, contextViewProvider, keybindingService, contextKeyService, themeService, storageService, notificationService, _hoverService) {\n    super();\n    this._hoverService = _hoverService;\n    this._cachedHeight = null;\n    this._revealTimeouts = [];\n    this._codeEditor = codeEditor;\n    this._controller = controller;\n    this._state = state;\n    this._contextViewProvider = contextViewProvider;\n    this._keybindingService = keybindingService;\n    this._contextKeyService = contextKeyService;\n    this._storageService = storageService;\n    this._notificationService = notificationService;\n    this._ctrlEnterReplaceAllWarningPrompted = !!storageService.getBoolean(ctrlEnterReplaceAllWarningPromptedKey, 0 /* StorageScope.PROFILE */);\n    this._isVisible = false;\n    this._isReplaceVisible = false;\n    this._ignoreChangeEvent = false;\n    this._updateHistoryDelayer = new Delayer(500);\n    this._register(toDisposable(() => this._updateHistoryDelayer.cancel()));\n    this._register(this._state.onFindReplaceStateChange(e => this._onStateChanged(e)));\n    this._buildDomNode();\n    this._updateButtons();\n    this._tryUpdateWidgetWidth();\n    this._findInput.inputBox.layout();\n    this._register(this._codeEditor.onDidChangeConfiguration(e => {\n      if (e.hasChanged(92 /* EditorOption.readOnly */)) {\n        if (this._codeEditor.getOption(92 /* EditorOption.readOnly */)) {\n          // Hide replace part if editor becomes read only\n          this._state.change({\n            isReplaceRevealed: false\n          }, false);\n        }\n        this._updateButtons();\n      }\n      if (e.hasChanged(146 /* EditorOption.layoutInfo */)) {\n        this._tryUpdateWidgetWidth();\n      }\n      if (e.hasChanged(2 /* EditorOption.accessibilitySupport */)) {\n        this.updateAccessibilitySupport();\n      }\n      if (e.hasChanged(41 /* EditorOption.find */)) {\n        const supportLoop = this._codeEditor.getOption(41 /* EditorOption.find */).loop;\n        this._state.change({\n          loop: supportLoop\n        }, false);\n        const addExtraSpaceOnTop = this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop;\n        if (addExtraSpaceOnTop && !this._viewZone) {\n          this._viewZone = new FindWidgetViewZone(0);\n          this._showViewZone();\n        }\n        if (!addExtraSpaceOnTop && this._viewZone) {\n          this._removeViewZone();\n        }\n      }\n    }));\n    this.updateAccessibilitySupport();\n    this._register(this._codeEditor.onDidChangeCursorSelection(() => {\n      if (this._isVisible) {\n        this._updateToggleSelectionFindButton();\n      }\n    }));\n    this._register(this._codeEditor.onDidFocusEditorWidget(async () => {\n      if (this._isVisible) {\n        const globalBufferTerm = await this._controller.getGlobalBufferTerm();\n        if (globalBufferTerm && globalBufferTerm !== this._state.searchString) {\n          this._state.change({\n            searchString: globalBufferTerm\n          }, false);\n          this._findInput.select();\n        }\n      }\n    }));\n    this._findInputFocused = CONTEXT_FIND_INPUT_FOCUSED.bindTo(contextKeyService);\n    this._findFocusTracker = this._register(dom.trackFocus(this._findInput.inputBox.inputElement));\n    this._register(this._findFocusTracker.onDidFocus(() => {\n      this._findInputFocused.set(true);\n      this._updateSearchScope();\n    }));\n    this._register(this._findFocusTracker.onDidBlur(() => {\n      this._findInputFocused.set(false);\n    }));\n    this._replaceInputFocused = CONTEXT_REPLACE_INPUT_FOCUSED.bindTo(contextKeyService);\n    this._replaceFocusTracker = this._register(dom.trackFocus(this._replaceInput.inputBox.inputElement));\n    this._register(this._replaceFocusTracker.onDidFocus(() => {\n      this._replaceInputFocused.set(true);\n      this._updateSearchScope();\n    }));\n    this._register(this._replaceFocusTracker.onDidBlur(() => {\n      this._replaceInputFocused.set(false);\n    }));\n    this._codeEditor.addOverlayWidget(this);\n    if (this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop) {\n      this._viewZone = new FindWidgetViewZone(0); // Put it before the first line then users can scroll beyond the first line.\n    }\n    this._register(this._codeEditor.onDidChangeModel(() => {\n      if (!this._isVisible) {\n        return;\n      }\n      this._viewZoneId = undefined;\n    }));\n    this._register(this._codeEditor.onDidScrollChange(e => {\n      if (e.scrollTopChanged) {\n        this._layoutViewZone();\n        return;\n      }\n      // for other scroll changes, layout the viewzone in next tick to avoid ruining current rendering.\n      setTimeout(() => {\n        this._layoutViewZone();\n      }, 0);\n    }));\n  }\n  // ----- IOverlayWidget API\n  getId() {\n    return FindWidget.ID;\n  }\n  getDomNode() {\n    return this._domNode;\n  }\n  getPosition() {\n    if (this._isVisible) {\n      return {\n        preference: 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */\n      };\n    }\n    return null;\n  }\n  // ----- React to state changes\n  _onStateChanged(e) {\n    if (e.searchString) {\n      try {\n        this._ignoreChangeEvent = true;\n        this._findInput.setValue(this._state.searchString);\n      } finally {\n        this._ignoreChangeEvent = false;\n      }\n      this._updateButtons();\n    }\n    if (e.replaceString) {\n      this._replaceInput.inputBox.value = this._state.replaceString;\n    }\n    if (e.isRevealed) {\n      if (this._state.isRevealed) {\n        this._reveal();\n      } else {\n        this._hide(true);\n      }\n    }\n    if (e.isReplaceRevealed) {\n      if (this._state.isReplaceRevealed) {\n        if (!this._codeEditor.getOption(92 /* EditorOption.readOnly */) && !this._isReplaceVisible) {\n          this._isReplaceVisible = true;\n          this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n          this._updateButtons();\n          this._replaceInput.inputBox.layout();\n        }\n      } else {\n        if (this._isReplaceVisible) {\n          this._isReplaceVisible = false;\n          this._updateButtons();\n        }\n      }\n    }\n    if ((e.isRevealed || e.isReplaceRevealed) && (this._state.isRevealed || this._state.isReplaceRevealed)) {\n      if (this._tryUpdateHeight()) {\n        this._showViewZone();\n      }\n    }\n    if (e.isRegex) {\n      this._findInput.setRegex(this._state.isRegex);\n    }\n    if (e.wholeWord) {\n      this._findInput.setWholeWords(this._state.wholeWord);\n    }\n    if (e.matchCase) {\n      this._findInput.setCaseSensitive(this._state.matchCase);\n    }\n    if (e.preserveCase) {\n      this._replaceInput.setPreserveCase(this._state.preserveCase);\n    }\n    if (e.searchScope) {\n      if (this._state.searchScope) {\n        this._toggleSelectionFind.checked = true;\n      } else {\n        this._toggleSelectionFind.checked = false;\n      }\n      this._updateToggleSelectionFindButton();\n    }\n    if (e.searchString || e.matchesCount || e.matchesPosition) {\n      const showRedOutline = this._state.searchString.length > 0 && this._state.matchesCount === 0;\n      this._domNode.classList.toggle('no-results', showRedOutline);\n      this._updateMatchesCount();\n      this._updateButtons();\n    }\n    if (e.searchString || e.currentMatch) {\n      this._layoutViewZone();\n    }\n    if (e.updateHistory) {\n      this._delayedUpdateHistory();\n    }\n    if (e.loop) {\n      this._updateButtons();\n    }\n  }\n  _delayedUpdateHistory() {\n    this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(undefined, onUnexpectedError);\n  }\n  _updateHistory() {\n    if (this._state.searchString) {\n      this._findInput.inputBox.addToHistory();\n    }\n    if (this._state.replaceString) {\n      this._replaceInput.inputBox.addToHistory();\n    }\n  }\n  _updateMatchesCount() {\n    this._matchesCount.style.minWidth = MAX_MATCHES_COUNT_WIDTH + 'px';\n    if (this._state.matchesCount >= MATCHES_LIMIT) {\n      this._matchesCount.title = NLS_MATCHES_COUNT_LIMIT_TITLE;\n    } else {\n      this._matchesCount.title = '';\n    }\n    // remove previous content\n    this._matchesCount.firstChild?.remove();\n    let label;\n    if (this._state.matchesCount > 0) {\n      let matchesCount = String(this._state.matchesCount);\n      if (this._state.matchesCount >= MATCHES_LIMIT) {\n        matchesCount += '+';\n      }\n      let matchesPosition = String(this._state.matchesPosition);\n      if (matchesPosition === '0') {\n        matchesPosition = '?';\n      }\n      label = strings.format(NLS_MATCHES_LOCATION, matchesPosition, matchesCount);\n    } else {\n      label = NLS_NO_RESULTS;\n    }\n    this._matchesCount.appendChild(document.createTextNode(label));\n    alertFn(this._getAriaLabel(label, this._state.currentMatch, this._state.searchString));\n    MAX_MATCHES_COUNT_WIDTH = Math.max(MAX_MATCHES_COUNT_WIDTH, this._matchesCount.clientWidth);\n  }\n  // ----- actions\n  _getAriaLabel(label, currentMatch, searchString) {\n    if (label === NLS_NO_RESULTS) {\n      return searchString === '' ? nls.localize('ariaSearchNoResultEmpty', \"{0} found\", label) : nls.localize('ariaSearchNoResult', \"{0} found for '{1}'\", label, searchString);\n    }\n    if (currentMatch) {\n      const ariaLabel = nls.localize('ariaSearchNoResultWithLineNum', \"{0} found for '{1}', at {2}\", label, searchString, currentMatch.startLineNumber + ':' + currentMatch.startColumn);\n      const model = this._codeEditor.getModel();\n      if (model && currentMatch.startLineNumber <= model.getLineCount() && currentMatch.startLineNumber >= 1) {\n        const lineContent = model.getLineContent(currentMatch.startLineNumber);\n        return `${lineContent}, ${ariaLabel}`;\n      }\n      return ariaLabel;\n    }\n    return nls.localize('ariaSearchNoResultWithLineNumNoCurrentMatch', \"{0} found for '{1}'\", label, searchString);\n  }\n  /**\n   * If 'selection find' is ON we should not disable the button (its function is to cancel 'selection find').\n   * If 'selection find' is OFF we enable the button only if there is a selection.\n   */\n  _updateToggleSelectionFindButton() {\n    const selection = this._codeEditor.getSelection();\n    const isSelection = selection ? selection.startLineNumber !== selection.endLineNumber || selection.startColumn !== selection.endColumn : false;\n    const isChecked = this._toggleSelectionFind.checked;\n    if (this._isVisible && (isChecked || isSelection)) {\n      this._toggleSelectionFind.enable();\n    } else {\n      this._toggleSelectionFind.disable();\n    }\n  }\n  _updateButtons() {\n    this._findInput.setEnabled(this._isVisible);\n    this._replaceInput.setEnabled(this._isVisible && this._isReplaceVisible);\n    this._updateToggleSelectionFindButton();\n    this._closeBtn.setEnabled(this._isVisible);\n    const findInputIsNonEmpty = this._state.searchString.length > 0;\n    const matchesCount = this._state.matchesCount ? true : false;\n    this._prevBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateBack());\n    this._nextBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateForward());\n    this._replaceBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n    this._replaceAllBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n    this._domNode.classList.toggle('replaceToggled', this._isReplaceVisible);\n    this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n    const canReplace = !this._codeEditor.getOption(92 /* EditorOption.readOnly */);\n    this._toggleReplaceBtn.setEnabled(this._isVisible && canReplace);\n  }\n  _reveal() {\n    this._revealTimeouts.forEach(e => {\n      clearTimeout(e);\n    });\n    this._revealTimeouts = [];\n    if (!this._isVisible) {\n      this._isVisible = true;\n      const selection = this._codeEditor.getSelection();\n      switch (this._codeEditor.getOption(41 /* EditorOption.find */).autoFindInSelection) {\n        case 'always':\n          this._toggleSelectionFind.checked = true;\n          break;\n        case 'never':\n          this._toggleSelectionFind.checked = false;\n          break;\n        case 'multiline':\n          {\n            const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n            this._toggleSelectionFind.checked = isSelectionMultipleLine;\n            break;\n          }\n        default:\n          break;\n      }\n      this._tryUpdateWidgetWidth();\n      this._updateButtons();\n      this._revealTimeouts.push(setTimeout(() => {\n        this._domNode.classList.add('visible');\n        this._domNode.setAttribute('aria-hidden', 'false');\n      }, 0));\n      // validate query again as it's being dismissed when we hide the find widget.\n      this._revealTimeouts.push(setTimeout(() => {\n        this._findInput.validate();\n      }, 200));\n      this._codeEditor.layoutOverlayWidget(this);\n      let adjustEditorScrollTop = true;\n      if (this._codeEditor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection && selection) {\n        const domNode = this._codeEditor.getDomNode();\n        if (domNode) {\n          const editorCoords = dom.getDomNodePagePosition(domNode);\n          const startCoords = this._codeEditor.getScrolledVisiblePosition(selection.getStartPosition());\n          const startLeft = editorCoords.left + (startCoords ? startCoords.left : 0);\n          const startTop = startCoords ? startCoords.top : 0;\n          if (this._viewZone && startTop < this._viewZone.heightInPx) {\n            if (selection.endLineNumber > selection.startLineNumber) {\n              adjustEditorScrollTop = false;\n            }\n            const leftOfFindWidget = dom.getTopLeftOffset(this._domNode).left;\n            if (startLeft > leftOfFindWidget) {\n              adjustEditorScrollTop = false;\n            }\n            const endCoords = this._codeEditor.getScrolledVisiblePosition(selection.getEndPosition());\n            const endLeft = editorCoords.left + (endCoords ? endCoords.left : 0);\n            if (endLeft > leftOfFindWidget) {\n              adjustEditorScrollTop = false;\n            }\n          }\n        }\n      }\n      this._showViewZone(adjustEditorScrollTop);\n    }\n  }\n  _hide(focusTheEditor) {\n    this._revealTimeouts.forEach(e => {\n      clearTimeout(e);\n    });\n    this._revealTimeouts = [];\n    if (this._isVisible) {\n      this._isVisible = false;\n      this._updateButtons();\n      this._domNode.classList.remove('visible');\n      this._domNode.setAttribute('aria-hidden', 'true');\n      this._findInput.clearMessage();\n      if (focusTheEditor) {\n        this._codeEditor.focus();\n      }\n      this._codeEditor.layoutOverlayWidget(this);\n      this._removeViewZone();\n    }\n  }\n  _layoutViewZone(targetScrollTop) {\n    const addExtraSpaceOnTop = this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop;\n    if (!addExtraSpaceOnTop) {\n      this._removeViewZone();\n      return;\n    }\n    if (!this._isVisible) {\n      return;\n    }\n    const viewZone = this._viewZone;\n    if (this._viewZoneId !== undefined || !viewZone) {\n      return;\n    }\n    this._codeEditor.changeViewZones(accessor => {\n      viewZone.heightInPx = this._getHeight();\n      this._viewZoneId = accessor.addZone(viewZone);\n      // scroll top adjust to make sure the editor doesn't scroll when adding viewzone at the beginning.\n      this._codeEditor.setScrollTop(targetScrollTop || this._codeEditor.getScrollTop() + viewZone.heightInPx);\n    });\n  }\n  _showViewZone(adjustScroll = true) {\n    if (!this._isVisible) {\n      return;\n    }\n    const addExtraSpaceOnTop = this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop;\n    if (!addExtraSpaceOnTop) {\n      return;\n    }\n    if (this._viewZone === undefined) {\n      this._viewZone = new FindWidgetViewZone(0);\n    }\n    const viewZone = this._viewZone;\n    this._codeEditor.changeViewZones(accessor => {\n      if (this._viewZoneId !== undefined) {\n        // the view zone already exists, we need to update the height\n        const newHeight = this._getHeight();\n        if (newHeight === viewZone.heightInPx) {\n          return;\n        }\n        const scrollAdjustment = newHeight - viewZone.heightInPx;\n        viewZone.heightInPx = newHeight;\n        accessor.layoutZone(this._viewZoneId);\n        if (adjustScroll) {\n          this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n        }\n        return;\n      } else {\n        let scrollAdjustment = this._getHeight();\n        // if the editor has top padding, factor that into the zone height\n        scrollAdjustment -= this._codeEditor.getOption(84 /* EditorOption.padding */).top;\n        if (scrollAdjustment <= 0) {\n          return;\n        }\n        viewZone.heightInPx = scrollAdjustment;\n        this._viewZoneId = accessor.addZone(viewZone);\n        if (adjustScroll) {\n          this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n        }\n      }\n    });\n  }\n  _removeViewZone() {\n    this._codeEditor.changeViewZones(accessor => {\n      if (this._viewZoneId !== undefined) {\n        accessor.removeZone(this._viewZoneId);\n        this._viewZoneId = undefined;\n        if (this._viewZone) {\n          this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() - this._viewZone.heightInPx);\n          this._viewZone = undefined;\n        }\n      }\n    });\n  }\n  _tryUpdateWidgetWidth() {\n    if (!this._isVisible) {\n      return;\n    }\n    if (!this._domNode.isConnected) {\n      // the widget is not in the DOM\n      return;\n    }\n    const layoutInfo = this._codeEditor.getLayoutInfo();\n    const editorContentWidth = layoutInfo.contentWidth;\n    if (editorContentWidth <= 0) {\n      // for example, diff view original editor\n      this._domNode.classList.add('hiddenEditor');\n      return;\n    } else if (this._domNode.classList.contains('hiddenEditor')) {\n      this._domNode.classList.remove('hiddenEditor');\n    }\n    const editorWidth = layoutInfo.width;\n    const minimapWidth = layoutInfo.minimap.minimapWidth;\n    let collapsedFindWidget = false;\n    let reducedFindWidget = false;\n    let narrowFindWidget = false;\n    if (this._resized) {\n      const widgetWidth = dom.getTotalWidth(this._domNode);\n      if (widgetWidth > FIND_WIDGET_INITIAL_WIDTH) {\n        // as the widget is resized by users, we may need to change the max width of the widget as the editor width changes.\n        this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n        this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n        return;\n      }\n    }\n    if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth >= editorWidth) {\n      reducedFindWidget = true;\n    }\n    if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth) {\n      narrowFindWidget = true;\n    }\n    if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth + 50) {\n      collapsedFindWidget = true;\n    }\n    this._domNode.classList.toggle('collapsed-find-widget', collapsedFindWidget);\n    this._domNode.classList.toggle('narrow-find-widget', narrowFindWidget);\n    this._domNode.classList.toggle('reduced-find-widget', reducedFindWidget);\n    if (!narrowFindWidget && !collapsedFindWidget) {\n      // the minimal left offset of findwidget is 15px.\n      this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n    }\n    this._findInput.layout({\n      collapsedFindWidget,\n      narrowFindWidget,\n      reducedFindWidget\n    });\n    if (this._resized) {\n      const findInputWidth = this._findInput.inputBox.element.clientWidth;\n      if (findInputWidth > 0) {\n        this._replaceInput.width = findInputWidth;\n      }\n    } else if (this._isReplaceVisible) {\n      this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n    }\n  }\n  _getHeight() {\n    let totalheight = 0;\n    // find input margin top\n    totalheight += 4;\n    // find input height\n    totalheight += this._findInput.inputBox.height + 2 /** input box border */;\n    if (this._isReplaceVisible) {\n      // replace input margin\n      totalheight += 4;\n      totalheight += this._replaceInput.inputBox.height + 2 /** input box border */;\n    }\n    // margin bottom\n    totalheight += 4;\n    return totalheight;\n  }\n  _tryUpdateHeight() {\n    const totalHeight = this._getHeight();\n    if (this._cachedHeight !== null && this._cachedHeight === totalHeight) {\n      return false;\n    }\n    this._cachedHeight = totalHeight;\n    this._domNode.style.height = `${totalHeight}px`;\n    return true;\n  }\n  // ----- Public\n  focusFindInput() {\n    this._findInput.select();\n    // Edge browser requires focus() in addition to select()\n    this._findInput.focus();\n  }\n  focusReplaceInput() {\n    this._replaceInput.select();\n    // Edge browser requires focus() in addition to select()\n    this._replaceInput.focus();\n  }\n  highlightFindOptions() {\n    this._findInput.highlightFindOptions();\n  }\n  _updateSearchScope() {\n    if (!this._codeEditor.hasModel()) {\n      return;\n    }\n    if (this._toggleSelectionFind.checked) {\n      const selections = this._codeEditor.getSelections();\n      selections.map(selection => {\n        if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n          selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n        }\n        const currentMatch = this._state.currentMatch;\n        if (selection.startLineNumber !== selection.endLineNumber) {\n          if (!Range.equalsRange(selection, currentMatch)) {\n            return selection;\n          }\n        }\n        return null;\n      }).filter(element => !!element);\n      if (selections.length) {\n        this._state.change({\n          searchScope: selections\n        }, true);\n      }\n    }\n  }\n  _onFindInputMouseDown(e) {\n    // on linux, middle key does pasting.\n    if (e.middleButton) {\n      e.stopPropagation();\n    }\n  }\n  _onFindInputKeyDown(e) {\n    if (e.equals(ctrlKeyMod | 3 /* KeyCode.Enter */)) {\n      if (this._keybindingService.dispatchEvent(e, e.target)) {\n        e.preventDefault();\n        return;\n      } else {\n        this._findInput.inputBox.insertAtCursor('\\n');\n        e.preventDefault();\n        return;\n      }\n    }\n    if (e.equals(2 /* KeyCode.Tab */)) {\n      if (this._isReplaceVisible) {\n        this._replaceInput.focus();\n      } else {\n        this._findInput.focusOnCaseSensitive();\n      }\n      e.preventDefault();\n      return;\n    }\n    if (e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)) {\n      this._codeEditor.focus();\n      e.preventDefault();\n      return;\n    }\n    if (e.equals(16 /* KeyCode.UpArrow */)) {\n      return stopPropagationForMultiLineUpwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n    }\n    if (e.equals(18 /* KeyCode.DownArrow */)) {\n      return stopPropagationForMultiLineDownwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n    }\n  }\n  _onReplaceInputKeyDown(e) {\n    if (e.equals(ctrlKeyMod | 3 /* KeyCode.Enter */)) {\n      if (this._keybindingService.dispatchEvent(e, e.target)) {\n        e.preventDefault();\n        return;\n      } else {\n        if (platform.isWindows && platform.isNative && !this._ctrlEnterReplaceAllWarningPrompted) {\n          // this is the first time when users press Ctrl + Enter to replace all\n          this._notificationService.info(nls.localize('ctrlEnter.keybindingChanged', 'Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.'));\n          this._ctrlEnterReplaceAllWarningPrompted = true;\n          this._storageService.store(ctrlEnterReplaceAllWarningPromptedKey, true, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n        }\n        this._replaceInput.inputBox.insertAtCursor('\\n');\n        e.preventDefault();\n        return;\n      }\n    }\n    if (e.equals(2 /* KeyCode.Tab */)) {\n      this._findInput.focusOnCaseSensitive();\n      e.preventDefault();\n      return;\n    }\n    if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n      this._findInput.focus();\n      e.preventDefault();\n      return;\n    }\n    if (e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)) {\n      this._codeEditor.focus();\n      e.preventDefault();\n      return;\n    }\n    if (e.equals(16 /* KeyCode.UpArrow */)) {\n      return stopPropagationForMultiLineUpwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n    }\n    if (e.equals(18 /* KeyCode.DownArrow */)) {\n      return stopPropagationForMultiLineDownwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n    }\n  }\n  // ----- sash\n  getVerticalSashLeft(_sash) {\n    return 0;\n  }\n  // ----- initialization\n  _keybindingLabelFor(actionId) {\n    const kb = this._keybindingService.lookupKeybinding(actionId);\n    if (!kb) {\n      return '';\n    }\n    return ` (${kb.getLabel()})`;\n  }\n  _buildDomNode() {\n    const flexibleHeight = true;\n    const flexibleWidth = true;\n    // Find input\n    this._findInput = this._register(new ContextScopedFindInput(null, this._contextViewProvider, {\n      width: FIND_INPUT_AREA_WIDTH,\n      label: NLS_FIND_INPUT_LABEL,\n      placeholder: NLS_FIND_INPUT_PLACEHOLDER,\n      appendCaseSensitiveLabel: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\n      appendWholeWordsLabel: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\n      appendRegexLabel: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\n      validation: value => {\n        if (value.length === 0 || !this._findInput.getRegex()) {\n          return null;\n        }\n        try {\n          // use `g` and `u` which are also used by the TextModel search\n          new RegExp(value, 'gu');\n          return null;\n        } catch (e) {\n          return {\n            content: e.message\n          };\n        }\n      },\n      flexibleHeight,\n      flexibleWidth,\n      flexibleMaxHeight: 118,\n      showCommonFindToggles: true,\n      showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService),\n      inputBoxStyles: defaultInputBoxStyles,\n      toggleStyles: defaultToggleStyles\n    }, this._contextKeyService));\n    this._findInput.setRegex(!!this._state.isRegex);\n    this._findInput.setCaseSensitive(!!this._state.matchCase);\n    this._findInput.setWholeWords(!!this._state.wholeWord);\n    this._register(this._findInput.onKeyDown(e => this._onFindInputKeyDown(e)));\n    this._register(this._findInput.inputBox.onDidChange(() => {\n      if (this._ignoreChangeEvent) {\n        return;\n      }\n      this._state.change({\n        searchString: this._findInput.getValue()\n      }, true);\n    }));\n    this._register(this._findInput.onDidOptionChange(() => {\n      this._state.change({\n        isRegex: this._findInput.getRegex(),\n        wholeWord: this._findInput.getWholeWords(),\n        matchCase: this._findInput.getCaseSensitive()\n      }, true);\n    }));\n    this._register(this._findInput.onCaseSensitiveKeyDown(e => {\n      if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n        if (this._isReplaceVisible) {\n          this._replaceInput.focus();\n          e.preventDefault();\n        }\n      }\n    }));\n    this._register(this._findInput.onRegexKeyDown(e => {\n      if (e.equals(2 /* KeyCode.Tab */)) {\n        if (this._isReplaceVisible) {\n          this._replaceInput.focusOnPreserve();\n          e.preventDefault();\n        }\n      }\n    }));\n    this._register(this._findInput.inputBox.onDidHeightChange(e => {\n      if (this._tryUpdateHeight()) {\n        this._showViewZone();\n      }\n    }));\n    if (platform.isLinux) {\n      this._register(this._findInput.onMouseDown(e => this._onFindInputMouseDown(e)));\n    }\n    this._matchesCount = document.createElement('div');\n    this._matchesCount.className = 'matchesCount';\n    this._updateMatchesCount();\n    // Create a scoped hover delegate for all find related buttons\n    const hoverDelegate = this._register(createInstantHoverDelegate());\n    // Previous button\n    this._prevBtn = this._register(new SimpleButton({\n      label: NLS_PREVIOUS_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.PreviousMatchFindAction),\n      icon: findPreviousMatchIcon,\n      hoverDelegate,\n      onTrigger: () => {\n        assertIsDefined(this._codeEditor.getAction(FIND_IDS.PreviousMatchFindAction)).run().then(undefined, onUnexpectedError);\n      }\n    }, this._hoverService));\n    // Next button\n    this._nextBtn = this._register(new SimpleButton({\n      label: NLS_NEXT_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.NextMatchFindAction),\n      icon: findNextMatchIcon,\n      hoverDelegate,\n      onTrigger: () => {\n        assertIsDefined(this._codeEditor.getAction(FIND_IDS.NextMatchFindAction)).run().then(undefined, onUnexpectedError);\n      }\n    }, this._hoverService));\n    const findPart = document.createElement('div');\n    findPart.className = 'find-part';\n    findPart.appendChild(this._findInput.domNode);\n    const actionsContainer = document.createElement('div');\n    actionsContainer.className = 'find-actions';\n    findPart.appendChild(actionsContainer);\n    actionsContainer.appendChild(this._matchesCount);\n    actionsContainer.appendChild(this._prevBtn.domNode);\n    actionsContainer.appendChild(this._nextBtn.domNode);\n    // Toggle selection button\n    this._toggleSelectionFind = this._register(new Toggle({\n      icon: findSelectionIcon,\n      title: NLS_TOGGLE_SELECTION_FIND_TITLE + this._keybindingLabelFor(FIND_IDS.ToggleSearchScopeCommand),\n      isChecked: false,\n      hoverDelegate: hoverDelegate,\n      inputActiveOptionBackground: asCssVariable(inputActiveOptionBackground),\n      inputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n      inputActiveOptionForeground: asCssVariable(inputActiveOptionForeground)\n    }));\n    this._register(this._toggleSelectionFind.onChange(() => {\n      if (this._toggleSelectionFind.checked) {\n        if (this._codeEditor.hasModel()) {\n          let selections = this._codeEditor.getSelections();\n          selections = selections.map(selection => {\n            if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n              selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n            }\n            if (!selection.isEmpty()) {\n              return selection;\n            }\n            return null;\n          }).filter(element => !!element);\n          if (selections.length) {\n            this._state.change({\n              searchScope: selections\n            }, true);\n          }\n        }\n      } else {\n        this._state.change({\n          searchScope: null\n        }, true);\n      }\n    }));\n    actionsContainer.appendChild(this._toggleSelectionFind.domNode);\n    // Close button\n    this._closeBtn = this._register(new SimpleButton({\n      label: NLS_CLOSE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.CloseFindWidgetCommand),\n      icon: widgetClose,\n      hoverDelegate,\n      onTrigger: () => {\n        this._state.change({\n          isRevealed: false,\n          searchScope: null\n        }, false);\n      },\n      onKeyDown: e => {\n        if (e.equals(2 /* KeyCode.Tab */)) {\n          if (this._isReplaceVisible) {\n            if (this._replaceBtn.isEnabled()) {\n              this._replaceBtn.focus();\n            } else {\n              this._codeEditor.focus();\n            }\n            e.preventDefault();\n          }\n        }\n      }\n    }, this._hoverService));\n    // Replace input\n    this._replaceInput = this._register(new ContextScopedReplaceInput(null, undefined, {\n      label: NLS_REPLACE_INPUT_LABEL,\n      placeholder: NLS_REPLACE_INPUT_PLACEHOLDER,\n      appendPreserveCaseLabel: this._keybindingLabelFor(FIND_IDS.TogglePreserveCaseCommand),\n      history: [],\n      flexibleHeight,\n      flexibleWidth,\n      flexibleMaxHeight: 118,\n      showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService),\n      inputBoxStyles: defaultInputBoxStyles,\n      toggleStyles: defaultToggleStyles\n    }, this._contextKeyService, true));\n    this._replaceInput.setPreserveCase(!!this._state.preserveCase);\n    this._register(this._replaceInput.onKeyDown(e => this._onReplaceInputKeyDown(e)));\n    this._register(this._replaceInput.inputBox.onDidChange(() => {\n      this._state.change({\n        replaceString: this._replaceInput.inputBox.value\n      }, false);\n    }));\n    this._register(this._replaceInput.inputBox.onDidHeightChange(e => {\n      if (this._isReplaceVisible && this._tryUpdateHeight()) {\n        this._showViewZone();\n      }\n    }));\n    this._register(this._replaceInput.onDidOptionChange(() => {\n      this._state.change({\n        preserveCase: this._replaceInput.getPreserveCase()\n      }, true);\n    }));\n    this._register(this._replaceInput.onPreserveCaseKeyDown(e => {\n      if (e.equals(2 /* KeyCode.Tab */)) {\n        if (this._prevBtn.isEnabled()) {\n          this._prevBtn.focus();\n        } else if (this._nextBtn.isEnabled()) {\n          this._nextBtn.focus();\n        } else if (this._toggleSelectionFind.enabled) {\n          this._toggleSelectionFind.focus();\n        } else if (this._closeBtn.isEnabled()) {\n          this._closeBtn.focus();\n        }\n        e.preventDefault();\n      }\n    }));\n    // Create scoped hover delegate for replace actions\n    const replaceHoverDelegate = this._register(createInstantHoverDelegate());\n    // Replace one button\n    this._replaceBtn = this._register(new SimpleButton({\n      label: NLS_REPLACE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceOneAction),\n      icon: findReplaceIcon,\n      hoverDelegate: replaceHoverDelegate,\n      onTrigger: () => {\n        this._controller.replace();\n      },\n      onKeyDown: e => {\n        if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n          this._closeBtn.focus();\n          e.preventDefault();\n        }\n      }\n    }, this._hoverService));\n    // Replace all button\n    this._replaceAllBtn = this._register(new SimpleButton({\n      label: NLS_REPLACE_ALL_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceAllAction),\n      icon: findReplaceAllIcon,\n      hoverDelegate: replaceHoverDelegate,\n      onTrigger: () => {\n        this._controller.replaceAll();\n      }\n    }, this._hoverService));\n    const replacePart = document.createElement('div');\n    replacePart.className = 'replace-part';\n    replacePart.appendChild(this._replaceInput.domNode);\n    const replaceActionsContainer = document.createElement('div');\n    replaceActionsContainer.className = 'replace-actions';\n    replacePart.appendChild(replaceActionsContainer);\n    replaceActionsContainer.appendChild(this._replaceBtn.domNode);\n    replaceActionsContainer.appendChild(this._replaceAllBtn.domNode);\n    // Toggle replace button\n    this._toggleReplaceBtn = this._register(new SimpleButton({\n      label: NLS_TOGGLE_REPLACE_MODE_BTN_LABEL,\n      className: 'codicon toggle left',\n      onTrigger: () => {\n        this._state.change({\n          isReplaceRevealed: !this._isReplaceVisible\n        }, false);\n        if (this._isReplaceVisible) {\n          this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n          this._replaceInput.inputBox.layout();\n        }\n        this._showViewZone();\n      }\n    }, this._hoverService));\n    this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n    // Widget\n    this._domNode = document.createElement('div');\n    this._domNode.className = 'editor-widget find-widget';\n    this._domNode.setAttribute('aria-hidden', 'true');\n    this._domNode.ariaLabel = NLS_FIND_DIALOG_LABEL;\n    this._domNode.role = 'dialog';\n    // We need to set this explicitly, otherwise on IE11, the width inheritence of flex doesn't work.\n    this._domNode.style.width = `${FIND_WIDGET_INITIAL_WIDTH}px`;\n    this._domNode.appendChild(this._toggleReplaceBtn.domNode);\n    this._domNode.appendChild(findPart);\n    this._domNode.appendChild(this._closeBtn.domNode);\n    this._domNode.appendChild(replacePart);\n    this._resizeSash = this._register(new Sash(this._domNode, this, {\n      orientation: 0 /* Orientation.VERTICAL */,\n      size: 2\n    }));\n    this._resized = false;\n    let originalWidth = FIND_WIDGET_INITIAL_WIDTH;\n    this._register(this._resizeSash.onDidStart(() => {\n      originalWidth = dom.getTotalWidth(this._domNode);\n    }));\n    this._register(this._resizeSash.onDidChange(evt => {\n      this._resized = true;\n      const width = originalWidth + evt.startX - evt.currentX;\n      if (width < FIND_WIDGET_INITIAL_WIDTH) {\n        // narrow down the find widget should be handled by CSS.\n        return;\n      }\n      const maxWidth = parseFloat(dom.getComputedStyle(this._domNode).maxWidth) || 0;\n      if (width > maxWidth) {\n        return;\n      }\n      this._domNode.style.width = `${width}px`;\n      if (this._isReplaceVisible) {\n        this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n      }\n      this._findInput.inputBox.layout();\n      this._tryUpdateHeight();\n    }));\n    this._register(this._resizeSash.onDidReset(() => {\n      // users double click on the sash\n      const currentWidth = dom.getTotalWidth(this._domNode);\n      if (currentWidth < FIND_WIDGET_INITIAL_WIDTH) {\n        // The editor is narrow and the width of the find widget is controlled fully by CSS.\n        return;\n      }\n      let width = FIND_WIDGET_INITIAL_WIDTH;\n      if (!this._resized || currentWidth === FIND_WIDGET_INITIAL_WIDTH) {\n        // 1. never resized before, double click should maximizes it\n        // 2. users resized it already but its width is the same as default\n        const layoutInfo = this._codeEditor.getLayoutInfo();\n        width = layoutInfo.width - 28 - layoutInfo.minimap.minimapWidth - 15;\n        this._resized = true;\n      } else {\n        /**\n         * no op, the find widget should be shrinked to its default size.\n         */\n      }\n      this._domNode.style.width = `${width}px`;\n      if (this._isReplaceVisible) {\n        this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n      }\n      this._findInput.inputBox.layout();\n    }));\n  }\n  updateAccessibilitySupport() {\n    const value = this._codeEditor.getOption(2 /* EditorOption.accessibilitySupport */);\n    this._findInput.setFocusInputOnOptionClick(value !== 2 /* AccessibilitySupport.Enabled */);\n  }\n}\nexport class SimpleButton extends Widget {\n  constructor(opts, hoverService) {\n    super();\n    this._opts = opts;\n    let className = 'button';\n    if (this._opts.className) {\n      className = className + ' ' + this._opts.className;\n    }\n    if (this._opts.icon) {\n      className = className + ' ' + ThemeIcon.asClassName(this._opts.icon);\n    }\n    this._domNode = document.createElement('div');\n    this._domNode.tabIndex = 0;\n    this._domNode.className = className;\n    this._domNode.setAttribute('role', 'button');\n    this._domNode.setAttribute('aria-label', this._opts.label);\n    this._register(hoverService.setupManagedHover(opts.hoverDelegate ?? getDefaultHoverDelegate('element'), this._domNode, this._opts.label));\n    this.onclick(this._domNode, e => {\n      this._opts.onTrigger();\n      e.preventDefault();\n    });\n    this.onkeydown(this._domNode, e => {\n      if (e.equals(10 /* KeyCode.Space */) || e.equals(3 /* KeyCode.Enter */)) {\n        this._opts.onTrigger();\n        e.preventDefault();\n        return;\n      }\n      this._opts.onKeyDown?.(e);\n    });\n  }\n  get domNode() {\n    return this._domNode;\n  }\n  isEnabled() {\n    return this._domNode.tabIndex >= 0;\n  }\n  focus() {\n    this._domNode.focus();\n  }\n  setEnabled(enabled) {\n    this._domNode.classList.toggle('disabled', !enabled);\n    this._domNode.setAttribute('aria-disabled', String(!enabled));\n    this._domNode.tabIndex = enabled ? 0 : -1;\n  }\n  setExpanded(expanded) {\n    this._domNode.setAttribute('aria-expanded', String(!!expanded));\n    if (expanded) {\n      this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n      this._domNode.classList.add(...ThemeIcon.asClassNameArray(findExpandedIcon));\n    } else {\n      this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findExpandedIcon));\n      this._domNode.classList.add(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n    }\n  }\n}\n// theming\nregisterThemingParticipant((theme, collector) => {\n  const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\n  if (findMatchHighlightBorder) {\n    collector.addRule(`.monaco-editor .findMatch { border: 1px ${isHighContrast(theme.type) ? 'dotted' : 'solid'} ${findMatchHighlightBorder}; box-sizing: border-box; }`);\n  }\n  const findRangeHighlightBorder = theme.getColor(editorFindRangeHighlightBorder);\n  if (findRangeHighlightBorder) {\n    collector.addRule(`.monaco-editor .findScope { border: 1px ${isHighContrast(theme.type) ? 'dashed' : 'solid'} ${findRangeHighlightBorder}; }`);\n  }\n  const hcBorder = theme.getColor(contrastBorder);\n  if (hcBorder) {\n    collector.addRule(`.monaco-editor .find-widget { border: 1px solid ${hcBorder}; }`);\n  }\n  const findMatchForeground = theme.getColor(editorFindMatchForeground);\n  if (findMatchForeground) {\n    collector.addRule(`.monaco-editor .findMatchInline { color: ${findMatchForeground}; }`);\n  }\n  const findMatchHighlightForeground = theme.getColor(editorFindMatchHighlightForeground);\n  if (findMatchHighlightForeground) {\n    collector.addRule(`.monaco-editor .currentFindMatchInline { color: ${findMatchHighlightForeground}; }`);\n  }\n});","map":{"version":3,"names":["dom","alert","alertFn","Toggle","Sash","Widget","Delayer","Codicon","onUnexpectedError","toDisposable","platform","strings","Range","CONTEXT_FIND_INPUT_FOCUSED","CONTEXT_REPLACE_INPUT_FOCUSED","FIND_IDS","MATCHES_LIMIT","nls","ContextScopedFindInput","ContextScopedReplaceInput","showHistoryKeybindingHint","asCssVariable","contrastBorder","editorFindMatchForeground","editorFindMatchHighlightBorder","editorFindMatchHighlightForeground","editorFindRangeHighlightBorder","inputActiveOptionBackground","inputActiveOptionBorder","inputActiveOptionForeground","registerIcon","widgetClose","registerThemingParticipant","ThemeIcon","isHighContrast","assertIsDefined","defaultInputBoxStyles","defaultToggleStyles","createInstantHoverDelegate","getDefaultHoverDelegate","findCollapsedIcon","chevronRight","localize","findExpandedIcon","chevronDown","findSelectionIcon","selection","findReplaceIcon","replace","findReplaceAllIcon","replaceAll","findPreviousMatchIcon","arrowUp","findNextMatchIcon","arrowDown","NLS_FIND_DIALOG_LABEL","NLS_FIND_INPUT_LABEL","NLS_FIND_INPUT_PLACEHOLDER","NLS_PREVIOUS_MATCH_BTN_LABEL","NLS_NEXT_MATCH_BTN_LABEL","NLS_TOGGLE_SELECTION_FIND_TITLE","NLS_CLOSE_BTN_LABEL","NLS_REPLACE_INPUT_LABEL","NLS_REPLACE_INPUT_PLACEHOLDER","NLS_REPLACE_BTN_LABEL","NLS_REPLACE_ALL_BTN_LABEL","NLS_TOGGLE_REPLACE_MODE_BTN_LABEL","NLS_MATCHES_COUNT_LIMIT_TITLE","NLS_MATCHES_LOCATION","NLS_NO_RESULTS","FIND_WIDGET_INITIAL_WIDTH","PART_WIDTH","FIND_INPUT_AREA_WIDTH","MAX_MATCHES_COUNT_WIDTH","FIND_INPUT_AREA_HEIGHT","ctrlEnterReplaceAllWarningPromptedKey","ctrlKeyMod","isMacintosh","FindWidgetViewZone","constructor","afterLineNumber","heightInPx","suppressMouseDown","domNode","document","createElement","className","stopPropagationForMultiLineUpwards","event","value","textarea","isMultiline","match","selectionStart","stopPropagation","stopPropagationForMultiLineDownwards","selectionEnd","length","FindWidget","ID","codeEditor","controller","state","contextViewProvider","keybindingService","contextKeyService","themeService","storageService","notificationService","_hoverService","_cachedHeight","_revealTimeouts","_codeEditor","_controller","_state","_contextViewProvider","_keybindingService","_contextKeyService","_storageService","_notificationService","_ctrlEnterReplaceAllWarningPrompted","getBoolean","_isVisible","_isReplaceVisible","_ignoreChangeEvent","_updateHistoryDelayer","_register","cancel","onFindReplaceStateChange","e","_onStateChanged","_buildDomNode","_updateButtons","_tryUpdateWidgetWidth","_findInput","inputBox","layout","onDidChangeConfiguration","hasChanged","getOption","change","isReplaceRevealed","updateAccessibilitySupport","supportLoop","loop","addExtraSpaceOnTop","_viewZone","_showViewZone","_removeViewZone","onDidChangeCursorSelection","_updateToggleSelectionFindButton","onDidFocusEditorWidget","globalBufferTerm","getGlobalBufferTerm","searchString","select","_findInputFocused","bindTo","_findFocusTracker","trackFocus","inputElement","onDidFocus","set","_updateSearchScope","onDidBlur","_replaceInputFocused","_replaceFocusTracker","_replaceInput","addOverlayWidget","onDidChangeModel","_viewZoneId","undefined","onDidScrollChange","scrollTopChanged","_layoutViewZone","setTimeout","getId","getDomNode","_domNode","getPosition","preference","setValue","replaceString","isRevealed","_reveal","_hide","width","getTotalWidth","_tryUpdateHeight","isRegex","setRegex","wholeWord","setWholeWords","matchCase","setCaseSensitive","preserveCase","setPreserveCase","searchScope","_toggleSelectionFind","checked","matchesCount","matchesPosition","showRedOutline","classList","toggle","_updateMatchesCount","currentMatch","updateHistory","_delayedUpdateHistory","trigger","_updateHistory","bind","then","addToHistory","_matchesCount","style","minWidth","title","firstChild","remove","label","String","format","appendChild","createTextNode","_getAriaLabel","Math","max","clientWidth","ariaLabel","startLineNumber","startColumn","model","getModel","getLineCount","lineContent","getLineContent","getSelection","isSelection","endLineNumber","endColumn","isChecked","enable","disable","setEnabled","_closeBtn","findInputIsNonEmpty","_prevBtn","canNavigateBack","_nextBtn","canNavigateForward","_replaceBtn","_replaceAllBtn","_toggleReplaceBtn","setExpanded","canReplace","forEach","clearTimeout","autoFindInSelection","isSelectionMultipleLine","push","add","setAttribute","validate","layoutOverlayWidget","adjustEditorScrollTop","seedSearchStringFromSelection","editorCoords","getDomNodePagePosition","startCoords","getScrolledVisiblePosition","getStartPosition","startLeft","left","startTop","top","leftOfFindWidget","getTopLeftOffset","endCoords","getEndPosition","endLeft","focusTheEditor","clearMessage","focus","targetScrollTop","viewZone","changeViewZones","accessor","_getHeight","addZone","setScrollTop","getScrollTop","adjustScroll","newHeight","scrollAdjustment","layoutZone","removeZone","isConnected","layoutInfo","getLayoutInfo","editorContentWidth","contentWidth","contains","editorWidth","minimapWidth","minimap","collapsedFindWidget","reducedFindWidget","narrowFindWidget","_resized","widgetWidth","maxWidth","findInputWidth","element","totalheight","height","totalHeight","focusFindInput","focusReplaceInput","highlightFindOptions","hasModel","selections","getSelections","map","setEndPosition","getLineMaxColumn","equalsRange","filter","_onFindInputMouseDown","middleButton","_onFindInputKeyDown","equals","dispatchEvent","target","preventDefault","insertAtCursor","focusOnCaseSensitive","getValue","querySelector","_onReplaceInputKeyDown","isWindows","isNative","info","store","getVerticalSashLeft","_sash","_keybindingLabelFor","actionId","kb","lookupKeybinding","getLabel","flexibleHeight","flexibleWidth","placeholder","appendCaseSensitiveLabel","ToggleCaseSensitiveCommand","appendWholeWordsLabel","ToggleWholeWordCommand","appendRegexLabel","ToggleRegexCommand","validation","getRegex","RegExp","content","message","flexibleMaxHeight","showCommonFindToggles","showHistoryHint","inputBoxStyles","toggleStyles","onKeyDown","onDidChange","onDidOptionChange","getWholeWords","getCaseSensitive","onCaseSensitiveKeyDown","onRegexKeyDown","focusOnPreserve","onDidHeightChange","isLinux","onMouseDown","hoverDelegate","SimpleButton","PreviousMatchFindAction","icon","onTrigger","getAction","run","NextMatchFindAction","findPart","actionsContainer","ToggleSearchScopeCommand","onChange","isEmpty","CloseFindWidgetCommand","isEnabled","appendPreserveCaseLabel","TogglePreserveCaseCommand","history","getPreserveCase","onPreserveCaseKeyDown","enabled","replaceHoverDelegate","ReplaceOneAction","ReplaceAllAction","replacePart","replaceActionsContainer","role","_resizeSash","orientation","size","originalWidth","onDidStart","evt","startX","currentX","parseFloat","getComputedStyle","onDidReset","currentWidth","setFocusInputOnOptionClick","opts","hoverService","_opts","asClassName","tabIndex","setupManagedHover","onclick","onkeydown","expanded","asClassNameArray","theme","collector","findMatchHighlightBorder","getColor","addRule","type","findRangeHighlightBorder","hcBorder","findMatchForeground","findMatchHighlightForeground"],"sources":["D:/OSPanel/domains/react/react-intro-main/node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { alert as alertFn } from '../../../../base/browser/ui/aria/aria.js';\nimport { Toggle } from '../../../../base/browser/ui/toggle/toggle.js';\nimport { Sash } from '../../../../base/browser/ui/sash/sash.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './findWidget.css';\nimport { Range } from '../../../common/core/range.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_REPLACE_INPUT_FOCUSED, FIND_IDS, MATCHES_LIMIT } from './findModel.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextScopedFindInput, ContextScopedReplaceInput } from '../../../../platform/history/browser/contextScopedHistoryWidget.js';\nimport { showHistoryKeybindingHint } from '../../../../platform/history/browser/historyWidgetKeybindingHint.js';\nimport { asCssVariable, contrastBorder, editorFindMatchForeground, editorFindMatchHighlightBorder, editorFindMatchHighlightForeground, editorFindRangeHighlightBorder, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon, widgetClose } from '../../../../platform/theme/common/iconRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { assertIsDefined } from '../../../../base/common/types.js';\nimport { defaultInputBoxStyles, defaultToggleStyles } from '../../../../platform/theme/browser/defaultStyles.js';\nimport { createInstantHoverDelegate, getDefaultHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegateFactory.js';\nconst findCollapsedIcon = registerIcon('find-collapsed', Codicon.chevronRight, nls.localize('findCollapsedIcon', 'Icon to indicate that the editor find widget is collapsed.'));\nconst findExpandedIcon = registerIcon('find-expanded', Codicon.chevronDown, nls.localize('findExpandedIcon', 'Icon to indicate that the editor find widget is expanded.'));\nexport const findSelectionIcon = registerIcon('find-selection', Codicon.selection, nls.localize('findSelectionIcon', 'Icon for \\'Find in Selection\\' in the editor find widget.'));\nexport const findReplaceIcon = registerIcon('find-replace', Codicon.replace, nls.localize('findReplaceIcon', 'Icon for \\'Replace\\' in the editor find widget.'));\nexport const findReplaceAllIcon = registerIcon('find-replace-all', Codicon.replaceAll, nls.localize('findReplaceAllIcon', 'Icon for \\'Replace All\\' in the editor find widget.'));\nexport const findPreviousMatchIcon = registerIcon('find-previous-match', Codicon.arrowUp, nls.localize('findPreviousMatchIcon', 'Icon for \\'Find Previous\\' in the editor find widget.'));\nexport const findNextMatchIcon = registerIcon('find-next-match', Codicon.arrowDown, nls.localize('findNextMatchIcon', 'Icon for \\'Find Next\\' in the editor find widget.'));\nconst NLS_FIND_DIALOG_LABEL = nls.localize('label.findDialog', \"Find / Replace\");\nconst NLS_FIND_INPUT_LABEL = nls.localize('label.find', \"Find\");\nconst NLS_FIND_INPUT_PLACEHOLDER = nls.localize('placeholder.find', \"Find\");\nconst NLS_PREVIOUS_MATCH_BTN_LABEL = nls.localize('label.previousMatchButton', \"Previous Match\");\nconst NLS_NEXT_MATCH_BTN_LABEL = nls.localize('label.nextMatchButton', \"Next Match\");\nconst NLS_TOGGLE_SELECTION_FIND_TITLE = nls.localize('label.toggleSelectionFind', \"Find in Selection\");\nconst NLS_CLOSE_BTN_LABEL = nls.localize('label.closeButton', \"Close\");\nconst NLS_REPLACE_INPUT_LABEL = nls.localize('label.replace', \"Replace\");\nconst NLS_REPLACE_INPUT_PLACEHOLDER = nls.localize('placeholder.replace', \"Replace\");\nconst NLS_REPLACE_BTN_LABEL = nls.localize('label.replaceButton', \"Replace\");\nconst NLS_REPLACE_ALL_BTN_LABEL = nls.localize('label.replaceAllButton', \"Replace All\");\nconst NLS_TOGGLE_REPLACE_MODE_BTN_LABEL = nls.localize('label.toggleReplaceButton', \"Toggle Replace\");\nconst NLS_MATCHES_COUNT_LIMIT_TITLE = nls.localize('title.matchesCountLimit', \"Only the first {0} results are highlighted, but all find operations work on the entire text.\", MATCHES_LIMIT);\nexport const NLS_MATCHES_LOCATION = nls.localize('label.matchesLocation', \"{0} of {1}\");\nexport const NLS_NO_RESULTS = nls.localize('label.noResults', \"No results\");\nconst FIND_WIDGET_INITIAL_WIDTH = 419;\nconst PART_WIDTH = 275;\nconst FIND_INPUT_AREA_WIDTH = PART_WIDTH - 54;\nlet MAX_MATCHES_COUNT_WIDTH = 69;\n// let FIND_ALL_CONTROLS_WIDTH = 17/** Find Input margin-left */ + (MAX_MATCHES_COUNT_WIDTH + 3 + 1) /** Match Results */ + 23 /** Button */ * 4 + 2/** sash */;\nconst FIND_INPUT_AREA_HEIGHT = 33; // The height of Find Widget when Replace Input is not visible.\nconst ctrlEnterReplaceAllWarningPromptedKey = 'ctrlEnterReplaceAll.windows.donotask';\nconst ctrlKeyMod = (platform.isMacintosh ? 256 /* KeyMod.WinCtrl */ : 2048 /* KeyMod.CtrlCmd */);\nexport class FindWidgetViewZone {\n    constructor(afterLineNumber) {\n        this.afterLineNumber = afterLineNumber;\n        this.heightInPx = FIND_INPUT_AREA_HEIGHT;\n        this.suppressMouseDown = false;\n        this.domNode = document.createElement('div');\n        this.domNode.className = 'dock-find-viewzone';\n    }\n}\nfunction stopPropagationForMultiLineUpwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionStart > 0) {\n        event.stopPropagation();\n        return;\n    }\n}\nfunction stopPropagationForMultiLineDownwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionEnd < textarea.value.length) {\n        event.stopPropagation();\n        return;\n    }\n}\nexport class FindWidget extends Widget {\n    static { this.ID = 'editor.contrib.findWidget'; }\n    constructor(codeEditor, controller, state, contextViewProvider, keybindingService, contextKeyService, themeService, storageService, notificationService, _hoverService) {\n        super();\n        this._hoverService = _hoverService;\n        this._cachedHeight = null;\n        this._revealTimeouts = [];\n        this._codeEditor = codeEditor;\n        this._controller = controller;\n        this._state = state;\n        this._contextViewProvider = contextViewProvider;\n        this._keybindingService = keybindingService;\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._notificationService = notificationService;\n        this._ctrlEnterReplaceAllWarningPrompted = !!storageService.getBoolean(ctrlEnterReplaceAllWarningPromptedKey, 0 /* StorageScope.PROFILE */);\n        this._isVisible = false;\n        this._isReplaceVisible = false;\n        this._ignoreChangeEvent = false;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._register(toDisposable(() => this._updateHistoryDelayer.cancel()));\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._buildDomNode();\n        this._updateButtons();\n        this._tryUpdateWidgetWidth();\n        this._findInput.inputBox.layout();\n        this._register(this._codeEditor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(92 /* EditorOption.readOnly */)) {\n                if (this._codeEditor.getOption(92 /* EditorOption.readOnly */)) {\n                    // Hide replace part if editor becomes read only\n                    this._state.change({ isReplaceRevealed: false }, false);\n                }\n                this._updateButtons();\n            }\n            if (e.hasChanged(146 /* EditorOption.layoutInfo */)) {\n                this._tryUpdateWidgetWidth();\n            }\n            if (e.hasChanged(2 /* EditorOption.accessibilitySupport */)) {\n                this.updateAccessibilitySupport();\n            }\n            if (e.hasChanged(41 /* EditorOption.find */)) {\n                const supportLoop = this._codeEditor.getOption(41 /* EditorOption.find */).loop;\n                this._state.change({ loop: supportLoop }, false);\n                const addExtraSpaceOnTop = this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop;\n                if (addExtraSpaceOnTop && !this._viewZone) {\n                    this._viewZone = new FindWidgetViewZone(0);\n                    this._showViewZone();\n                }\n                if (!addExtraSpaceOnTop && this._viewZone) {\n                    this._removeViewZone();\n                }\n            }\n        }));\n        this.updateAccessibilitySupport();\n        this._register(this._codeEditor.onDidChangeCursorSelection(() => {\n            if (this._isVisible) {\n                this._updateToggleSelectionFindButton();\n            }\n        }));\n        this._register(this._codeEditor.onDidFocusEditorWidget(async () => {\n            if (this._isVisible) {\n                const globalBufferTerm = await this._controller.getGlobalBufferTerm();\n                if (globalBufferTerm && globalBufferTerm !== this._state.searchString) {\n                    this._state.change({ searchString: globalBufferTerm }, false);\n                    this._findInput.select();\n                }\n            }\n        }));\n        this._findInputFocused = CONTEXT_FIND_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._findFocusTracker = this._register(dom.trackFocus(this._findInput.inputBox.inputElement));\n        this._register(this._findFocusTracker.onDidFocus(() => {\n            this._findInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._findFocusTracker.onDidBlur(() => {\n            this._findInputFocused.set(false);\n        }));\n        this._replaceInputFocused = CONTEXT_REPLACE_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._replaceFocusTracker = this._register(dom.trackFocus(this._replaceInput.inputBox.inputElement));\n        this._register(this._replaceFocusTracker.onDidFocus(() => {\n            this._replaceInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._replaceFocusTracker.onDidBlur(() => {\n            this._replaceInputFocused.set(false);\n        }));\n        this._codeEditor.addOverlayWidget(this);\n        if (this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop) {\n            this._viewZone = new FindWidgetViewZone(0); // Put it before the first line then users can scroll beyond the first line.\n        }\n        this._register(this._codeEditor.onDidChangeModel(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._viewZoneId = undefined;\n        }));\n        this._register(this._codeEditor.onDidScrollChange((e) => {\n            if (e.scrollTopChanged) {\n                this._layoutViewZone();\n                return;\n            }\n            // for other scroll changes, layout the viewzone in next tick to avoid ruining current rendering.\n            setTimeout(() => {\n                this._layoutViewZone();\n            }, 0);\n        }));\n    }\n    // ----- IOverlayWidget API\n    getId() {\n        return FindWidget.ID;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        if (this._isVisible) {\n            return {\n                preference: 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */\n            };\n        }\n        return null;\n    }\n    // ----- React to state changes\n    _onStateChanged(e) {\n        if (e.searchString) {\n            try {\n                this._ignoreChangeEvent = true;\n                this._findInput.setValue(this._state.searchString);\n            }\n            finally {\n                this._ignoreChangeEvent = false;\n            }\n            this._updateButtons();\n        }\n        if (e.replaceString) {\n            this._replaceInput.inputBox.value = this._state.replaceString;\n        }\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._reveal();\n            }\n            else {\n                this._hide(true);\n            }\n        }\n        if (e.isReplaceRevealed) {\n            if (this._state.isReplaceRevealed) {\n                if (!this._codeEditor.getOption(92 /* EditorOption.readOnly */) && !this._isReplaceVisible) {\n                    this._isReplaceVisible = true;\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._updateButtons();\n                    this._replaceInput.inputBox.layout();\n                }\n            }\n            else {\n                if (this._isReplaceVisible) {\n                    this._isReplaceVisible = false;\n                    this._updateButtons();\n                }\n            }\n        }\n        if ((e.isRevealed || e.isReplaceRevealed) && (this._state.isRevealed || this._state.isReplaceRevealed)) {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }\n        if (e.isRegex) {\n            this._findInput.setRegex(this._state.isRegex);\n        }\n        if (e.wholeWord) {\n            this._findInput.setWholeWords(this._state.wholeWord);\n        }\n        if (e.matchCase) {\n            this._findInput.setCaseSensitive(this._state.matchCase);\n        }\n        if (e.preserveCase) {\n            this._replaceInput.setPreserveCase(this._state.preserveCase);\n        }\n        if (e.searchScope) {\n            if (this._state.searchScope) {\n                this._toggleSelectionFind.checked = true;\n            }\n            else {\n                this._toggleSelectionFind.checked = false;\n            }\n            this._updateToggleSelectionFindButton();\n        }\n        if (e.searchString || e.matchesCount || e.matchesPosition) {\n            const showRedOutline = (this._state.searchString.length > 0 && this._state.matchesCount === 0);\n            this._domNode.classList.toggle('no-results', showRedOutline);\n            this._updateMatchesCount();\n            this._updateButtons();\n        }\n        if (e.searchString || e.currentMatch) {\n            this._layoutViewZone();\n        }\n        if (e.updateHistory) {\n            this._delayedUpdateHistory();\n        }\n        if (e.loop) {\n            this._updateButtons();\n        }\n    }\n    _delayedUpdateHistory() {\n        this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(undefined, onUnexpectedError);\n    }\n    _updateHistory() {\n        if (this._state.searchString) {\n            this._findInput.inputBox.addToHistory();\n        }\n        if (this._state.replaceString) {\n            this._replaceInput.inputBox.addToHistory();\n        }\n    }\n    _updateMatchesCount() {\n        this._matchesCount.style.minWidth = MAX_MATCHES_COUNT_WIDTH + 'px';\n        if (this._state.matchesCount >= MATCHES_LIMIT) {\n            this._matchesCount.title = NLS_MATCHES_COUNT_LIMIT_TITLE;\n        }\n        else {\n            this._matchesCount.title = '';\n        }\n        // remove previous content\n        this._matchesCount.firstChild?.remove();\n        let label;\n        if (this._state.matchesCount > 0) {\n            let matchesCount = String(this._state.matchesCount);\n            if (this._state.matchesCount >= MATCHES_LIMIT) {\n                matchesCount += '+';\n            }\n            let matchesPosition = String(this._state.matchesPosition);\n            if (matchesPosition === '0') {\n                matchesPosition = '?';\n            }\n            label = strings.format(NLS_MATCHES_LOCATION, matchesPosition, matchesCount);\n        }\n        else {\n            label = NLS_NO_RESULTS;\n        }\n        this._matchesCount.appendChild(document.createTextNode(label));\n        alertFn(this._getAriaLabel(label, this._state.currentMatch, this._state.searchString));\n        MAX_MATCHES_COUNT_WIDTH = Math.max(MAX_MATCHES_COUNT_WIDTH, this._matchesCount.clientWidth);\n    }\n    // ----- actions\n    _getAriaLabel(label, currentMatch, searchString) {\n        if (label === NLS_NO_RESULTS) {\n            return searchString === ''\n                ? nls.localize('ariaSearchNoResultEmpty', \"{0} found\", label)\n                : nls.localize('ariaSearchNoResult', \"{0} found for '{1}'\", label, searchString);\n        }\n        if (currentMatch) {\n            const ariaLabel = nls.localize('ariaSearchNoResultWithLineNum', \"{0} found for '{1}', at {2}\", label, searchString, currentMatch.startLineNumber + ':' + currentMatch.startColumn);\n            const model = this._codeEditor.getModel();\n            if (model && (currentMatch.startLineNumber <= model.getLineCount()) && (currentMatch.startLineNumber >= 1)) {\n                const lineContent = model.getLineContent(currentMatch.startLineNumber);\n                return `${lineContent}, ${ariaLabel}`;\n            }\n            return ariaLabel;\n        }\n        return nls.localize('ariaSearchNoResultWithLineNumNoCurrentMatch', \"{0} found for '{1}'\", label, searchString);\n    }\n    /**\n     * If 'selection find' is ON we should not disable the button (its function is to cancel 'selection find').\n     * If 'selection find' is OFF we enable the button only if there is a selection.\n     */\n    _updateToggleSelectionFindButton() {\n        const selection = this._codeEditor.getSelection();\n        const isSelection = selection ? (selection.startLineNumber !== selection.endLineNumber || selection.startColumn !== selection.endColumn) : false;\n        const isChecked = this._toggleSelectionFind.checked;\n        if (this._isVisible && (isChecked || isSelection)) {\n            this._toggleSelectionFind.enable();\n        }\n        else {\n            this._toggleSelectionFind.disable();\n        }\n    }\n    _updateButtons() {\n        this._findInput.setEnabled(this._isVisible);\n        this._replaceInput.setEnabled(this._isVisible && this._isReplaceVisible);\n        this._updateToggleSelectionFindButton();\n        this._closeBtn.setEnabled(this._isVisible);\n        const findInputIsNonEmpty = (this._state.searchString.length > 0);\n        const matchesCount = this._state.matchesCount ? true : false;\n        this._prevBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateBack());\n        this._nextBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateForward());\n        this._replaceBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._replaceAllBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._domNode.classList.toggle('replaceToggled', this._isReplaceVisible);\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        const canReplace = !this._codeEditor.getOption(92 /* EditorOption.readOnly */);\n        this._toggleReplaceBtn.setEnabled(this._isVisible && canReplace);\n    }\n    _reveal() {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (!this._isVisible) {\n            this._isVisible = true;\n            const selection = this._codeEditor.getSelection();\n            switch (this._codeEditor.getOption(41 /* EditorOption.find */).autoFindInSelection) {\n                case 'always':\n                    this._toggleSelectionFind.checked = true;\n                    break;\n                case 'never':\n                    this._toggleSelectionFind.checked = false;\n                    break;\n                case 'multiline': {\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                    this._toggleSelectionFind.checked = isSelectionMultipleLine;\n                    break;\n                }\n                default:\n                    break;\n            }\n            this._tryUpdateWidgetWidth();\n            this._updateButtons();\n            this._revealTimeouts.push(setTimeout(() => {\n                this._domNode.classList.add('visible');\n                this._domNode.setAttribute('aria-hidden', 'false');\n            }, 0));\n            // validate query again as it's being dismissed when we hide the find widget.\n            this._revealTimeouts.push(setTimeout(() => {\n                this._findInput.validate();\n            }, 200));\n            this._codeEditor.layoutOverlayWidget(this);\n            let adjustEditorScrollTop = true;\n            if (this._codeEditor.getOption(41 /* EditorOption.find */).seedSearchStringFromSelection && selection) {\n                const domNode = this._codeEditor.getDomNode();\n                if (domNode) {\n                    const editorCoords = dom.getDomNodePagePosition(domNode);\n                    const startCoords = this._codeEditor.getScrolledVisiblePosition(selection.getStartPosition());\n                    const startLeft = editorCoords.left + (startCoords ? startCoords.left : 0);\n                    const startTop = startCoords ? startCoords.top : 0;\n                    if (this._viewZone && startTop < this._viewZone.heightInPx) {\n                        if (selection.endLineNumber > selection.startLineNumber) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const leftOfFindWidget = dom.getTopLeftOffset(this._domNode).left;\n                        if (startLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const endCoords = this._codeEditor.getScrolledVisiblePosition(selection.getEndPosition());\n                        const endLeft = editorCoords.left + (endCoords ? endCoords.left : 0);\n                        if (endLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                    }\n                }\n            }\n            this._showViewZone(adjustEditorScrollTop);\n        }\n    }\n    _hide(focusTheEditor) {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (this._isVisible) {\n            this._isVisible = false;\n            this._updateButtons();\n            this._domNode.classList.remove('visible');\n            this._domNode.setAttribute('aria-hidden', 'true');\n            this._findInput.clearMessage();\n            if (focusTheEditor) {\n                this._codeEditor.focus();\n            }\n            this._codeEditor.layoutOverlayWidget(this);\n            this._removeViewZone();\n        }\n    }\n    _layoutViewZone(targetScrollTop) {\n        const addExtraSpaceOnTop = this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            this._removeViewZone();\n            return;\n        }\n        if (!this._isVisible) {\n            return;\n        }\n        const viewZone = this._viewZone;\n        if (this._viewZoneId !== undefined || !viewZone) {\n            return;\n        }\n        this._codeEditor.changeViewZones((accessor) => {\n            viewZone.heightInPx = this._getHeight();\n            this._viewZoneId = accessor.addZone(viewZone);\n            // scroll top adjust to make sure the editor doesn't scroll when adding viewzone at the beginning.\n            this._codeEditor.setScrollTop(targetScrollTop || this._codeEditor.getScrollTop() + viewZone.heightInPx);\n        });\n    }\n    _showViewZone(adjustScroll = true) {\n        if (!this._isVisible) {\n            return;\n        }\n        const addExtraSpaceOnTop = this._codeEditor.getOption(41 /* EditorOption.find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            return;\n        }\n        if (this._viewZone === undefined) {\n            this._viewZone = new FindWidgetViewZone(0);\n        }\n        const viewZone = this._viewZone;\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                // the view zone already exists, we need to update the height\n                const newHeight = this._getHeight();\n                if (newHeight === viewZone.heightInPx) {\n                    return;\n                }\n                const scrollAdjustment = newHeight - viewZone.heightInPx;\n                viewZone.heightInPx = newHeight;\n                accessor.layoutZone(this._viewZoneId);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n                return;\n            }\n            else {\n                let scrollAdjustment = this._getHeight();\n                // if the editor has top padding, factor that into the zone height\n                scrollAdjustment -= this._codeEditor.getOption(84 /* EditorOption.padding */).top;\n                if (scrollAdjustment <= 0) {\n                    return;\n                }\n                viewZone.heightInPx = scrollAdjustment;\n                this._viewZoneId = accessor.addZone(viewZone);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n            }\n        });\n    }\n    _removeViewZone() {\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                accessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n                if (this._viewZone) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() - this._viewZone.heightInPx);\n                    this._viewZone = undefined;\n                }\n            }\n        });\n    }\n    _tryUpdateWidgetWidth() {\n        if (!this._isVisible) {\n            return;\n        }\n        if (!this._domNode.isConnected) {\n            // the widget is not in the DOM\n            return;\n        }\n        const layoutInfo = this._codeEditor.getLayoutInfo();\n        const editorContentWidth = layoutInfo.contentWidth;\n        if (editorContentWidth <= 0) {\n            // for example, diff view original editor\n            this._domNode.classList.add('hiddenEditor');\n            return;\n        }\n        else if (this._domNode.classList.contains('hiddenEditor')) {\n            this._domNode.classList.remove('hiddenEditor');\n        }\n        const editorWidth = layoutInfo.width;\n        const minimapWidth = layoutInfo.minimap.minimapWidth;\n        let collapsedFindWidget = false;\n        let reducedFindWidget = false;\n        let narrowFindWidget = false;\n        if (this._resized) {\n            const widgetWidth = dom.getTotalWidth(this._domNode);\n            if (widgetWidth > FIND_WIDGET_INITIAL_WIDTH) {\n                // as the widget is resized by users, we may need to change the max width of the widget as the editor width changes.\n                this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                return;\n            }\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth >= editorWidth) {\n            reducedFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth) {\n            narrowFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth + 50) {\n            collapsedFindWidget = true;\n        }\n        this._domNode.classList.toggle('collapsed-find-widget', collapsedFindWidget);\n        this._domNode.classList.toggle('narrow-find-widget', narrowFindWidget);\n        this._domNode.classList.toggle('reduced-find-widget', reducedFindWidget);\n        if (!narrowFindWidget && !collapsedFindWidget) {\n            // the minimal left offset of findwidget is 15px.\n            this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n        }\n        this._findInput.layout({ collapsedFindWidget, narrowFindWidget, reducedFindWidget });\n        if (this._resized) {\n            const findInputWidth = this._findInput.inputBox.element.clientWidth;\n            if (findInputWidth > 0) {\n                this._replaceInput.width = findInputWidth;\n            }\n        }\n        else if (this._isReplaceVisible) {\n            this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n        }\n    }\n    _getHeight() {\n        let totalheight = 0;\n        // find input margin top\n        totalheight += 4;\n        // find input height\n        totalheight += this._findInput.inputBox.height + 2 /** input box border */;\n        if (this._isReplaceVisible) {\n            // replace input margin\n            totalheight += 4;\n            totalheight += this._replaceInput.inputBox.height + 2 /** input box border */;\n        }\n        // margin bottom\n        totalheight += 4;\n        return totalheight;\n    }\n    _tryUpdateHeight() {\n        const totalHeight = this._getHeight();\n        if (this._cachedHeight !== null && this._cachedHeight === totalHeight) {\n            return false;\n        }\n        this._cachedHeight = totalHeight;\n        this._domNode.style.height = `${totalHeight}px`;\n        return true;\n    }\n    // ----- Public\n    focusFindInput() {\n        this._findInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._findInput.focus();\n    }\n    focusReplaceInput() {\n        this._replaceInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._replaceInput.focus();\n    }\n    highlightFindOptions() {\n        this._findInput.highlightFindOptions();\n    }\n    _updateSearchScope() {\n        if (!this._codeEditor.hasModel()) {\n            return;\n        }\n        if (this._toggleSelectionFind.checked) {\n            const selections = this._codeEditor.getSelections();\n            selections.map(selection => {\n                if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                    selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                }\n                const currentMatch = this._state.currentMatch;\n                if (selection.startLineNumber !== selection.endLineNumber) {\n                    if (!Range.equalsRange(selection, currentMatch)) {\n                        return selection;\n                    }\n                }\n                return null;\n            }).filter(element => !!element);\n            if (selections.length) {\n                this._state.change({ searchScope: selections }, true);\n            }\n        }\n    }\n    _onFindInputMouseDown(e) {\n        // on linux, middle key does pasting.\n        if (e.middleButton) {\n            e.stopPropagation();\n        }\n    }\n    _onFindInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* KeyCode.Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                this._findInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* KeyCode.Tab */)) {\n            if (this._isReplaceVisible) {\n                this._replaceInput.focus();\n            }\n            else {\n                this._findInput.focusOnCaseSensitive();\n            }\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* KeyCode.UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n        if (e.equals(18 /* KeyCode.DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n    }\n    _onReplaceInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* KeyCode.Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                if (platform.isWindows && platform.isNative && !this._ctrlEnterReplaceAllWarningPrompted) {\n                    // this is the first time when users press Ctrl + Enter to replace all\n                    this._notificationService.info(nls.localize('ctrlEnter.keybindingChanged', 'Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.'));\n                    this._ctrlEnterReplaceAllWarningPrompted = true;\n                    this._storageService.store(ctrlEnterReplaceAllWarningPromptedKey, true, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n                }\n                this._replaceInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* KeyCode.Tab */)) {\n            this._findInput.focusOnCaseSensitive();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n            this._findInput.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* KeyCode.UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n        if (e.equals(18 /* KeyCode.DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n    }\n    // ----- sash\n    getVerticalSashLeft(_sash) {\n        return 0;\n    }\n    // ----- initialization\n    _keybindingLabelFor(actionId) {\n        const kb = this._keybindingService.lookupKeybinding(actionId);\n        if (!kb) {\n            return '';\n        }\n        return ` (${kb.getLabel()})`;\n    }\n    _buildDomNode() {\n        const flexibleHeight = true;\n        const flexibleWidth = true;\n        // Find input\n        this._findInput = this._register(new ContextScopedFindInput(null, this._contextViewProvider, {\n            width: FIND_INPUT_AREA_WIDTH,\n            label: NLS_FIND_INPUT_LABEL,\n            placeholder: NLS_FIND_INPUT_PLACEHOLDER,\n            appendCaseSensitiveLabel: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\n            appendWholeWordsLabel: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\n            appendRegexLabel: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\n            validation: (value) => {\n                if (value.length === 0 || !this._findInput.getRegex()) {\n                    return null;\n                }\n                try {\n                    // use `g` and `u` which are also used by the TextModel search\n                    new RegExp(value, 'gu');\n                    return null;\n                }\n                catch (e) {\n                    return { content: e.message };\n                }\n            },\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showCommonFindToggles: true,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService),\n            inputBoxStyles: defaultInputBoxStyles,\n            toggleStyles: defaultToggleStyles\n        }, this._contextKeyService));\n        this._findInput.setRegex(!!this._state.isRegex);\n        this._findInput.setCaseSensitive(!!this._state.matchCase);\n        this._findInput.setWholeWords(!!this._state.wholeWord);\n        this._register(this._findInput.onKeyDown((e) => this._onFindInputKeyDown(e)));\n        this._register(this._findInput.inputBox.onDidChange(() => {\n            if (this._ignoreChangeEvent) {\n                return;\n            }\n            this._state.change({ searchString: this._findInput.getValue() }, true);\n        }));\n        this._register(this._findInput.onDidOptionChange(() => {\n            this._state.change({\n                isRegex: this._findInput.getRegex(),\n                wholeWord: this._findInput.getWholeWords(),\n                matchCase: this._findInput.getCaseSensitive()\n            }, true);\n        }));\n        this._register(this._findInput.onCaseSensitiveKeyDown((e) => {\n            if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focus();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.onRegexKeyDown((e) => {\n            if (e.equals(2 /* KeyCode.Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focusOnPreserve();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.inputBox.onDidHeightChange((e) => {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        if (platform.isLinux) {\n            this._register(this._findInput.onMouseDown((e) => this._onFindInputMouseDown(e)));\n        }\n        this._matchesCount = document.createElement('div');\n        this._matchesCount.className = 'matchesCount';\n        this._updateMatchesCount();\n        // Create a scoped hover delegate for all find related buttons\n        const hoverDelegate = this._register(createInstantHoverDelegate());\n        // Previous button\n        this._prevBtn = this._register(new SimpleButton({\n            label: NLS_PREVIOUS_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.PreviousMatchFindAction),\n            icon: findPreviousMatchIcon,\n            hoverDelegate,\n            onTrigger: () => {\n                assertIsDefined(this._codeEditor.getAction(FIND_IDS.PreviousMatchFindAction)).run().then(undefined, onUnexpectedError);\n            }\n        }, this._hoverService));\n        // Next button\n        this._nextBtn = this._register(new SimpleButton({\n            label: NLS_NEXT_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.NextMatchFindAction),\n            icon: findNextMatchIcon,\n            hoverDelegate,\n            onTrigger: () => {\n                assertIsDefined(this._codeEditor.getAction(FIND_IDS.NextMatchFindAction)).run().then(undefined, onUnexpectedError);\n            }\n        }, this._hoverService));\n        const findPart = document.createElement('div');\n        findPart.className = 'find-part';\n        findPart.appendChild(this._findInput.domNode);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'find-actions';\n        findPart.appendChild(actionsContainer);\n        actionsContainer.appendChild(this._matchesCount);\n        actionsContainer.appendChild(this._prevBtn.domNode);\n        actionsContainer.appendChild(this._nextBtn.domNode);\n        // Toggle selection button\n        this._toggleSelectionFind = this._register(new Toggle({\n            icon: findSelectionIcon,\n            title: NLS_TOGGLE_SELECTION_FIND_TITLE + this._keybindingLabelFor(FIND_IDS.ToggleSearchScopeCommand),\n            isChecked: false,\n            hoverDelegate: hoverDelegate,\n            inputActiveOptionBackground: asCssVariable(inputActiveOptionBackground),\n            inputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n            inputActiveOptionForeground: asCssVariable(inputActiveOptionForeground),\n        }));\n        this._register(this._toggleSelectionFind.onChange(() => {\n            if (this._toggleSelectionFind.checked) {\n                if (this._codeEditor.hasModel()) {\n                    let selections = this._codeEditor.getSelections();\n                    selections = selections.map(selection => {\n                        if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                            selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                        }\n                        if (!selection.isEmpty()) {\n                            return selection;\n                        }\n                        return null;\n                    }).filter((element) => !!element);\n                    if (selections.length) {\n                        this._state.change({ searchScope: selections }, true);\n                    }\n                }\n            }\n            else {\n                this._state.change({ searchScope: null }, true);\n            }\n        }));\n        actionsContainer.appendChild(this._toggleSelectionFind.domNode);\n        // Close button\n        this._closeBtn = this._register(new SimpleButton({\n            label: NLS_CLOSE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.CloseFindWidgetCommand),\n            icon: widgetClose,\n            hoverDelegate,\n            onTrigger: () => {\n                this._state.change({ isRevealed: false, searchScope: null }, false);\n            },\n            onKeyDown: (e) => {\n                if (e.equals(2 /* KeyCode.Tab */)) {\n                    if (this._isReplaceVisible) {\n                        if (this._replaceBtn.isEnabled()) {\n                            this._replaceBtn.focus();\n                        }\n                        else {\n                            this._codeEditor.focus();\n                        }\n                        e.preventDefault();\n                    }\n                }\n            }\n        }, this._hoverService));\n        // Replace input\n        this._replaceInput = this._register(new ContextScopedReplaceInput(null, undefined, {\n            label: NLS_REPLACE_INPUT_LABEL,\n            placeholder: NLS_REPLACE_INPUT_PLACEHOLDER,\n            appendPreserveCaseLabel: this._keybindingLabelFor(FIND_IDS.TogglePreserveCaseCommand),\n            history: [],\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService),\n            inputBoxStyles: defaultInputBoxStyles,\n            toggleStyles: defaultToggleStyles\n        }, this._contextKeyService, true));\n        this._replaceInput.setPreserveCase(!!this._state.preserveCase);\n        this._register(this._replaceInput.onKeyDown((e) => this._onReplaceInputKeyDown(e)));\n        this._register(this._replaceInput.inputBox.onDidChange(() => {\n            this._state.change({ replaceString: this._replaceInput.inputBox.value }, false);\n        }));\n        this._register(this._replaceInput.inputBox.onDidHeightChange((e) => {\n            if (this._isReplaceVisible && this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        this._register(this._replaceInput.onDidOptionChange(() => {\n            this._state.change({\n                preserveCase: this._replaceInput.getPreserveCase()\n            }, true);\n        }));\n        this._register(this._replaceInput.onPreserveCaseKeyDown((e) => {\n            if (e.equals(2 /* KeyCode.Tab */)) {\n                if (this._prevBtn.isEnabled()) {\n                    this._prevBtn.focus();\n                }\n                else if (this._nextBtn.isEnabled()) {\n                    this._nextBtn.focus();\n                }\n                else if (this._toggleSelectionFind.enabled) {\n                    this._toggleSelectionFind.focus();\n                }\n                else if (this._closeBtn.isEnabled()) {\n                    this._closeBtn.focus();\n                }\n                e.preventDefault();\n            }\n        }));\n        // Create scoped hover delegate for replace actions\n        const replaceHoverDelegate = this._register(createInstantHoverDelegate());\n        // Replace one button\n        this._replaceBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceOneAction),\n            icon: findReplaceIcon,\n            hoverDelegate: replaceHoverDelegate,\n            onTrigger: () => {\n                this._controller.replace();\n            },\n            onKeyDown: (e) => {\n                if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n                    this._closeBtn.focus();\n                    e.preventDefault();\n                }\n            }\n        }, this._hoverService));\n        // Replace all button\n        this._replaceAllBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_ALL_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceAllAction),\n            icon: findReplaceAllIcon,\n            hoverDelegate: replaceHoverDelegate,\n            onTrigger: () => {\n                this._controller.replaceAll();\n            }\n        }, this._hoverService));\n        const replacePart = document.createElement('div');\n        replacePart.className = 'replace-part';\n        replacePart.appendChild(this._replaceInput.domNode);\n        const replaceActionsContainer = document.createElement('div');\n        replaceActionsContainer.className = 'replace-actions';\n        replacePart.appendChild(replaceActionsContainer);\n        replaceActionsContainer.appendChild(this._replaceBtn.domNode);\n        replaceActionsContainer.appendChild(this._replaceAllBtn.domNode);\n        // Toggle replace button\n        this._toggleReplaceBtn = this._register(new SimpleButton({\n            label: NLS_TOGGLE_REPLACE_MODE_BTN_LABEL,\n            className: 'codicon toggle left',\n            onTrigger: () => {\n                this._state.change({ isReplaceRevealed: !this._isReplaceVisible }, false);\n                if (this._isReplaceVisible) {\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._replaceInput.inputBox.layout();\n                }\n                this._showViewZone();\n            }\n        }, this._hoverService));\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        // Widget\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'editor-widget find-widget';\n        this._domNode.setAttribute('aria-hidden', 'true');\n        this._domNode.ariaLabel = NLS_FIND_DIALOG_LABEL;\n        this._domNode.role = 'dialog';\n        // We need to set this explicitly, otherwise on IE11, the width inheritence of flex doesn't work.\n        this._domNode.style.width = `${FIND_WIDGET_INITIAL_WIDTH}px`;\n        this._domNode.appendChild(this._toggleReplaceBtn.domNode);\n        this._domNode.appendChild(findPart);\n        this._domNode.appendChild(this._closeBtn.domNode);\n        this._domNode.appendChild(replacePart);\n        this._resizeSash = this._register(new Sash(this._domNode, this, { orientation: 0 /* Orientation.VERTICAL */, size: 2 }));\n        this._resized = false;\n        let originalWidth = FIND_WIDGET_INITIAL_WIDTH;\n        this._register(this._resizeSash.onDidStart(() => {\n            originalWidth = dom.getTotalWidth(this._domNode);\n        }));\n        this._register(this._resizeSash.onDidChange((evt) => {\n            this._resized = true;\n            const width = originalWidth + evt.startX - evt.currentX;\n            if (width < FIND_WIDGET_INITIAL_WIDTH) {\n                // narrow down the find widget should be handled by CSS.\n                return;\n            }\n            const maxWidth = parseFloat(dom.getComputedStyle(this._domNode).maxWidth) || 0;\n            if (width > maxWidth) {\n                return;\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n            this._tryUpdateHeight();\n        }));\n        this._register(this._resizeSash.onDidReset(() => {\n            // users double click on the sash\n            const currentWidth = dom.getTotalWidth(this._domNode);\n            if (currentWidth < FIND_WIDGET_INITIAL_WIDTH) {\n                // The editor is narrow and the width of the find widget is controlled fully by CSS.\n                return;\n            }\n            let width = FIND_WIDGET_INITIAL_WIDTH;\n            if (!this._resized || currentWidth === FIND_WIDGET_INITIAL_WIDTH) {\n                // 1. never resized before, double click should maximizes it\n                // 2. users resized it already but its width is the same as default\n                const layoutInfo = this._codeEditor.getLayoutInfo();\n                width = layoutInfo.width - 28 - layoutInfo.minimap.minimapWidth - 15;\n                this._resized = true;\n            }\n            else {\n                /**\n                 * no op, the find widget should be shrinked to its default size.\n                 */\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n        }));\n    }\n    updateAccessibilitySupport() {\n        const value = this._codeEditor.getOption(2 /* EditorOption.accessibilitySupport */);\n        this._findInput.setFocusInputOnOptionClick(value !== 2 /* AccessibilitySupport.Enabled */);\n    }\n}\nexport class SimpleButton extends Widget {\n    constructor(opts, hoverService) {\n        super();\n        this._opts = opts;\n        let className = 'button';\n        if (this._opts.className) {\n            className = className + ' ' + this._opts.className;\n        }\n        if (this._opts.icon) {\n            className = className + ' ' + ThemeIcon.asClassName(this._opts.icon);\n        }\n        this._domNode = document.createElement('div');\n        this._domNode.tabIndex = 0;\n        this._domNode.className = className;\n        this._domNode.setAttribute('role', 'button');\n        this._domNode.setAttribute('aria-label', this._opts.label);\n        this._register(hoverService.setupManagedHover(opts.hoverDelegate ?? getDefaultHoverDelegate('element'), this._domNode, this._opts.label));\n        this.onclick(this._domNode, (e) => {\n            this._opts.onTrigger();\n            e.preventDefault();\n        });\n        this.onkeydown(this._domNode, (e) => {\n            if (e.equals(10 /* KeyCode.Space */) || e.equals(3 /* KeyCode.Enter */)) {\n                this._opts.onTrigger();\n                e.preventDefault();\n                return;\n            }\n            this._opts.onKeyDown?.(e);\n        });\n    }\n    get domNode() {\n        return this._domNode;\n    }\n    isEnabled() {\n        return (this._domNode.tabIndex >= 0);\n    }\n    focus() {\n        this._domNode.focus();\n    }\n    setEnabled(enabled) {\n        this._domNode.classList.toggle('disabled', !enabled);\n        this._domNode.setAttribute('aria-disabled', String(!enabled));\n        this._domNode.tabIndex = enabled ? 0 : -1;\n    }\n    setExpanded(expanded) {\n        this._domNode.setAttribute('aria-expanded', String(!!expanded));\n        if (expanded) {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findExpandedIcon));\n        }\n        else {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findExpandedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n        }\n    }\n}\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\n    if (findMatchHighlightBorder) {\n        collector.addRule(`.monaco-editor .findMatch { border: 1px ${isHighContrast(theme.type) ? 'dotted' : 'solid'} ${findMatchHighlightBorder}; box-sizing: border-box; }`);\n    }\n    const findRangeHighlightBorder = theme.getColor(editorFindRangeHighlightBorder);\n    if (findRangeHighlightBorder) {\n        collector.addRule(`.monaco-editor .findScope { border: 1px ${isHighContrast(theme.type) ? 'dashed' : 'solid'} ${findRangeHighlightBorder}; }`);\n    }\n    const hcBorder = theme.getColor(contrastBorder);\n    if (hcBorder) {\n        collector.addRule(`.monaco-editor .find-widget { border: 1px solid ${hcBorder}; }`);\n    }\n    const findMatchForeground = theme.getColor(editorFindMatchForeground);\n    if (findMatchForeground) {\n        collector.addRule(`.monaco-editor .findMatchInline { color: ${findMatchForeground}; }`);\n    }\n    const findMatchHighlightForeground = theme.getColor(editorFindMatchHighlightForeground);\n    if (findMatchHighlightForeground) {\n        collector.addRule(`.monaco-editor .currentFindMatchInline { color: ${findMatchHighlightForeground}; }`);\n    }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
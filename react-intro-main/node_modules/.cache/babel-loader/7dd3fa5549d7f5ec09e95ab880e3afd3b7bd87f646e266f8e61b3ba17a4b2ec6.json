{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Point from '../../geometry/Point';\n/**\n * Describes a rectangular perimeter for the given bounds.\n */\nexport const RectanglePerimeter = function (bounds, _vertex, next) {\n  let orthogonal = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  const cx = bounds.getCenterX();\n  const cy = bounds.getCenterY();\n  const dx = next.x - cx;\n  const dy = next.y - cy;\n  const alpha = Math.atan2(dy, dx);\n  const p = new Point(0, 0);\n  const pi = Math.PI;\n  const pi2 = Math.PI / 2;\n  const beta = pi2 - alpha;\n  const t = Math.atan2(bounds.height, bounds.width);\n  if (alpha < -pi + t || alpha > pi - t) {\n    // Left edge\n    p.x = bounds.x;\n    p.y = cy - bounds.width * Math.tan(alpha) / 2;\n  } else if (alpha < -t) {\n    // Top Edge\n    p.y = bounds.y;\n    p.x = cx - bounds.height * Math.tan(beta) / 2;\n  } else if (alpha < t) {\n    // Right Edge\n    p.x = bounds.x + bounds.width;\n    p.y = cy + bounds.width * Math.tan(alpha) / 2;\n  } else {\n    // Bottom Edge\n    p.y = bounds.y + bounds.height;\n    p.x = cx + bounds.height * Math.tan(beta) / 2;\n  }\n  if (orthogonal) {\n    if (next.x >= bounds.x && next.x <= bounds.x + bounds.width) {\n      p.x = next.x;\n    } else if (next.y >= bounds.y && next.y <= bounds.y + bounds.height) {\n      p.y = next.y;\n    }\n    if (next.x < bounds.x) {\n      p.x = bounds.x;\n    } else if (next.x > bounds.x + bounds.width) {\n      p.x = bounds.x + bounds.width;\n    }\n    if (next.y < bounds.y) {\n      p.y = bounds.y;\n    } else if (next.y > bounds.y + bounds.height) {\n      p.y = bounds.y + bounds.height;\n    }\n  }\n  return p;\n};","map":{"version":3,"names":["Point","RectanglePerimeter","bounds","_vertex","next","orthogonal","arguments","length","undefined","cx","getCenterX","cy","getCenterY","dx","x","dy","y","alpha","Math","atan2","p","pi","PI","pi2","beta","t","height","width","tan"],"sources":["D:/OSPanel/domains/old/react/react-intro/node_modules/@maxgraph/core/dist/view/style/perimeter/RectanglePerimeter.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Point from '../../geometry/Point';\n/**\n * Describes a rectangular perimeter for the given bounds.\n */\nexport const RectanglePerimeter = (bounds, _vertex, next, orthogonal = false) => {\n    const cx = bounds.getCenterX();\n    const cy = bounds.getCenterY();\n    const dx = next.x - cx;\n    const dy = next.y - cy;\n    const alpha = Math.atan2(dy, dx);\n    const p = new Point(0, 0);\n    const pi = Math.PI;\n    const pi2 = Math.PI / 2;\n    const beta = pi2 - alpha;\n    const t = Math.atan2(bounds.height, bounds.width);\n    if (alpha < -pi + t || alpha > pi - t) {\n        // Left edge\n        p.x = bounds.x;\n        p.y = cy - (bounds.width * Math.tan(alpha)) / 2;\n    }\n    else if (alpha < -t) {\n        // Top Edge\n        p.y = bounds.y;\n        p.x = cx - (bounds.height * Math.tan(beta)) / 2;\n    }\n    else if (alpha < t) {\n        // Right Edge\n        p.x = bounds.x + bounds.width;\n        p.y = cy + (bounds.width * Math.tan(alpha)) / 2;\n    }\n    else {\n        // Bottom Edge\n        p.y = bounds.y + bounds.height;\n        p.x = cx + (bounds.height * Math.tan(beta)) / 2;\n    }\n    if (orthogonal) {\n        if (next.x >= bounds.x && next.x <= bounds.x + bounds.width) {\n            p.x = next.x;\n        }\n        else if (next.y >= bounds.y && next.y <= bounds.y + bounds.height) {\n            p.y = next.y;\n        }\n        if (next.x < bounds.x) {\n            p.x = bounds.x;\n        }\n        else if (next.x > bounds.x + bounds.width) {\n            p.x = bounds.x + bounds.width;\n        }\n        if (next.y < bounds.y) {\n            p.y = bounds.y;\n        }\n        else if (next.y > bounds.y + bounds.height) {\n            p.y = bounds.y + bounds.height;\n        }\n    }\n    return p;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
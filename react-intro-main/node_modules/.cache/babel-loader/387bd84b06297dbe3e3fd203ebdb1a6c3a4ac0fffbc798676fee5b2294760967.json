{"ast":null,"code":"var _jsxFileName = \"D:\\\\ospanel\\\\domains\\\\react\\\\react-intro-main\\\\src\\\\components\\\\Editor.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as monaco from 'monaco-editor';\nimport './monaco-vhdl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VHDLEditor = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(({\n  id,\n  onCodeChange,\n  initialCode\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  const editorInstanceRef = useRef(null);\n  const scrollPositionRef = useRef({\n    top: 0,\n    left: 0\n  });\n  const cursorPositionRef = useRef(null);\n  useEffect(() => {\n    if (editorRef.current) {\n      editorInstanceRef.current = monaco.editor.create(editorRef.current, {\n        value: initialCode,\n        language: 'vhdl',\n        theme: 'my-custom-dark',\n        automaticLayout: true\n      });\n      const editorInstance = editorInstanceRef.current;\n      const debounceChangeHandler = debounce(() => {\n        const code = editorInstance.getValue();\n        onCodeChange(code);\n      }, 300);\n      editorInstance.onDidChangeModelContent(debounceChangeHandler);\n      return () => {\n        editorInstance.dispose();\n      };\n    }\n  }, [initialCode, onCodeChange]);\n  const saveCursorAndScroll = () => {\n    if (editorInstanceRef.current) {\n      const editor = editorInstanceRef.current;\n      scrollPositionRef.current.top = editor.getScrollTop();\n      scrollPositionRef.current.left = editor.getScrollLeft();\n      cursorPositionRef.current = editor.getPosition();\n    }\n  };\n  const restoreCursorAndScroll = () => {\n    if (editorInstanceRef.current) {\n      const editor = editorInstanceRef.current;\n      editor.setScrollTop(scrollPositionRef.current.top);\n      editor.setScrollLeft(scrollPositionRef.current.left);\n      if (cursorPositionRef.current) {\n        editor.setPosition(cursorPositionRef.current);\n        editor.revealPositionInCenter(cursorPositionRef.current);\n      }\n    }\n  };\n  useEffect(() => {\n    const editor = editorInstanceRef.current;\n    if (editor) {\n      const scrollListener = editor.onDidScrollChange(saveCursorAndScroll);\n      const cursorListener = editor.onDidChangeCursorPosition(saveCursorAndScroll);\n      return () => {\n        scrollListener.dispose();\n        cursorListener.dispose();\n      };\n    }\n  }, []);\n  useEffect(() => {\n    restoreCursorAndScroll();\n  }, [initialCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    ref: editorRef,\n    className: \"vhdl-editor\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 10\n  }, this);\n}, \"PA9pugu6qz9U+3Ajmljz/Y/Wtg4=\")), \"PA9pugu6qz9U+3Ajmljz/Y/Wtg4=\");\n_c2 = VHDLEditor;\nfunction debounce(func, wait) {\n  let timeout;\n  return function () {\n    clearTimeout(timeout);\n    timeout = setTimeout(func, wait);\n  };\n}\nconst CompilerConsole = ({\n  output\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"compiler-console\",\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"\\u041A\\u043E\\u043D\\u0441\\u043E\\u043B\\u044C:\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n    children: output\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 87,\n  columnNumber: 3\n}, this);\n_c3 = CompilerConsole;\nconst VHDLEditorWithCompiler = () => {\n  _s2();\n  const [architectureCode, setArchitectureCode] = useState(`library ieee;\nuse ieee.std_logic_1164.all;\nuse ieee.numeric_std.all;\n\nentity adder is\n  generic (\n    operand_width_g: natural\n  );\n\n  port (\n    clk : in std_logic;\n    rst_n : in std_logic;\n\n    -- a_in, b_in and sum_out are signed numbers (2's complement)\n    a_in : in std_logic_vector(operand_width_g - 1 downto 0);\n    b_in : in std_logic_vector(operand_width_g - 1 downto 0);\n    sum_out : out std_logic_vector(operand_width_g downto 0)\n  );\nend entity;\n\n------------------------------------------------------------------------------\n\narchitecture rtl of adder is\n  constant outw: natural := operand_width_g + 1; -- Output width\n  signal result_r: signed(operand_width_g downto 0);\nbegin\n  -- Internal signal result_r goes to output port\n  sum_out <= std_logic_vector(result_r);\n\n  -- Synchronous process performs addition on clock edge\n  sync: process(rst_n, clk)\n  begin\n    if (rst_n = '0') then\n      result_r <= to_signed(0, outw);\n    elsif rising_edge(clk) then\n      result_r <= resize(signed(a_in), outw) + resize(signed(b_in), outw);\n    end if;\n  end process;\nend architecture;`);\n  const [testbenchCode, setTestbenchCode] = useState(`library ieee;\nuse ieee.std_logic_1164.all;\nuse ieee.numeric_std.all;\n\nentity tb_adder is\nend tb_adder;\n\n\narchitecture testbench of tb_adder is\n\n  -- Define constants: bit widths and duration of clk period\n  constant input_w_c : integer := 8;\n  constant output_w_c : integer := 9;\n  constant clk_period_c : time := 100 ns;\n\n  -- Calculate minimum and maximum values of input values\n  constant min_value_c : signed(input_w_c-1 downto 0) := to_signed( -(2**(input_w_c-1)), input_w_c);\n  constant max_value_c : signed(input_w_c-1 downto 0) := to_signed( 2**(input_w_c-1)-1, input_w_c);\n\n  -- Component declaration of DUV\n  component adder\n    generic (\n      operand_width_g : integer\n    );\n    port (\n      clk : in std_logic;\n      rst_n : in std_logic;\n      a_in : in std_logic_vector(operand_width_g-1 downto 0);\n      b_in : in std_logic_vector(operand_width_g-1 downto 0);\n      sum_out : out std_logic_vector(operand_width_g downto 0)\n    );\n  end component;\n\n  -- Define the needed signals\n  signal clk : std_logic := '0';\n  signal rst_n : std_logic := '0';\n  signal term1_r : signed(input_w_c-1 downto 0);\n  signal term2_r : signed(input_w_c-1 downto 0);\n  signal sum : std_logic_vector(output_w_c-1 downto 0);\n  signal expected_sum_r : signed(output_w_c-1 downto 0);\n  signal end_simulation_r : std_logic;\n\nbegin -- testbench\n\n  adder_1 : adder\n    generic map (\n      operand_width_g => input_w_c)\n    port map (\n      clk => clk,\n      rst_n => rst_n,\n      a_in => std_logic_vector(term1_r),\n      b_in => std_logic_vector(term2_r),\n      sum_out => sum);\n\n  rst_n <= '1' after clk_period_c*2;\n\n  clk_gen : process (clk)\n  begin\n    clk <= not clk after clk_period_c/2;\n  end process clk_gen;\n\n  input_gen_output_check : process (clk, rst_n)\n  begin\n    if rst_n = '0' then\n      term1_r <= min_value_c;\n      term2_r <= min_value_c;\n      expected_sum_r <= (others => '0');\n      end_simulation_r <= '0';\n    elsif clk'event and clk = '1' then\n      if ( term1_r = max_value_c ) then\n        term1_r <= min_value_c;\n        if ( term2_r = max_value_c ) then\n          term2_r <= min_value_c;\n          end_simulation_r <= '1';\n        else\n          term2_r <= term2_r + to_signed(1, input_w_c);\n        end if;\n      else\n        term1_r <= term1_r + to_signed(1, input_w_c);\n      end if;\n      expected_sum_r <= resize(term1_r, output_w_c) + resize(term2_r, output_w_c);\n      assert to_integer(signed(sum)) = to_integer(expected_sum_r)\n        report \"output signal is not equal to the sum of the inputs\"\n        severity failure;\n      assert end_simulation_r = '0'\n        report \"Simulation ended!\" severity failure;\n    end if;\n  end process input_gen_output_check;\n\nend testbench;\n`);\n  const [output, setOutput] = useState('');\n  const compileCode = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/compile-vhdl', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          architectureCode,\n          testbenchCode\n        })\n      });\n      const text = await response.text();\n      try {\n        const result = JSON.parse(text);\n        if (result.success) {\n          setOutput(`Компиляция успешна:\\n${result.stdout}`);\n        } else {\n          setOutput(`Ошибка компиляции:\\n${result.stderr}`);\n        }\n      } catch {\n        throw new Error(`Некорректный JSON-ответ: ${text}`);\n      }\n    } catch (error) {\n      setOutput(`Ошибка запроса: ${error.message}`);\n    }\n  };\n  const compileButton = document.getElementById('compile-html');\n  if (compileButton) {\n    compileButton.addEventListener('click', compileCode);\n  }\n  const downloadVCD = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/download-vcd', {\n        method: 'GET'\n      });\n      if (!response.ok) {\n        throw new Error(`Ошибка: ${response.statusText}`);\n      }\n      const blob = await response.blob();\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = 'out.vcd';\n      link.click();\n    } catch (error) {\n      setOutput('Ошибка скачивания VCD: ' + error.message);\n    }\n  };\n  const downloadButton = document.getElementById('download-vcd-html');\n  if (downloadButton) {\n    downloadButton.addEventListener('click', downloadVCD);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"content-container\",\n    className: \"content-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: 'white',\n        marginLeft: '20px'\n      },\n      children: \"\\u0410\\u0440\\u0445\\u0438\\u0442\\u0435\\u043A\\u0442\\u0443\\u0440\\u0430:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VHDLEditor, {\n      id: \"architecture-editor\",\n      onCodeChange: setArchitectureCode,\n      initialCode: architectureCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: 'white',\n        marginLeft: '20px'\n      },\n      children: \"\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0439 \\u0441\\u0442\\u0435\\u043D\\u0434:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VHDLEditor, {\n      id: \"testbench-editor\",\n      onCodeChange: setTestbenchCode,\n      initialCode: testbenchCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompilerConsole, {\n      output: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n};\n_s2(VHDLEditorWithCompiler, \"kYgWM+9AkiuWLoMds+y3SawEAPo=\");\n_c4 = VHDLEditorWithCompiler;\nexport default VHDLEditorWithCompiler;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"VHDLEditor$React.memo\");\n$RefreshReg$(_c2, \"VHDLEditor\");\n$RefreshReg$(_c3, \"CompilerConsole\");\n$RefreshReg$(_c4, \"VHDLEditorWithCompiler\");","map":{"version":3,"names":["React","useState","useEffect","useRef","monaco","jsxDEV","_jsxDEV","VHDLEditor","_s","memo","_c","id","onCodeChange","initialCode","editorRef","editorInstanceRef","scrollPositionRef","top","left","cursorPositionRef","current","editor","create","value","language","theme","automaticLayout","editorInstance","debounceChangeHandler","debounce","code","getValue","onDidChangeModelContent","dispose","saveCursorAndScroll","getScrollTop","getScrollLeft","getPosition","restoreCursorAndScroll","setScrollTop","setScrollLeft","setPosition","revealPositionInCenter","scrollListener","onDidScrollChange","cursorListener","onDidChangeCursorPosition","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c2","func","wait","timeout","clearTimeout","setTimeout","CompilerConsole","output","children","_c3","VHDLEditorWithCompiler","_s2","architectureCode","setArchitectureCode","testbenchCode","setTestbenchCode","setOutput","compileCode","response","fetch","method","headers","body","JSON","stringify","text","result","parse","success","stdout","stderr","Error","error","message","compileButton","document","getElementById","addEventListener","downloadVCD","ok","statusText","blob","link","createElement","href","URL","createObjectURL","download","click","downloadButton","style","color","marginLeft","_c4","$RefreshReg$"],"sources":["D:/ospanel/domains/react/react-intro-main/src/components/Editor.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as monaco from 'monaco-editor';\r\nimport './monaco-vhdl'; \r\n\r\nconst VHDLEditor = React.memo(({ id, onCodeChange, initialCode }) => {\r\n  const editorRef = useRef(null);\r\n  const editorInstanceRef = useRef(null);\r\n  const scrollPositionRef = useRef({ top: 0, left: 0 });\r\n  const cursorPositionRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (editorRef.current) {\r\n      editorInstanceRef.current = monaco.editor.create(editorRef.current, {\r\n        value: initialCode,\r\n        language: 'vhdl',\r\n        theme: 'my-custom-dark',\r\n        automaticLayout: true,\r\n      }\r\n    );\r\n\r\n      const editorInstance = editorInstanceRef.current;\r\n\r\n      const debounceChangeHandler = debounce(() => {\r\n        const code = editorInstance.getValue();\r\n        onCodeChange(code);\r\n      }, 300);\r\n\r\n      editorInstance.onDidChangeModelContent(debounceChangeHandler);\r\n\r\n      return () => {\r\n        editorInstance.dispose();\r\n      };\r\n    }\r\n  }, [initialCode, onCodeChange]);\r\n\r\n  const saveCursorAndScroll = () => {\r\n    if (editorInstanceRef.current) {\r\n      const editor = editorInstanceRef.current;\r\n      scrollPositionRef.current.top = editor.getScrollTop();\r\n      scrollPositionRef.current.left = editor.getScrollLeft();\r\n      cursorPositionRef.current = editor.getPosition();\r\n    }\r\n  };\r\n\r\n  const restoreCursorAndScroll = () => {\r\n    if (editorInstanceRef.current) {\r\n      const editor = editorInstanceRef.current;\r\n      editor.setScrollTop(scrollPositionRef.current.top);\r\n      editor.setScrollLeft(scrollPositionRef.current.left);\r\n      if (cursorPositionRef.current) {\r\n        editor.setPosition(cursorPositionRef.current);\r\n        editor.revealPositionInCenter(cursorPositionRef.current);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const editor = editorInstanceRef.current;\r\n\r\n    if (editor) {\r\n      const scrollListener = editor.onDidScrollChange(saveCursorAndScroll);\r\n      const cursorListener = editor.onDidChangeCursorPosition(saveCursorAndScroll);\r\n\r\n      return () => {\r\n        scrollListener.dispose();\r\n        cursorListener.dispose();\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    restoreCursorAndScroll();\r\n  }, [initialCode]);\r\n\r\n  return <div id={id} ref={editorRef} className=\"vhdl-editor\"></div>;\r\n});\r\n\r\nfunction debounce(func, wait) {\r\n  let timeout;\r\n  return function () {\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(func, wait);\r\n  };\r\n}\r\n\r\nconst CompilerConsole = ({ output }) => (\r\n  <div className=\"compiler-console\">\r\n    <h3>Консоль:</h3>\r\n    <pre>{output}</pre>\r\n  </div>\r\n);\r\n\r\nconst VHDLEditorWithCompiler = () => {\r\n  const [architectureCode, setArchitectureCode] = useState(`library ieee;\r\nuse ieee.std_logic_1164.all;\r\nuse ieee.numeric_std.all;\r\n\r\nentity adder is\r\n  generic (\r\n    operand_width_g: natural\r\n  );\r\n\r\n  port (\r\n    clk : in std_logic;\r\n    rst_n : in std_logic;\r\n\r\n    -- a_in, b_in and sum_out are signed numbers (2's complement)\r\n    a_in : in std_logic_vector(operand_width_g - 1 downto 0);\r\n    b_in : in std_logic_vector(operand_width_g - 1 downto 0);\r\n    sum_out : out std_logic_vector(operand_width_g downto 0)\r\n  );\r\nend entity;\r\n\r\n------------------------------------------------------------------------------\r\n\r\narchitecture rtl of adder is\r\n  constant outw: natural := operand_width_g + 1; -- Output width\r\n  signal result_r: signed(operand_width_g downto 0);\r\nbegin\r\n  -- Internal signal result_r goes to output port\r\n  sum_out <= std_logic_vector(result_r);\r\n\r\n  -- Synchronous process performs addition on clock edge\r\n  sync: process(rst_n, clk)\r\n  begin\r\n    if (rst_n = '0') then\r\n      result_r <= to_signed(0, outw);\r\n    elsif rising_edge(clk) then\r\n      result_r <= resize(signed(a_in), outw) + resize(signed(b_in), outw);\r\n    end if;\r\n  end process;\r\nend architecture;`);\r\n\r\n  const [testbenchCode, setTestbenchCode] = useState(`library ieee;\r\nuse ieee.std_logic_1164.all;\r\nuse ieee.numeric_std.all;\r\n\r\nentity tb_adder is\r\nend tb_adder;\r\n\r\n\r\narchitecture testbench of tb_adder is\r\n\r\n  -- Define constants: bit widths and duration of clk period\r\n  constant input_w_c : integer := 8;\r\n  constant output_w_c : integer := 9;\r\n  constant clk_period_c : time := 100 ns;\r\n\r\n  -- Calculate minimum and maximum values of input values\r\n  constant min_value_c : signed(input_w_c-1 downto 0) := to_signed( -(2**(input_w_c-1)), input_w_c);\r\n  constant max_value_c : signed(input_w_c-1 downto 0) := to_signed( 2**(input_w_c-1)-1, input_w_c);\r\n\r\n  -- Component declaration of DUV\r\n  component adder\r\n    generic (\r\n      operand_width_g : integer\r\n    );\r\n    port (\r\n      clk : in std_logic;\r\n      rst_n : in std_logic;\r\n      a_in : in std_logic_vector(operand_width_g-1 downto 0);\r\n      b_in : in std_logic_vector(operand_width_g-1 downto 0);\r\n      sum_out : out std_logic_vector(operand_width_g downto 0)\r\n    );\r\n  end component;\r\n\r\n  -- Define the needed signals\r\n  signal clk : std_logic := '0';\r\n  signal rst_n : std_logic := '0';\r\n  signal term1_r : signed(input_w_c-1 downto 0);\r\n  signal term2_r : signed(input_w_c-1 downto 0);\r\n  signal sum : std_logic_vector(output_w_c-1 downto 0);\r\n  signal expected_sum_r : signed(output_w_c-1 downto 0);\r\n  signal end_simulation_r : std_logic;\r\n\r\nbegin -- testbench\r\n\r\n  adder_1 : adder\r\n    generic map (\r\n      operand_width_g => input_w_c)\r\n    port map (\r\n      clk => clk,\r\n      rst_n => rst_n,\r\n      a_in => std_logic_vector(term1_r),\r\n      b_in => std_logic_vector(term2_r),\r\n      sum_out => sum);\r\n\r\n  rst_n <= '1' after clk_period_c*2;\r\n\r\n  clk_gen : process (clk)\r\n  begin\r\n    clk <= not clk after clk_period_c/2;\r\n  end process clk_gen;\r\n\r\n  input_gen_output_check : process (clk, rst_n)\r\n  begin\r\n    if rst_n = '0' then\r\n      term1_r <= min_value_c;\r\n      term2_r <= min_value_c;\r\n      expected_sum_r <= (others => '0');\r\n      end_simulation_r <= '0';\r\n    elsif clk'event and clk = '1' then\r\n      if ( term1_r = max_value_c ) then\r\n        term1_r <= min_value_c;\r\n        if ( term2_r = max_value_c ) then\r\n          term2_r <= min_value_c;\r\n          end_simulation_r <= '1';\r\n        else\r\n          term2_r <= term2_r + to_signed(1, input_w_c);\r\n        end if;\r\n      else\r\n        term1_r <= term1_r + to_signed(1, input_w_c);\r\n      end if;\r\n      expected_sum_r <= resize(term1_r, output_w_c) + resize(term2_r, output_w_c);\r\n      assert to_integer(signed(sum)) = to_integer(expected_sum_r)\r\n        report \"output signal is not equal to the sum of the inputs\"\r\n        severity failure;\r\n      assert end_simulation_r = '0'\r\n        report \"Simulation ended!\" severity failure;\r\n    end if;\r\n  end process input_gen_output_check;\r\n\r\nend testbench;\r\n`);\r\n\r\n  const [output, setOutput] = useState('');\r\n\r\n  const compileCode = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/compile-vhdl', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ architectureCode, testbenchCode }),\r\n      });\r\n\r\n      const text = await response.text();\r\n      try {\r\n        const result = JSON.parse(text);\r\n        if (result.success) {\r\n          setOutput(`Компиляция успешна:\\n${result.stdout}`);\r\n        } else {\r\n          setOutput(`Ошибка компиляции:\\n${result.stderr}`);\r\n        }\r\n      } catch {\r\n        throw new Error(`Некорректный JSON-ответ: ${text}`);\r\n      }\r\n    } catch (error) {\r\n      setOutput(`Ошибка запроса: ${error.message}`);\r\n    }\r\n  };\r\n  \r\n  const compileButton = document.getElementById('compile-html');\r\n  if (compileButton) {\r\n    compileButton.addEventListener('click', compileCode);\r\n  }\r\n\r\n  const downloadVCD = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/download-vcd', {\r\n        method: 'GET',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Ошибка: ${response.statusText}`);\r\n      }\r\n\r\n      const blob = await response.blob();\r\n      const link = document.createElement('a');\r\n      link.href = URL.createObjectURL(blob);\r\n      link.download = 'out.vcd';\r\n      link.click();\r\n    } catch (error) {\r\n      setOutput('Ошибка скачивания VCD: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const downloadButton = document.getElementById('download-vcd-html');\r\n  if (downloadButton) {\r\n    downloadButton.addEventListener('click', downloadVCD);\r\n  }\r\n\r\n  return (\r\n    <div id=\"content-container\" className=\"content-container\">\r\n      <h3 style={{ color: 'white', marginLeft: '20px' }}>Архитектура:</h3>\r\n      <VHDLEditor\r\n        id=\"architecture-editor\"\r\n        onCodeChange={setArchitectureCode}\r\n        initialCode={architectureCode}\r\n      />\r\n  \r\n      <h3 style={{ color: 'white', marginLeft: '20px' }}>Тестовый стенд:</h3>\r\n      <VHDLEditor\r\n        id=\"testbench-editor\"\r\n        onCodeChange={setTestbenchCode}\r\n        initialCode={testbenchCode}\r\n      />\r\n  \r\n      <CompilerConsole output={output} />\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default VHDLEditorWithCompiler;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
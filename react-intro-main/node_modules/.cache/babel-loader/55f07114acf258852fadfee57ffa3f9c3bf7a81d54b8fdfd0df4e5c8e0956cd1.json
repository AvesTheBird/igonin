{"ast":null,"code":"var _jsxFileName = \"D:\\\\OSPanel\\\\domains\\\\react\\\\react-intro-main\\\\src\\\\components\\\\Editor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as monaco from 'monaco-editor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VHDLEditor = () => {\n  _s();\n  const [architectureCode, setArchitectureCode] = useState(`...`);\n  const [testbenchCode, setTestbenchCode] = useState(`...`);\n  const [output, setOutput] = useState('');\n  const compileCode = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/compile-vhdl', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          architectureCode,\n          testbenchCode\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Ошибка: ${response.statusText}`);\n      }\n      const result = await response.text();\n      setOutput(result);\n    } catch (error) {\n      setOutput('Ошибка компиляции: ' + error.message);\n    }\n  };\n  const downloadVCD = () => {\n    const link = document.createElement('a');\n    link.href = 'http://localhost:5000/download-vcd';\n    link.download = 'out.vcd';\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"content-container\",\n    className: \"content-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0410\\u0440\\u0445\\u0438\\u0442\\u0435\\u043A\\u0442\\u0443\\u0440\\u0430:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VHDLEditor, {\n      id: \"architecture-editor\",\n      onCodeChange: setArchitectureCode,\n      initialCode: architectureCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0439 \\u0441\\u0442\\u0435\\u043D\\u0434:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VHDLEditor, {\n      id: \"testbench-editor\",\n      onCodeChange: setTestbenchCode,\n      initialCode: testbenchCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompilerConsole, {\n      output: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: compileCode,\n        children: \"\\u041A\\u043E\\u043C\\u043F\\u0438\\u043B\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadVCD,\n        children: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C VCD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(VHDLEditor, \"eZWKx/q+TgQ7qYfFD2+F+wuqi0Q=\");\n_c = VHDLEditor;\nexport default VHDLEditorWithCompiler;\nvar _c;\n$RefreshReg$(_c, \"VHDLEditor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","monaco","jsxDEV","_jsxDEV","VHDLEditor","_s","architectureCode","setArchitectureCode","testbenchCode","setTestbenchCode","output","setOutput","compileCode","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","result","text","error","message","downloadVCD","link","document","createElement","href","download","click","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCodeChange","initialCode","CompilerConsole","onClick","_c","VHDLEditorWithCompiler","$RefreshReg$"],"sources":["D:/OSPanel/domains/react/react-intro-main/src/components/Editor.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as monaco from 'monaco-editor';\r\n\r\nconst VHDLEditor = () => {\r\n  const [architectureCode, setArchitectureCode] = useState(`...`);\r\n  const [testbenchCode, setTestbenchCode] = useState(`...`);\r\n  const [output, setOutput] = useState('');\r\n\r\n  const compileCode = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/compile-vhdl', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ architectureCode, testbenchCode }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Ошибка: ${response.statusText}`);\r\n      }\r\n\r\n      const result = await response.text();\r\n      setOutput(result);\r\n    } catch (error) {\r\n      setOutput('Ошибка компиляции: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const downloadVCD = () => {\r\n    const link = document.createElement('a');\r\n    link.href = 'http://localhost:5000/download-vcd';\r\n    link.download = 'out.vcd';\r\n    link.click();\r\n  };\r\n\r\n  return (\r\n    <div id=\"content-container\" className=\"content-container\">\r\n      <h3>Архитектура:</h3>\r\n      <VHDLEditor\r\n        id=\"architecture-editor\"\r\n        onCodeChange={setArchitectureCode}\r\n        initialCode={architectureCode}\r\n      />\r\n\r\n      <h3>Тестовый стенд:</h3>\r\n      <VHDLEditor\r\n        id=\"testbench-editor\"\r\n        onCodeChange={setTestbenchCode}\r\n        initialCode={testbenchCode}\r\n      />\r\n\r\n      <CompilerConsole output={output} />\r\n\r\n      <div>\r\n        <button onClick={compileCode}>Компилировать</button>\r\n        <button onClick={downloadVCD}>Скачать VCD</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default VHDLEditorWithCompiler;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\ospanel\\\\domains\\\\react\\\\react-intro\\\\src\\\\components\\\\GraphComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { domUtils, styleUtils, mathUtils, cloneUtils, eventUtils, Graph, InternalEvent, RubberBandHandler, ConnectionHandler, ConnectionConstraint, Point, CylinderShape, CellRenderer, DomHelpers, EdgeStyle, Rectangle, EdgeHandler, StyleRegistry, EdgeSegmentHandler, UndoManager, CellEditorHandler, ConstraintHandler, Guide, ImageBox, GraphView, SelectionHandler, PanningHandler, TooltipHandler, SelectionCellsHandler, PopupMenuHandler } from '@maxgraph/core';\nimport '@maxgraph/core/css/common.css';\nimport { createGraphContainer } from './shared/configure.js';\nimport { contextMenuTypes, contextMenuValues, globalTypes, globalValues, rubberBandTypes, rubberBandValues } from './shared/args.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Default = () => {\n  _s();\n  const graphContainerRef = useRef(null);\n  useEffect(() => {\n    const container = createGraphContainer(globalValues);\n    let graph = null;\n    let invert = false;\n    const initializeGraph = () => {\n      graph = new Graph(container, null, [CellEditorHandler, TooltipHandler, SelectionCellsHandler, PopupMenuHandler, ConnectionHandler, SelectionHandler, PanningHandler]);\n\n      // Set graph properties\n      graph.view.scale = 1;\n      graph.setPanning(true);\n      graph.setConnectable(true);\n      graph.setConnectableEdges(true);\n      graph.setDisconnectOnMove(false);\n      graph.foldingEnabled = false;\n      graph.maximumGraphBounds = new Rectangle(0, 0, 800, 600);\n      graph.border = 50;\n      graph.setEnterStopsCellEditing(true);\n      new RubberBandHandler(graph);\n      graph.setTooltips(true);\n\n      // Set default styles\n      let style = graph.getStylesheet().getDefaultEdgeStyle();\n      delete style.endArrow;\n      style.strokeColor = invert ? '#C0C0C0' : '#000000';\n      style.labelBackgroundColor = invert ? '#000000' : '#FFFFFF';\n      style.edgeStyle = 'wireEdgeStyle';\n      style.fontColor = invert ? '#FFFFFF' : '#000000';\n      style.fontSize = '9';\n      style.movable = '0';\n      style = graph.getStylesheet().getDefaultVertexStyle();\n      style.gradientDirection = 'south';\n      style.fillColor = invert ? 'none' : '#FFFFFF';\n      style.fontColor = invert ? '#FFFFFF' : '#000000';\n      style.fontStyle = '1';\n      style.fontSize = '12';\n      style.resizable = '0';\n      style.rounded = '1';\n\n      // Add buttons and event listeners\n      const parentContainer = document.createElement('div');\n      parentContainer.appendChild(DomHelpers.button('Zoom In', () => {\n        graph.zoomIn();\n      }));\n      parentContainer.appendChild(DomHelpers.button('Zoom Out', () => {\n        graph.zoomOut();\n      }));\n      parentContainer.appendChild(DomHelpers.button('Undo', () => {\n        undoManager.undo();\n      }));\n      parentContainer.appendChild(DomHelpers.button('Redo', () => {\n        undoManager.redo();\n      }));\n      parentContainer.appendChild(DomHelpers.button('Delete', () => {\n        graph.removeCells();\n      }));\n      const checkbox = document.createElement('input');\n      checkbox.setAttribute('type', 'checkbox');\n      checkbox.addEventListener('click', () => {\n        checkbox2.checked ? container.style.background = 'url(./images/grid.gif)' : container.style.background = '';\n        container.style.backgroundColor = invert ? 'black' : 'white';\n      });\n      const checkbox2 = document.createElement('input');\n      checkbox2.setAttribute('type', 'checkbox');\n      checkbox2.setAttribute('checked', 'true');\n      parentContainer.appendChild(checkbox);\n      domUtils.write(parentContainer, 'Wire Mode');\n      parentContainer.appendChild(checkbox2);\n      domUtils.write(parentContainer, 'Grid');\n      InternalEvent.disableContextMenu(container);\n      graphContainerRef.current.appendChild(parentContainer);\n    };\n    initializeGraph();\n    return () => {\n      // Clean up the graph instance\n      if (graph) {\n        graph.destroy();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: graphContainerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 10\n  }, this);\n};\n_s(Default, \"T2LhyAvPiiq95tTQ9P6wK78bc+c=\");\n_c = Default;\nvar _c;\n$RefreshReg$(_c, \"Default\");","map":{"version":3,"names":["React","useRef","useEffect","domUtils","styleUtils","mathUtils","cloneUtils","eventUtils","Graph","InternalEvent","RubberBandHandler","ConnectionHandler","ConnectionConstraint","Point","CylinderShape","CellRenderer","DomHelpers","EdgeStyle","Rectangle","EdgeHandler","StyleRegistry","EdgeSegmentHandler","UndoManager","CellEditorHandler","ConstraintHandler","Guide","ImageBox","GraphView","SelectionHandler","PanningHandler","TooltipHandler","SelectionCellsHandler","PopupMenuHandler","createGraphContainer","contextMenuTypes","contextMenuValues","globalTypes","globalValues","rubberBandTypes","rubberBandValues","jsxDEV","_jsxDEV","Default","_s","graphContainerRef","container","graph","invert","initializeGraph","view","scale","setPanning","setConnectable","setConnectableEdges","setDisconnectOnMove","foldingEnabled","maximumGraphBounds","border","setEnterStopsCellEditing","setTooltips","style","getStylesheet","getDefaultEdgeStyle","endArrow","strokeColor","labelBackgroundColor","edgeStyle","fontColor","fontSize","movable","getDefaultVertexStyle","gradientDirection","fillColor","fontStyle","resizable","rounded","parentContainer","document","createElement","appendChild","button","zoomIn","zoomOut","undoManager","undo","redo","removeCells","checkbox","setAttribute","addEventListener","checkbox2","checked","background","backgroundColor","write","disableContextMenu","current","destroy","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ospanel/domains/react/react-intro/src/components/GraphComponent.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport {\r\n  domUtils,\r\n  styleUtils,\r\n  mathUtils,\r\n  cloneUtils,\r\n  eventUtils,\r\n  Graph,\r\n  InternalEvent,\r\n  RubberBandHandler,\r\n  ConnectionHandler,\r\n  ConnectionConstraint,\r\n  Point,\r\n  CylinderShape,\r\n  CellRenderer,\r\n  DomHelpers,\r\n  EdgeStyle,\r\n  Rectangle,\r\n  EdgeHandler,\r\n  StyleRegistry,\r\n  EdgeSegmentHandler,\r\n  UndoManager,\r\n  CellEditorHandler,\r\n  ConstraintHandler,\r\n  Guide,\r\n  ImageBox,\r\n  GraphView,\r\n  SelectionHandler,\r\n  PanningHandler,\r\n  TooltipHandler,\r\n  SelectionCellsHandler,\r\n  PopupMenuHandler,\r\n} from '@maxgraph/core';\r\n\r\nimport '@maxgraph/core/css/common.css';\r\nimport { createGraphContainer } from './shared/configure.js';\r\nimport { contextMenuTypes, contextMenuValues, globalTypes, globalValues, rubberBandTypes, rubberBandValues } from './shared/args.js';\r\n\r\nexport const Default = () => {\r\n  const graphContainerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const container = createGraphContainer(globalValues);\r\n\r\n    let graph = null;\r\n    let invert = false;\r\n\r\n    const initializeGraph = () => {\r\n      graph = new Graph(container, null, [\r\n        CellEditorHandler,\r\n        TooltipHandler,\r\n        SelectionCellsHandler,\r\n        PopupMenuHandler,\r\n        ConnectionHandler,\r\n        SelectionHandler,\r\n        PanningHandler,\r\n      ]);\r\n\r\n      // Set graph properties\r\n      graph.view.scale = 1;\r\n      graph.setPanning(true);\r\n      graph.setConnectable(true);\r\n      graph.setConnectableEdges(true);\r\n      graph.setDisconnectOnMove(false);\r\n      graph.foldingEnabled = false;\r\n      graph.maximumGraphBounds = new Rectangle(0, 0, 800, 600);\r\n      graph.border = 50;\r\n      graph.setEnterStopsCellEditing(true);\r\n      new RubberBandHandler(graph);\r\n      graph.setTooltips(true);\r\n\r\n      // Set default styles\r\n      let style = graph.getStylesheet().getDefaultEdgeStyle();\r\n      delete style.endArrow;\r\n      style.strokeColor = invert ? '#C0C0C0' : '#000000';\r\n      style.labelBackgroundColor = invert ? '#000000' : '#FFFFFF';\r\n      style.edgeStyle = 'wireEdgeStyle';\r\n      style.fontColor = invert ? '#FFFFFF' : '#000000';\r\n      style.fontSize = '9';\r\n      style.movable = '0';\r\n\r\n      style = graph.getStylesheet().getDefaultVertexStyle();\r\n      style.gradientDirection = 'south';\r\n      style.fillColor = invert ? 'none' : '#FFFFFF';\r\n      style.fontColor = invert ? '#FFFFFF' : '#000000';\r\n      style.fontStyle = '1';\r\n      style.fontSize = '12';\r\n      style.resizable = '0';\r\n      style.rounded = '1';\r\n\r\n      // Add buttons and event listeners\r\n      const parentContainer = document.createElement('div');\r\n\r\n      parentContainer.appendChild(\r\n        DomHelpers.button('Zoom In', () => {\r\n          graph.zoomIn();\r\n        })\r\n      );\r\n\r\n      parentContainer.appendChild(\r\n        DomHelpers.button('Zoom Out', () => {\r\n          graph.zoomOut();\r\n        })\r\n      );\r\n\r\n      parentContainer.appendChild(\r\n        DomHelpers.button('Undo', () => {\r\n          undoManager.undo();\r\n        })\r\n      );\r\n\r\n      parentContainer.appendChild(\r\n        DomHelpers.button('Redo', () => {\r\n          undoManager.redo();\r\n        })\r\n      );\r\n\r\n      parentContainer.appendChild(\r\n        DomHelpers.button('Delete', () => {\r\n          graph.removeCells();\r\n        })\r\n      );\r\n\r\n      const checkbox = document.createElement('input');\r\n      checkbox.setAttribute('type', 'checkbox');\r\n      checkbox.addEventListener('click', () => {\r\n        checkbox2.checked ? (container.style.background = 'url(./images/grid.gif)') : (container.style.background = '');\r\n        container.style.backgroundColor = invert ? 'black' : 'white';\r\n      });\r\n\r\n      const checkbox2 = document.createElement('input');\r\n      checkbox2.setAttribute('type', 'checkbox');\r\n      checkbox2.setAttribute('checked', 'true');\r\n\r\n      parentContainer.appendChild(checkbox);\r\n      domUtils.write(parentContainer, 'Wire Mode');\r\n\r\n      parentContainer.appendChild(checkbox2);\r\n      domUtils.write(parentContainer, 'Grid');\r\n\r\n      InternalEvent.disableContextMenu(container);\r\n\r\n      graphContainerRef.current.appendChild(parentContainer);\r\n    };\r\n\r\n    initializeGraph();\r\n\r\n    return () => {\r\n      // Clean up the graph instance\r\n      if (graph) {\r\n        graph.destroy();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={graphContainerRef}></div>;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
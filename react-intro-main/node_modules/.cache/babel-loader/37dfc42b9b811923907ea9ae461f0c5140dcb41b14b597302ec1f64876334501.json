{"ast":null,"code":"import*as monaco from'monaco-editor';// Функция для генерации списка ключевых слов в разных регистрах\nfunction generateKeywords(str){const words=str.split(\",\");const keywords={};words.forEach(word=>{const lower=word.toLowerCase();const upper=word.toUpperCase();const capitalized=word.charAt(0).toUpperCase()+word.slice(1).toLowerCase();keywords[lower]=true;keywords[upper]=true;keywords[capitalized]=true;});return Object.keys(keywords);}// Ключевые слова\nconst keywords=generateKeywords(\"\\n  abs,access,after,alias,all,and,architecture,array,assert,attribute,begin,block,\\n  body,buffer,bus,case,component,configuration,constant,disconnect,downto,else,elsif,end,end block,end case,\\n  end component,end for,end generate,end if,end loop,end process,end record,end units,entity,exit,file,for,\\n  function,generate,generic,generic map,group,guarded,if,impure,in,inertial,inout,is,label,library,linkage,\\n  literal,loop,map,mod,nand,new,next,nor,null,of,on,open,or,others,out,package,package body,port,port map,\\n  postponed,procedure,process,pure,range,record,register,reject,rem,report,return,rol,ror,select,severity,signal,\\n  sla,sll,sra,srl,subtype,then,to,transport,type,unaffected,units,until,use,variable,wait,when,while,with,xnor,xor\\n\");// Регистрация языка VHDL\nmonaco.languages.register({id:'vhdl'});// Определение подсветки\nmonaco.languages.setMonarchTokensProvider('vhdl',{keywords,operators:['<=','=>','=','/=','<','<=','>','>=','+','-','*','/','&','|','and','or','not'],symbols:/[=><!~?:&|+\\-*\\/\\^%]+/,tokenizer:{root:[// Ключевые слова\n[new RegExp(\"\\\\b(\".concat(keywords.join('|'),\")\\\\b\"),'i'),'keyword'],// Числа\n[/\\b\\d+(\\.\\d+)?([eE][\\-+]?\\d+)?\\b/,'number'],// Комментарии\n[/--.*/,'comment'],// Операторы\n[/[=><!~?:&|+\\-*\\/\\^%]+/,'operator'],// Строки\n[/\"([^\"\\\\]|\\\\.)*$/,'string.invalid'],// Неполная строка\n[/\"([^\"\\\\]|\\\\.)*\"/,'string'],// Скобки и разделители\n[/[{}\\[\\]()]/,'@brackets'],// Идентификаторы\n[/\\b[a-zA-Z_][a-zA-Z0-9_]*\\b/,'variable']]}});// Настройка темы\nmonaco.editor.defineTheme('vhdlTheme',{base:'vs-dark',inherit:true,rules:[{token:'keyword',foreground:'FF0000'},{token:'number',foreground:'FF0000'},{token:'string',foreground:'ffffff'},{token:'comment',foreground:'FF0000'},{token:'operator',foreground:'FF0000'},{token:'variable',foreground:'FF0000'},{token:'brackets',foreground:'FF0000'}]});","map":{"version":3,"names":["monaco","generateKeywords","str","words","split","keywords","forEach","word","lower","toLowerCase","upper","toUpperCase","capitalized","charAt","slice","Object","keys","languages","register","id","setMonarchTokensProvider","operators","symbols","tokenizer","root","RegExp","concat","join","editor","defineTheme","base","inherit","rules","token","foreground"],"sources":["D:/ospanel/domains/react/react-intro-main/src/components/monaco-vhdl.js"],"sourcesContent":["import * as monaco from 'monaco-editor';\r\n\r\n// Функция для генерации списка ключевых слов в разных регистрах\r\nfunction generateKeywords(str) {\r\n  const words = str.split(\",\");\r\n  const keywords = {};\r\n  words.forEach((word) => {\r\n    const lower = word.toLowerCase();\r\n    const upper = word.toUpperCase();\r\n    const capitalized = word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\r\n    keywords[lower] = true;\r\n    keywords[upper] = true;\r\n    keywords[capitalized] = true;\r\n  });\r\n  return Object.keys(keywords);\r\n}\r\n\r\n// Ключевые слова\r\nconst keywords = generateKeywords(`\r\n  abs,access,after,alias,all,and,architecture,array,assert,attribute,begin,block,\r\n  body,buffer,bus,case,component,configuration,constant,disconnect,downto,else,elsif,end,end block,end case,\r\n  end component,end for,end generate,end if,end loop,end process,end record,end units,entity,exit,file,for,\r\n  function,generate,generic,generic map,group,guarded,if,impure,in,inertial,inout,is,label,library,linkage,\r\n  literal,loop,map,mod,nand,new,next,nor,null,of,on,open,or,others,out,package,package body,port,port map,\r\n  postponed,procedure,process,pure,range,record,register,reject,rem,report,return,rol,ror,select,severity,signal,\r\n  sla,sll,sra,srl,subtype,then,to,transport,type,unaffected,units,until,use,variable,wait,when,while,with,xnor,xor\r\n`);\r\n\r\n// Регистрация языка VHDL\r\nmonaco.languages.register({ id: 'vhdl' });\r\n\r\n// Определение подсветки\r\nmonaco.languages.setMonarchTokensProvider('vhdl', {\r\n  keywords,\r\n  operators: [\r\n    '<=', '=>', '=', '/=', '<', '<=', '>', '>=', '+', '-', '*', '/', '&', '|', 'and', 'or', 'not'\r\n  ],\r\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n  tokenizer: {\r\n    root: [\r\n      // Ключевые слова\r\n      [new RegExp(`\\\\b(${keywords.join('|')})\\\\b`, 'i'), 'keyword'],\r\n\r\n      // Числа\r\n      [/\\b\\d+(\\.\\d+)?([eE][\\-+]?\\d+)?\\b/, 'number'],\r\n\r\n      // Комментарии\r\n      [/--.*/, 'comment'],\r\n\r\n      // Операторы\r\n      [/[=><!~?:&|+\\-*\\/\\^%]+/, 'operator'],\r\n\r\n      // Строки\r\n      [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'], // Неполная строка\r\n      [/\"([^\"\\\\]|\\\\.)*\"/, 'string'],\r\n\r\n      // Скобки и разделители\r\n      [/[{}\\[\\]()]/, '@brackets'],\r\n\r\n      // Идентификаторы\r\n      [/\\b[a-zA-Z_][a-zA-Z0-9_]*\\b/, 'variable'],\r\n    ],\r\n  },\r\n});\r\n\r\n// Настройка темы\r\nmonaco.editor.defineTheme('vhdlTheme', {\r\n  base: 'vs-dark',\r\n  inherit: true,\r\n  rules: [\r\n    { token: 'keyword', foreground: 'FF0000' },\r\n    { token: 'number', foreground: 'FF0000' },\r\n    { token: 'string', foreground: 'ffffff' },\r\n    { token: 'comment', foreground: 'FF0000' },\r\n    { token: 'operator', foreground: 'FF0000' },\r\n    { token: 'variable', foreground: 'FF0000' },\r\n    { token: 'brackets', foreground: 'FF0000' },\r\n  ],\r\n});\r\n"],"mappings":"AAAA,MAAO,GAAK,CAAAA,MAAM,KAAM,eAAe,CAEvC;AACA,QAAS,CAAAC,gBAAgBA,CAACC,GAAG,CAAE,CAC7B,KAAM,CAAAC,KAAK,CAAGD,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC,CAC5B,KAAM,CAAAC,QAAQ,CAAG,CAAC,CAAC,CACnBF,KAAK,CAACG,OAAO,CAAEC,IAAI,EAAK,CACtB,KAAM,CAAAC,KAAK,CAAGD,IAAI,CAACE,WAAW,CAAC,CAAC,CAChC,KAAM,CAAAC,KAAK,CAAGH,IAAI,CAACI,WAAW,CAAC,CAAC,CAChC,KAAM,CAAAC,WAAW,CAAGL,IAAI,CAACM,MAAM,CAAC,CAAC,CAAC,CAACF,WAAW,CAAC,CAAC,CAAGJ,IAAI,CAACO,KAAK,CAAC,CAAC,CAAC,CAACL,WAAW,CAAC,CAAC,CAC9EJ,QAAQ,CAACG,KAAK,CAAC,CAAG,IAAI,CACtBH,QAAQ,CAACK,KAAK,CAAC,CAAG,IAAI,CACtBL,QAAQ,CAACO,WAAW,CAAC,CAAG,IAAI,CAC9B,CAAC,CAAC,CACF,MAAO,CAAAG,MAAM,CAACC,IAAI,CAACX,QAAQ,CAAC,CAC9B,CAEA;AACA,KAAM,CAAAA,QAAQ,CAAGJ,gBAAgB,mvBAQhC,CAAC,CAEF;AACAD,MAAM,CAACiB,SAAS,CAACC,QAAQ,CAAC,CAAEC,EAAE,CAAE,MAAO,CAAC,CAAC,CAEzC;AACAnB,MAAM,CAACiB,SAAS,CAACG,wBAAwB,CAAC,MAAM,CAAE,CAChDf,QAAQ,CACRgB,SAAS,CAAE,CACT,IAAI,CAAE,IAAI,CAAE,GAAG,CAAE,IAAI,CAAE,GAAG,CAAE,IAAI,CAAE,GAAG,CAAE,IAAI,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,KAAK,CAAE,IAAI,CAAE,KAAK,CAC9F,CACDC,OAAO,CAAE,uBAAuB,CAChCC,SAAS,CAAE,CACTC,IAAI,CAAE,CACJ;AACA,CAAC,GAAI,CAAAC,MAAM,QAAAC,MAAA,CAAQrB,QAAQ,CAACsB,IAAI,CAAC,GAAG,CAAC,SAAQ,GAAG,CAAC,CAAE,SAAS,CAAC,CAE7D;AACA,CAAC,iCAAiC,CAAE,QAAQ,CAAC,CAE7C;AACA,CAAC,MAAM,CAAE,SAAS,CAAC,CAEnB;AACA,CAAC,uBAAuB,CAAE,UAAU,CAAC,CAErC;AACA,CAAC,iBAAiB,CAAE,gBAAgB,CAAC,CAAE;AACvC,CAAC,iBAAiB,CAAE,QAAQ,CAAC,CAE7B;AACA,CAAC,YAAY,CAAE,WAAW,CAAC,CAE3B;AACA,CAAC,4BAA4B,CAAE,UAAU,CAAC,CAE9C,CACF,CAAC,CAAC,CAEF;AACA3B,MAAM,CAAC4B,MAAM,CAACC,WAAW,CAAC,WAAW,CAAE,CACrCC,IAAI,CAAE,SAAS,CACfC,OAAO,CAAE,IAAI,CACbC,KAAK,CAAE,CACL,CAAEC,KAAK,CAAE,SAAS,CAAEC,UAAU,CAAE,QAAS,CAAC,CAC1C,CAAED,KAAK,CAAE,QAAQ,CAAEC,UAAU,CAAE,QAAS,CAAC,CACzC,CAAED,KAAK,CAAE,QAAQ,CAAEC,UAAU,CAAE,QAAS,CAAC,CACzC,CAAED,KAAK,CAAE,SAAS,CAAEC,UAAU,CAAE,QAAS,CAAC,CAC1C,CAAED,KAAK,CAAE,UAAU,CAAEC,UAAU,CAAE,QAAS,CAAC,CAC3C,CAAED,KAAK,CAAE,UAAU,CAAEC,UAAU,CAAE,QAAS,CAAC,CAC3C,CAAED,KAAK,CAAE,UAAU,CAAEC,UAAU,CAAE,QAAS,CAAC,CAE/C,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
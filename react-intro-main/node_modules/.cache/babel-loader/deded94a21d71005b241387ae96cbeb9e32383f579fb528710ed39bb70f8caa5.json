{"ast":null,"code":"var _jsxFileName = \"D:\\\\ospanel\\\\domains\\\\\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B open server\\\\old\\\\react\\\\react-intro-main\\\\src\\\\components\\\\Editor.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as monaco from 'monaco-editor';\n\n// Компонент для редактора VHDL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VHDLEditor = ({\n  onCodeChange,\n  initialCode\n}) => {\n  _s();\n  useEffect(() => {\n    const editor = monaco.editor.create(document.getElementById('vhdl-editor'), {\n      value: initialCode,\n      // Изначальный код передаваемый из родительского компонента\n      language: 'vhdl',\n      theme: 'vs-dark',\n      automaticLayout: true\n    });\n\n    // Отслеживаем изменения в редакторе и передаем код в родительский компонент\n    editor.onDidChangeModelContent(() => {\n      const code = editor.getValue();\n      onCodeChange(code); // Передаем код в родительский компонент\n    });\n    return () => {\n      editor.dispose(); // Очистка редактора при удалении компонента\n    };\n  }, [initialCode, onCodeChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"vhdl-editor\",\n    style: {\n      height: '400px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n\n// Компонент для компиляции и отображения ошибок\n_s(VHDLEditor, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = VHDLEditor;\nconst CompilerConsole = ({\n  output\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"compiler-console\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u041A\\u043E\\u043D\\u0441\\u043E\\u043B\\u044C:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n// Основной компонент для редактирования VHDL и компиляции\n_c2 = CompilerConsole;\nconst VHDLEditorWithCompiler = () => {\n  _s2();\n  const [vhdlCode, setVhdlCode] = useState(`-- Напишите ваш VHDL код здесь\narchitecture Behavioral of testbench is\nbegin\n  -- Ваш тест\nend Behavioral;`); // Начальный код VHDL\n  const [output, setOutput] = useState(''); // Вывод компиляции\n\n  // Функция для компиляции кода\n  const compileCode = async () => {\n    try {\n      const response = await fetch('/compile-vhdl', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          vhdlCode\n        })\n      });\n      const result = await response.text();\n      setOutput(result); // Отображаем вывод компиляции\n    } catch (error) {\n      setOutput('Ошибка компиляции: ' + error.message); // Выводим ошибку\n    }\n  };\n\n  // Обновляем код из редактора\n  const handleCodeChange = code => {\n    setVhdlCode(code);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"content-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"VHDL \\u041A\\u043E\\u0434:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VHDLEditor, {\n      onCodeChange: handleCodeChange,\n      initialCode: vhdlCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"testbench-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0439 \\u0441\\u0442\\u0435\\u043D\\u0434:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"testbench-textarea\",\n        value: vhdlCode,\n        onChange: e => setVhdlCode(e.target.value),\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u0434 \\u0442\\u0435\\u0441\\u0442\\u0430...\",\n        style: {\n          width: '100%',\n          height: '150px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"compile-button\",\n      onClick: compileCode,\n      children: \"\\u041A\\u043E\\u043C\\u043F\\u0438\\u043B\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompilerConsole, {\n      output: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s2(VHDLEditorWithCompiler, \"OIV4Kiijk1MQKKTaXSWEn0zBjYQ=\");\n_c3 = VHDLEditorWithCompiler;\nexport default VHDLEditorWithCompiler;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"VHDLEditor\");\n$RefreshReg$(_c2, \"CompilerConsole\");\n$RefreshReg$(_c3, \"VHDLEditorWithCompiler\");","map":{"version":3,"names":["React","useState","useEffect","monaco","jsxDEV","_jsxDEV","VHDLEditor","onCodeChange","initialCode","_s","editor","create","document","getElementById","value","language","theme","automaticLayout","onDidChangeModelContent","code","getValue","dispose","id","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","CompilerConsole","output","className","children","_c2","VHDLEditorWithCompiler","_s2","vhdlCode","setVhdlCode","setOutput","compileCode","response","fetch","method","headers","body","JSON","stringify","result","text","error","message","handleCodeChange","onChange","e","target","placeholder","width","onClick","_c3","$RefreshReg$"],"sources":["D:/ospanel/domains/проекты open server/old/react/react-intro-main/src/components/Editor.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as monaco from 'monaco-editor';\r\n\r\n// Компонент для редактора VHDL\r\nconst VHDLEditor = ({ onCodeChange, initialCode }) => {\r\n  useEffect(() => {\r\n    const editor = monaco.editor.create(document.getElementById('vhdl-editor'), {\r\n      value: initialCode, // Изначальный код передаваемый из родительского компонента\r\n      language: 'vhdl',\r\n      theme: 'vs-dark',\r\n      automaticLayout: true,\r\n    });\r\n\r\n    // Отслеживаем изменения в редакторе и передаем код в родительский компонент\r\n    editor.onDidChangeModelContent(() => {\r\n      const code = editor.getValue();\r\n      onCodeChange(code); // Передаем код в родительский компонент\r\n    });\r\n\r\n    return () => {\r\n      editor.dispose(); // Очистка редактора при удалении компонента\r\n    };\r\n  }, [initialCode, onCodeChange]);\r\n\r\n  return <div id=\"vhdl-editor\" style={{ height: '400px' }}></div>;\r\n};\r\n\r\n// Компонент для компиляции и отображения ошибок\r\nconst CompilerConsole = ({ output }) => {\r\n  return (\r\n    <div className=\"compiler-console\">\r\n      <h3>Консоль:</h3>\r\n      <pre>{output}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Основной компонент для редактирования VHDL и компиляции\r\nconst VHDLEditorWithCompiler = () => {\r\n  const [vhdlCode, setVhdlCode] = useState(`-- Напишите ваш VHDL код здесь\r\narchitecture Behavioral of testbench is\r\nbegin\r\n  -- Ваш тест\r\nend Behavioral;`); // Начальный код VHDL\r\n  const [output, setOutput] = useState(''); // Вывод компиляции\r\n\r\n  // Функция для компиляции кода\r\n  const compileCode = async () => {\r\n    try {\r\n      const response = await fetch('/compile-vhdl', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ vhdlCode }),\r\n      });\r\n      const result = await response.text();\r\n      setOutput(result); // Отображаем вывод компиляции\r\n    } catch (error) {\r\n      setOutput('Ошибка компиляции: ' + error.message); // Выводим ошибку\r\n    }\r\n  };\r\n\r\n  // Обновляем код из редактора\r\n  const handleCodeChange = (code) => {\r\n    setVhdlCode(code);\r\n  };\r\n\r\n  return (\r\n    <div id=\"content-container\">\r\n      <h3>VHDL Код:</h3>\r\n      <VHDLEditor onCodeChange={handleCodeChange} initialCode={vhdlCode} />\r\n      \r\n      <div id=\"testbench-container\">\r\n        <h3>Тестовый стенд:</h3>\r\n        <textarea \r\n          id=\"testbench-textarea\"\r\n          value={vhdlCode}\r\n          onChange={(e) => setVhdlCode(e.target.value)} \r\n          placeholder=\"Введите код теста...\"\r\n          style={{ width: '100%', height: '150px' }}\r\n        />\r\n      </div>\r\n\r\n      <button id=\"compile-button\" onClick={compileCode}>Компилировать</button>\r\n\r\n      <CompilerConsole output={output} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VHDLEditorWithCompiler;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
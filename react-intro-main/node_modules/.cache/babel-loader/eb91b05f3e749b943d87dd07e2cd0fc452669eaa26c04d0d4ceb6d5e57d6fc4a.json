{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Cell from '../cell/Cell';\nimport Geometry from '../geometry/Geometry';\nimport { Graph } from '../Graph';\nimport { mixInto } from '../../util/Utils';\n// @ts-expect-error The properties of PartialGraph are defined elsewhere.\nconst VertexMixin = {\n  vertexLabelsMovable: false,\n  allowNegativeCoordinates: true,\n  isAllowNegativeCoordinates() {\n    return this.allowNegativeCoordinates;\n  },\n  setAllowNegativeCoordinates(value) {\n    this.allowNegativeCoordinates = value;\n  },\n  insertVertex(...args) {\n    let parent;\n    let id;\n    let value;\n    let x;\n    let y;\n    let width;\n    let height;\n    let style;\n    let relative;\n    let geometryClass;\n    if (args.length === 1 && typeof args[0] === 'object') {\n      const params = args[0];\n      parent = params.parent;\n      id = params.id;\n      value = params.value;\n      x = 'x' in params ? params.x : params.position[0];\n      y = 'y' in params ? params.y : params.position[1];\n      width = 'width' in params ? params.width : params.size[0];\n      height = 'height' in params ? params.height : params.size[1];\n      style = params.style;\n      relative = params.relative;\n      geometryClass = params.geometryClass;\n    } else {\n      // Otherwise treat as arguments\n      [parent, id, value, x, y, width, height, style, relative, geometryClass] = args;\n    }\n    const vertex = this.createVertex(parent, id, value, x, y, width, height, style, relative, geometryClass);\n    return this.addCell(vertex, parent);\n  },\n  createVertex(parent, id, value, x, y, width, height, style, relative = false, geometryClass = Geometry) {\n    // Creates the geometry for the vertex\n    const geometry = new geometryClass(x, y, width, height);\n    geometry.relative = relative;\n    // Creates the vertex\n    const vertex = new Cell(value, geometry, style);\n    vertex.setId(id);\n    vertex.setVertex(true);\n    vertex.setConnectable(true);\n    return vertex;\n  },\n  getChildVertices(parent) {\n    return this.getChildCells(parent, true, false);\n  },\n  // ***************************************************************************\n  // Group: Graph Behaviour\n  // ***************************************************************************\n  isVertexLabelsMovable() {\n    return this.vertexLabelsMovable;\n  },\n  setVertexLabelsMovable(value) {\n    this.vertexLabelsMovable = value;\n  }\n};\nmixInto(Graph)(VertexMixin);","map":{"version":3,"names":["Cell","Geometry","Graph","mixInto","VertexMixin","vertexLabelsMovable","allowNegativeCoordinates","isAllowNegativeCoordinates","setAllowNegativeCoordinates","value","insertVertex","args","parent","id","x","y","width","height","style","relative","geometryClass","length","params","position","size","vertex","createVertex","addCell","geometry","setId","setVertex","setConnectable","getChildVertices","getChildCells","isVertexLabelsMovable","setVertexLabelsMovable"],"sources":["D:/ospanel/domains/проекты open server/old/react/react-intro-main/node_modules/@maxgraph/core/dist/view/mixins/VertexMixin.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Cell from '../cell/Cell';\nimport Geometry from '../geometry/Geometry';\nimport { Graph } from '../Graph';\nimport { mixInto } from '../../util/Utils';\n// @ts-expect-error The properties of PartialGraph are defined elsewhere.\nconst VertexMixin = {\n    vertexLabelsMovable: false,\n    allowNegativeCoordinates: true,\n    isAllowNegativeCoordinates() {\n        return this.allowNegativeCoordinates;\n    },\n    setAllowNegativeCoordinates(value) {\n        this.allowNegativeCoordinates = value;\n    },\n    insertVertex(...args) {\n        let parent;\n        let id;\n        let value;\n        let x;\n        let y;\n        let width;\n        let height;\n        let style;\n        let relative;\n        let geometryClass;\n        if (args.length === 1 && typeof args[0] === 'object') {\n            const params = args[0];\n            parent = params.parent;\n            id = params.id;\n            value = params.value;\n            x = 'x' in params ? params.x : params.position[0];\n            y = 'y' in params ? params.y : params.position[1];\n            width = 'width' in params ? params.width : params.size[0];\n            height = 'height' in params ? params.height : params.size[1];\n            style = params.style;\n            relative = params.relative;\n            geometryClass = params.geometryClass;\n        }\n        else {\n            // Otherwise treat as arguments\n            [parent, id, value, x, y, width, height, style, relative, geometryClass] = args;\n        }\n        const vertex = this.createVertex(parent, id, value, x, y, width, height, style, relative, geometryClass);\n        return this.addCell(vertex, parent);\n    },\n    createVertex(parent, id, value, x, y, width, height, style, relative = false, geometryClass = Geometry) {\n        // Creates the geometry for the vertex\n        const geometry = new geometryClass(x, y, width, height);\n        geometry.relative = relative;\n        // Creates the vertex\n        const vertex = new Cell(value, geometry, style);\n        vertex.setId(id);\n        vertex.setVertex(true);\n        vertex.setConnectable(true);\n        return vertex;\n    },\n    getChildVertices(parent) {\n        return this.getChildCells(parent, true, false);\n    },\n    // ***************************************************************************\n    // Group: Graph Behaviour\n    // ***************************************************************************\n    isVertexLabelsMovable() {\n        return this.vertexLabelsMovable;\n    },\n    setVertexLabelsMovable(value) {\n        this.vertexLabelsMovable = value;\n    },\n};\nmixInto(Graph)(VertexMixin);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\OSPanel\\\\domains\\\\react\\\\react-intro-main\\\\src\\\\components\\\\GraphComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { debounce } from 'lodash';\nimport axios from 'axios';\nimport { popup, ModelXmlSerializer, domUtils, styleUtils, mathUtils, cloneUtils, eventUtils, Graph, InternalEvent, RubberBandHandler, ConnectionHandler, ConnectionConstraint, Point, CylinderShape, CellRenderer, DomHelpers, EdgeStyle, Rectangle, EdgeHandler, StyleRegistry, EdgeSegmentHandler, UndoManager, CellEditorHandler, ConstraintHandler, Guide, ImageBox, GraphView, SelectionHandler, PanningHandler, TooltipHandler, SelectionCellsHandler, PopupMenuHandler, xmlUtils, Codec, Shape } from '@maxgraph/core';\nimport { contextMenuTypes, contextMenuValues, globalTypes, globalValues, rubberBandTypes, rubberBandValues } from './shared/args.js';\nimport { createGraphContainer } from './shared/configure.js';\n\n// style required by RubberBand\nimport '@maxgraph/core/css/common.css';\nimport { render } from 'react-dom';\nimport { MyCustomGraph, MyCustomEdgeSegmentHandler, MyCustomGraphView, MyCustomConnectionHandler, MyCustomPanningHandler, MyCustomSelectionHandler, MyCustomEdgeHandler, MyCustomConstraintHandler } from './MyCustomGraph.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const YourComponent = () => {\n  _s();\n  const importFileInputRef = useRef(null);\n  const graphContainerRef = useRef(null);\n  const [xmlText, setXmlText] = useState('');\n  // Инициализируем переменную для graph\n  let [graphInstance, setGraphInstance] = useState(null);\n  let [variableFromEffect, setVariableFromEffect] = useState(null);\n  let counter = 1;\n  let counter2 = 1;\n  let [jsonData, setJsonData] = useState(null); // Задаем начальное состояние как null\n\n  const [graph, setGraph] = useState(null);\n  const LINE_ARCSIZE = 20;\n  useEffect(() => {\n    axios.get('./data.json').then(response => {\n      console.log(response.data); // Проверяем, что данные приходят\n      setJsonData(response.data); // Обновляем состояние с данными из файла\n      jsonData = response.data;\n      console.log(jsonData);\n    });\n    console.log(jsonData);\n    if (graphContainerRef.current) {\n      const graphContainer = document.querySelector('.ыыы');\n      const newGraph = new Graph(graphContainerRef.current);\n      setGraph(newGraph); // Сохраняем граф в состояние\n\n      ////\n\n      ////\n      const parentContainer = document.createElement('div');\n      const container = createGraphContainer({\n        imageUrl: ''\n      });\n      parentContainer.appendChild(container);\n      //console.log({graph})\n      // Changes some default colors\n      // TODO Find a way of modifying globally or setting locally! See https://github.com/maxGraph/maxGraph/issues/192\n      //constants.SHADOWCOLOR = '#C0C0C0';\n\n      let joinNodeSize = 7;\n      let strokeWidth = 2;\n\n      // Switch for black background and bright styles\n      let invert = false;\n      let MyCustomCellEditorHandler;\n      if (!graphInstance) {\n        const newGraph = new MyCustomGraph(graphContainer, null, []);\n        setGraphInstance(newGraph);\n      }\n      if (invert) {\n        container.style.backgroundColor = 'black';\n\n        // White in-place editor text color\n        MyCustomCellEditorHandler = class extends CellEditorHandler {\n          startEditing(cell, trigger) {\n            super.startEditing.apply(this, arguments);\n            if (this.textarea != null) {\n              this.textarea.style.color = '#FFFFFF';\n            }\n          }\n        };\n      } else {\n        MyCustomCellEditorHandler = CellEditorHandler;\n      }\n\n      // Imlements a custom resistor shape. Direction currently ignored here.\n\n      class ResistorShape extends CylinderShape {\n        constructor() {\n          // TODO: The original didn't seem to call the super\n          super(null, null, null, null);\n        }\n        redrawPath(path, x, y, w, h, isForeground) {\n          let dx = w / 16;\n          if (isForeground) {\n            path.moveTo(0, h / 2);\n            path.lineTo(2 * dx, h / 2);\n            path.lineTo(3 * dx, 0);\n            path.lineTo(5 * dx, h);\n            path.lineTo(7 * dx, 0);\n            path.lineTo(9 * dx, h);\n            path.lineTo(11 * dx, 0);\n            path.lineTo(13 * dx, h);\n            path.lineTo(14 * dx, h / 2);\n            path.lineTo(16 * dx, h / 2);\n            path.end();\n          }\n        }\n      }\n      CellRenderer.registerShape('resistor', ResistorShape);\n\n      ///////////////////////////////////////////////////\n      class CustomTriangleShape extends Shape {\n        constructor() {\n          super();\n        }\n        paintVertexShape(c, x, y, w, h) {\n          var _this$style$arcSize, _this$style;\n          c.begin();\n          // Начинаем с нижнего левого угла треугольника\n          const arcSize = ((_this$style$arcSize = (_this$style = this.style) === null || _this$style === void 0 ? void 0 : _this$style.arcSize) !== null && _this$style$arcSize !== void 0 ? _this$style$arcSize : LINE_ARCSIZE) / 5;\n          this.addPoints(c, [new Point(x, y), new Point(x + w, y), new Point(x + w + w / 2, y + h / 2), new Point(x + w, y + h), new Point(x, y + h)], this.isRounded, arcSize, true);\n          // Закрываем фигуру (оставляем открытой одну сторону)\n          c.end();\n          c.stroke(); // Рисуем только границы без заливки\n        }\n      }\n      // Регистрация новой формы\n      CellRenderer.registerShape('customTriangle', CustomTriangleShape);\n      class Shape2 extends Shape {\n        constructor() {\n          super();\n        }\n        paintVertexShape(c, x, y, w, h) {\n          var _this$style$arcSize2, _this$style2;\n          c.begin();\n          // Начинаем с нижнего левого угла треугольника\n          const arcSize = ((_this$style$arcSize2 = (_this$style2 = this.style) === null || _this$style2 === void 0 ? void 0 : _this$style2.arcSize) !== null && _this$style$arcSize2 !== void 0 ? _this$style$arcSize2 : LINE_ARCSIZE) / 5;\n          this.addPoints(c, [new Point(x, y), new Point(x + w, y + h / 2), new Point(x, y + h)], this.isRounded, arcSize, true);\n          // Закрываем фигуру (оставляем открытой одну сторону)\n          c.end();\n          c.stroke(); // Рисуем только границы без заливки\n        }\n      }\n      // Регистрация новой формы\n      CellRenderer.registerShape('shape2', Shape2);\n      class Shape3 extends Shape {\n        constructor() {\n          super();\n        }\n        paintVertexShape(c, x, y, w, h) {\n          c.begin();\n          c.moveTo(x, y);\n          c.curveTo(x + w / 2, y, x + w + w / 5, y + h / 4, x + w + w / 3.5, y + h / 2.5);\n          c.moveTo(x + w + w / 3.5, y + h / 2.5);\n          c.curveTo(x + w + w / 3.5, y + h / 2.5, x + w + w / 5, y + h / 1.5, x, y + h / 1.3);\n          c.moveTo(x, y + h / 1.3);\n          c.curveTo(x, y + h / 1.3, x + w / 3, y + h / 2.2, x, y);\n          c.end();\n          c.stroke(); // Рисуем только границы без заливки\n        }\n      }\n      // Регистрация новой формы\n      CellRenderer.registerShape('shape3', Shape3);\n      class Shape4 extends Shape {\n        constructor() {\n          super();\n        }\n        paintVertexShape(c, x, y, w, h) {\n          c.begin();\n          // Рисуем полукруг. Используем arcTo для создания дуги\n          const r = w / 2; // Радиус по ширине\n          c.moveTo(x, y + h); // Начинаем с нижней левой точки\n          c.arcTo(r, h, 0, 0, 1, x + w, y + h); // Рисуем полукруг от левого нижнего угла к правому\n\n          // Соединяем линию обратно к левой нижней точке\n          c.lineTo(x, y + h);\n          c.end();\n          c.stroke(); // Рисуем только границы без заливки\n        }\n      }\n      // Регистрация новой формы\n      CellRenderer.registerShape('shape4', Shape4);\n      ////////////////////////////////////////////////////////\n\n      // Imlements a custom resistor shape. Direction currently ignored here.\n\n      EdgeStyle.WireConnector = function (state, source, target, hints, result) {\n        // Creates array of all way- and terminalpoints\n        let pts = state.absolutePoints;\n        let horizontal = true;\n        let hint = null;\n\n        // Gets the initial connection from the source terminal or edge\n        if (source != null && source.cell.isEdge()) {\n          horizontal = state.style.sourceConstraint == 'horizontal';\n        } else if (source != null) {\n          horizontal = source.style.portConstraint != 'vertical';\n\n          // Checks the direction of the shape and rotates\n          let direction = source.style.direction;\n          if (direction == 'north' || direction == 'south') {\n            horizontal = !horizontal;\n          }\n        }\n\n        // Adds the first point\n        // TODO: Should move along connected segment\n        let pt = pts[0];\n        if (pt == null && source != null) {\n          pt = new Point(state.view.getRoutingCenterX(source), state.view.getRoutingCenterY(source));\n        } else if (pt != null) {\n          pt = pt.clone();\n        }\n        let first = pt;\n\n        // Adds the waypoints\n        if (hints != null && hints.length > 0) {\n          // FIXME: First segment not movable\n          /*hint = state.view.transformControlPoint(state, hints[0]);\n          MaxLog.show();\n          MaxLog.debug(hints.length,'hints0.y='+hint.y, pt.y)\n           if (horizontal && Math.floor(hint.y) != Math.floor(pt.y))\n          {\n            MaxLog.show();\n            MaxLog.debug('add waypoint');\n             pt = new Point(pt.x, hint.y);\n            result.push(pt);\n            pt = pt.clone();\n            //horizontal = !horizontal;\n          }*/\n\n          for (let i = 0; i < hints.length; i++) {\n            horizontal = !horizontal;\n            hint = state.view.transformControlPoint(state, hints[i]);\n            if (horizontal) {\n              if (pt.y !== hint.y) {\n                pt.y = hint.y;\n                result.push(pt.clone());\n              }\n            } else if (pt.x !== hint.x) {\n              pt.x = hint.x;\n              result.push(pt.clone());\n            }\n          }\n        } else {\n          hint = pt;\n        }\n\n        // Adds the last point\n        pt = pts[pts.length - 1];\n\n        // TODO: Should move along connected segment\n        if (pt == null && target != null) {\n          pt = new Point(state.view.getRoutingCenterX(target), state.view.getRoutingCenterY(target));\n        }\n        if (horizontal) {\n          if (pt.y !== hint.y && first.x !== pt.x) {\n            result.push(new Point(pt.x, hint.y));\n          }\n        } else if (pt.x !== hint.x && first.y !== pt.y) {\n          result.push(new Point(hint.x, pt.y));\n        }\n      };\n      StyleRegistry.putValue('wireEdgeStyle', EdgeStyle.WireConnector);\n      let graph = new MyCustomGraph(container, null, [MyCustomCellEditorHandler, TooltipHandler, SelectionCellsHandler, PopupMenuHandler, MyCustomConnectionHandler, MyCustomSelectionHandler, MyCustomPanningHandler]);\n      setVariableFromEffect(graph);\n      let labelBackground = invert ? '#000000' : '#FFFFFF';\n      let fontColor = invert ? '#FFFFFF' : '#000000';\n      let strokeColor = invert ? '#C0C0C0' : '#000000';\n      let fillColor = invert ? 'none' : '#FFFFFF';\n      graph.view.scale = 1;\n      graph.setPanning(true);\n      graph.setConnectable(true);\n      graph.setConnectableEdges(true);\n      graph.setDisconnectOnMove(false);\n      graph.foldingEnabled = false;\n\n      //Maximum size\n      graph.maximumGraphBounds = new Rectangle(0, 0, 1000, 1000);\n      graph.border = 50;\n      graph.spacingLeft = 30;\n\n      // Enables return key to stop editing (use shift-enter for newlines)\n      graph.setEnterStopsCellEditing(true);\n\n      // Adds rubberband selection\n      new RubberBandHandler(graph);\n\n      // Adds a special tooltip for edges\n      graph.setTooltips(true);\n      let style = graph.getStylesheet().getDefaultEdgeStyle();\n      delete style.endArrow;\n      style.strokeColor = strokeColor;\n      style.labelBackgroundColor = labelBackground;\n      style.edgeStyle = 'wireEdgeStyle';\n      style.fontColor = fontColor;\n      style.fontSize = '9';\n      style.movable = '0';\n      style.strokeWidth = strokeWidth;\n      //style.rounded = '1';\n\n      // Sets join node size\n      style.startSize = joinNodeSize;\n      style.endSize = joinNodeSize;\n      style = graph.getStylesheet().getDefaultVertexStyle();\n      style.gradientDirection = 'south';\n      //style.gradientColor = '#909090';\n      style.strokeColor = strokeColor;\n      //style.fillColor = '#e0e0e0';\n      style.fillColor = 'none';\n      style.fontColor = fontColor;\n      style.fontStyle = '1';\n      style.fontSize = '12';\n      style.resizable = '0';\n      style.rounded = '1';\n      style.strokeWidth = strokeWidth;\n\n      // инородное дерьмо\n\n      const btn1 = document.getElementById('btn1');\n      const btn2 = document.getElementById('btn2');\n      const btn3 = document.getElementById('btn3');\n      const btn6 = document.getElementById('btn6');\n      const btn7 = document.getElementById('btn7');\n      const dispatchElementAdded = (elementType, inputLabels = [], outputLabel = '') => {\n        const event = new CustomEvent('elementAdded', {\n          detail: {\n            type: elementType,\n            inputs: inputLabels,\n            output: outputLabel\n          }\n        });\n        window.dispatchEvent(event);\n      };\n      const update = event => {\n        setTimeout(() => {\n          var parent = graph.getDefaultParent();\n          graph.batchUpdate(() => {\n            const targetId = event.target.id;\n            if (targetId === 'btn3') {\n              const v1 = graph.insertVertex(parent, null, '', 80, 80, 40, 40, {\n                shape: 'shape2',\n                strokeColor: strokeColor\n              });\n              v1.setConnectable(false);\n              var v11 = graph.insertVertex(v1, null, '', 0, 0, 15, 16, {\n                shape: 'line',\n                align: 'top',\n                verticalAlign: 'top',\n                fontSize: 10,\n                routingCenterX: -0.5,\n                spacingLeft: 0,\n                spacingTop: -7,\n                fontColor,\n                strokeColor\n              });\n              v11.geometry.relative = true;\n              v11.geometry.offset = new Point(-v1.geometry.width + 25, 12);\n              var v12 = graph.insertVertex(v1, null, '◯', 0, 0, 15, 16, {\n                shape: 'line',\n                align: 'top',\n                verticalAlign: 'top',\n                fontSize: 10,\n                routingCenterX: -0.5,\n                spacingLeft: -20,\n                spacingTop: 0,\n                fontColor,\n                strokeColor\n              });\n              v12.geometry.relative = true;\n              v12.geometry.offset = new Point(v1.geometry.width + 7.5, 12);\n              dispatchElementAdded('NOT', ['X1'], 'Y1');\n            } else if (targetId === 'btn6') {\n              const v1 = graph.insertVertex(parent, null, '', 80, 80, 35, 25, {\n                shape: 'customTriangle',\n                strokeColor: strokeColor\n              });\n              v1.setConnectable(false);\n              const labelText = 'X' + counter; // Формируем текст с текущим значением счётчика\n              let fontColor = 'black'; // По умолчанию цвет текста черный\n              if (jsonData.inputs.includes(labelText)) {\n                fontColor = 'red'; // Если есть совпадение, меняем цвет на красный\n              }\n              var v11 = graph.insertVertex(v1, null, labelText, 0, 0, 20, 16, {\n                shape: 'line',\n                align: 'top',\n                verticalAlign: 'top',\n                fontSize: 10,\n                routingCenterX: -0.5,\n                spacingLeft: -5,\n                spacingTop: -7,\n                fontColor,\n                strokeColor\n              });\n              counter += 1;\n              v11.geometry.relative = true;\n              v11.geometry.offset = new Point(v1.geometry.width + 16.5, 4.5);\n              dispatchElementAdded('INPUT', [labelText], '');\n            } else if (targetId === 'btn7') {\n              const v1 = graph.insertVertex(parent, null, '', 80, 80, 35, 25, {\n                shape: 'customTriangle',\n                strokeColor: strokeColor,\n                rotation: 180\n              });\n              v1.setConnectable(false);\n              const labelText = 'F' + counter2; // Создаем уникальное имя выхода\n              var v11 = graph.insertVertex(v1, null, labelText, 0, 0, 20, 16, {\n                shape: 'line',\n                align: 'top',\n                verticalAlign: 'top',\n                fontSize: 10,\n                routingCenterX: -0.5,\n                spacingLeft: -5,\n                spacingTop: -7,\n                fontColor,\n                strokeColor\n              });\n              v11.geometry.relative = true;\n              v11.geometry.offset = new Point(v1.geometry.width + 16.5, 4.5);\n              dispatchElementAdded('OUTPUT', [], labelText); // Добавляем выход в массив\n              counter2 += 1; // Увеличиваем счетчик\n            } else if (targetId === 'btn2') {\n              const v1 = graph.insertVertex(parent, null, '', 80, 100, 60, 60, {\n                shape: 'shape3',\n                strokeColor: strokeColor\n              });\n              v1.setConnectable(false);\n              var v11 = graph.insertVertex(v1, null, '', 0, 0, 20, 16, {\n                shape: 'line',\n                align: 'top',\n                verticalAlign: 'top',\n                fontSize: 10,\n                routingCenterX: -0.5,\n                spacingLeft: -5,\n                spacingTop: -7,\n                fontColor,\n                strokeColor\n              });\n              v11.geometry.relative = true;\n              v11.geometry.offset = new Point(v1.geometry.width + 17.8, 16);\n              var v12 = graph.insertVertex(v1, null, '', 0, 0, 20, 16, {\n                shape: 'line',\n                align: 'top',\n                verticalAlign: 'top',\n                fontSize: 10,\n                routingCenterX: -0.5,\n                spacingLeft: -5,\n                spacingTop: -7,\n                fontColor,\n                strokeColor\n              });\n              v12.geometry.relative = true;\n              v12.geometry.offset = new Point(-v1.geometry.width + 48, 8);\n              var v13 = graph.insertVertex(v1, null, '', 0, 0, 20, 16, {\n                shape: 'line',\n                align: 'top',\n                verticalAlign: 'top',\n                fontSize: 10,\n                routingCenterX: -0.5,\n                spacingLeft: -5,\n                spacingTop: -7,\n                fontColor,\n                strokeColor\n              });\n              v13.geometry.relative = true;\n              v13.geometry.offset = new Point(-v1.geometry.width + 48, 24);\n              dispatchElementAdded('AND', ['X1', 'X2'], 'Y1');\n            } else if (targetId === 'btn1') {\n              const v1 = graph.insertVertex(parent, null, '', 80, 100, 47, 70, {\n                shape: 'shape4',\n                strokeColor: strokeColor,\n                rotation: 90\n              });\n              v1.setConnectable(false);\n              var v13 = graph.insertVertex(v1, null, '', 0, 0, 20, 16, {\n                shape: 'line',\n                align: 'top',\n                verticalAlign: 'top',\n                fontSize: 10,\n                routingCenterX: -0.5,\n                spacingLeft: -5,\n                spacingTop: -7,\n                fontColor,\n                strokeColor\n              });\n              v13.geometry.relative = true;\n              v13.geometry.offset = new Point(v1.geometry.width - 33, -18);\n              var v14 = graph.insertVertex(v1, null, '', 0, 0, 20, 16, {\n                shape: 'line',\n                align: 'top',\n                verticalAlign: 'top',\n                fontSize: 10,\n                routingCenterX: -0.5,\n                spacingLeft: -5,\n                spacingTop: -7,\n                fontColor,\n                strokeColor\n              });\n              v14.geometry.relative = true;\n              v14.geometry.offset = new Point(5, 71);\n              var v15 = graph.insertVertex(v1, null, '', 0, 0, 20, 16, {\n                shape: 'line',\n                align: 'top',\n                verticalAlign: 'top',\n                fontSize: 10,\n                routingCenterX: -0.5,\n                spacingLeft: -5,\n                spacingTop: -7,\n                fontColor,\n                strokeColor\n              });\n              v15.geometry.relative = true;\n              v15.geometry.offset = new Point(23, 71);\n              dispatchElementAdded('OR', ['X1', 'X2'], 'Y1');\n            } else if (targetId === 'btn4') {\n              var v1 = graph.insertVertex(parent, null, '', 80, 140, 40, 80, 'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\n              v1.setConnectable(false);\n              var v11 = graph.insertVertex(v1, null, '', 0, 0, 14, 16, {\n                shape: 'line',\n                align: 'left',\n                verticalAlign: 'middle',\n                fontSize: 10,\n                routingCenterX: -0.5,\n                spacingLeft: 12,\n                fontColor: fontColor,\n                strokeColor: strokeColor\n              });\n              v11.geometry.relative = true;\n              v11.geometry.offset = new Point(-v11.geometry.width, 12);\n              var v12 = v11.clone();\n              v12.value = '';\n              v12.geometry.offset = new Point(-v11.geometry.width, 52);\n              v1.insert(v12);\n              var v15 = v11.clone();\n              v15.value = '';\n              v15.geometry.x = 1;\n              v15.style = {\n                shape: 'line',\n                align: 'right',\n                verticalAlign: 'middle',\n                fontSize: 10,\n                routingCenterX: 0.5,\n                spacingRight: 12,\n                fontColor: fontColor,\n                strokeColor: strokeColor\n              };\n              v15.geometry.offset = new Point(0, 32);\n              v1.insert(v15);\n              var v16 = graph.insertVertex(v1, null, '○', 0, 0, 0, 0, {\n                shape: 'line',\n                align: 'right',\n                verticalAlign: 'middle',\n                fontSize: 25,\n                routingCenterX: 0.5,\n                spacingLeft: 6,\n                fontColor: fontColor,\n                strokeColor: strokeColor\n              });\n              v16.geometry.x = 1;\n              v16.geometry.offset = new Point(8, 15);\n              v1.insert(v16);\n              var v17 = graph.insertVertex(v1, null, 'X', 0, 0, 0, 0, {\n                shape: 'line',\n                align: 'right',\n                verticalAlign: 'middle',\n                fontSize: 10,\n                routingCenterX: 0.5,\n                spacingLeft: 6,\n                fontColor: fontColor,\n                strokeColor: strokeColor\n              });\n              v17.geometry.x = 1;\n              v17.geometry.offset = new Point(14, 20);\n              v1.insert(v17);\n              var v18 = graph.insertVertex(v1, null, 'Y', 0, 0, 0, 0, {\n                shape: 'line',\n                align: 'right',\n                verticalAlign: 'middle',\n                fontSize: 10,\n                routingCenterX: 0.5,\n                spacingLeft: 6,\n                fontColor: fontColor,\n                strokeColor: strokeColor\n              });\n              v18.geometry.x = 1;\n              v18.geometry.offset = new Point(14, 59);\n              v1.insert(v18);\n              dispatchElementAdded('AND', ['X1', 'X2'], 'Y1');\n            }\n          });\n        }, 0); // Задержка в 0 мс позволяет выполнить код в следующем цикле событий\n      };\n      btn1.addEventListener('click', update);\n      btn2.addEventListener('click', update);\n      btn3.addEventListener('click', update);\n      btn6.addEventListener('click', update);\n      btn7.addEventListener('click', update);\n      const importButton = document.getElementById(\"import\");\n      importButton.onclick = () => {\n        console.log(graph);\n        const fileInput = document.getElementById(\"importFileInput\");\n        if (fileInput) {\n          // Сначала сохраняем текущий граф в XML\n          const xml = new ModelXmlSerializer(graph.getDataModel()).export();\n\n          // Затем загружаем его обратно в граф\n          loadGraphFromXml(xml, graph);\n\n          // Добавляем обработчик события onchange\n          fileInput.onchange = function (event) {\n            handleFileImport(event); // Вызываем функцию импорта файла\n          };\n\n          // Открываем диалог выбора файла\n          fileInput.click();\n          console.log(\"Диалог выбора файла открыт\");\n        } else {\n          console.log(\"fileInput не найден!\");\n        }\n      };\n      function handleFileImport(event) {\n        console.log(\"blyaaa\");\n        // Очищаем граф перед загрузкой новой схемы\n        console.log(graph);\n        const file = event.target.files[0];\n        if (file) {\n          // Вызов функции readXMLFile\n          readXMLFile(file, function (xmlContent) {\n            console.log('Файл импортирован: ', xmlContent); // Работаем с содержимым файла\n            loadGraphFromXml(xmlContent, graph); // Загружаем граф из XML\n          });\n        } else {\n          console.log(\"Файл не выбран!\");\n        }\n      }\n      // Функция чтения XML файла\n      function readXMLFile(file, callback) {\n        const reader = new FileReader();\n        reader.onload = function (e) {\n          const xmlContent = e.target.result;\n          callback(xmlContent); // Передаем результат чтения в коллбэк\n        };\n        reader.readAsText(file); // Читаем файл как текст\n      }\n\n      // Функция для загрузки графа из XML\n      const loadGraphFromXml = (xml, graph) => {\n        graph.removeCells(graph.getChildVertices(graph.getDefaultParent()));\n        const node = xmlUtils.parseXml(xml).documentElement;\n        graph.model.beginUpdate();\n        try {\n          console.log(node);\n          const codec = new Codec(); // Создаем кодек для декодирования XML\n          codec.decode(node, graph.model); // Декодируем XML и загружаем в модель графа\n        } finally {\n          graph.model.endUpdate(); // Завершаем транзакцию\n          graph.refresh();\n        }\n      };\n\n      ////////////////////////////////////////////////////////\n      // XML \n\n      document.getElementById(\"xml\").onclick = () => {\n        // Получаем XML данные\n        console.log(graph);\n        const xml = new ModelXmlSerializer(graph.getDataModel()).export();\n\n        // Создаем новый Blob объект с XML данными\n        const blob = new Blob([xml], {\n          type: 'text/xml'\n        });\n\n        // Создаем ссылку на Blob объект\n        const url = window.URL.createObjectURL(blob);\n\n        // Создаем ссылку для скачивания\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'data.xml'; // Имя файла для скачивания\n        document.body.appendChild(a);\n\n        // Инициируем скачивание файла\n        a.click();\n\n        // Освобождаем ресурсы\n        window.URL.revokeObjectURL(url);\n      };\n\n      ///////////////////////////////////////////////////////////\n\n      document.getElementById(\"zoom\").onclick = () => graph.zoomIn();\n      document.getElementById(\"zoomout\").onclick = () => graph.zoomOut();\n\n      // Undo/redo\n      let undoManager = new UndoManager();\n      let listener = function (sender, evt) {\n        undoManager.undoableEditHappened(evt.getProperty('edit'));\n      };\n      graph.getDataModel().addListener(InternalEvent.UNDO, listener);\n      graph.getView().addListener(InternalEvent.UNDO, listener);\n      document.getElementById(\"undo\").onclick = () => undoManager.undo();\n      document.getElementById(\"redo\").onclick = () => undoManager.redo();\n      document.getElementById(\"delete\").onclick = () => graph.removeCells();\n\n      // Wire-mode\n      let checkbox = document.getElementById(\"wire\");\n\n      // Grid\n      let checkbox2 = document.getElementById(\"grid\");\n      checkbox2.setAttribute('checked', 'true');\n      InternalEvent.addListener(checkbox2, 'click', function (evt) {\n        if (checkbox2.checked) {\n          container.style.background = '';\n        } else {\n          container.style.background = '';\n        }\n        container.style.backgroundColor = invert ? 'black' : 'white';\n      });\n      InternalEvent.disableContextMenu(container);\n      graphContainer.appendChild(parentContainer);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: graphContainerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 893,\n    columnNumber: 7\n  }, this);\n};\n_s(YourComponent, \"VE74oV092m/6tMxlBIhY8i/5vgU=\");\n_c = YourComponent;\nvar _c;\n$RefreshReg$(_c, \"YourComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","debounce","axios","popup","ModelXmlSerializer","domUtils","styleUtils","mathUtils","cloneUtils","eventUtils","Graph","InternalEvent","RubberBandHandler","ConnectionHandler","ConnectionConstraint","Point","CylinderShape","CellRenderer","DomHelpers","EdgeStyle","Rectangle","EdgeHandler","StyleRegistry","EdgeSegmentHandler","UndoManager","CellEditorHandler","ConstraintHandler","Guide","ImageBox","GraphView","SelectionHandler","PanningHandler","TooltipHandler","SelectionCellsHandler","PopupMenuHandler","xmlUtils","Codec","Shape","contextMenuTypes","contextMenuValues","globalTypes","globalValues","rubberBandTypes","rubberBandValues","createGraphContainer","render","MyCustomGraph","MyCustomEdgeSegmentHandler","MyCustomGraphView","MyCustomConnectionHandler","MyCustomPanningHandler","MyCustomSelectionHandler","MyCustomEdgeHandler","MyCustomConstraintHandler","jsxDEV","_jsxDEV","YourComponent","_s","importFileInputRef","graphContainerRef","xmlText","setXmlText","graphInstance","setGraphInstance","variableFromEffect","setVariableFromEffect","counter","counter2","jsonData","setJsonData","graph","setGraph","LINE_ARCSIZE","get","then","response","console","log","data","current","graphContainer","document","querySelector","newGraph","parentContainer","createElement","container","imageUrl","appendChild","joinNodeSize","strokeWidth","invert","MyCustomCellEditorHandler","style","backgroundColor","startEditing","cell","trigger","apply","arguments","textarea","color","ResistorShape","constructor","redrawPath","path","x","y","w","h","isForeground","dx","moveTo","lineTo","end","registerShape","CustomTriangleShape","paintVertexShape","c","_this$style$arcSize","_this$style","begin","arcSize","addPoints","isRounded","stroke","Shape2","_this$style$arcSize2","_this$style2","Shape3","curveTo","Shape4","r","arcTo","WireConnector","state","source","target","hints","result","pts","absolutePoints","horizontal","hint","isEdge","sourceConstraint","portConstraint","direction","pt","view","getRoutingCenterX","getRoutingCenterY","clone","first","length","i","transformControlPoint","push","putValue","labelBackground","fontColor","strokeColor","fillColor","scale","setPanning","setConnectable","setConnectableEdges","setDisconnectOnMove","foldingEnabled","maximumGraphBounds","border","spacingLeft","setEnterStopsCellEditing","setTooltips","getStylesheet","getDefaultEdgeStyle","endArrow","labelBackgroundColor","edgeStyle","fontSize","movable","startSize","endSize","getDefaultVertexStyle","gradientDirection","fontStyle","resizable","rounded","btn1","getElementById","btn2","btn3","btn6","btn7","dispatchElementAdded","elementType","inputLabels","outputLabel","event","CustomEvent","detail","type","inputs","output","window","dispatchEvent","update","setTimeout","parent","getDefaultParent","batchUpdate","targetId","id","v1","insertVertex","shape","v11","align","verticalAlign","routingCenterX","spacingTop","geometry","relative","offset","width","v12","labelText","includes","rotation","v13","v14","v15","value","insert","spacingRight","v16","v17","v18","addEventListener","importButton","onclick","fileInput","xml","getDataModel","export","loadGraphFromXml","onchange","handleFileImport","click","file","files","readXMLFile","xmlContent","callback","reader","FileReader","onload","e","readAsText","removeCells","getChildVertices","node","parseXml","documentElement","model","beginUpdate","codec","decode","endUpdate","refresh","blob","Blob","url","URL","createObjectURL","a","href","download","body","revokeObjectURL","zoomIn","zoomOut","undoManager","listener","sender","evt","undoableEditHappened","getProperty","addListener","UNDO","getView","undo","redo","checkbox","checkbox2","setAttribute","checked","background","disableContextMenu","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/OSPanel/domains/react/react-intro-main/src/components/GraphComponent.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { debounce } from 'lodash';\nimport axios from 'axios';\nimport {\n  popup,\n  ModelXmlSerializer,\n  domUtils,\n  styleUtils,\n  mathUtils,\n  cloneUtils,\n  eventUtils,\n  Graph,\n  InternalEvent,\n  RubberBandHandler,\n  ConnectionHandler,\n  ConnectionConstraint,\n  Point,\n  CylinderShape,\n  CellRenderer,\n  DomHelpers,\n  EdgeStyle,\n  Rectangle,\n  EdgeHandler,\n  StyleRegistry,\n  EdgeSegmentHandler,\n  UndoManager,\n  CellEditorHandler,\n  ConstraintHandler,\n  Guide,\n  ImageBox,\n  GraphView,\n  SelectionHandler,\n  PanningHandler,\n  TooltipHandler,\n  SelectionCellsHandler,\n  PopupMenuHandler,\n  xmlUtils,\n  Codec,\n  Shape,\n} from '@maxgraph/core';\n\nimport {\n  contextMenuTypes,\n  contextMenuValues,\n  globalTypes,\n  globalValues,\n  rubberBandTypes,\n  rubberBandValues,\n} from './shared/args.js';\n\n\nimport { createGraphContainer } from './shared/configure.js';\n\n// style required by RubberBand\nimport '@maxgraph/core/css/common.css';\n\nimport { render } from 'react-dom';\n\nimport {\n  MyCustomGraph, \n  MyCustomEdgeSegmentHandler, \n  MyCustomGraphView, \n  MyCustomConnectionHandler,  \n  MyCustomPanningHandler, \n  MyCustomSelectionHandler,\n  MyCustomEdgeHandler,\n  MyCustomConstraintHandler\n} from './MyCustomGraph.jsx';\n\n\nexport const YourComponent = () => {\n  const importFileInputRef = useRef(null);\n  const graphContainerRef = useRef(null);\n  const [xmlText, setXmlText] = useState('');\n  // Инициализируем переменную для graph\n  let [graphInstance, setGraphInstance] = useState(null);\n  let [variableFromEffect, setVariableFromEffect] = useState(null);\n  let counter = 1;\n  let counter2 = 1;\n  let [jsonData, setJsonData] = useState(null);  // Задаем начальное состояние как null\n\n  const [graph, setGraph] = useState(null);\n  const LINE_ARCSIZE = 20;\n\n  useEffect(() => {\n\n    axios.get('./data.json')\n    .then(response => {\n      console.log(response.data);  // Проверяем, что данные приходят\n      setJsonData(response.data);  // Обновляем состояние с данными из файла\n      jsonData = response.data;\n      console.log(jsonData);\n    });\n    console.log(jsonData);\n\n\n    if (graphContainerRef.current) {\n    const graphContainer =  document.querySelector('.ыыы');\n    const newGraph = new Graph(graphContainerRef.current);\n    setGraph(newGraph); // Сохраняем граф в состояние\n\n   ////\n\n\n////\n    const parentContainer = document.createElement('div');\n    const container = createGraphContainer({\n      imageUrl: ''\n    });\n    parentContainer.appendChild(container);\n    //console.log({graph})\n      // Changes some default colors\n  // TODO Find a way of modifying globally or setting locally! See https://github.com/maxGraph/maxGraph/issues/192\n  //constants.SHADOWCOLOR = '#C0C0C0';\n\n  let joinNodeSize = 7;\n  let strokeWidth = 2;\n\n  // Switch for black background and bright styles\n  let invert = false;\n  let MyCustomCellEditorHandler;\n\n  if (!graphInstance) {\n    const newGraph = new MyCustomGraph(graphContainer, null, []);\n    setGraphInstance(newGraph);\n  }\n\n  if (invert) {\n    container.style.backgroundColor = 'black';\n\n    // White in-place editor text color\n    MyCustomCellEditorHandler = class extends CellEditorHandler {\n      startEditing(cell, trigger) {\n        super.startEditing.apply(this, arguments);\n\n        if (this.textarea != null) {\n          this.textarea.style.color = '#FFFFFF';\n        }\n      }\n    };\n  } else {\n    MyCustomCellEditorHandler = CellEditorHandler;\n  }\n\n  // Imlements a custom resistor shape. Direction currently ignored here.\n\n  class ResistorShape extends CylinderShape {\n    constructor() {\n      // TODO: The original didn't seem to call the super\n      super(null, null, null, null);\n    }\n\n    redrawPath(path, x, y, w, h, isForeground) {\n      let dx = w / 16;\n\n      if (isForeground) {\n        path.moveTo(0, h / 2);\n        path.lineTo(2 * dx, h / 2);\n        path.lineTo(3 * dx, 0);\n        path.lineTo(5 * dx, h);\n        path.lineTo(7 * dx, 0);\n        path.lineTo(9 * dx, h);\n        path.lineTo(11 * dx, 0);\n        path.lineTo(13 * dx, h);\n        path.lineTo(14 * dx, h / 2);\n        path.lineTo(16 * dx, h / 2);\n        path.end();\n      }\n    }\n  }\n\n  CellRenderer.registerShape('resistor', ResistorShape);\n\n\n\n///////////////////////////////////////////////////\nclass CustomTriangleShape extends Shape {\n  constructor() {\n    super();\n  }\n  paintVertexShape(c, x, y, w, h) {\n    c.begin();\n    // Начинаем с нижнего левого угла треугольника\n    const arcSize = (this.style?.arcSize ?? LINE_ARCSIZE) / 5;\n    this.addPoints(c, [new Point(x, y), new Point(x + w, y), new Point(x + w + w/2, y + h/2), new Point(x + w, y + h), new Point(x, y + h)], this.isRounded, arcSize, true);\n    // Закрываем фигуру (оставляем открытой одну сторону)\n    c.end();\n    c.stroke();  // Рисуем только границы без заливки\n  }\n}\n// Регистрация новой формы\nCellRenderer.registerShape('customTriangle', CustomTriangleShape);\n\n\n\nclass Shape2 extends Shape {\n  constructor() {\n    super();\n  }\n  paintVertexShape(c, x, y, w, h) {\n    c.begin();\n    // Начинаем с нижнего левого угла треугольника\n    const arcSize = (this.style?.arcSize ?? LINE_ARCSIZE) / 5;\n    this.addPoints(c, [new Point(x, y), new Point(x + w, y + h/2), new Point(x, y + h)], this.isRounded, arcSize, true);\n    // Закрываем фигуру (оставляем открытой одну сторону)\n    c.end();\n    c.stroke();  // Рисуем только границы без заливки\n  }\n}\n// Регистрация новой формы\nCellRenderer.registerShape('shape2', Shape2);\n\n\nclass Shape3 extends Shape {\n  constructor() {\n    super();\n  }\n  paintVertexShape(c, x, y, w, h) {\n    c.begin();\n    c.moveTo(x, y); \n    c.curveTo(x + w/2, y, x + w + w/5, y+h/4, x + w+w/3.5, y+h/2.5); \n    c.moveTo(x + w+w/3.5, y+h/2.5); \n    c.curveTo(x + w+w/3.5, y+h/2.5, x + w + w/5, y+h/1.5, x, y+h/1.3); \n    c.moveTo(x, y+h/1.3); \n    c.curveTo(x, y+h/1.3, x + w/3, y+h/2.2, x, y);\n    c.end();\n    c.stroke();  // Рисуем только границы без заливки\n  }\n}\n// Регистрация новой формы\nCellRenderer.registerShape('shape3', Shape3);\n\n\n\nclass Shape4 extends Shape {\n  constructor() {\n    super();\n  }\n  paintVertexShape(c, x, y, w, h) {\n    c.begin();\n    // Рисуем полукруг. Используем arcTo для создания дуги\n    const r = w / 2;  // Радиус по ширине\n    c.moveTo(x, y + h);  // Начинаем с нижней левой точки\n    c.arcTo(r, h, 0, 0, 1, x + w, y + h);  // Рисуем полукруг от левого нижнего угла к правому\n    \n    // Соединяем линию обратно к левой нижней точке\n    c.lineTo(x, y + h); \n    c.end();\n    c.stroke();  // Рисуем только границы без заливки\n  }\n}\n// Регистрация новой формы\nCellRenderer.registerShape('shape4', Shape4);\n////////////////////////////////////////////////////////\n\n\n  // Imlements a custom resistor shape. Direction currently ignored here.\n\n  EdgeStyle.WireConnector = function (state, source, target, hints, result) {\n    // Creates array of all way- and terminalpoints\n    let pts = state.absolutePoints;\n    let horizontal = true;\n    let hint = null;\n\n    // Gets the initial connection from the source terminal or edge\n    if (source != null && source.cell.isEdge()) {\n      horizontal = state.style.sourceConstraint == 'horizontal';\n    } else if (source != null) {\n      horizontal = source.style.portConstraint != 'vertical';\n\n      // Checks the direction of the shape and rotates\n      let direction = source.style.direction;\n\n      if (direction == 'north' || direction == 'south') {\n        horizontal = !horizontal;\n      }\n    }\n\n    // Adds the first point\n    // TODO: Should move along connected segment\n    let pt = pts[0];\n\n    if (pt == null && source != null) {\n      pt = new Point(\n        state.view.getRoutingCenterX(source),\n        state.view.getRoutingCenterY(source)\n      );\n    } else if (pt != null) {\n      pt = pt.clone();\n    }\n\n    let first = pt;\n\n    // Adds the waypoints\n    if (hints != null && hints.length > 0) {\n      // FIXME: First segment not movable\n      /*hint = state.view.transformControlPoint(state, hints[0]);\n      MaxLog.show();\n      MaxLog.debug(hints.length,'hints0.y='+hint.y, pt.y)\n\n      if (horizontal && Math.floor(hint.y) != Math.floor(pt.y))\n      {\n        MaxLog.show();\n        MaxLog.debug('add waypoint');\n\n        pt = new Point(pt.x, hint.y);\n        result.push(pt);\n        pt = pt.clone();\n        //horizontal = !horizontal;\n      }*/\n\n      for (let i = 0; i < hints.length; i++) {\n        horizontal = !horizontal;\n        hint = state.view.transformControlPoint(state, hints[i]);\n\n        if (horizontal) {\n          if (pt.y !== hint.y) {\n            pt.y = hint.y;\n            result.push(pt.clone());\n          }\n        } else if (pt.x !== hint.x) {\n          pt.x = hint.x;\n          result.push(pt.clone());\n        }\n      }\n    } else {\n      hint = pt;\n    }\n\n    // Adds the last point\n    pt = pts[pts.length - 1];\n\n    // TODO: Should move along connected segment\n    if (pt == null && target != null) {\n      pt = new Point(\n        state.view.getRoutingCenterX(target),\n        state.view.getRoutingCenterY(target)\n      );\n    }\n\n    if (horizontal) {\n      if (pt.y !== hint.y && first.x !== pt.x) {\n        result.push(new Point(pt.x, hint.y));\n      }\n    } else if (pt.x !== hint.x && first.y !== pt.y) {\n      result.push(new Point(hint.x, pt.y));\n    }\n  };\n\n  StyleRegistry.putValue('wireEdgeStyle', EdgeStyle.WireConnector);\n\n\n    let graph = new MyCustomGraph(container, null, [\n      MyCustomCellEditorHandler,\n      TooltipHandler,\n      SelectionCellsHandler,\n      PopupMenuHandler,\n      MyCustomConnectionHandler,\n      MyCustomSelectionHandler,\n      MyCustomPanningHandler,\n    ]);\n    setVariableFromEffect(graph);\n\n  let labelBackground = invert ? '#000000' : '#FFFFFF';\n  let fontColor = invert ? '#FFFFFF' : '#000000';\n  let strokeColor = invert ? '#C0C0C0' : '#000000';\n  let fillColor = invert ? 'none' : '#FFFFFF';\n\n  graph.view.scale = 1;\n  graph.setPanning(true);\n  graph.setConnectable(true);\n  graph.setConnectableEdges(true);\n  graph.setDisconnectOnMove(false);\n  graph.foldingEnabled = false;\n\n  //Maximum size\n  graph.maximumGraphBounds = new Rectangle(0, 0, 1000, 1000);\n  graph.border = 50;\n  graph.spacingLeft = 30;\n\n  // Enables return key to stop editing (use shift-enter for newlines)\n  graph.setEnterStopsCellEditing(true);\n\n  // Adds rubberband selection\n  new RubberBandHandler(graph);\n\n  // Adds a special tooltip for edges\n  graph.setTooltips(true);\n\n  let style = graph.getStylesheet().getDefaultEdgeStyle();\n  delete style.endArrow;\n  style.strokeColor = strokeColor;\n  style.labelBackgroundColor = labelBackground;\n  style.edgeStyle = 'wireEdgeStyle';\n  style.fontColor = fontColor;\n  style.fontSize = '9';\n  style.movable = '0';\n  style.strokeWidth = strokeWidth;\n  //style.rounded = '1';\n\n  // Sets join node size\n  style.startSize = joinNodeSize;\n  style.endSize = joinNodeSize;\n\n  style = graph.getStylesheet().getDefaultVertexStyle();\n  style.gradientDirection = 'south';\n  //style.gradientColor = '#909090';\n  style.strokeColor = strokeColor;\n  //style.fillColor = '#e0e0e0';\n  style.fillColor = 'none';\n  style.fontColor = fontColor;\n  style.fontStyle = '1';\n  style.fontSize = '12';\n  style.resizable = '0';\n  style.rounded = '1';\n  style.strokeWidth = strokeWidth;\n\n  // инородное дерьмо\n\n  const btn1 = document.getElementById('btn1');\n  const btn2 = document.getElementById('btn2');\n  const btn3 = document.getElementById('btn3');\n  const btn6 = document.getElementById('btn6');\n  const btn7 = document.getElementById('btn7');\n\n  const dispatchElementAdded = (elementType, inputLabels = [], outputLabel = '') => {\n    const event = new CustomEvent('elementAdded', {\n      detail: {\n        type: elementType,\n        inputs: inputLabels,\n        output: outputLabel\n      }\n    });\n    window.dispatchEvent(event);\n  };\n\n  const update = (event) => {\n    setTimeout(() => {\n    var parent = graph.getDefaultParent();\n    graph.batchUpdate(() => {\n      const targetId = event.target.id;\n\n      if (targetId === 'btn3') {\n        const v1 = graph.insertVertex(parent, null, '', 80, 80, 40, 40, {\n          shape: 'shape2',\n          strokeColor: strokeColor,\n        });\n        v1.setConnectable(false);\n        var v11 = graph.insertVertex(v1, null, '', 0, 0, 15, 16, {\n          shape: 'line',\n          align: 'top',\n          verticalAlign: 'top',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: 0,\n          spacingTop: -7,\n          fontColor,\n          strokeColor,\n        });\n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(-v1.geometry.width +25, 12);\n\n        var v12 = graph.insertVertex(v1, null, '◯', 0, 0, 15, 16, {\n          shape: 'line',\n          align: 'top',\n          verticalAlign: 'top',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: -20,\n          spacingTop: 0,\n          fontColor,\n          strokeColor,\n        });\n        v12.geometry.relative = true;\n        v12.geometry.offset = new Point(v1.geometry.width+7.5, 12);\n\n        dispatchElementAdded('NOT', ['X1'], 'Y1');\n      }\n\n      else if (targetId === 'btn6') {\n        const v1 = graph.insertVertex(parent, null, '', 80, 80, 35, 25, {\n          shape: 'customTriangle',\n          strokeColor: strokeColor,\n        });\n        v1.setConnectable(false);\n        const labelText = 'X' + counter;  // Формируем текст с текущим значением счётчика\n        let fontColor = 'black';  // По умолчанию цвет текста черный\n        if (jsonData.inputs.includes(labelText)) {\n          fontColor = 'red';  // Если есть совпадение, меняем цвет на красный\n        }\n        var v11 = graph.insertVertex(v1, null, labelText, 0, 0, 20, 16, {\n          shape: 'line',\n          align: 'top',\n          verticalAlign: 'top',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: -5,\n          spacingTop: -7,\n          fontColor,\n          strokeColor,\n        });\n        counter += 1;\n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(v1.geometry.width+16.5, 4.5);\n        dispatchElementAdded('INPUT', [labelText], '');\n      }\n\n      \n      else if (targetId === 'btn7') {\n        const v1 = graph.insertVertex(parent, null, '', 80, 80, 35, 25, {\n            shape: 'customTriangle',\n            strokeColor: strokeColor,\n            rotation: 180  \n        });\n        v1.setConnectable(false);\n    \n        const labelText = 'F' + counter2;  // Создаем уникальное имя выхода\n        var v11 = graph.insertVertex(v1, null, labelText, 0, 0, 20, 16, {\n            shape: 'line',\n            align: 'top',\n            verticalAlign: 'top',\n            fontSize: 10,\n            routingCenterX: -0.5,\n            spacingLeft: -5,\n            spacingTop: -7,\n            fontColor,\n            strokeColor,\n        });\n    \n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(v1.geometry.width + 16.5, 4.5);\n    \n        dispatchElementAdded('OUTPUT', [], labelText); // Добавляем выход в массив\n        counter2 += 1; // Увеличиваем счетчик\n    }\n    \n\n      else if (targetId === 'btn2') {\n        const v1 = graph.insertVertex(parent, null, '', 80, 100, 60, 60, {\n          shape: 'shape3',\n          strokeColor: strokeColor,  \n        });\n        v1.setConnectable(false);\n        var v11 = graph.insertVertex(v1, null, '', 0, 0, 20, 16, {\n          shape: 'line',\n          align: 'top',\n          verticalAlign: 'top',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: -5,\n          spacingTop: -7,\n          fontColor,\n          strokeColor,\n        });\n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(v1.geometry.width+17.8, 16);\n\n\n        var v12 = graph.insertVertex(v1, null, '', 0, 0, 20, 16, {\n          shape: 'line',\n          align: 'top',\n          verticalAlign: 'top',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: -5,\n          spacingTop: -7,\n          fontColor,\n          strokeColor,\n        });\n        v12.geometry.relative = true;\n        v12.geometry.offset = new Point(-v1.geometry.width+48, 8);\n\n        var v13 = graph.insertVertex(v1, null, '', 0, 0, 20, 16, {\n          shape: 'line',\n          align: 'top',\n          verticalAlign: 'top',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: -5,\n          spacingTop: -7,\n          fontColor,\n          strokeColor,\n        });\n        v13.geometry.relative = true;\n        v13.geometry.offset = new Point(-v1.geometry.width+48, 24);\n        dispatchElementAdded('AND', ['X1', 'X2'], 'Y1');\n      } \n      \n      \n      \n      else if (targetId === 'btn1') {\n        const v1 = graph.insertVertex(parent, null, '', 80, 100, 47, 70, {\n          shape: 'shape4',\n          strokeColor: strokeColor,  \n          rotation: 90 \n        });\n        v1.setConnectable(false);\n\n\n        var v13 = graph.insertVertex(v1, null, '', 0, 0, 20, 16, {\n          shape: 'line',\n          align: 'top',\n          verticalAlign: 'top',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: -5,\n          spacingTop: -7,\n          fontColor,\n          strokeColor,\n        });\n        v13.geometry.relative = true;\n        v13.geometry.offset = new Point(v1.geometry.width-33, -18);\n\n\n\n        var v14 = graph.insertVertex(v1, null, '', 0, 0, 20, 16, {\n          shape: 'line',\n          align: 'top',\n          verticalAlign: 'top',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: -5,\n          spacingTop: -7,\n          fontColor,\n          strokeColor,\n        });\n        v14.geometry.relative = true;\n        v14.geometry.offset = new Point(5, 71);\n\n\n\n        var v15 = graph.insertVertex(v1, null, '', 0, 0, 20, 16, {\n          shape: 'line',\n          align: 'top',\n          verticalAlign: 'top',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: -5,\n          spacingTop: -7,\n          fontColor,\n          strokeColor,\n        });\n        v15.geometry.relative = true;\n        v15.geometry.offset = new Point(23, 71);\n        dispatchElementAdded('OR', ['X1', 'X2'], 'Y1');\n      } \n      \n      \n      \n      else if (targetId === 'btn4') {\n        var v1 = graph.insertVertex(parent, null, '', 80, 140, 40, 80,\n          'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\n        v1.setConnectable(false);\n\n        var v11 = graph.insertVertex(v1, null, '', 0, 0, 14, 16, {\n          shape: 'line',\n          align: 'left',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        });\n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(-v11.geometry.width, 12);\n        var v12 = v11.clone();\n        v12.value = '';\n        v12.geometry.offset = new Point(-v11.geometry.width, 52);\n        v1.insert(v12);\n        var v15 = v11.clone();\n        v15.value = '';\n        v15.geometry.x = 1;\n        v15.style = {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingRight: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        };\n        v15.geometry.offset = new Point(0, 32);\n        v1.insert(v15);\n\n        var v16 = graph.insertVertex(v1, null, '○', 0, 0, 0, 0, {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 25,\n          routingCenterX: 0.5,\n          spacingLeft: 6,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        });\n        v16.geometry.x = 1;\n        v16.geometry.offset = new Point(8, 15);\n        v1.insert(v16);\n        var v17 = graph.insertVertex(v1, null, 'X', 0, 0, 0, 0, {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingLeft: 6,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        });\n        v17.geometry.x = 1;\n        v17.geometry.offset = new Point(14, 20);\n        v1.insert(v17);\n        var v18 = graph.insertVertex(v1, null, 'Y', 0, 0, 0, 0, {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingLeft: 6,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        });\n        v18.geometry.x = 1;\n        v18.geometry.offset = new Point(14, 59);\n        v1.insert(v18);\n        dispatchElementAdded('AND', ['X1', 'X2'], 'Y1');\n      }\n      \n    });\n  }, 0);  // Задержка в 0 мс позволяет выполнить код в следующем цикле событий\n};\n\n\n  btn1.addEventListener('click', update);\n  btn2.addEventListener('click', update);\n  btn3.addEventListener('click', update);\n  btn6.addEventListener('click', update);\n  btn7.addEventListener('click', update);\n\n\n\n\n  const importButton = document.getElementById(\"import\");\n  importButton.onclick = () => {\n    console.log(graph);\n    const fileInput = document.getElementById(\"importFileInput\");\n  \n    if (fileInput) {\n      // Сначала сохраняем текущий граф в XML\n      const xml = new ModelXmlSerializer(graph.getDataModel()).export();\n      \n      // Затем загружаем его обратно в граф\n      loadGraphFromXml(xml, graph);\n  \n      // Добавляем обработчик события onchange\n      fileInput.onchange = function (event) {\n        handleFileImport(event); // Вызываем функцию импорта файла\n      };\n  \n      // Открываем диалог выбора файла\n      fileInput.click();\n      console.log(\"Диалог выбора файла открыт\");\n    } else {\n      console.log(\"fileInput не найден!\");\n    }\n  };\n  \n  function handleFileImport(event) {\n    console.log(\"blyaaa\");\n      // Очищаем граф перед загрузкой новой схемы\n      console.log(graph);\n    const file = event.target.files[0];\n    if (file) {\n      // Вызов функции readXMLFile\n      readXMLFile(file, function(xmlContent) {\n        console.log('Файл импортирован: ', xmlContent); // Работаем с содержимым файла\n        loadGraphFromXml(xmlContent, graph); // Загружаем граф из XML\n      });\n    } else {\n      console.log(\"Файл не выбран!\");\n    }\n  }\n  // Функция чтения XML файла\nfunction readXMLFile(file, callback) {\nconst reader = new FileReader();\nreader.onload = function(e) {\n  const xmlContent = e.target.result;\n  callback(xmlContent);  // Передаем результат чтения в коллбэк\n};\nreader.readAsText(file);  // Читаем файл как текст\n}\n\n// Функция для загрузки графа из XML\nconst loadGraphFromXml = (xml, graph) => {\ngraph.removeCells(graph.getChildVertices(graph.getDefaultParent()));\nconst node = xmlUtils.parseXml(xml).documentElement;\ngraph.model.beginUpdate();\ntry {\n  console.log(node);\n\n  const codec = new Codec();  // Создаем кодек для декодирования XML\n  codec.decode(node, graph.model);  // Декодируем XML и загружаем в модель графа\n} finally {\n  graph.model.endUpdate();  // Завершаем транзакцию\n  graph.refresh();\n}\n};\n\n  ////////////////////////////////////////////////////////\n// XML \n\ndocument.getElementById(\"xml\").onclick = () => {\n  // Получаем XML данные\n  console.log(graph);\n  const xml = new ModelXmlSerializer(graph.getDataModel()).export();\n  \n  // Создаем новый Blob объект с XML данными\n  const blob = new Blob([xml], { type: 'text/xml' });\n  \n  // Создаем ссылку на Blob объект\n  const url = window.URL.createObjectURL(blob);\n  \n  // Создаем ссылку для скачивания\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = 'data.xml'; // Имя файла для скачивания\n  document.body.appendChild(a);\n  \n  // Инициируем скачивание файла\n  a.click();\n  \n  // Освобождаем ресурсы\n  window.URL.revokeObjectURL(url);\n};\n\n\n\n\n\n\n\n\n\n///////////////////////////////////////////////////////////\n\n\n    document.getElementById(\"zoom\").onclick = () => graph.zoomIn();\n    document.getElementById(\"zoomout\").onclick = () => graph.zoomOut();\n\n  // Undo/redo\n  let undoManager = new UndoManager();\n  let listener = function (sender, evt) {\n    undoManager.undoableEditHappened(evt.getProperty('edit'));\n  };\n  graph.getDataModel().addListener(InternalEvent.UNDO, listener);\n  graph.getView().addListener(InternalEvent.UNDO, listener);\n\n  document.getElementById(\"undo\").onclick = () => undoManager.undo();\n  document.getElementById(\"redo\").onclick = () => undoManager.redo();\n\n\n  document.getElementById(\"delete\").onclick = () => graph.removeCells();\n\n  // Wire-mode\n  let checkbox = document.getElementById(\"wire\");\n\n  // Grid\n  let checkbox2 = document.getElementById(\"grid\");\n  checkbox2.setAttribute('checked', 'true');\n\n\n  InternalEvent.addListener(checkbox2, 'click', function (evt) {\n    if (checkbox2.checked) {\n      container.style.background = '';\n    } else {\n      container.style.background = '';\n    }\n    container.style.backgroundColor = invert ? 'black' : 'white';\n  });\n  InternalEvent.disableContextMenu(container);\n\n\n    graphContainer.appendChild(parentContainer);\n\n\n\n}\n}, []);\n\n\n\n  return (\n      <div ref={graphContainerRef} />\n  );\n  \n};\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
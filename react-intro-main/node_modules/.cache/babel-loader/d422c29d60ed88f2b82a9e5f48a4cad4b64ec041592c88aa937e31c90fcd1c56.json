{"ast":null,"code":"'use strict';\n\nconst charWidth = require('./char-width.json');\n\n/**\n    Calculates text string width in pixels.\n\n    @param {String} str text string to be measured\n    @param {Number} size font size used\n    @return {Number} text string width\n*/\n\nmodule.exports = function (str, size) {\n  size = size || 11; // default size 11pt\n  let width = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    let w = charWidth.chars[c];\n    if (w === undefined) {\n      w = charWidth.other;\n    }\n    width += w;\n  }\n  return width * size / 100; // normalize\n};","map":{"version":3,"names":["charWidth","require","module","exports","str","size","width","i","length","c","charCodeAt","w","chars","undefined","other"],"sources":["D:/ospanel/domains/react/react-intro-main/node_modules/wavedrom/lib/text-width.js"],"sourcesContent":["'use strict';\n\nconst charWidth = require('./char-width.json');\n\n/**\n    Calculates text string width in pixels.\n\n    @param {String} str text string to be measured\n    @param {Number} size font size used\n    @return {Number} text string width\n*/\n\nmodule.exports = function (str, size) {\n    size = size || 11; // default size 11pt\n    let width = 0;\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n        let w = charWidth.chars[c];\n        if (w === undefined) {\n            w = charWidth.other;\n        }\n        width += w;\n    }\n    return (width * size) / 100; // normalize\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,mBAAmB,CAAC;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAG,UAAUC,GAAG,EAAEC,IAAI,EAAE;EAClCA,IAAI,GAAGA,IAAI,IAAI,EAAE,CAAC,CAAC;EACnB,IAAIC,KAAK,GAAG,CAAC;EACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,GAAG,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACjC,MAAME,CAAC,GAAGL,GAAG,CAACM,UAAU,CAACH,CAAC,CAAC;IAC3B,IAAII,CAAC,GAAGX,SAAS,CAACY,KAAK,CAACH,CAAC,CAAC;IAC1B,IAAIE,CAAC,KAAKE,SAAS,EAAE;MACjBF,CAAC,GAAGX,SAAS,CAACc,KAAK;IACvB;IACAR,KAAK,IAAIK,CAAC;EACd;EACA,OAAQL,KAAK,GAAGD,IAAI,GAAI,GAAG,CAAC,CAAC;AACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Client from '../Client';\n/**\n * A singleton class that provides cross-browser helper methods.\n * This is a global functionality. To access the functions in this\n * class, use the global classname appended by the functionname.\n * You may have to load chrome://global/content/contentAreaUtils.js\n * to disable certain security restrictions in Mozilla for the <open>,\n * <save>, <saveAs> and <copy> function.\n *\n * For example, the following code displays an error message:\n *\n * ```javascript\n * mxUtils.error('Browser is not supported!', 200, false);\n * ```\n */\nexport const utils = {\n  /*\n   * Specifies the resource key for the title of the error window. If the\n   * resource for this key does not exist then the value is used as\n   * the title. Default is 'error'.\n   */\n  errorResource: 'error',\n  /**\n   * Specifies the resource key for the label of the close button. If the\n   * resource for this key does not exist then the value is used as\n   * the label. Default is 'close'.\n   */\n  closeResource: 'close',\n  /**\n   * Defines the image used for error dialogs.\n   */\n  errorImage: \"\".concat(Client.imageBasePath, \"/error.gif\")\n};\nexport const isNullish = v => v === null || v === undefined;\nexport const isNotNullish = v => !isNullish(v);\n// Merge a mixin into the destination\nexport const mixInto = dest => mixin => {\n  const keys = Reflect.ownKeys(mixin);\n  try {\n    for (const key of keys) {\n      Object.defineProperty(dest.prototype, key, {\n        value: mixin[key],\n        writable: true\n      });\n    }\n  } catch (e) {\n    console.error('Error while mixing', e);\n  }\n};\n/**\n * Returns the value for the given key in the given associative array or\n * the given default value if the value is null.\n *\n * @param array Associative array that contains the value for the key.\n * @param key Key whose value should be returned.\n * @param defaultValue Value to be returned if the value for the given\n * key is null.\n */\nexport const getValue = (array, key, defaultValue) => {\n  let value = array != null ? array[key] : null;\n  if (value == null) {\n    value = defaultValue;\n  }\n  return value;\n};\nexport const copyTextToClipboard = text => {\n  // Credit: https://stackoverflow.com/questions/400212/how-do-i-copy-to-the-clipboard-in-javascript\n  if (!navigator.clipboard) {\n    fallbackCopyTextToClipboard(text);\n    return;\n  }\n  navigator.clipboard.writeText(text).then(function () {\n    console.log('Async: Copying to clipboard was successful!');\n  }, function (err) {\n    console.error('Async: Could not copy text: ', err);\n  });\n};\nconst fallbackCopyTextToClipboard = text => {\n  const textArea = document.createElement('textarea');\n  textArea.value = text;\n  // Avoid scrolling to bottom\n  textArea.style.top = '0';\n  textArea.style.left = '0';\n  textArea.style.position = 'fixed';\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n  try {\n    const successful = document.execCommand('copy');\n    const msg = successful ? 'successful' : 'unsuccessful';\n    console.log('Fallback: Copying text command was ' + msg);\n  } catch (err) {\n    console.error('Fallback: Oops, unable to copy', err);\n  }\n  document.body.removeChild(textArea);\n};","map":{"version":3,"names":["Client","utils","errorResource","closeResource","errorImage","concat","imageBasePath","isNullish","v","undefined","isNotNullish","mixInto","dest","mixin","keys","Reflect","ownKeys","key","Object","defineProperty","prototype","value","writable","e","console","error","getValue","array","defaultValue","copyTextToClipboard","text","navigator","clipboard","fallbackCopyTextToClipboard","writeText","then","log","err","textArea","document","createElement","style","top","left","position","body","appendChild","focus","select","successful","execCommand","msg","removeChild"],"sources":["D:/ospanel/domains/react/react-intro-main/node_modules/@maxgraph/core/dist/util/Utils.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Client from '../Client';\n/**\n * A singleton class that provides cross-browser helper methods.\n * This is a global functionality. To access the functions in this\n * class, use the global classname appended by the functionname.\n * You may have to load chrome://global/content/contentAreaUtils.js\n * to disable certain security restrictions in Mozilla for the <open>,\n * <save>, <saveAs> and <copy> function.\n *\n * For example, the following code displays an error message:\n *\n * ```javascript\n * mxUtils.error('Browser is not supported!', 200, false);\n * ```\n */\nexport const utils = {\n    /*\n     * Specifies the resource key for the title of the error window. If the\n     * resource for this key does not exist then the value is used as\n     * the title. Default is 'error'.\n     */\n    errorResource: 'error',\n    /**\n     * Specifies the resource key for the label of the close button. If the\n     * resource for this key does not exist then the value is used as\n     * the label. Default is 'close'.\n     */\n    closeResource: 'close',\n    /**\n     * Defines the image used for error dialogs.\n     */\n    errorImage: `${Client.imageBasePath}/error.gif`,\n};\nexport const isNullish = (v) => v === null || v === undefined;\nexport const isNotNullish = (v) => !isNullish(v);\n// Merge a mixin into the destination\nexport const mixInto = (dest) => (mixin) => {\n    const keys = Reflect.ownKeys(mixin);\n    try {\n        for (const key of keys) {\n            Object.defineProperty(dest.prototype, key, {\n                value: mixin[key],\n                writable: true,\n            });\n        }\n    }\n    catch (e) {\n        console.error('Error while mixing', e);\n    }\n};\n/**\n * Returns the value for the given key in the given associative array or\n * the given default value if the value is null.\n *\n * @param array Associative array that contains the value for the key.\n * @param key Key whose value should be returned.\n * @param defaultValue Value to be returned if the value for the given\n * key is null.\n */\nexport const getValue = (array, key, defaultValue) => {\n    let value = array != null ? array[key] : null;\n    if (value == null) {\n        value = defaultValue;\n    }\n    return value;\n};\nexport const copyTextToClipboard = (text) => {\n    // Credit: https://stackoverflow.com/questions/400212/how-do-i-copy-to-the-clipboard-in-javascript\n    if (!navigator.clipboard) {\n        fallbackCopyTextToClipboard(text);\n        return;\n    }\n    navigator.clipboard.writeText(text).then(function () {\n        console.log('Async: Copying to clipboard was successful!');\n    }, function (err) {\n        console.error('Async: Could not copy text: ', err);\n    });\n};\nconst fallbackCopyTextToClipboard = (text) => {\n    const textArea = document.createElement('textarea');\n    textArea.value = text;\n    // Avoid scrolling to bottom\n    textArea.style.top = '0';\n    textArea.style.left = '0';\n    textArea.style.position = 'fixed';\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n    try {\n        const successful = document.execCommand('copy');\n        const msg = successful ? 'successful' : 'unsuccessful';\n        console.log('Fallback: Copying text command was ' + msg);\n    }\n    catch (err) {\n        console.error('Fallback: Oops, unable to copy', err);\n    }\n    document.body.removeChild(textArea);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\nconst tspan = require('tspan');\nfunction captext(cxt, anchor, y) {\n  if (cxt[anchor] && cxt[anchor].text) {\n    return [['text', {\n      x: cxt.xmax * cxt.xs / 2,\n      y: y,\n      fill: '#000',\n      'text-anchor': 'middle',\n      'xml:space': 'preserve'\n    }].concat(tspan.parse(cxt[anchor].text))];\n  }\n  return [];\n}\nfunction ticktock(cxt, ref1, ref2, x, dx, y, len) {\n  let offset;\n  let L = [];\n  if (cxt[ref1] === undefined || cxt[ref1][ref2] === undefined) {\n    return [];\n  }\n  let val = cxt[ref1][ref2];\n  if (typeof val === 'string') {\n    val = val.trim().split(/\\s+/);\n  } else if (typeof val === 'number' || typeof val === 'boolean') {\n    offset = Number(val);\n    val = [];\n    for (let i = 0; i < len; i += 1) {\n      val.push(i + offset);\n    }\n  }\n  if (Array.isArray(val)) {\n    if (val.length === 0) {\n      return [];\n    } else if (val.length === 1) {\n      offset = Number(val[0]);\n      if (isNaN(offset)) {\n        L = val;\n      } else {\n        for (let i = 0; i < len; i += 1) {\n          L[i] = i + offset;\n        }\n      }\n    } else if (val.length === 2) {\n      offset = Number(val[0]);\n      const step = Number(val[1]);\n      const tmp = val[1].split('.');\n      let dp = 0;\n      if (tmp.length === 2) {\n        dp = tmp[1].length;\n      }\n      if (isNaN(offset) || isNaN(step)) {\n        L = val;\n      } else {\n        offset = step * offset;\n        for (let i = 0; i < len; i += 1) {\n          L[i] = (step * i + offset).toFixed(dp);\n        }\n      }\n    } else {\n      L = val;\n    }\n  } else {\n    return [];\n  }\n  const res = ['g', {\n    class: 'muted',\n    'text-anchor': 'middle',\n    'xml:space': 'preserve'\n  }];\n  for (let i = 0; i < len; i += 1) {\n    if (cxt[ref1] && cxt[ref1].every && (i + offset) % cxt[ref1].every != 0) {\n      continue;\n    }\n    res.push(['text', {\n      x: i * dx + x,\n      y: y\n    }].concat(tspan.parse(L[i])));\n  }\n  return [res];\n} /* eslint complexity: [1, 30] */\n\nfunction renderMarks(content, index, lane, source) {\n  const mstep = 2 * lane.hscale;\n  const mmstep = mstep * lane.xs;\n  const marks = lane.xmax / mstep;\n  const gy = content.length * lane.yo;\n  const res = ['g', {\n    id: 'gmarks_' + index\n  }];\n  const gmarkLines = ['g', {\n    style: 'stroke:#888;stroke-width:0.5;stroke-dasharray:1,3'\n  }];\n  if (!(source && source.config && source.config.marks === false)) {\n    for (let i = 0; i < marks + 1; i += 1) {\n      gmarkLines.push(['line', {\n        id: 'gmark_' + i + '_' + index,\n        x1: i * mmstep,\n        y1: 0,\n        x2: i * mmstep,\n        y2: gy\n      }]);\n    }\n    res.push(gmarkLines);\n  }\n  return res.concat(captext(lane, 'head', lane.yh0 ? -33 : -13), captext(lane, 'foot', gy + (lane.yf0 ? 45 : 25)), ticktock(lane, 'head', 'tick', 0, mmstep, -5, marks + 1), ticktock(lane, 'head', 'tock', mmstep / 2, mmstep, -5, marks), ticktock(lane, 'foot', 'tick', 0, mmstep, gy + 15, marks + 1), ticktock(lane, 'foot', 'tock', mmstep / 2, mmstep, gy + 15, marks));\n}\nmodule.exports = renderMarks;","map":{"version":3,"names":["tspan","require","captext","cxt","anchor","y","text","x","xmax","xs","fill","concat","parse","ticktock","ref1","ref2","dx","len","offset","L","undefined","val","trim","split","Number","i","push","Array","isArray","length","isNaN","step","tmp","dp","toFixed","res","class","every","renderMarks","content","index","lane","source","mstep","hscale","mmstep","marks","gy","yo","id","gmarkLines","style","config","x1","y1","x2","y2","yh0","yf0","module","exports"],"sources":["D:/ospanel/domains/react/react-intro-main/node_modules/wavedrom/lib/render-marks.js"],"sourcesContent":["'use strict';\n\nconst tspan = require('tspan');\n\nfunction captext (cxt, anchor, y) {\n    if (cxt[anchor] && cxt[anchor].text) {\n        return [\n            ['text', {\n                x: cxt.xmax * cxt.xs / 2,\n                y: y,\n                fill: '#000',\n                'text-anchor': 'middle',\n                'xml:space': 'preserve'\n            }].concat(tspan.parse(cxt[anchor].text))\n        ];\n    }\n    return [];\n}\n\nfunction ticktock (cxt, ref1, ref2, x, dx, y, len) {\n    let offset;\n    let L = [];\n\n    if (cxt[ref1] === undefined || cxt[ref1][ref2] === undefined) {\n        return [];\n    }\n\n    let val = cxt[ref1][ref2];\n\n    if (typeof val === 'string') {\n        val = val.trim().split(/\\s+/);\n    } else if (typeof val === 'number' || typeof val === 'boolean') {\n        offset = Number(val);\n        val = [];\n        for (let i = 0; i < len; i += 1) {\n            val.push(i + offset);\n        }\n    }\n    if (Array.isArray(val)) {\n        if (val.length === 0) {\n            return [];\n        } else if (val.length === 1) {\n            offset = Number(val[0]);\n            if (isNaN(offset)) {\n                L = val;\n            } else {\n                for (let i = 0; i < len; i += 1) {\n                    L[i] = i + offset;\n                }\n            }\n        } else if (val.length === 2) {\n            offset = Number(val[0]);\n            const step = Number(val[1]);\n            const tmp = val[1].split('.');\n            let dp = 0;\n            if (tmp.length === 2) {\n                dp = tmp[1].length;\n            }\n            if (isNaN(offset) || isNaN(step)) {\n                L = val;\n            } else {\n                offset = step * offset;\n                for (let i = 0; i < len; i += 1) {\n                    L[i] = (step * i + offset).toFixed(dp);\n                }\n            }\n        } else {\n            L = val;\n        }\n    } else {\n        return [];\n    }\n\n    const res = ['g', {\n        class: 'muted',\n        'text-anchor': 'middle',\n        'xml:space': 'preserve'\n    }];\n\n    for (let i = 0; i < len; i += 1) {\n        if (cxt[ref1] && cxt[ref1].every && (i + offset) % cxt[ref1].every != 0) {\n            continue;\n        }\n        res.push(['text', {x: i * dx + x, y: y}].concat(tspan.parse(L[i])));\n    }\n    return [res];\n} /* eslint complexity: [1, 30] */\n\nfunction renderMarks (content, index, lane, source) {\n    const mstep  = 2 * (lane.hscale);\n    const mmstep = mstep * lane.xs;\n    const marks  = lane.xmax / mstep;\n    const gy     = content.length * lane.yo;\n\n    const res = ['g', {id: ('gmarks_' + index)}];\n    const gmarkLines = ['g', {style: 'stroke:#888;stroke-width:0.5;stroke-dasharray:1,3'}];\n    if (!(source && source.config && source.config.marks === false)) {\n        for (let i = 0; i < (marks + 1); i += 1) {\n            gmarkLines.push(['line', {\n                id: 'gmark_' + i + '_' + index,\n                x1: i * mmstep, y1: 0,\n                x2: i * mmstep, y2: gy\n            }]);\n        }\n        res.push(gmarkLines);\n    }\n    return res.concat(\n        captext(lane, 'head', (lane.yh0 ? -33 : -13)),\n        captext(lane, 'foot', gy + (lane.yf0 ? 45 : 25)),\n        ticktock(lane, 'head', 'tick',          0, mmstep,      -5, marks + 1),\n        ticktock(lane, 'head', 'tock', mmstep / 2, mmstep,      -5, marks),\n        ticktock(lane, 'foot', 'tick',          0, mmstep, gy + 15, marks + 1),\n        ticktock(lane, 'foot', 'tock', mmstep / 2, mmstep, gy + 15, marks)\n    );\n}\n\nmodule.exports = renderMarks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\nCopyright 2023-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport ObjectCodec from '../../ObjectCodec';\nimport EditorKeyHandler from '../../../editor/EditorKeyHandler';\n/**\n * Custom codec for configuring {@link EditorKeyHandler}s.\n *\n * This class is created and registered dynamically at load time and used implicitly via {@link Codec} and the {@link CodecRegistry}.\n *\n * This codec only reads configuration data for existing key handlers, it does not encode or create key handlers.\n */\nexport class EditorKeyHandlerCodec extends ObjectCodec {\n  constructor() {\n    super(new EditorKeyHandler());\n  }\n  /**\n   * Returns `null`.\n   */\n  encode(enc, obj) {\n    return null;\n  }\n  /**\n   * Reads a sequence of the following child nodes and attributes:\n   *\n   * Child Nodes:\n   *\n   * add - Binds a keystroke to an action name.\n   *\n   * Attributes:\n   *\n   * as - Keycode.\n   * action - Action name to execute in editor.\n   * control - Optional boolean indicating if\n   *     the control key must be pressed.\n   *\n   * Example:\n   *\n   * ```javascript\n   * <EditorKeyHandler as=\"keyHandler\">\n   *   <add as=\"88\" control=\"true\" action=\"cut\"/>\n   *   <add as=\"67\" control=\"true\" action=\"copy\"/>\n   *   <add as=\"86\" control=\"true\" action=\"paste\"/>\n   * </EditorKeyHandler>\n   * ```\n   *\n   * The keycodes are for the x, c and v keys.\n   *\n   * See also: <EditorKeyHandler.bindAction>, http://www.js-examples.com/page/tutorials__key_codes.html\n   */\n  decode(dec, _node, into) {\n    if (into != null) {\n      const {\n        editor\n      } = into;\n      let node = _node.firstChild;\n      while (node != null) {\n        if (!this.processInclude(dec, node, into) && node.nodeName === 'add') {\n          const as = node.getAttribute('as');\n          const action = node.getAttribute('action');\n          const control = node.getAttribute('control');\n          into.bindAction(as, action, control);\n        }\n        node = node.nextSibling;\n      }\n    }\n    return into;\n  }\n}","map":{"version":3,"names":["ObjectCodec","EditorKeyHandler","EditorKeyHandlerCodec","constructor","encode","enc","obj","decode","dec","_node","into","editor","node","firstChild","processInclude","nodeName","as","getAttribute","action","control","bindAction","nextSibling"],"sources":["D:/ospanel/domains/проекты open server/old/react/react-intro-main/node_modules/@maxgraph/core/dist/serialization/codecs/editor/EditorKeyHandlerCodec.js"],"sourcesContent":["/*\nCopyright 2023-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport ObjectCodec from '../../ObjectCodec';\nimport EditorKeyHandler from '../../../editor/EditorKeyHandler';\n/**\n * Custom codec for configuring {@link EditorKeyHandler}s.\n *\n * This class is created and registered dynamically at load time and used implicitly via {@link Codec} and the {@link CodecRegistry}.\n *\n * This codec only reads configuration data for existing key handlers, it does not encode or create key handlers.\n */\nexport class EditorKeyHandlerCodec extends ObjectCodec {\n    constructor() {\n        super(new EditorKeyHandler());\n    }\n    /**\n     * Returns `null`.\n     */\n    encode(enc, obj) {\n        return null;\n    }\n    /**\n     * Reads a sequence of the following child nodes and attributes:\n     *\n     * Child Nodes:\n     *\n     * add - Binds a keystroke to an action name.\n     *\n     * Attributes:\n     *\n     * as - Keycode.\n     * action - Action name to execute in editor.\n     * control - Optional boolean indicating if\n     *     the control key must be pressed.\n     *\n     * Example:\n     *\n     * ```javascript\n     * <EditorKeyHandler as=\"keyHandler\">\n     *   <add as=\"88\" control=\"true\" action=\"cut\"/>\n     *   <add as=\"67\" control=\"true\" action=\"copy\"/>\n     *   <add as=\"86\" control=\"true\" action=\"paste\"/>\n     * </EditorKeyHandler>\n     * ```\n     *\n     * The keycodes are for the x, c and v keys.\n     *\n     * See also: <EditorKeyHandler.bindAction>, http://www.js-examples.com/page/tutorials__key_codes.html\n     */\n    decode(dec, _node, into) {\n        if (into != null) {\n            const { editor } = into;\n            let node = _node.firstChild;\n            while (node != null) {\n                if (!this.processInclude(dec, node, into) && node.nodeName === 'add') {\n                    const as = node.getAttribute('as');\n                    const action = node.getAttribute('action');\n                    const control = node.getAttribute('control');\n                    into.bindAction(as, action, control);\n                }\n                node = node.nextSibling;\n            }\n        }\n        return into;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,qBAAqB,SAASF,WAAW,CAAC;EACnDG,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,IAAIF,gBAAgB,CAAC,CAAC,CAAC;EACjC;EACA;AACJ;AACA;EACIG,MAAMA,CAACC,GAAG,EAAEC,GAAG,EAAE;IACb,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,MAAMA,CAACC,GAAG,EAAEC,KAAK,EAAEC,IAAI,EAAE;IACrB,IAAIA,IAAI,IAAI,IAAI,EAAE;MACd,MAAM;QAAEC;MAAO,CAAC,GAAGD,IAAI;MACvB,IAAIE,IAAI,GAAGH,KAAK,CAACI,UAAU;MAC3B,OAAOD,IAAI,IAAI,IAAI,EAAE;QACjB,IAAI,CAAC,IAAI,CAACE,cAAc,CAACN,GAAG,EAAEI,IAAI,EAAEF,IAAI,CAAC,IAAIE,IAAI,CAACG,QAAQ,KAAK,KAAK,EAAE;UAClE,MAAMC,EAAE,GAAGJ,IAAI,CAACK,YAAY,CAAC,IAAI,CAAC;UAClC,MAAMC,MAAM,GAAGN,IAAI,CAACK,YAAY,CAAC,QAAQ,CAAC;UAC1C,MAAME,OAAO,GAAGP,IAAI,CAACK,YAAY,CAAC,SAAS,CAAC;UAC5CP,IAAI,CAACU,UAAU,CAACJ,EAAE,EAAEE,MAAM,EAAEC,OAAO,CAAC;QACxC;QACAP,IAAI,GAAGA,IAAI,CAACS,WAAW;MAC3B;IACJ;IACA,OAAOX,IAAI;EACf;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
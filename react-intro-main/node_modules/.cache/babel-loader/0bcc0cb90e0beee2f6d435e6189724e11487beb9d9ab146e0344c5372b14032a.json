{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { strictEquals } from '../equals.js';\nimport { ObservableValue } from './base.js';\nimport { DebugNameData } from './debugName.js';\nimport { LazyObservableValue } from './lazyObservableValue.js';\nexport function observableValueOpts(options, initialValue) {\n  var _options$equalsFn2;\n  if (options.lazy) {\n    var _options$equalsFn;\n    return new LazyObservableValue(new DebugNameData(options.owner, options.debugName, undefined), initialValue, (_options$equalsFn = options.equalsFn) !== null && _options$equalsFn !== void 0 ? _options$equalsFn : strictEquals);\n  }\n  return new ObservableValue(new DebugNameData(options.owner, options.debugName, undefined), initialValue, (_options$equalsFn2 = options.equalsFn) !== null && _options$equalsFn2 !== void 0 ? _options$equalsFn2 : strictEquals);\n}","map":{"version":3,"names":["strictEquals","ObservableValue","DebugNameData","LazyObservableValue","observableValueOpts","options","initialValue","_options$equalsFn2","lazy","_options$equalsFn","owner","debugName","undefined","equalsFn"],"sources":["D:/ospanel/domains/react/react-intro-main/node_modules/monaco-editor/esm/vs/base/common/observableInternal/api.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { strictEquals } from '../equals.js';\nimport { ObservableValue } from './base.js';\nimport { DebugNameData } from './debugName.js';\nimport { LazyObservableValue } from './lazyObservableValue.js';\nexport function observableValueOpts(options, initialValue) {\n    if (options.lazy) {\n        return new LazyObservableValue(new DebugNameData(options.owner, options.debugName, undefined), initialValue, options.equalsFn ?? strictEquals);\n    }\n    return new ObservableValue(new DebugNameData(options.owner, options.debugName, undefined), initialValue, options.equalsFn ?? strictEquals);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,YAAY,QAAQ,cAAc;AAC3C,SAASC,eAAe,QAAQ,WAAW;AAC3C,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAO,SAASC,mBAAmBA,CAACC,OAAO,EAAEC,YAAY,EAAE;EAAA,IAAAC,kBAAA;EACvD,IAAIF,OAAO,CAACG,IAAI,EAAE;IAAA,IAAAC,iBAAA;IACd,OAAO,IAAIN,mBAAmB,CAAC,IAAID,aAAa,CAACG,OAAO,CAACK,KAAK,EAAEL,OAAO,CAACM,SAAS,EAAEC,SAAS,CAAC,EAAEN,YAAY,GAAAG,iBAAA,GAAEJ,OAAO,CAACQ,QAAQ,cAAAJ,iBAAA,cAAAA,iBAAA,GAAIT,YAAY,CAAC;EAClJ;EACA,OAAO,IAAIC,eAAe,CAAC,IAAIC,aAAa,CAACG,OAAO,CAACK,KAAK,EAAEL,OAAO,CAACM,SAAS,EAAEC,SAAS,CAAC,EAAEN,YAAY,GAAAC,kBAAA,GAAEF,OAAO,CAACQ,QAAQ,cAAAN,kBAAA,cAAAA,kBAAA,GAAIP,YAAY,CAAC;AAC9I","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
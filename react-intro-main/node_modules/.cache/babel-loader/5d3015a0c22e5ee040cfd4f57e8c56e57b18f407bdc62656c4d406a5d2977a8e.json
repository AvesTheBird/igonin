{"ast":null,"code":"import * as monaco from 'monaco-editor';\n\n// Функция для генерации списка ключевых слов в разных регистрах\nfunction generateKeywords(str) {\n  const words = str.split(\",\");\n  const keywords = {};\n  words.forEach(word => {\n    const lower = word.toLowerCase();\n    const upper = word.toUpperCase();\n    const capitalized = word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n    keywords[lower] = true;\n    keywords[upper] = true;\n    keywords[capitalized] = true;\n  });\n  return Object.keys(keywords);\n}\n\n// Ключевые слова\nconst keywords = generateKeywords(`\n  abs,access,after,alias,all,and,architecture,array,assert,attribute,begin,block,\n  body,buffer,bus,case,component,configuration,constant,disconnect,downto,else,elsif,end,end block,end case,\n  end component,end for,end generate,end if,end loop,end process,end record,end units,entity,exit,file,for,\n  function,generate,generic,generic map,group,guarded,if,impure,in,inertial,inout,is,label,library,linkage,\n  literal,loop,map,mod,nand,new,next,nor,null,of,on,open,or,others,out,package,package body,port,port map,\n  postponed,procedure,process,pure,range,record,register,reject,rem,report,return,rol,ror,select,severity,signal,\n  sla,sll,sra,srl,subtype,then,to,transport,type,unaffected,units,until,use,variable,wait,when,while,with,xnor,xor\n`);\n\n// Регистрация языка VHDL\nmonaco.languages.register({\n  id: 'vhdl'\n});\n\n// Определение подсветки\nmonaco.languages.setMonarchTokensProvider('vhdl', {\n  keywords,\n  operators: ['<=', '=>', '=', '/=', '<', '<=', '>', '>=', '+', '-', '*', '/', '&', '|', 'and', 'or', 'not'],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  tokenizer: {\n    root: [\n    // Ключевые слова\n    [new RegExp(`\\\\b(${keywords.join('|')})\\\\b`, 'i'), 'keyword'],\n    // Числа\n    [/\\b\\d+(\\.\\d+)?([eE][\\-+]?\\d+)?\\b/, 'number'],\n    // Комментарии\n    [/--.*/, 'comment'],\n    // Операторы\n    [/[=><!~?:&|+\\-*\\/\\^%]+/, 'operator'],\n    // Строки\n    [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n    // Неполная строка\n    [/\"([^\"\\\\]|\\\\.)*\"/, 'string'],\n    // Скобки и разделители\n    [/[{}\\[\\]()]/, '@brackets'],\n    // Идентификаторы\n    [/\\b[a-zA-Z_][a-zA-Z0-9_]*\\b/, 'variable']]\n  }\n});\n\n// Настройка темы\nmonaco.editor.defineTheme('vhdlTheme', {\n  base: 'vs-dark',\n  inherit: true,\n  rules: [{\n    token: 'keyword',\n    foreground: '569cd6'\n  }, {\n    token: 'number',\n    foreground: 'b5cea8'\n  }, {\n    token: 'string',\n    foreground: 'ffffff'\n  }, {\n    token: 'comment',\n    foreground: '6a9955'\n  }, {\n    token: 'operator',\n    foreground: 'dcdcaa'\n  }, {\n    token: 'variable',\n    foreground: 'd4d4d4'\n  }, {\n    token: 'brackets',\n    foreground: 'dcdcaa'\n  }]\n});","map":{"version":3,"names":["monaco","generateKeywords","str","words","split","keywords","forEach","word","lower","toLowerCase","upper","toUpperCase","capitalized","charAt","slice","Object","keys","languages","register","id","setMonarchTokensProvider","operators","symbols","tokenizer","root","RegExp","join","editor","defineTheme","base","inherit","rules","token","foreground"],"sources":["D:/ospanel/domains/react/react-intro-main/src/components/monaco-vhdl.js"],"sourcesContent":["import * as monaco from 'monaco-editor';\r\n\r\n// Функция для генерации списка ключевых слов в разных регистрах\r\nfunction generateKeywords(str) {\r\n  const words = str.split(\",\");\r\n  const keywords = {};\r\n  words.forEach((word) => {\r\n    const lower = word.toLowerCase();\r\n    const upper = word.toUpperCase();\r\n    const capitalized = word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\r\n    keywords[lower] = true;\r\n    keywords[upper] = true;\r\n    keywords[capitalized] = true;\r\n  });\r\n  return Object.keys(keywords);\r\n}\r\n\r\n// Ключевые слова\r\nconst keywords = generateKeywords(`\r\n  abs,access,after,alias,all,and,architecture,array,assert,attribute,begin,block,\r\n  body,buffer,bus,case,component,configuration,constant,disconnect,downto,else,elsif,end,end block,end case,\r\n  end component,end for,end generate,end if,end loop,end process,end record,end units,entity,exit,file,for,\r\n  function,generate,generic,generic map,group,guarded,if,impure,in,inertial,inout,is,label,library,linkage,\r\n  literal,loop,map,mod,nand,new,next,nor,null,of,on,open,or,others,out,package,package body,port,port map,\r\n  postponed,procedure,process,pure,range,record,register,reject,rem,report,return,rol,ror,select,severity,signal,\r\n  sla,sll,sra,srl,subtype,then,to,transport,type,unaffected,units,until,use,variable,wait,when,while,with,xnor,xor\r\n`);\r\n\r\n// Регистрация языка VHDL\r\nmonaco.languages.register({ id: 'vhdl' });\r\n\r\n// Определение подсветки\r\nmonaco.languages.setMonarchTokensProvider('vhdl', {\r\n  keywords,\r\n  operators: [\r\n    '<=', '=>', '=', '/=', '<', '<=', '>', '>=', '+', '-', '*', '/', '&', '|', 'and', 'or', 'not'\r\n  ],\r\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n  tokenizer: {\r\n    root: [\r\n      // Ключевые слова\r\n      [new RegExp(`\\\\b(${keywords.join('|')})\\\\b`, 'i'), 'keyword'],\r\n\r\n      // Числа\r\n      [/\\b\\d+(\\.\\d+)?([eE][\\-+]?\\d+)?\\b/, 'number'],\r\n\r\n      // Комментарии\r\n      [/--.*/, 'comment'],\r\n\r\n      // Операторы\r\n      [/[=><!~?:&|+\\-*\\/\\^%]+/, 'operator'],\r\n\r\n      // Строки\r\n      [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'], // Неполная строка\r\n      [/\"([^\"\\\\]|\\\\.)*\"/, 'string'],\r\n\r\n      // Скобки и разделители\r\n      [/[{}\\[\\]()]/, '@brackets'],\r\n\r\n      // Идентификаторы\r\n      [/\\b[a-zA-Z_][a-zA-Z0-9_]*\\b/, 'variable'],\r\n    ],\r\n  },\r\n});\r\n\r\n// Настройка темы\r\nmonaco.editor.defineTheme('vhdlTheme', {\r\n  base: 'vs-dark',\r\n  inherit: true,\r\n  rules: [\r\n    { token: 'keyword', foreground: '569cd6' },\r\n    { token: 'number', foreground: 'b5cea8' },\r\n    { token: 'string', foreground: 'ffffff' },\r\n    { token: 'comment', foreground: '6a9955' },\r\n    { token: 'operator', foreground: 'dcdcaa' },\r\n    { token: 'variable', foreground: 'd4d4d4' },\r\n    { token: 'brackets', foreground: 'dcdcaa' },\r\n  ],\r\n});\r\n"],"mappings":"AAAA,OAAO,KAAKA,MAAM,MAAM,eAAe;;AAEvC;AACA,SAASC,gBAAgBA,CAACC,GAAG,EAAE;EAC7B,MAAMC,KAAK,GAAGD,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC;EAC5B,MAAMC,QAAQ,GAAG,CAAC,CAAC;EACnBF,KAAK,CAACG,OAAO,CAAEC,IAAI,IAAK;IACtB,MAAMC,KAAK,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;IAChC,MAAMC,KAAK,GAAGH,IAAI,CAACI,WAAW,CAAC,CAAC;IAChC,MAAMC,WAAW,GAAGL,IAAI,CAACM,MAAM,CAAC,CAAC,CAAC,CAACF,WAAW,CAAC,CAAC,GAAGJ,IAAI,CAACO,KAAK,CAAC,CAAC,CAAC,CAACL,WAAW,CAAC,CAAC;IAC9EJ,QAAQ,CAACG,KAAK,CAAC,GAAG,IAAI;IACtBH,QAAQ,CAACK,KAAK,CAAC,GAAG,IAAI;IACtBL,QAAQ,CAACO,WAAW,CAAC,GAAG,IAAI;EAC9B,CAAC,CAAC;EACF,OAAOG,MAAM,CAACC,IAAI,CAACX,QAAQ,CAAC;AAC9B;;AAEA;AACA,MAAMA,QAAQ,GAAGJ,gBAAgB,CAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;;AAEF;AACAD,MAAM,CAACiB,SAAS,CAACC,QAAQ,CAAC;EAAEC,EAAE,EAAE;AAAO,CAAC,CAAC;;AAEzC;AACAnB,MAAM,CAACiB,SAAS,CAACG,wBAAwB,CAAC,MAAM,EAAE;EAChDf,QAAQ;EACRgB,SAAS,EAAE,CACT,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAC9F;EACDC,OAAO,EAAE,uBAAuB;EAChCC,SAAS,EAAE;IACTC,IAAI,EAAE;IACJ;IACA,CAAC,IAAIC,MAAM,CAAE,OAAMpB,QAAQ,CAACqB,IAAI,CAAC,GAAG,CAAE,MAAK,EAAE,GAAG,CAAC,EAAE,SAAS,CAAC;IAE7D;IACA,CAAC,iCAAiC,EAAE,QAAQ,CAAC;IAE7C;IACA,CAAC,MAAM,EAAE,SAAS,CAAC;IAEnB;IACA,CAAC,uBAAuB,EAAE,UAAU,CAAC;IAErC;IACA,CAAC,iBAAiB,EAAE,gBAAgB,CAAC;IAAE;IACvC,CAAC,iBAAiB,EAAE,QAAQ,CAAC;IAE7B;IACA,CAAC,YAAY,EAAE,WAAW,CAAC;IAE3B;IACA,CAAC,4BAA4B,EAAE,UAAU,CAAC;EAE9C;AACF,CAAC,CAAC;;AAEF;AACA1B,MAAM,CAAC2B,MAAM,CAACC,WAAW,CAAC,WAAW,EAAE;EACrCC,IAAI,EAAE,SAAS;EACfC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE,CACL;IAAEC,KAAK,EAAE,SAAS;IAAEC,UAAU,EAAE;EAAS,CAAC,EAC1C;IAAED,KAAK,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAS,CAAC,EACzC;IAAED,KAAK,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAS,CAAC,EACzC;IAAED,KAAK,EAAE,SAAS;IAAEC,UAAU,EAAE;EAAS,CAAC,EAC1C;IAAED,KAAK,EAAE,UAAU;IAAEC,UAAU,EAAE;EAAS,CAAC,EAC3C;IAAED,KAAK,EAAE,UAAU;IAAEC,UAAU,EAAE;EAAS,CAAC,EAC3C;IAAED,KAAK,EAAE,UAAU;IAAEC,UAAU,EAAE;EAAS,CAAC;AAE/C,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
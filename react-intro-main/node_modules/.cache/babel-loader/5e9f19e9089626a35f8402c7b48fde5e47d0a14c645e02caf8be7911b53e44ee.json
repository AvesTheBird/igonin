{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Point from '../../geometry/Point';\nimport { DIRECTION } from '../../../util/Constants';\nimport { contains } from '../../../util/mathUtils';\nimport { getValue } from '../../../util/Utils';\nexport const Loop = (state, source, _target, points, result) => {\n  const pts = state.absolutePoints;\n  const p0 = pts[0];\n  const pe = pts[pts.length - 1];\n  if (p0 != null && pe != null) {\n    if (points != null && points.length > 0) {\n      for (let i = 0; i < points.length; i += 1) {\n        let pt = points[i];\n        pt = state.view.transformControlPoint(state, pt);\n        result.push(new Point(pt.x, pt.y));\n      }\n    }\n    return;\n  }\n  if (source != null) {\n    const {\n      view\n    } = state;\n    const {\n      graph\n    } = view;\n    let pt = points != null && points.length > 0 ? points[0] : null;\n    if (pt != null) {\n      pt = view.transformControlPoint(state, pt);\n      if (contains(source, pt.x, pt.y)) {\n        pt = null;\n      }\n    }\n    let x = 0;\n    let dx = 0;\n    let y = 0;\n    let dy = 0;\n    const seg = getValue(state.style, 'segment', graph.gridSize) * view.scale;\n    const dir = getValue(state.style, 'direction', DIRECTION.WEST);\n    if (dir === DIRECTION.NORTH || dir === DIRECTION.SOUTH) {\n      x = view.getRoutingCenterX(source);\n      dx = seg;\n    } else {\n      y = view.getRoutingCenterY(source);\n      dy = seg;\n    }\n    if (pt == null || pt.x < source.x || pt.x > source.x + source.width) {\n      if (pt != null) {\n        x = pt.x;\n        dy = Math.max(Math.abs(y - pt.y), dy);\n      } else if (dir === DIRECTION.NORTH) {\n        y = source.y - 2 * dx;\n      } else if (dir === DIRECTION.SOUTH) {\n        y = source.y + source.height + 2 * dx;\n      } else if (dir === DIRECTION.EAST) {\n        x = source.x - 2 * dy;\n      } else {\n        x = source.x + source.width + 2 * dy;\n      }\n    } else if (pt !== null) {\n      x = view.getRoutingCenterX(source);\n      dx = Math.max(Math.abs(x - pt.x), dy);\n      y = pt.y;\n      dy = 0;\n    }\n    result.push(new Point(x - dx, y - dy));\n    result.push(new Point(x + dx, y + dy));\n  }\n};","map":{"version":3,"names":["Point","DIRECTION","contains","getValue","Loop","state","source","_target","points","result","pts","absolutePoints","p0","pe","length","i","pt","view","transformControlPoint","push","x","y","graph","dx","dy","seg","style","gridSize","scale","dir","WEST","NORTH","SOUTH","getRoutingCenterX","getRoutingCenterY","width","Math","max","abs","height","EAST"],"sources":["D:/OSPanel/domains/react/react-intro-main/node_modules/@maxgraph/core/dist/view/style/edge/Loop.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Point from '../../geometry/Point';\nimport { DIRECTION } from '../../../util/Constants';\nimport { contains } from '../../../util/mathUtils';\nimport { getValue } from '../../../util/Utils';\nexport const Loop = (state, source, _target, points, result) => {\n    const pts = state.absolutePoints;\n    const p0 = pts[0];\n    const pe = pts[pts.length - 1];\n    if (p0 != null && pe != null) {\n        if (points != null && points.length > 0) {\n            for (let i = 0; i < points.length; i += 1) {\n                let pt = points[i];\n                pt = state.view.transformControlPoint(state, pt);\n                result.push(new Point(pt.x, pt.y));\n            }\n        }\n        return;\n    }\n    if (source != null) {\n        const { view } = state;\n        const { graph } = view;\n        let pt = points != null && points.length > 0 ? points[0] : null;\n        if (pt != null) {\n            pt = view.transformControlPoint(state, pt);\n            if (contains(source, pt.x, pt.y)) {\n                pt = null;\n            }\n        }\n        let x = 0;\n        let dx = 0;\n        let y = 0;\n        let dy = 0;\n        const seg = getValue(state.style, 'segment', graph.gridSize) * view.scale;\n        const dir = getValue(state.style, 'direction', DIRECTION.WEST);\n        if (dir === DIRECTION.NORTH || dir === DIRECTION.SOUTH) {\n            x = view.getRoutingCenterX(source);\n            dx = seg;\n        }\n        else {\n            y = view.getRoutingCenterY(source);\n            dy = seg;\n        }\n        if (pt == null || pt.x < source.x || pt.x > source.x + source.width) {\n            if (pt != null) {\n                x = pt.x;\n                dy = Math.max(Math.abs(y - pt.y), dy);\n            }\n            else if (dir === DIRECTION.NORTH) {\n                y = source.y - 2 * dx;\n            }\n            else if (dir === DIRECTION.SOUTH) {\n                y = source.y + source.height + 2 * dx;\n            }\n            else if (dir === DIRECTION.EAST) {\n                x = source.x - 2 * dy;\n            }\n            else {\n                x = source.x + source.width + 2 * dy;\n            }\n        }\n        else if (pt !== null) {\n            x = view.getRoutingCenterX(source);\n            dx = Math.max(Math.abs(x - pt.x), dy);\n            y = pt.y;\n            dy = 0;\n        }\n        result.push(new Point(x - dx, y - dy));\n        result.push(new Point(x + dx, y + dy));\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
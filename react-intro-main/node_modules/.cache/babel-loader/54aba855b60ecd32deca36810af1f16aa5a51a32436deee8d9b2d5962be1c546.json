{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { LINE_ARCSIZE, NONE, RECTANGLE_ROUNDING_FACTOR } from '../../../util/Constants';\nimport Shape from '../Shape';\n/**\n * Extends {@link Shape} to implement a rectangle shape.\n * This shape is registered under {@link mxConstants.SHAPE_RECTANGLE} in {@link cellRenderer}.\n * @class RectangleShape\n * @extends {Shape}\n */\nclass RectangleShape extends Shape {\n  constructor(bounds, fill, stroke) {\n    let strokeWidth = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    super();\n    this.bounds = bounds;\n    this.fill = fill;\n    this.stroke = stroke;\n    this.strokeWidth = strokeWidth;\n  }\n  /**\n   * Returns true for non-rounded, non-rotated shapes with no glass gradient.\n   */\n  isHtmlAllowed() {\n    let events = true;\n    if (this.style && this.style.pointerEvents != null) {\n      events = this.style.pointerEvents;\n    }\n    return !this.isRounded && !this.glass && this.rotation === 0 && (events || this.fill !== NONE);\n  }\n  /**\n   * Generic background painting implementation.\n   */\n  paintBackground(c, x, y, w, h) {\n    let events = true;\n    if (this.style && this.style.pointerEvents != null) {\n      events = this.style.pointerEvents;\n    }\n    if (events || this.fill !== NONE || this.stroke !== NONE) {\n      if (!events && this.fill === NONE) {\n        c.pointerEvents = false;\n      }\n      if (this.isRounded) {\n        var _this$style$absoluteA, _this$style;\n        let r = 0;\n        if ((_this$style$absoluteA = (_this$style = this.style) === null || _this$style === void 0 ? void 0 : _this$style.absoluteArcSize) !== null && _this$style$absoluteA !== void 0 ? _this$style$absoluteA : false) {\n          var _this$style$arcSize, _this$style2;\n          r = Math.min(w / 2, Math.min(h / 2, ((_this$style$arcSize = (_this$style2 = this.style) === null || _this$style2 === void 0 ? void 0 : _this$style2.arcSize) !== null && _this$style$arcSize !== void 0 ? _this$style$arcSize : LINE_ARCSIZE) / 2));\n        } else {\n          var _this$style$arcSize2, _this$style3;\n          const f = ((_this$style$arcSize2 = (_this$style3 = this.style) === null || _this$style3 === void 0 ? void 0 : _this$style3.arcSize) !== null && _this$style$arcSize2 !== void 0 ? _this$style$arcSize2 : RECTANGLE_ROUNDING_FACTOR * 100) / 100;\n          r = Math.min(w * f, h * f);\n        }\n        c.roundrect(x, y, w, h, r, r);\n      } else {\n        c.rect(x, y, w, h);\n      }\n      c.fillAndStroke();\n    }\n  }\n  /**\n   * Adds roundable support.\n   */\n  isRoundable(c, x, y, w, h) {\n    return true;\n  }\n  /**\n   * Generic background painting implementation.\n   */\n  paintForeground(c, x, y, w, h) {\n    if (this.glass && !this.outline && this.fill !== NONE) {\n      this.paintGlassEffect(c, x, y, w, h, this.getArcSize(w + this.strokeWidth, h + this.strokeWidth));\n    }\n  }\n}\nexport default RectangleShape;","map":{"version":3,"names":["LINE_ARCSIZE","NONE","RECTANGLE_ROUNDING_FACTOR","Shape","RectangleShape","constructor","bounds","fill","stroke","strokeWidth","arguments","length","undefined","isHtmlAllowed","events","style","pointerEvents","isRounded","glass","rotation","paintBackground","c","x","y","w","h","_this$style$absoluteA","_this$style","r","absoluteArcSize","_this$style$arcSize","_this$style2","Math","min","arcSize","_this$style$arcSize2","_this$style3","f","roundrect","rect","fillAndStroke","isRoundable","paintForeground","outline","paintGlassEffect","getArcSize"],"sources":["D:/ospanel/domains/react/react-intro-main/node_modules/@maxgraph/core/dist/view/geometry/node/RectangleShape.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { LINE_ARCSIZE, NONE, RECTANGLE_ROUNDING_FACTOR } from '../../../util/Constants';\nimport Shape from '../Shape';\n/**\n * Extends {@link Shape} to implement a rectangle shape.\n * This shape is registered under {@link mxConstants.SHAPE_RECTANGLE} in {@link cellRenderer}.\n * @class RectangleShape\n * @extends {Shape}\n */\nclass RectangleShape extends Shape {\n    constructor(bounds, fill, stroke, strokeWidth = 1) {\n        super();\n        this.bounds = bounds;\n        this.fill = fill;\n        this.stroke = stroke;\n        this.strokeWidth = strokeWidth;\n    }\n    /**\n     * Returns true for non-rounded, non-rotated shapes with no glass gradient.\n     */\n    isHtmlAllowed() {\n        let events = true;\n        if (this.style && this.style.pointerEvents != null) {\n            events = this.style.pointerEvents;\n        }\n        return (!this.isRounded &&\n            !this.glass &&\n            this.rotation === 0 &&\n            (events || this.fill !== NONE));\n    }\n    /**\n     * Generic background painting implementation.\n     */\n    paintBackground(c, x, y, w, h) {\n        let events = true;\n        if (this.style && this.style.pointerEvents != null) {\n            events = this.style.pointerEvents;\n        }\n        if (events || this.fill !== NONE || this.stroke !== NONE) {\n            if (!events && this.fill === NONE) {\n                c.pointerEvents = false;\n            }\n            if (this.isRounded) {\n                let r = 0;\n                if (this.style?.absoluteArcSize ?? false) {\n                    r = Math.min(w / 2, Math.min(h / 2, (this.style?.arcSize ?? LINE_ARCSIZE) / 2));\n                }\n                else {\n                    const f = (this.style?.arcSize ?? RECTANGLE_ROUNDING_FACTOR * 100) / 100;\n                    r = Math.min(w * f, h * f);\n                }\n                c.roundrect(x, y, w, h, r, r);\n            }\n            else {\n                c.rect(x, y, w, h);\n            }\n            c.fillAndStroke();\n        }\n    }\n    /**\n     * Adds roundable support.\n     */\n    isRoundable(c, x, y, w, h) {\n        return true;\n    }\n    /**\n     * Generic background painting implementation.\n     */\n    paintForeground(c, x, y, w, h) {\n        if (this.glass && !this.outline && this.fill !== NONE) {\n            this.paintGlassEffect(c, x, y, w, h, this.getArcSize(w + this.strokeWidth, h + this.strokeWidth));\n        }\n    }\n}\nexport default RectangleShape;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
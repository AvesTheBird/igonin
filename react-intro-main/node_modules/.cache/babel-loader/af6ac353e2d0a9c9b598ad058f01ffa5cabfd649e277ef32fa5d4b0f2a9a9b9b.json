{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport EventObject from '../event/EventObject';\nimport Point from '../geometry/Point';\nimport InternalEvent from '../event/InternalEvent';\n/**\n * Action to change the current root in a view.\n */\nclass CurrentRootChange {\n  constructor(view, root) {\n    this.view = view;\n    this.root = root;\n    this.previous = root;\n    this.isUp = root === null;\n    if (!this.isUp) {\n      let tmp = this.view.currentRoot;\n      while (tmp) {\n        if (tmp === root) {\n          this.isUp = true;\n          break;\n        }\n        tmp = tmp.getParent();\n      }\n    }\n  }\n  /**\n   * Changes the current root of the view.\n   */\n  execute() {\n    const tmp = this.view.currentRoot;\n    this.view.currentRoot = this.previous;\n    this.previous = tmp;\n    const translate = this.view.graph.getTranslateForRoot(this.view.currentRoot);\n    if (translate) {\n      this.view.translate = new Point(-translate.x, -translate.y);\n    }\n    if (this.isUp) {\n      this.view.clear(this.view.currentRoot, true, true);\n      this.view.validate(null);\n    } else {\n      this.view.refresh();\n    }\n    const name = this.isUp ? InternalEvent.UP : InternalEvent.DOWN;\n    this.view.fireEvent(new EventObject(name, {\n      root: this.view.currentRoot,\n      previous: this.previous\n    }));\n    this.isUp = !this.isUp;\n  }\n}\nexport default CurrentRootChange;","map":{"version":3,"names":["EventObject","Point","InternalEvent","CurrentRootChange","constructor","view","root","previous","isUp","tmp","currentRoot","getParent","execute","translate","graph","getTranslateForRoot","x","y","clear","validate","refresh","name","UP","DOWN","fireEvent"],"sources":["D:/OSPanel/domains/old/react/react-intro-main/node_modules/@maxgraph/core/dist/view/undoable_changes/CurrentRootChange.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport EventObject from '../event/EventObject';\nimport Point from '../geometry/Point';\nimport InternalEvent from '../event/InternalEvent';\n/**\n * Action to change the current root in a view.\n */\nclass CurrentRootChange {\n    constructor(view, root) {\n        this.view = view;\n        this.root = root;\n        this.previous = root;\n        this.isUp = root === null;\n        if (!this.isUp) {\n            let tmp = this.view.currentRoot;\n            while (tmp) {\n                if (tmp === root) {\n                    this.isUp = true;\n                    break;\n                }\n                tmp = tmp.getParent();\n            }\n        }\n    }\n    /**\n     * Changes the current root of the view.\n     */\n    execute() {\n        const tmp = this.view.currentRoot;\n        this.view.currentRoot = this.previous;\n        this.previous = tmp;\n        const translate = this.view.graph.getTranslateForRoot(this.view.currentRoot);\n        if (translate) {\n            this.view.translate = new Point(-translate.x, -translate.y);\n        }\n        if (this.isUp) {\n            this.view.clear(this.view.currentRoot, true, true);\n            this.view.validate(null);\n        }\n        else {\n            this.view.refresh();\n        }\n        const name = this.isUp ? InternalEvent.UP : InternalEvent.DOWN;\n        this.view.fireEvent(new EventObject(name, { root: this.view.currentRoot, previous: this.previous }));\n        this.isUp = !this.isUp;\n    }\n}\nexport default CurrentRootChange;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,aAAa,MAAM,wBAAwB;AAClD;AACA;AACA;AACA,MAAMC,iBAAiB,CAAC;EACpBC,WAAWA,CAACC,IAAI,EAAEC,IAAI,EAAE;IACpB,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,QAAQ,GAAGD,IAAI;IACpB,IAAI,CAACE,IAAI,GAAGF,IAAI,KAAK,IAAI;IACzB,IAAI,CAAC,IAAI,CAACE,IAAI,EAAE;MACZ,IAAIC,GAAG,GAAG,IAAI,CAACJ,IAAI,CAACK,WAAW;MAC/B,OAAOD,GAAG,EAAE;QACR,IAAIA,GAAG,KAAKH,IAAI,EAAE;UACd,IAAI,CAACE,IAAI,GAAG,IAAI;UAChB;QACJ;QACAC,GAAG,GAAGA,GAAG,CAACE,SAAS,CAAC,CAAC;MACzB;IACJ;EACJ;EACA;AACJ;AACA;EACIC,OAAOA,CAAA,EAAG;IACN,MAAMH,GAAG,GAAG,IAAI,CAACJ,IAAI,CAACK,WAAW;IACjC,IAAI,CAACL,IAAI,CAACK,WAAW,GAAG,IAAI,CAACH,QAAQ;IACrC,IAAI,CAACA,QAAQ,GAAGE,GAAG;IACnB,MAAMI,SAAS,GAAG,IAAI,CAACR,IAAI,CAACS,KAAK,CAACC,mBAAmB,CAAC,IAAI,CAACV,IAAI,CAACK,WAAW,CAAC;IAC5E,IAAIG,SAAS,EAAE;MACX,IAAI,CAACR,IAAI,CAACQ,SAAS,GAAG,IAAIZ,KAAK,CAAC,CAACY,SAAS,CAACG,CAAC,EAAE,CAACH,SAAS,CAACI,CAAC,CAAC;IAC/D;IACA,IAAI,IAAI,CAACT,IAAI,EAAE;MACX,IAAI,CAACH,IAAI,CAACa,KAAK,CAAC,IAAI,CAACb,IAAI,CAACK,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC;MAClD,IAAI,CAACL,IAAI,CAACc,QAAQ,CAAC,IAAI,CAAC;IAC5B,CAAC,MACI;MACD,IAAI,CAACd,IAAI,CAACe,OAAO,CAAC,CAAC;IACvB;IACA,MAAMC,IAAI,GAAG,IAAI,CAACb,IAAI,GAAGN,aAAa,CAACoB,EAAE,GAAGpB,aAAa,CAACqB,IAAI;IAC9D,IAAI,CAAClB,IAAI,CAACmB,SAAS,CAAC,IAAIxB,WAAW,CAACqB,IAAI,EAAE;MAAEf,IAAI,EAAE,IAAI,CAACD,IAAI,CAACK,WAAW;MAAEH,QAAQ,EAAE,IAAI,CAACA;IAAS,CAAC,CAAC,CAAC;IACpG,IAAI,CAACC,IAAI,GAAG,CAAC,IAAI,CAACA,IAAI;EAC1B;AACJ;AACA,eAAeL,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
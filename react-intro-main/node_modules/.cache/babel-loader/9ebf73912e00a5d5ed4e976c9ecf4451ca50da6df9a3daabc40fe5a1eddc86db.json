{"ast":null,"code":"var _jsxFileName = \"D:\\\\ospanel\\\\domains\\\\react\\\\react-intro-main\\\\src\\\\components\\\\SignalGraph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { renderWaveForm } from 'wavedrom';\nimport { parse } from 'vcd-parser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignalGraph = ({\n  vcdContent\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    if (vcdContent && containerRef.current) {\n      try {\n        const parsedData = parse(vcdContent);\n        const waveData = convertVCDToWaveDrom(parsedData);\n        renderWaveForm(waveData, containerRef.current);\n      } catch (error) {\n        console.error('Ошибка обработки VCD-файла:', error);\n      }\n    }\n  }, [vcdContent]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      backgroundColor: '#1e1e1e',\n      padding: '20px',\n      borderRadius: '10px',\n      border: '1px solid white',\n      marginTop: '20px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n_s(SignalGraph, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = SignalGraph;\nexport default SignalGraph;\nvar _c;\n$RefreshReg$(_c, \"SignalGraph\");","map":{"version":3,"names":["React","useEffect","useRef","renderWaveForm","parse","jsxDEV","_jsxDEV","SignalGraph","vcdContent","_s","containerRef","current","parsedData","waveData","convertVCDToWaveDrom","error","console","ref","style","backgroundColor","padding","borderRadius","border","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ospanel/domains/react/react-intro-main/src/components/SignalGraph.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { renderWaveForm } from 'wavedrom';\r\nimport { parse } from 'vcd-parser';\r\n\r\n\r\nconst SignalGraph = ({ vcdContent }) => {\r\n    const containerRef = useRef(null);\r\n  \r\n    useEffect(() => {\r\n      if (vcdContent && containerRef.current) {\r\n        try {\r\n          const parsedData = parse(vcdContent);\r\n          const waveData = convertVCDToWaveDrom(parsedData);\r\n          renderWaveForm(waveData, containerRef.current);\r\n        } catch (error) {\r\n          console.error('Ошибка обработки VCD-файла:', error);\r\n        }\r\n      }\r\n    }, [vcdContent]);\r\n  \r\n    return (\r\n      <div\r\n        ref={containerRef}\r\n        style={{\r\n          backgroundColor: '#1e1e1e',\r\n          padding: '20px',\r\n          borderRadius: '10px',\r\n          border: '1px solid white',\r\n          marginTop: '20px',\r\n        }}\r\n      ></div>\r\n    );\r\n  };\r\n  \r\n\r\nexport default SignalGraph;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,cAAc,QAAQ,UAAU;AACzC,SAASC,KAAK,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAMC,YAAY,GAAGR,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACd,IAAIO,UAAU,IAAIE,YAAY,CAACC,OAAO,EAAE;MACtC,IAAI;QACF,MAAMC,UAAU,GAAGR,KAAK,CAACI,UAAU,CAAC;QACpC,MAAMK,QAAQ,GAAGC,oBAAoB,CAACF,UAAU,CAAC;QACjDT,cAAc,CAACU,QAAQ,EAAEH,YAAY,CAACC,OAAO,CAAC;MAChD,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF;EACF,CAAC,EAAE,CAACP,UAAU,CAAC,CAAC;EAEhB,oBACEF,OAAA;IACEW,GAAG,EAAEP,YAAa;IAClBQ,KAAK,EAAE;MACLC,eAAe,EAAE,SAAS;MAC1BC,OAAO,EAAE,MAAM;MACfC,YAAY,EAAE,MAAM;MACpBC,MAAM,EAAE,iBAAiB;MACzBC,SAAS,EAAE;IACb;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAAClB,EAAA,CA3BEF,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\ospanel\\\\domains\\\\\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B open server\\\\old\\\\react\\\\react-intro-main\\\\src\\\\components\\\\Editor.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as monaco from 'monaco-editor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VHDLEditor = ({\n  id,\n  onCodeChange,\n  initialCode\n}) => {\n  _s();\n  useEffect(() => {\n    const editorInstance = monaco.editor.create(document.getElementById(id), {\n      value: initialCode,\n      // Изначальный код передаваемый из родительского компонента\n      language: 'vhdl',\n      theme: 'vs-dark',\n      automaticLayout: true\n    });\n\n    // Отслеживаем изменения в редакторе\n    const debounceChangeHandler = debounce(() => {\n      const code = editorInstance.getValue();\n      onCodeChange(code); // Передаем код в родительский компонент\n    }, 300); // Задержка в 300ms\n\n    editorInstance.onDidChangeModelContent(debounceChangeHandler);\n    return () => {\n      editorInstance.dispose(); // Очистка редактора при удалении компонента\n    };\n  }, [id, initialCode, onCodeChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    style: {\n      height: '200px',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n\n// Функция debounce, которая задерживает вызов\n_s(VHDLEditor, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = VHDLEditor;\nfunction debounce(func, wait) {\n  let timeout;\n  return function () {\n    const context = this;\n    const args = arguments;\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func.apply(context, args), wait);\n  };\n}\nconst CompilerConsole = ({\n  output\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"compiler-console\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u041A\\u043E\\u043D\\u0441\\u043E\\u043B\\u044C:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c2 = CompilerConsole;\nconst VHDLEditorWithCompiler = () => {\n  _s2();\n  // Состояния для каждого окна\n  const [architectureCode, setArchitectureCode] = useState(`-- Напишите архитектуру VHDL здесь`);\n  const [testbenchCode, setTestbenchCode] = useState(`-- Напишите код теста для VHDL здесь`);\n  const [output, setOutput] = useState('');\n\n  // Функция для компиляции кода\n  const compileCode = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/compile-vhdl', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          architectureCode,\n          testbenchCode\n        }) // Отправляем оба кода\n      });\n      const result = await response.text();\n      setOutput(result); // Выводим результат компиляции\n    } catch (error) {\n      setOutput('Ошибка компиляции: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"content-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0410\\u0440\\u0445\\u0438\\u0442\\u0435\\u043A\\u0442\\u0443\\u0440\\u0430:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VHDLEditor, {\n      id: \"vhdl-editor\" // id для архитектуры\n      ,\n      onCodeChange: code => setArchitectureCode(code),\n      initialCode: architectureCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0439 \\u0441\\u0442\\u0435\\u043D\\u0434:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"testbench-textarea\" // id для тестового стенда\n      ,\n      value: testbenchCode,\n      onChange: e => setTestbenchCode(e.target.value),\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u0434 \\u0442\\u0435\\u0441\\u0442\\u0430...\",\n      style: {\n        width: '100%',\n        height: '150px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"compile-button\",\n      onClick: compileCode,\n      children: \"\\u041A\\u043E\\u043C\\u043F\\u0438\\u043B\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompilerConsole, {\n      output: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s2(VHDLEditorWithCompiler, \"EsCVJbqnCE/vY6FxTQ2iFkUMmJQ=\");\n_c3 = VHDLEditorWithCompiler;\nexport default VHDLEditorWithCompiler;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"VHDLEditor\");\n$RefreshReg$(_c2, \"CompilerConsole\");\n$RefreshReg$(_c3, \"VHDLEditorWithCompiler\");","map":{"version":3,"names":["React","useState","useEffect","monaco","jsxDEV","_jsxDEV","VHDLEditor","id","onCodeChange","initialCode","_s","editorInstance","editor","create","document","getElementById","value","language","theme","automaticLayout","debounceChangeHandler","debounce","code","getValue","onDidChangeModelContent","dispose","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","func","wait","timeout","context","args","arguments","clearTimeout","setTimeout","apply","CompilerConsole","output","className","children","_c2","VHDLEditorWithCompiler","_s2","architectureCode","setArchitectureCode","testbenchCode","setTestbenchCode","setOutput","compileCode","response","fetch","method","headers","body","JSON","stringify","result","text","error","message","onChange","e","target","placeholder","onClick","_c3","$RefreshReg$"],"sources":["D:/ospanel/domains/проекты open server/old/react/react-intro-main/src/components/Editor.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as monaco from 'monaco-editor';\r\n\r\nconst VHDLEditor = ({ id, onCodeChange, initialCode }) => {\r\n  useEffect(() => {\r\n    const editorInstance = monaco.editor.create(document.getElementById(id), {\r\n      value: initialCode, // Изначальный код передаваемый из родительского компонента\r\n      language: 'vhdl',\r\n      theme: 'vs-dark',\r\n      automaticLayout: true,\r\n    });\r\n\r\n    // Отслеживаем изменения в редакторе\r\n    const debounceChangeHandler = debounce(() => {\r\n      const code = editorInstance.getValue();\r\n      onCodeChange(code); // Передаем код в родительский компонент\r\n    }, 300); // Задержка в 300ms\r\n\r\n    editorInstance.onDidChangeModelContent(debounceChangeHandler);\r\n\r\n    return () => {\r\n      editorInstance.dispose(); // Очистка редактора при удалении компонента\r\n    };\r\n  }, [id, initialCode, onCodeChange]);\r\n\r\n  return <div id={id} style={{ height: '200px', width: '100%' }}></div>;\r\n};\r\n\r\n// Функция debounce, которая задерживает вызов\r\nfunction debounce(func, wait) {\r\n  let timeout;\r\n  return function() {\r\n    const context = this;\r\n    const args = arguments;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => func.apply(context, args), wait);\r\n  };\r\n}\r\n\r\nconst CompilerConsole = ({ output }) => {\r\n  return (\r\n    <div className=\"compiler-console\">\r\n      <h3>Консоль:</h3>\r\n      <pre>{output}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst VHDLEditorWithCompiler = () => {\r\n  // Состояния для каждого окна\r\n  const [architectureCode, setArchitectureCode] = useState(`-- Напишите архитектуру VHDL здесь`);\r\n  const [testbenchCode, setTestbenchCode] = useState(`-- Напишите код теста для VHDL здесь`);\r\n  const [output, setOutput] = useState('');\r\n\r\n  // Функция для компиляции кода\r\n  const compileCode = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/compile-vhdl', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ architectureCode, testbenchCode }), // Отправляем оба кода\r\n      });\r\n  \r\n      const result = await response.text();\r\n      setOutput(result); // Выводим результат компиляции\r\n    } catch (error) {\r\n      setOutput('Ошибка компиляции: ' + error.message);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div id=\"content-container\">\r\n      {/* Архитектура */}\r\n      <h3>Архитектура:</h3>\r\n      <VHDLEditor\r\n        id=\"vhdl-editor\" // id для архитектуры\r\n        onCodeChange={(code) => setArchitectureCode(code)}\r\n        initialCode={architectureCode}\r\n      />\r\n\r\n      {/* Тестовый стенд */}\r\n      <h3>Тестовый стенд:</h3>\r\n      <textarea\r\n        id=\"testbench-textarea\" // id для тестового стенда\r\n        value={testbenchCode}\r\n        onChange={(e) => setTestbenchCode(e.target.value)}\r\n        placeholder=\"Введите код теста...\"\r\n        style={{ width: '100%', height: '150px' }}\r\n      />\r\n\r\n      {/* Кнопка для компиляции */}\r\n      <button id=\"compile-button\" onClick={compileCode}>\r\n        Компилировать\r\n      </button>\r\n\r\n      {/* Консоль */}\r\n      <CompilerConsole output={output} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VHDLEditorWithCompiler;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
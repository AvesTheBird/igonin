{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{domUtils,styleUtils,mathUtils,cloneUtils,eventUtils,Graph,InternalEvent,RubberBandHandler,ConnectionHandler,ConnectionConstraint,Point,CylinderShape,CellRenderer,DomHelpers,EdgeStyle,Rectangle,EdgeHandler,StyleRegistry,EdgeSegmentHandler,UndoManager,CellEditorHandler,ConstraintHandler,Guide,ImageBox,GraphView,SelectionHandler,PanningHandler,TooltipHandler,SelectionCellsHandler,PopupMenuHandler,xmlUtils,Codec}from'@maxgraph/core';import{contextMenuTypes,contextMenuValues,globalTypes,globalValues,rubberBandTypes,rubberBandValues}from'./shared/args.js';import{createGraphContainer}from'./shared/configure.js';// style required by RubberBand\nimport'@maxgraph/core/css/common.css';import{jsx as _jsx}from\"react/jsx-runtime\";function YourComponent(){const graphContainerRef=useRef(null);useEffect(()=>{const graphContainer=graphContainerRef.current;const parentContainer=document.createElement('div');const container=createGraphContainer({imageUrl:'images/grid.gif'});parentContainer.appendChild(container);// Changes some default colors\n// TODO Find a way of modifying globally or setting locally! See https://github.com/maxGraph/maxGraph/issues/192\n//constants.SHADOWCOLOR = '#C0C0C0';\nlet joinNodeSize=7;let strokeWidth=2;class MyCustomGraph extends Graph{constructor(){super(...arguments);this.resetEdgesOnConnect=false;}createEdgeSegmentHandler(state){return new MyCustomEdgeSegmentHandler(state);}createGraphView(){return new MyCustomGraphView(this);}createEdgeHandler(state){return new MyCustomEdgeHandler(state);}createHandler(state){let result=null;if(state!=null){if(state.cell.isEdge()){let style=this.view.getEdgeStyle(state);if(style==EdgeStyle.WireConnector){return new EdgeSegmentHandler(state);}}}return super.createHandler.apply(this,arguments);}// Adds oval markers for edge-to-edge connections.\ngetCellStyle(cell){let style=super.getCellStyle.apply(this,arguments);if(style!=null&&cell!==null&&cell!==void 0&&cell.isEdge()){var _cell$getTerminal,_cell$getTerminal2;style=cloneUtils.clone(style);if((_cell$getTerminal=cell.getTerminal(true))!==null&&_cell$getTerminal!==void 0&&_cell$getTerminal.isEdge()){style.startArrow='oval';}if((_cell$getTerminal2=cell.getTerminal(false))!==null&&_cell$getTerminal2!==void 0&&_cell$getTerminal2.isEdge()){style.endArrow='oval';}}return style;}getTooltipForCell(cell){let tip='';if(cell!=null){let src=cell.getTerminal(true);if(src!=null){tip+=this.getTooltipForCell(src)+' ';}let parent=cell.getParent();if(parent.isVertex()){tip+=this.getTooltipForCell(parent)+'.';}tip+=super.getTooltipForCell.apply(this,arguments);let trg=cell.getTerminal(false);if(trg!=null){tip+=' '+this.getTooltipForCell(trg);}}return tip;}// Alternative solution for implementing connection points without child cells.\n// This can be extended as shown in portrefs.html example to allow for per-port\n// incoming/outgoing direction.\ngetAllConnectionConstraints(terminal){let geo=terminal!=null?terminal.cell.getGeometry():null;if((geo!=null?!geo.relative:false)&&terminal.cell.isVertex()&&terminal.cell.getChildCount()===0){return[new ConnectionConstraint(new Point(0,0.5),false),new ConnectionConstraint(new Point(1,0.5),false)];}return null;}}// FIXME: Provide means to make EdgeHandler and ConnectionHandler instantiate this subclass!\nclass MyCustomConstraintHandler extends ConstraintHandler{constructor(){super(...arguments);// Replaces the port image\nthis.pointImage=new ImageBox('images/dot.gif',10,10);}}class MyCustomGuide extends Guide{// Alt disables guides\nisEnabledForEvent(evt){return!eventUtils.isAltDown(evt);}}class MyCustomEdgeHandler extends EdgeHandler{constructor(){super(...arguments);// Enables snapping waypoints to terminals\nthis.snapToTerminals=true;}isConnectableCell(cell){return graph.getPlugin('ConnectionHandler').isConnectableCell(cell);}connect(edge,terminal,isSource,isClone,me){let result=null;let model=this.graph.getDataModel();let parent=model.getParent(edge);model.beginUpdate();try{result=super.connect.apply(this,arguments);let geo=model.getGeometry(result);if(geo!=null){geo=geo.clone();let pt=null;if(terminal&&terminal.isEdge){if(terminal.isEdge()){pt=this.abspoints[this.isSource?0:this.abspoints.length-1];pt.x=pt.x/this.graph.view.scale-this.graph.view.translate.x;pt.y=pt.y/this.graph.view.scale-this.graph.view.translate.y;let pstate=this.graph.getView().getState(edge.getParent());if(pstate!=null){pt.x-=pstate.origin.x;pt.y-=pstate.origin.y;}pt.x-=this.graph.panDx/this.graph.view.scale;pt.y-=this.graph.panDy/this.graph.view.scale;}}geo.setTerminalPoint(pt,isSource);model.setGeometry(edge,geo);}}finally{model.endUpdate();}return result;}createMarker(){let marker=super.createMarker.apply(this,arguments);// Adds in-place highlighting when reconnecting existing edges\nmarker.highlight.highlight=this.graph.getPlugin('ConnectionHandler').marker.highlight.highlight;return marker;}}// Switch for black background and bright styles\nlet invert=false;let MyCustomCellEditorHandler;if(invert){container.style.backgroundColor='black';// White in-place editor text color\nMyCustomCellEditorHandler=class extends CellEditorHandler{startEditing(cell,trigger){super.startEditing.apply(this,arguments);if(this.textarea!=null){this.textarea.style.color='#FFFFFF';}}};}else{MyCustomCellEditorHandler=CellEditorHandler;}class MyCustomSelectionHandler extends SelectionHandler{constructor(){super(...arguments);this.previewColor=invert?'white':'black';// Enables guides\nthis.guidesEnabled=true;}createGuide(){return new MyCustomGuide(this.graph,this.getGuideStates());}}class MyCustomPanningHandler extends PanningHandler{// Panning handler consumed right click so this must be\n// disabled if right click should stop connection handler.\nisPopupTrigger(){return false;}}class MyCustomConnectionHandler extends ConnectionHandler{constructor(){super(...arguments);// If connect preview is not moved away then getCellAt is used to detect the cell under\n// the mouse if the mouse is over the preview shape in IE (no event transparency), ie.\n// the built-in hit-detection of the HTML document will not be used in this case.\nthis.movePreviewAway=false;this.waypointsEnabled=true;}// Starts connections on the background in wire-mode\nisStartEvent(me){return checkbox.checked||super.isStartEvent.apply(this,arguments);}// Avoids any connections for gestures within tolerance except when in wire-mode\n// or when over a port\nmouseUp(sender,me){if(this.first!=null&&this.previous!=null){let point=styleUtils.convertPoint(this.graph.container,me.getX(),me.getY());let dx=Math.abs(point.x-this.first.x);let dy=Math.abs(point.y-this.first.y);if(dx<this.graph.tolerance&&dy<this.graph.tolerance){// Selects edges in non-wire mode for single clicks, but starts\n// connecting for non-edges regardless of wire-mode\nif(!checkbox.checked&&this.previous.cell.isEdge()){this.reset();}return;}}super.mouseUp.apply(this,arguments);}// Overrides methods to preview and create new edges.\n// Sets source terminal point for edge-to-edge connections.\ncreateEdgeState(me){let edge=this.graph.createEdge();if(this.sourceConstraint!=null&&this.previous!=null){edge.style='exitX'+'='+this.sourceConstraint.point.x+';'+'exitY'+'='+this.sourceConstraint.point.y+';';}else if(me.getCell().isEdge()){let scale=this.graph.view.scale;let tr=this.graph.view.translate;let pt=new Point(this.graph.snap(me.getGraphX()/scale)-tr.x,this.graph.snap(me.getGraphY()/scale)-tr.y);edge.geometry.setTerminalPoint(pt,true);}return this.graph.view.createState(edge);}// Uses right mouse button to create edges on background (see also: lines 67 ff)\nisStopEvent(me){return me.getState()!=null||eventUtils.isRightMouseButton(me.getEvent());}// Updates target terminal point for edge-to-edge connections.\nupdateCurrentState(me,point){super.updateCurrentState.apply(this,arguments);if(this.edgeState!=null){this.edgeState.cell.geometry.setTerminalPoint(null,false);if(this.shape!=null&&this.currentState!=null&&this.currentState.cell.isEdge()){let scale=this.graph.view.scale;let tr=this.graph.view.translate;let pt=new Point(this.graph.snap(me.getGraphX()/scale)-tr.x,this.graph.snap(me.getGraphY()/scale)-tr.y);this.edgeState.cell.geometry.setTerminalPoint(pt,false);}}}// Adds in-place highlighting for complete cell area (no hotspot).\ncreateMarker(){let marker=super.createMarker.apply(this,arguments);// Uses complete area of cell for new connections (no hotspot)\nmarker.intersects=function(state,evt){return true;};// Adds in-place highlighting\n//const mxCellHighlightHighlight = mxCellHighlight.prototype.highlight;\nmarker.highlight.highlight=function(state){// TODO: Should this be a subclass of marker rather than assigning directly?\nif(this.state!=state){if(this.state!=null){this.state.style=this.lastStyle;// Workaround for shape using current stroke width if no strokewidth defined\nthis.state.style.strokeWidth=this.state.style.strokeWidth||'1';this.state.style.strokeColor=this.state.style.strokeColor||'none';if(this.state.shape!=null){this.state.view.graph.cellRenderer.configureShape(this.state);this.state.shape.redraw();}}if(state!=null){this.lastStyle=state.style;state.style=cloneUtils.clone(state.style);state.style.strokeColor='#00ff00';state.style.strokeWidth='3';if(state.shape!=null){state.view.graph.cellRenderer.configureShape(state);state.shape.redraw();}}this.state=state;}};return marker;}// Makes sure non-relative cells can only be connected via constraints\nisConnectableCell(cell){if(cell.isEdge()){return true;}else{let geo=cell!=null?cell.getGeometry():null;return geo!=null?geo.relative:false;}}}// Updates connection points before the routing is called.\nclass MyCustomGraphView extends GraphView{// Computes the position of edge to edge connection points.\nupdateFixedTerminalPoint(edge,terminal,source,constraint){let pt=null;if(constraint!=null){pt=this.graph.getConnectionPoint(terminal,constraint);}if(source){edge.sourceSegment=null;}else{edge.targetSegment=null;}if(pt==null){let s=this.scale;let tr=this.translate;let orig=edge.origin;let geo=edge.cell.getGeometry();pt=geo.getTerminalPoint(source);// Computes edge-to-edge connection point\nif(pt!=null){pt=new Point(s*(tr.x+pt.x+orig.x),s*(tr.y+pt.y+orig.y));// Finds nearest segment on edge and computes intersection\nif(terminal!=null&&terminal.absolutePoints!=null){let seg=mathUtils.findNearestSegment(terminal,pt.x,pt.y);// Finds orientation of the segment\nlet p0=terminal.absolutePoints[seg];let pe=terminal.absolutePoints[seg+1];let horizontal=p0.x-pe.x===0;// Stores the segment in the edge state\nlet key=source?'sourceConstraint':'targetConstraint';let value=horizontal?'horizontal':'vertical';edge.style[key]=value;// Keeps the coordinate within the segment bounds\nif(horizontal){pt.x=p0.x;pt.y=Math.min(pt.y,Math.max(p0.y,pe.y));pt.y=Math.max(pt.y,Math.min(p0.y,pe.y));}else{pt.y=p0.y;pt.x=Math.min(pt.x,Math.max(p0.x,pe.x));pt.x=Math.max(pt.x,Math.min(p0.x,pe.x));}}}// Computes constraint connection points on vertices and ports\nelse if(terminal!=null&&terminal.cell.geometry.relative){pt=new Point(this.getRoutingCenterX(terminal),this.getRoutingCenterY(terminal));}// Snaps point to grid\n/*if (pt != null)\r\n        {\r\n          let tr = this.graph.view.translate;\r\n          let s = this.graph.view.scale;\r\n\r\n          pt.x = (this.graph.snap(pt.x / s - tr.x) + tr.x) * s;\r\n          pt.y = (this.graph.snap(pt.y / s - tr.y) + tr.y) * s;\r\n        }*/}edge.setAbsoluteTerminalPoint(pt,source);}}// Updates the terminal and control points in the cloned preview.\nclass MyCustomEdgeSegmentHandler extends EdgeSegmentHandler{clonePreviewState(point,terminal){let clone=super.clonePreviewState.apply(this,arguments);clone.cell=clone.cell.clone();if(this.isSource||this.isTarget){clone.cell.geometry=clone.cell.geometry.clone();// Sets the terminal point of an edge if we're moving one of the endpoints\nif(clone.cell.isEdge()){// TODO: Only set this if the target or source terminal is an edge\nclone.cell.geometry.setTerminalPoint(point,this.isSource);}else{clone.cell.geometry.setTerminalPoint(null,this.isSource);}}return clone;}}// Imlements a custom resistor shape. Direction currently ignored here.\nclass ResistorShape extends CylinderShape{constructor(){// TODO: The original didn't seem to call the super\nsuper(null,null,null,null);}redrawPath(path,x,y,w,h,isForeground){let dx=w/16;if(isForeground){path.moveTo(0,h/2);path.lineTo(2*dx,h/2);path.lineTo(3*dx,0);path.lineTo(5*dx,h);path.lineTo(7*dx,0);path.lineTo(9*dx,h);path.lineTo(11*dx,0);path.lineTo(13*dx,h);path.lineTo(14*dx,h/2);path.lineTo(16*dx,h/2);path.end();}}}CellRenderer.registerShape('resistor',ResistorShape);// Imlements a custom resistor shape. Direction currently ignored here.\nEdgeStyle.WireConnector=function(state,source,target,hints,result){// Creates array of all way- and terminalpoints\nlet pts=state.absolutePoints;let horizontal=true;let hint=null;// Gets the initial connection from the source terminal or edge\nif(source!=null&&source.cell.isEdge()){horizontal=state.style.sourceConstraint=='horizontal';}else if(source!=null){horizontal=source.style.portConstraint!='vertical';// Checks the direction of the shape and rotates\nlet direction=source.style.direction;if(direction=='north'||direction=='south'){horizontal=!horizontal;}}// Adds the first point\n// TODO: Should move along connected segment\nlet pt=pts[0];if(pt==null&&source!=null){pt=new Point(state.view.getRoutingCenterX(source),state.view.getRoutingCenterY(source));}else if(pt!=null){pt=pt.clone();}let first=pt;// Adds the waypoints\nif(hints!=null&&hints.length>0){// FIXME: First segment not movable\n/*hint = state.view.transformControlPoint(state, hints[0]);\r\n      MaxLog.show();\r\n      MaxLog.debug(hints.length,'hints0.y='+hint.y, pt.y)\r\n\r\n      if (horizontal && Math.floor(hint.y) != Math.floor(pt.y))\r\n      {\r\n        MaxLog.show();\r\n        MaxLog.debug('add waypoint');\r\n\r\n        pt = new Point(pt.x, hint.y);\r\n        result.push(pt);\r\n        pt = pt.clone();\r\n        //horizontal = !horizontal;\r\n      }*/for(let i=0;i<hints.length;i++){horizontal=!horizontal;hint=state.view.transformControlPoint(state,hints[i]);if(horizontal){if(pt.y!==hint.y){pt.y=hint.y;result.push(pt.clone());}}else if(pt.x!==hint.x){pt.x=hint.x;result.push(pt.clone());}}}else{hint=pt;}// Adds the last point\npt=pts[pts.length-1];// TODO: Should move along connected segment\nif(pt==null&&target!=null){pt=new Point(state.view.getRoutingCenterX(target),state.view.getRoutingCenterY(target));}if(horizontal){if(pt.y!==hint.y&&first.x!==pt.x){result.push(new Point(pt.x,hint.y));}}else if(pt.x!==hint.x&&first.y!==pt.y){result.push(new Point(hint.x,pt.y));}};StyleRegistry.putValue('wireEdgeStyle',EdgeStyle.WireConnector);let graph=new MyCustomGraph(container,null,[MyCustomCellEditorHandler,TooltipHandler,SelectionCellsHandler,PopupMenuHandler,MyCustomConnectionHandler,MyCustomSelectionHandler,MyCustomPanningHandler]);let labelBackground=invert?'#000000':'#FFFFFF';let fontColor=invert?'#FFFFFF':'#000000';let strokeColor=invert?'#C0C0C0':'#000000';let fillColor=invert?'none':'#FFFFFF';graph.view.scale=1;graph.setPanning(true);graph.setConnectable(true);graph.setConnectableEdges(true);graph.setDisconnectOnMove(false);graph.foldingEnabled=false;//Maximum size\ngraph.maximumGraphBounds=new Rectangle(0,0,800,600);graph.border=50;// Enables return key to stop editing (use shift-enter for newlines)\ngraph.setEnterStopsCellEditing(true);// Adds rubberband selection\nnew RubberBandHandler(graph);// Adds a special tooltip for edges\ngraph.setTooltips(true);let style=graph.getStylesheet().getDefaultEdgeStyle();delete style.endArrow;style.strokeColor=strokeColor;style.labelBackgroundColor=labelBackground;style.edgeStyle='wireEdgeStyle';style.fontColor=fontColor;style.fontSize='9';style.movable='0';style.strokeWidth=strokeWidth;//style.rounded = '1';\n// Sets join node size\nstyle.startSize=joinNodeSize;style.endSize=joinNodeSize;style=graph.getStylesheet().getDefaultVertexStyle();style.gradientDirection='south';//style.gradientColor = '#909090';\nstyle.strokeColor=strokeColor;//style.fillColor = '#e0e0e0';\nstyle.fillColor='none';style.fontColor=fontColor;style.fontStyle='1';style.fontSize='12';style.resizable='0';style.rounded='1';style.strokeWidth=strokeWidth;// инородное дерьмо\nconst buttons=document.querySelectorAll('.bth');const update=event=>{var parent=graph.getDefaultParent();var doc=xmlUtils.createXmlDocument();graph.batchUpdate(()=>{if(event.target.textContent=='not x'){//прямоугольник\nvar v1=graph.insertVertex(parent,null,'',80,40,40,80,'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor='+fillColor);v1.setConnectable(false);//выходы прямоугольника\nvar v11=graph.insertVertex(v1,null,'X',0,0,10,16,{shape:'line',align:'left',verticalAlign:'middle',fontSize:10,routingCenterX:-0.5,spacingLeft:12,fontColor,strokeColor});v11.geometry.relative=true;v11.geometry.offset=new Point(-v11.geometry.width,12);var v12=v11.clone();v12.value='Y';v12.geometry.offset=new Point(-v11.geometry.width,52);v1.insert(v12);var v15=v11.clone();v15.value='';v15.geometry.x=1;v15.style={shape:'line',align:'right',verticalAlign:'middle',fontSize:10,routingCenterX:0.5,spacingRight:12,fontColor:fontColor,strokeColor:strokeColor};v15.geometry.offset=new Point(5,32);v1.insert(v15);var v16=graph.insertVertex(v1,null,'○',0,0,0,0,{shape:'line',align:'right',verticalAlign:'middle',fontSize:30,routingCenterX:0.5,spacingLeft:6,fontColor:fontColor,strokeColor:strokeColor});v16.geometry.x=1;v16.geometry.offset=new Point(49,34);v1.insert(v16);}if(event.target.textContent=='x * y'){//прямоугольник\nvar v1=graph.insertVertex(parent,null,'',180,40,40,80,{verticalLabelPosition:'top',verticalAlign:'bottom',shadow:1,fillColor:fillColor});v1.setConnectable(false);//выходы прямоугольника\nvar v11=graph.insertVertex(v1,null,'X',0,0,10,16,{shape:'line',align:'left',verticalAlign:'middle',fontSize:10,routingCenterX:-0.5,spacingLeft:12,fontColor:fontColor,strokeColor:strokeColor});v11.geometry.relative=true;v11.geometry.offset=new Point(-v11.geometry.width,12);var v12=v11.clone();v12.value='Y';v12.geometry.offset=new Point(-v11.geometry.width,52);v1.insert(v12);var v15=v11.clone();v15.value='';v15.geometry.x=1;v15.style={shape:'line',align:'right',verticalAlign:'middle',fontSize:10,routingCenterX:0.5,spacingRight:12,fontColor:fontColor,strokeColor:strokeColor};v15.geometry.offset=new Point(0,32);v1.insert(v15);var v16=graph.insertVertex(v1,null,'&',0,0,0,0,{shape:'line',align:'right',verticalAlign:'middle',fontSize:20,routingCenterX:0.5,spacingLeft:6,fontColor:fontColor,strokeColor:strokeColor});v16.geometry.x=1;v16.geometry.offset=new Point(28.5,37);v1.insert(v16);}if(event.target.textContent=='x + y'){//прямоугольник\nvar v1=graph.insertVertex(parent,null,'',250,40,40,80,{verticalLabelPosition:'top',verticalAlign:'bottom',shadow:1,fillColor:fillColor});v1.setConnectable(false);//выходы прямоугольника\nvar v11=graph.insertVertex(v1,null,'X',0,0,10,16,{shape:'line',align:'left',verticalAlign:'middle',fontSize:10,routingCenterX:-0.5,spacingLeft:12,fontColor:fontColor,strokeColor:strokeColor});v11.geometry.relative=true;v11.geometry.offset=new Point(-v11.geometry.width,12);var v12=v11.clone();v12.value='Y';v12.geometry.offset=new Point(-v11.geometry.width,52);v1.insert(v12);var v15=v11.clone();v15.value='';v15.geometry.x=1;v15.style={shape:'line',align:'right',verticalAlign:'middle',fontSize:10,routingCenterX:0.5,spacingRight:12,fontColor:fontColor,strokeColor:strokeColor};v15.geometry.offset=new Point(0,32);v1.insert(v15);var v16=graph.insertVertex(v1,null,'|',0,0,0,0,{shape:'line',align:'right',verticalAlign:'middle',fontSize:20,routingCenterX:0.5,spacingLeft:6,fontColor:fontColor,strokeColor:strokeColor});v16.geometry.x=1;v16.geometry.offset=new Point(24,37);v1.insert(v16);}if(event.target.textContent=='x == y'){//прямоугольник\nvar v1=graph.insertVertex(parent,null,'',180,140,40,80,{verticalLabelPosition:'top',verticalAlign:'bottom',shadow:1,fillColor:fillColor});v1.setConnectable(false);//выходы прямоугольника\nvar v11=graph.insertVertex(v1,null,'X',0,0,10,16,{shape:'line',align:'left',verticalAlign:'middle',fontSize:10,routingCenterX:-0.5,spacingLeft:12,fontColor:fontColor,strokeColor:strokeColor});v11.geometry.relative=true;v11.geometry.offset=new Point(-v11.geometry.width,12);var v12=v11.clone();v12.value='Y';v12.geometry.offset=new Point(-v11.geometry.width,52);v1.insert(v12);var v15=v11.clone();v15.value='';v15.geometry.x=1;v15.style={shape:'line',align:'right',verticalAlign:'middle',fontSize:10,routingCenterX:0.5,spacingRight:12,fontColor:fontColor,strokeColor:strokeColor};v15.geometry.offset=new Point(0,32);v1.insert(v15);var v16=graph.insertVertex(v1,null,'==',0,0,0,0,{shape:'line',align:'right',verticalAlign:'middle',fontSize:15,routingCenterX:0.5,spacingLeft:6,fontColor:fontColor,strokeColor:strokeColor});v16.geometry.x=1;v16.geometry.offset=new Point(30,38);v1.insert(v16);}if(event.target.textContent=='x => y'){//прямоугольник\nvar v1=graph.insertVertex(parent,null,'',80,140,40,80,{verticalLabelPosition:'top',verticalAlign:'bottom',shadow:1,fillColor:fillColor});v1.setConnectable(false);//выходы прямоугольника\nvar v11=graph.insertVertex(v1,null,'',0,0,14,16,{shape:'line',align:'left',verticalAlign:'middle',fontSize:10,routingCenterX:-0.5,spacingLeft:12,fontColor:fontColor,strokeColor:strokeColor});v11.geometry.relative=true;v11.geometry.offset=new Point(-v11.geometry.width,12);var v12=v11.clone();v12.value='';v12.geometry.offset=new Point(-v11.geometry.width,52);v1.insert(v12);var v15=v11.clone();v15.value='';v15.geometry.x=1;v15.style={shape:'line',align:'right',verticalAlign:'middle',fontSize:10,routingCenterX:0.5,spacingRight:12,fontColor:fontColor,strokeColor:strokeColor};v15.geometry.offset=new Point(0,32);v1.insert(v15);var v16=graph.insertVertex(v1,null,'○',0,0,0,0,{shape:'line',align:'right',verticalAlign:'middle',fontSize:25,routingCenterX:0.5,spacingLeft:6,fontColor:fontColor,strokeColor:strokeColor});v16.geometry.x=1;v16.geometry.offset=new Point(8,15);v1.insert(v16);var v17=graph.insertVertex(v1,null,'X',0,0,0,0,{shape:'line',align:'right',verticalAlign:'middle',fontSize:10,routingCenterX:0.5,spacingLeft:6,fontColor:fontColor,strokeColor:strokeColor});v17.geometry.x=1;v17.geometry.offset=new Point(14,20);v1.insert(v17);var v18=graph.insertVertex(v1,null,'Y',0,0,0,0,{shape:'line',align:'right',verticalAlign:'middle',fontSize:10,routingCenterX:0.5,spacingLeft:6,fontColor:fontColor,strokeColor:strokeColor});v18.geometry.x=1;v18.geometry.offset=new Point(14,59);v1.insert(v18);}});};buttons.forEach(button=>{button.addEventListener('click',update);});document.body.appendChild(DomHelpers.button('View XML',function(){var encoder=new Codec();var node=encoder.encode(graph.getDataModel());popup(getPrettyXml(node),true);}));var parent=graph.getDefaultParent();var doc=xmlUtils.createXmlDocument();document.body.appendChild(DomHelpers.button('полусумматор',function(){var parent=graph.getDefaultParent();var doc=xmlUtils.createXmlDocument();graph.batchUpdate(()=>{var v1=graph.insertVertex(parent,null,'',170,110,40,80,'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor='+fillColor);v1.setConnectable(false);var v11=graph.insertVertex(v1,null,'X',0,0,10,16,'shape=line;align=left;verticalAlign=middle;fontSize=10;routingCenterX=-0.5;'+'spacingLeft=12;fontColor='+fontColor+';strokeColor='+strokeColor);v11.geometry.relative=true;v11.geometry.offset=new Point(-v11.geometry.width,12);var v12=v11.clone();v12.value='Y';v12.geometry.offset=new Point(-v11.geometry.width,52);v1.insert(v12);var v15=v11.clone();v15.value='';v15.geometry.x=1;v15.style='shape=line;align=right;verticalAlign=middle;fontSize=10;routingCenterX=0.5;'+'spacingRight=12;fontColor='+fontColor+';strokeColor='+strokeColor;v15.geometry.offset=new Point(0,32);v1.insert(v15);var v16=graph.insertVertex(v1,null,'○',49,34,0,0,'shape=line;align=right;verticalAlign=middle;fontSize=30;routingCenterX=0.5;'+'spacingLeft=6;fontColor='+fontColor+';strokeColor='+strokeColor);v16.geometry.x=1;v16.geometry.offset=new Point(49,0);v1.insert(v16);//выходы прямоугольника\nvar v1=graph.insertVertex(parent,null,'',170,200,40,80,'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor='+fillColor);v1.setConnectable(false);var v11=graph.insertVertex(v1,null,'X',0,0,10,16,'shape=line;align=left;verticalAlign=middle;fontSize=10;routingCenterX=-0.5;'+'spacingLeft=12;fontColor='+fontColor+';strokeColor='+strokeColor);v11.geometry.relative=true;v11.geometry.offset=new Point(-v11.geometry.width,12);var v12=v11.clone();v12.value='Y';v12.geometry.offset=new Point(-v11.geometry.width,52);v1.insert(v12);var v15=v11.clone();v15.value='';v15.geometry.x=1;v15.style='shape=line;align=right;verticalAlign=middle;fontSize=10;routingCenterX=0.5;'+'spacingRight=12;fontColor='+fontColor+';strokeColor='+strokeColor;v15.geometry.offset=new Point(0,32);v1.insert(v15);var v16=graph.insertVertex(v1,null,'○',49,34,0,0,'shape=line;align=right;verticalAlign=middle;fontSize=30;routingCenterX=0.5;'+'spacingLeft=6;fontColor='+fontColor+';strokeColor='+strokeColor);v16.geometry.x=1;v16.geometry.offset=new Point(49,0);v1.insert(v16);//выходы прямоугольника\nvar v1=graph.insertVertex(parent,null,'',310,70,40,80,'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor='+fillColor);v1.setConnectable(false);var v11=graph.insertVertex(v1,null,'X',0,0,10,16,'shape=line;align=left;verticalAlign=middle;fontSize=10;routingCenterX=-0.5;'+'spacingLeft=12;fontColor='+fontColor+';strokeColor='+strokeColor);v11.geometry.relative=true;v11.geometry.offset=new Point(-v11.geometry.width,12);var v12=v11.clone();v12.value='Y';v12.geometry.offset=new Point(-v11.geometry.width,52);v1.insert(v12);var v15=v11.clone();v15.value='';v15.geometry.x=1;v15.style='shape=line;align=right;verticalAlign=middle;fontSize=10;routingCenterX=0.5;'+'spacingRight=12;fontColor='+fontColor+';strokeColor='+strokeColor;v15.geometry.offset=new Point(0,32);v1.insert(v15);var v16=graph.insertVertex(v1,null,'&',49,38,0,0,'shape=line;align=right;verticalAlign=middle;fontSize=20;routingCenterX=0.5;'+'spacingLeft=6;fontColor='+fontColor+';strokeColor='+strokeColor);v16.geometry.x=1;v16.geometry.offset=new Point(49,0);v1.insert(v16);//выходы прямоугольника\nvar v1=graph.insertVertex(parent,null,'',310,320,40,80,'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor='+fillColor);v1.setConnectable(false);var v11=graph.insertVertex(v1,null,'X',0,0,10,16,'shape=line;align=left;verticalAlign=middle;fontSize=10;routingCenterX=-0.5;'+'spacingLeft=12;fontColor='+fontColor+';strokeColor='+strokeColor);v11.geometry.relative=true;v11.geometry.offset=new Point(-v11.geometry.width,12);var v12=v11.clone();v12.value='Y';v12.geometry.offset=new Point(-v11.geometry.width,52);v1.insert(v12);var v15=v11.clone();v15.value='';v15.geometry.x=1;v15.style='shape=line;align=right;verticalAlign=middle;fontSize=10;routingCenterX=0.5;'+'spacingRight=12;fontColor='+fontColor+';strokeColor='+strokeColor;v15.geometry.offset=new Point(0,32);v1.insert(v15);var v16=graph.insertVertex(v1,null,'&',49,38,0,0,'shape=line;align=right;verticalAlign=middle;fontSize=20;routingCenterX=0.5;'+'spacingLeft=6;fontColor='+fontColor+';strokeColor='+strokeColor);v16.geometry.x=1;v16.geometry.offset=new Point(49,0);v1.insert(v16);//выходы прямоугольника\nvar v1=graph.insertVertex(parent,null,'',310,220,40,80,'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor='+fillColor);v1.setConnectable(false);var v11=graph.insertVertex(v1,null,'X',0,0,10,16,'shape=line;align=left;verticalAlign=middle;fontSize=10;routingCenterX=-0.5;'+'spacingLeft=12;fontColor='+fontColor+';strokeColor='+strokeColor);v11.geometry.relative=true;v11.geometry.offset=new Point(-v11.geometry.width,12);var v12=v11.clone();v12.value='Y';v12.geometry.offset=new Point(-v11.geometry.width,52);v1.insert(v12);var v15=v11.clone();v15.value='';v15.geometry.x=1;v15.style={shape:'line',align:'right',verticalAlign:'middle',fontSize:10,routingCenterX:0.5,spacingRight:12,fontColor,strokeColor};v15.geometry.offset=new Point(0,32);v1.insert(v15);var v16=graph.insertVertex(v1,null,'&',49,38,0,0,'shape=line;align=right;verticalAlign=middle;fontSize=20;routingCenterX=0.5;'+'spacingLeft=6;fontColor='+fontColor+';strokeColor='+strokeColor);v16.geometry.x=1;v16.geometry.offset=new Point(49,0);v1.insert(v16);var v1=graph.insertVertex(parent,null,'',430,140,40,80,'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor='+fillColor);v1.setConnectable(false);//выходы прямоугольника\nvar v11=graph.insertVertex(v1,null,'X',0,0,10,16,'shape=line;align=left;verticalAlign=middle;fontSize=10;routingCenterX=-0.5;'+'spacingLeft=12;fontColor='+fontColor+';strokeColor='+strokeColor);v11.geometry.relative=true;v11.geometry.offset=new Point(-v11.geometry.width,12);var v12=v11.clone();v12.value='Y';v12.geometry.offset=new Point(-v11.geometry.width,52);v1.insert(v12);var v15=v11.clone();v15.value='';v15.geometry.x=1;v15.style='shape=line;align=right;verticalAlign=middle;fontSize=10;routingCenterX=0.5;'+'spacingRight=12;fontColor='+fontColor+';strokeColor='+strokeColor;v15.geometry.offset=new Point(0,32);v1.insert(v15);var v16=graph.insertVertex(v1,null,'|',49,36,0,0,'shape=line;align=right;verticalAlign=middle;fontSize=20;routingCenterX=0.5;'+'spacingLeft=6;fontColor='+fontColor+';strokeColor='+strokeColor);v16.geometry.x=1;v16.geometry.offset=new Point(49,0);v1.insert(v16);});// МЕСТО ГДЕ НАЧИНАЕТСЯ ДЕРЬМО\n}));parentContainer.appendChild(DomHelpers.button('Zoom In',()=>graph.zoomIn()));parentContainer.appendChild(DomHelpers.button('Zoom Out',()=>graph.zoomOut()));// Undo/redo\nlet undoManager=new UndoManager();let listener=function(sender,evt){undoManager.undoableEditHappened(evt.getProperty('edit'));};graph.getDataModel().addListener(InternalEvent.UNDO,listener);graph.getView().addListener(InternalEvent.UNDO,listener);parentContainer.appendChild(DomHelpers.button('Undo',function(){undoManager.undo();}));parentContainer.appendChild(DomHelpers.button('Redo',function(){undoManager.redo();}));// Shows XML for debugging the actual model\nparentContainer.appendChild(DomHelpers.button('Delete',function(){graph.removeCells();}));// Wire-mode\nlet checkbox=document.createElement('input');checkbox.setAttribute('type','checkbox');parentContainer.appendChild(checkbox);domUtils.write(parentContainer,'Wire Mode');// Grid\nlet checkbox2=document.createElement('input');checkbox2.setAttribute('type','checkbox');checkbox2.setAttribute('checked','true');parentContainer.appendChild(checkbox2);domUtils.write(parentContainer,'Grid');InternalEvent.addListener(checkbox2,'click',function(evt){if(checkbox2.checked){container.style.background='url(./images/grid.gif)';}else{container.style.background='';}container.style.backgroundColor=invert?'black':'white';});InternalEvent.disableContextMenu(container);graphContainer.appendChild(parentContainer);return()=>{// Clean up if needed\n};},[]);return/*#__PURE__*/_jsx(\"div\",{ref:graphContainerRef,style:{width:'100%',height:'100%'}});};export default YourComponent;","map":{"version":3,"names":["React","useEffect","useRef","domUtils","styleUtils","mathUtils","cloneUtils","eventUtils","Graph","InternalEvent","RubberBandHandler","ConnectionHandler","ConnectionConstraint","Point","CylinderShape","CellRenderer","DomHelpers","EdgeStyle","Rectangle","EdgeHandler","StyleRegistry","EdgeSegmentHandler","UndoManager","CellEditorHandler","ConstraintHandler","Guide","ImageBox","GraphView","SelectionHandler","PanningHandler","TooltipHandler","SelectionCellsHandler","PopupMenuHandler","xmlUtils","Codec","contextMenuTypes","contextMenuValues","globalTypes","globalValues","rubberBandTypes","rubberBandValues","createGraphContainer","jsx","_jsx","YourComponent","graphContainerRef","graphContainer","current","parentContainer","document","createElement","container","imageUrl","appendChild","joinNodeSize","strokeWidth","MyCustomGraph","constructor","arguments","resetEdgesOnConnect","createEdgeSegmentHandler","state","MyCustomEdgeSegmentHandler","createGraphView","MyCustomGraphView","createEdgeHandler","MyCustomEdgeHandler","createHandler","result","cell","isEdge","style","view","getEdgeStyle","WireConnector","apply","getCellStyle","_cell$getTerminal","_cell$getTerminal2","clone","getTerminal","startArrow","endArrow","getTooltipForCell","tip","src","parent","getParent","isVertex","trg","getAllConnectionConstraints","terminal","geo","getGeometry","relative","getChildCount","MyCustomConstraintHandler","pointImage","MyCustomGuide","isEnabledForEvent","evt","isAltDown","snapToTerminals","isConnectableCell","graph","getPlugin","connect","edge","isSource","isClone","me","model","getDataModel","beginUpdate","pt","abspoints","length","x","scale","translate","y","pstate","getView","getState","origin","panDx","panDy","setTerminalPoint","setGeometry","endUpdate","createMarker","marker","highlight","invert","MyCustomCellEditorHandler","backgroundColor","startEditing","trigger","textarea","color","MyCustomSelectionHandler","previewColor","guidesEnabled","createGuide","getGuideStates","MyCustomPanningHandler","isPopupTrigger","MyCustomConnectionHandler","movePreviewAway","waypointsEnabled","isStartEvent","checkbox","checked","mouseUp","sender","first","previous","point","convertPoint","getX","getY","dx","Math","abs","dy","tolerance","reset","createEdgeState","createEdge","sourceConstraint","getCell","tr","snap","getGraphX","getGraphY","geometry","createState","isStopEvent","isRightMouseButton","getEvent","updateCurrentState","edgeState","shape","currentState","intersects","lastStyle","strokeColor","cellRenderer","configureShape","redraw","updateFixedTerminalPoint","source","constraint","getConnectionPoint","sourceSegment","targetSegment","s","orig","getTerminalPoint","absolutePoints","seg","findNearestSegment","p0","pe","horizontal","key","value","min","max","getRoutingCenterX","getRoutingCenterY","setAbsoluteTerminalPoint","clonePreviewState","isTarget","ResistorShape","redrawPath","path","w","h","isForeground","moveTo","lineTo","end","registerShape","target","hints","pts","hint","portConstraint","direction","i","transformControlPoint","push","putValue","labelBackground","fontColor","fillColor","setPanning","setConnectable","setConnectableEdges","setDisconnectOnMove","foldingEnabled","maximumGraphBounds","border","setEnterStopsCellEditing","setTooltips","getStylesheet","getDefaultEdgeStyle","labelBackgroundColor","edgeStyle","fontSize","movable","startSize","endSize","getDefaultVertexStyle","gradientDirection","fontStyle","resizable","rounded","buttons","querySelectorAll","update","event","getDefaultParent","doc","createXmlDocument","batchUpdate","textContent","v1","insertVertex","v11","align","verticalAlign","routingCenterX","spacingLeft","offset","width","v12","insert","v15","spacingRight","v16","verticalLabelPosition","shadow","v17","v18","forEach","button","addEventListener","body","encoder","node","encode","popup","getPrettyXml","zoomIn","zoomOut","undoManager","listener","undoableEditHappened","getProperty","addListener","UNDO","undo","redo","removeCells","setAttribute","write","checkbox2","background","disableContextMenu","ref","height"],"sources":["D:/ospanel/domains/react/react-intro/src/components/GraphComponent.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport {\r\n  domUtils,\r\n  styleUtils,\r\n  mathUtils,\r\n  cloneUtils,\r\n  eventUtils,\r\n  Graph,\r\n  InternalEvent,\r\n  RubberBandHandler,\r\n  ConnectionHandler,\r\n  ConnectionConstraint,\r\n  Point,\r\n  CylinderShape,\r\n  CellRenderer,\r\n  DomHelpers,\r\n  EdgeStyle,\r\n  Rectangle,\r\n  EdgeHandler,\r\n  StyleRegistry,\r\n  EdgeSegmentHandler,\r\n  UndoManager,\r\n  CellEditorHandler,\r\n  ConstraintHandler,\r\n  Guide,\r\n  ImageBox,\r\n  GraphView,\r\n  SelectionHandler,\r\n  PanningHandler,\r\n  TooltipHandler,\r\n  SelectionCellsHandler,\r\n  PopupMenuHandler,\r\n  xmlUtils,\r\n  Codec,\r\n} from '@maxgraph/core';\r\n\r\nimport {\r\n  contextMenuTypes,\r\n  contextMenuValues,\r\n  globalTypes,\r\n  globalValues,\r\n  rubberBandTypes,\r\n  rubberBandValues,\r\n} from './shared/args.js';\r\nimport { createGraphContainer } from './shared/configure.js';\r\n// style required by RubberBand\r\nimport '@maxgraph/core/css/common.css';\r\n\r\n  function YourComponent() {\r\n  const graphContainerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const graphContainer = graphContainerRef.current;\r\n\r\n    const parentContainer = document.createElement('div');\r\n    const container = createGraphContainer({\r\n      imageUrl: 'images/grid.gif'\r\n    });\r\n    parentContainer.appendChild(container);\r\n\r\n      // Changes some default colors\r\n  // TODO Find a way of modifying globally or setting locally! See https://github.com/maxGraph/maxGraph/issues/192\r\n  //constants.SHADOWCOLOR = '#C0C0C0';\r\n\r\n  let joinNodeSize = 7;\r\n  let strokeWidth = 2;\r\n\r\n  class MyCustomGraph extends Graph {\r\n    resetEdgesOnConnect = false;\r\n\r\n    createEdgeSegmentHandler(state) {\r\n      return new MyCustomEdgeSegmentHandler(state);\r\n    }\r\n\r\n    createGraphView() {\r\n      return new MyCustomGraphView(this);\r\n    }\r\n\r\n    createEdgeHandler(state) {\r\n      return new MyCustomEdgeHandler(state);\r\n    }\r\n\r\n    createHandler(state) {\r\n      let result = null;\r\n\r\n      if (state != null) {\r\n        if (state.cell.isEdge()) {\r\n          let style = this.view.getEdgeStyle(state);\r\n\r\n          if (style == EdgeStyle.WireConnector) {\r\n            return new EdgeSegmentHandler(state);\r\n          }\r\n        }\r\n      }\r\n\r\n      return super.createHandler.apply(this, arguments);\r\n    }\r\n\r\n    // Adds oval markers for edge-to-edge connections.\r\n    getCellStyle(cell) {\r\n      let style = super.getCellStyle.apply(this, arguments);\r\n\r\n      if (style != null && cell?.isEdge()) {\r\n        style = cloneUtils.clone(style);\r\n\r\n        if (cell.getTerminal(true)?.isEdge()) {\r\n          style.startArrow = 'oval';\r\n        }\r\n\r\n        if (cell.getTerminal(false)?.isEdge()) {\r\n          style.endArrow = 'oval';\r\n        }\r\n      }\r\n      return style;\r\n    }\r\n\r\n    getTooltipForCell(cell) {\r\n      let tip = '';\r\n\r\n      if (cell != null) {\r\n        let src = cell.getTerminal(true);\r\n        if (src != null) {\r\n          tip += this.getTooltipForCell(src) + ' ';\r\n        }\r\n\r\n        let parent = cell.getParent();\r\n        if (parent.isVertex()) {\r\n          tip += this.getTooltipForCell(parent) + '.';\r\n        }\r\n\r\n        tip += super.getTooltipForCell.apply(this, arguments);\r\n\r\n        let trg = cell.getTerminal(false);\r\n        if (trg != null) {\r\n          tip += ' ' + this.getTooltipForCell(trg);\r\n        }\r\n      }\r\n      return tip;\r\n    }\r\n\r\n    // Alternative solution for implementing connection points without child cells.\r\n    // This can be extended as shown in portrefs.html example to allow for per-port\r\n    // incoming/outgoing direction.\r\n    getAllConnectionConstraints(terminal) {\r\n      let geo = terminal != null ? terminal.cell.getGeometry() : null;\r\n\r\n      if (\r\n        (geo != null ? !geo.relative : false) &&\r\n        terminal.cell.isVertex() &&\r\n        terminal.cell.getChildCount() === 0\r\n      ) {\r\n        return [\r\n          new ConnectionConstraint(new Point(0, 0.5), false),\r\n          new ConnectionConstraint(new Point(1, 0.5), false),\r\n        ];\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // FIXME: Provide means to make EdgeHandler and ConnectionHandler instantiate this subclass!\r\n  class MyCustomConstraintHandler extends ConstraintHandler {\r\n    // Replaces the port image\r\n    pointImage = new ImageBox('images/dot.gif', 10, 10);\r\n  }\r\n\r\n  class MyCustomGuide extends Guide {\r\n    // Alt disables guides\r\n    isEnabledForEvent(evt) {\r\n      return !eventUtils.isAltDown(evt);\r\n    }\r\n  }\r\n\r\n  class MyCustomEdgeHandler extends EdgeHandler {\r\n    // Enables snapping waypoints to terminals\r\n    snapToTerminals = true;\r\n\r\n    isConnectableCell(cell) {\r\n      return graph.getPlugin('ConnectionHandler').isConnectableCell(cell);\r\n    }\r\n\r\n    connect(edge, terminal, isSource, isClone, me) {\r\n      let result = null;\r\n      let model = this.graph.getDataModel();\r\n      let parent = model.getParent(edge);\r\n\r\n      model.beginUpdate();\r\n      try {\r\n        result = super.connect.apply(this, arguments);\r\n        let geo = model.getGeometry(result);\r\n\r\n        if (geo != null) {\r\n          geo = geo.clone();\r\n          let pt = null;\r\n          if (terminal && terminal.isEdge) {\r\n            if (terminal.isEdge()) {\r\n              pt = this.abspoints[this.isSource ? 0 : this.abspoints.length - 1];\r\n              pt.x = pt.x / this.graph.view.scale - this.graph.view.translate.x;\r\n              pt.y = pt.y / this.graph.view.scale - this.graph.view.translate.y;\r\n\r\n              let pstate = this.graph.getView().getState(edge.getParent());\r\n\r\n              if (pstate != null) {\r\n                pt.x -= pstate.origin.x;\r\n                pt.y -= pstate.origin.y;\r\n              }\r\n\r\n              pt.x -= this.graph.panDx / this.graph.view.scale;\r\n              pt.y -= this.graph.panDy / this.graph.view.scale;\r\n            }\r\n          }\r\n\r\n          geo.setTerminalPoint(pt, isSource);\r\n          model.setGeometry(edge, geo);\r\n        }\r\n      } finally {\r\n        model.endUpdate();\r\n      }\r\n\r\n      return result;\r\n    }\r\n\r\n    createMarker() {\r\n      let marker = super.createMarker.apply(this, arguments);\r\n      // Adds in-place highlighting when reconnecting existing edges\r\n      marker.highlight.highlight =\r\n        this.graph.getPlugin('ConnectionHandler').marker.highlight.highlight;\r\n      return marker;\r\n    }\r\n  }\r\n\r\n  // Switch for black background and bright styles\r\n  let invert = false;\r\n  let MyCustomCellEditorHandler;\r\n\r\n  if (invert) {\r\n    container.style.backgroundColor = 'black';\r\n\r\n    // White in-place editor text color\r\n    MyCustomCellEditorHandler = class extends CellEditorHandler {\r\n      startEditing(cell, trigger) {\r\n        super.startEditing.apply(this, arguments);\r\n\r\n        if (this.textarea != null) {\r\n          this.textarea.style.color = '#FFFFFF';\r\n        }\r\n      }\r\n    };\r\n  } else {\r\n    MyCustomCellEditorHandler = CellEditorHandler;\r\n  }\r\n\r\n  class MyCustomSelectionHandler extends SelectionHandler {\r\n    previewColor = invert ? 'white' : 'black';\r\n    // Enables guides\r\n    guidesEnabled = true;\r\n\r\n    createGuide() {\r\n      return new MyCustomGuide(this.graph, this.getGuideStates());\r\n    }\r\n  }\r\n\r\n  class MyCustomPanningHandler extends PanningHandler {\r\n    // Panning handler consumed right click so this must be\r\n    // disabled if right click should stop connection handler.\r\n    isPopupTrigger() {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  class MyCustomConnectionHandler extends ConnectionHandler {\r\n    // If connect preview is not moved away then getCellAt is used to detect the cell under\r\n    // the mouse if the mouse is over the preview shape in IE (no event transparency), ie.\r\n    // the built-in hit-detection of the HTML document will not be used in this case.\r\n    movePreviewAway = false;\r\n    waypointsEnabled = true;\r\n\r\n    // Starts connections on the background in wire-mode\r\n    isStartEvent(me) {\r\n      return checkbox.checked || super.isStartEvent.apply(this, arguments);\r\n    }\r\n\r\n    // Avoids any connections for gestures within tolerance except when in wire-mode\r\n    // or when over a port\r\n    mouseUp(sender, me) {\r\n      if (this.first != null && this.previous != null) {\r\n        let point = styleUtils.convertPoint(this.graph.container, me.getX(), me.getY());\r\n        let dx = Math.abs(point.x - this.first.x);\r\n        let dy = Math.abs(point.y - this.first.y);\r\n\r\n        if (dx < this.graph.tolerance && dy < this.graph.tolerance) {\r\n          // Selects edges in non-wire mode for single clicks, but starts\r\n          // connecting for non-edges regardless of wire-mode\r\n          if (!checkbox.checked && this.previous.cell.isEdge()) {\r\n            this.reset();\r\n          }\r\n          return;\r\n        }\r\n      }\r\n      super.mouseUp.apply(this, arguments);\r\n    }\r\n\r\n    // Overrides methods to preview and create new edges.\r\n\r\n    // Sets source terminal point for edge-to-edge connections.\r\n    createEdgeState(me) {\r\n      let edge = this.graph.createEdge();\r\n\r\n      if (this.sourceConstraint != null && this.previous != null) {\r\n        edge.style =\r\n          'exitX' +\r\n          '=' +\r\n          this.sourceConstraint.point.x +\r\n          ';' +\r\n          'exitY' +\r\n          '=' +\r\n          this.sourceConstraint.point.y +\r\n          ';';\r\n      } else if (me.getCell().isEdge()) {\r\n        let scale = this.graph.view.scale;\r\n        let tr = this.graph.view.translate;\r\n        let pt = new Point(\r\n          this.graph.snap(me.getGraphX() / scale) - tr.x,\r\n          this.graph.snap(me.getGraphY() / scale) - tr.y\r\n        );\r\n        edge.geometry.setTerminalPoint(pt, true);\r\n      }\r\n\r\n      return this.graph.view.createState(edge);\r\n    }\r\n\r\n    // Uses right mouse button to create edges on background (see also: lines 67 ff)\r\n    isStopEvent(me) {\r\n      return me.getState() != null || eventUtils.isRightMouseButton(me.getEvent());\r\n    }\r\n\r\n    // Updates target terminal point for edge-to-edge connections.\r\n    updateCurrentState(me, point) {\r\n      super.updateCurrentState.apply(this, arguments);\r\n\r\n      if (this.edgeState != null) {\r\n        this.edgeState.cell.geometry.setTerminalPoint(null, false);\r\n\r\n        if (\r\n          this.shape != null &&\r\n          this.currentState != null &&\r\n          this.currentState.cell.isEdge()\r\n        ) {\r\n          let scale = this.graph.view.scale;\r\n          let tr = this.graph.view.translate;\r\n          let pt = new Point(\r\n            this.graph.snap(me.getGraphX() / scale) - tr.x,\r\n            this.graph.snap(me.getGraphY() / scale) - tr.y\r\n          );\r\n          this.edgeState.cell.geometry.setTerminalPoint(pt, false);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Adds in-place highlighting for complete cell area (no hotspot).\r\n    createMarker() {\r\n      let marker = super.createMarker.apply(this, arguments);\r\n\r\n      // Uses complete area of cell for new connections (no hotspot)\r\n      marker.intersects = function (state, evt) {\r\n        return true;\r\n      };\r\n\r\n      // Adds in-place highlighting\r\n      //const mxCellHighlightHighlight = mxCellHighlight.prototype.highlight;\r\n      marker.highlight.highlight = function (state) {\r\n        // TODO: Should this be a subclass of marker rather than assigning directly?\r\n        if (this.state != state) {\r\n          if (this.state != null) {\r\n            this.state.style = this.lastStyle;\r\n\r\n            // Workaround for shape using current stroke width if no strokewidth defined\r\n            this.state.style.strokeWidth = this.state.style.strokeWidth || '1';\r\n            this.state.style.strokeColor = this.state.style.strokeColor || 'none';\r\n\r\n            if (this.state.shape != null) {\r\n              this.state.view.graph.cellRenderer.configureShape(this.state);\r\n              this.state.shape.redraw();\r\n            }\r\n          }\r\n\r\n          if (state != null) {\r\n            this.lastStyle = state.style;\r\n            state.style = cloneUtils.clone(state.style);\r\n            state.style.strokeColor = '#00ff00';\r\n            state.style.strokeWidth = '3';\r\n\r\n            if (state.shape != null) {\r\n              state.view.graph.cellRenderer.configureShape(state);\r\n              state.shape.redraw();\r\n            }\r\n          }\r\n          this.state = state;\r\n        }\r\n      };\r\n\r\n      return marker;\r\n    }\r\n\r\n    // Makes sure non-relative cells can only be connected via constraints\r\n    isConnectableCell(cell) {\r\n      if (cell.isEdge()) {\r\n        return true;\r\n      } else {\r\n        let geo = cell != null ? cell.getGeometry() : null;\r\n        return geo != null ? geo.relative : false;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Updates connection points before the routing is called.\r\n\r\n  class MyCustomGraphView extends GraphView {\r\n    // Computes the position of edge to edge connection points.\r\n    updateFixedTerminalPoint(edge, terminal, source, constraint) {\r\n      let pt = null;\r\n\r\n      if (constraint != null) {\r\n        pt = this.graph.getConnectionPoint(terminal, constraint);\r\n      }\r\n\r\n      if (source) {\r\n        edge.sourceSegment = null;\r\n      } else {\r\n        edge.targetSegment = null;\r\n      }\r\n\r\n      if (pt == null) {\r\n        let s = this.scale;\r\n        let tr = this.translate;\r\n        let orig = edge.origin;\r\n        let geo = edge.cell.getGeometry();\r\n        pt = geo.getTerminalPoint(source);\r\n\r\n        // Computes edge-to-edge connection point\r\n        if (pt != null) {\r\n          pt = new Point(s * (tr.x + pt.x + orig.x), s * (tr.y + pt.y + orig.y));\r\n\r\n          // Finds nearest segment on edge and computes intersection\r\n          if (terminal != null && terminal.absolutePoints != null) {\r\n            let seg = mathUtils.findNearestSegment(terminal, pt.x, pt.y);\r\n\r\n            // Finds orientation of the segment\r\n            let p0 = terminal.absolutePoints[seg];\r\n            let pe = terminal.absolutePoints[seg + 1];\r\n            let horizontal = p0.x - pe.x === 0;\r\n\r\n            // Stores the segment in the edge state\r\n            let key = source ? 'sourceConstraint' : 'targetConstraint';\r\n            let value = horizontal ? 'horizontal' : 'vertical';\r\n            edge.style[key] = value;\r\n\r\n            // Keeps the coordinate within the segment bounds\r\n            if (horizontal) {\r\n              pt.x = p0.x;\r\n              pt.y = Math.min(pt.y, Math.max(p0.y, pe.y));\r\n              pt.y = Math.max(pt.y, Math.min(p0.y, pe.y));\r\n            } else {\r\n              pt.y = p0.y;\r\n              pt.x = Math.min(pt.x, Math.max(p0.x, pe.x));\r\n              pt.x = Math.max(pt.x, Math.min(p0.x, pe.x));\r\n            }\r\n          }\r\n        }\r\n        // Computes constraint connection points on vertices and ports\r\n        else if (terminal != null && terminal.cell.geometry.relative) {\r\n          pt = new Point(\r\n            this.getRoutingCenterX(terminal),\r\n            this.getRoutingCenterY(terminal)\r\n          );\r\n        }\r\n\r\n        // Snaps point to grid\r\n        /*if (pt != null)\r\n        {\r\n          let tr = this.graph.view.translate;\r\n          let s = this.graph.view.scale;\r\n\r\n          pt.x = (this.graph.snap(pt.x / s - tr.x) + tr.x) * s;\r\n          pt.y = (this.graph.snap(pt.y / s - tr.y) + tr.y) * s;\r\n        }*/\r\n      }\r\n\r\n      edge.setAbsoluteTerminalPoint(pt, source);\r\n    }\r\n  }\r\n\r\n  // Updates the terminal and control points in the cloned preview.\r\n  class MyCustomEdgeSegmentHandler extends EdgeSegmentHandler {\r\n    clonePreviewState(point, terminal) {\r\n      let clone = super.clonePreviewState.apply(this, arguments);\r\n      clone.cell = clone.cell.clone();\r\n\r\n      if (this.isSource || this.isTarget) {\r\n        clone.cell.geometry = clone.cell.geometry.clone();\r\n\r\n        // Sets the terminal point of an edge if we're moving one of the endpoints\r\n        if (clone.cell.isEdge()) {\r\n          // TODO: Only set this if the target or source terminal is an edge\r\n          clone.cell.geometry.setTerminalPoint(point, this.isSource);\r\n        } else {\r\n          clone.cell.geometry.setTerminalPoint(null, this.isSource);\r\n        }\r\n      }\r\n\r\n      return clone;\r\n    }\r\n  }\r\n\r\n  // Imlements a custom resistor shape. Direction currently ignored here.\r\n\r\n  class ResistorShape extends CylinderShape {\r\n    constructor() {\r\n      // TODO: The original didn't seem to call the super\r\n      super(null, null, null, null);\r\n    }\r\n\r\n    redrawPath(path, x, y, w, h, isForeground) {\r\n      let dx = w / 16;\r\n\r\n      if (isForeground) {\r\n        path.moveTo(0, h / 2);\r\n        path.lineTo(2 * dx, h / 2);\r\n        path.lineTo(3 * dx, 0);\r\n        path.lineTo(5 * dx, h);\r\n        path.lineTo(7 * dx, 0);\r\n        path.lineTo(9 * dx, h);\r\n        path.lineTo(11 * dx, 0);\r\n        path.lineTo(13 * dx, h);\r\n        path.lineTo(14 * dx, h / 2);\r\n        path.lineTo(16 * dx, h / 2);\r\n        path.end();\r\n      }\r\n    }\r\n  }\r\n\r\n  CellRenderer.registerShape('resistor', ResistorShape);\r\n\r\n  // Imlements a custom resistor shape. Direction currently ignored here.\r\n\r\n  EdgeStyle.WireConnector = function (state, source, target, hints, result) {\r\n    // Creates array of all way- and terminalpoints\r\n    let pts = state.absolutePoints;\r\n    let horizontal = true;\r\n    let hint = null;\r\n\r\n    // Gets the initial connection from the source terminal or edge\r\n    if (source != null && source.cell.isEdge()) {\r\n      horizontal = state.style.sourceConstraint == 'horizontal';\r\n    } else if (source != null) {\r\n      horizontal = source.style.portConstraint != 'vertical';\r\n\r\n      // Checks the direction of the shape and rotates\r\n      let direction = source.style.direction;\r\n\r\n      if (direction == 'north' || direction == 'south') {\r\n        horizontal = !horizontal;\r\n      }\r\n    }\r\n\r\n    // Adds the first point\r\n    // TODO: Should move along connected segment\r\n    let pt = pts[0];\r\n\r\n    if (pt == null && source != null) {\r\n      pt = new Point(\r\n        state.view.getRoutingCenterX(source),\r\n        state.view.getRoutingCenterY(source)\r\n      );\r\n    } else if (pt != null) {\r\n      pt = pt.clone();\r\n    }\r\n\r\n    let first = pt;\r\n\r\n    // Adds the waypoints\r\n    if (hints != null && hints.length > 0) {\r\n      // FIXME: First segment not movable\r\n      /*hint = state.view.transformControlPoint(state, hints[0]);\r\n      MaxLog.show();\r\n      MaxLog.debug(hints.length,'hints0.y='+hint.y, pt.y)\r\n\r\n      if (horizontal && Math.floor(hint.y) != Math.floor(pt.y))\r\n      {\r\n        MaxLog.show();\r\n        MaxLog.debug('add waypoint');\r\n\r\n        pt = new Point(pt.x, hint.y);\r\n        result.push(pt);\r\n        pt = pt.clone();\r\n        //horizontal = !horizontal;\r\n      }*/\r\n\r\n      for (let i = 0; i < hints.length; i++) {\r\n        horizontal = !horizontal;\r\n        hint = state.view.transformControlPoint(state, hints[i]);\r\n\r\n        if (horizontal) {\r\n          if (pt.y !== hint.y) {\r\n            pt.y = hint.y;\r\n            result.push(pt.clone());\r\n          }\r\n        } else if (pt.x !== hint.x) {\r\n          pt.x = hint.x;\r\n          result.push(pt.clone());\r\n        }\r\n      }\r\n    } else {\r\n      hint = pt;\r\n    }\r\n\r\n    // Adds the last point\r\n    pt = pts[pts.length - 1];\r\n\r\n    // TODO: Should move along connected segment\r\n    if (pt == null && target != null) {\r\n      pt = new Point(\r\n        state.view.getRoutingCenterX(target),\r\n        state.view.getRoutingCenterY(target)\r\n      );\r\n    }\r\n\r\n    if (horizontal) {\r\n      if (pt.y !== hint.y && first.x !== pt.x) {\r\n        result.push(new Point(pt.x, hint.y));\r\n      }\r\n    } else if (pt.x !== hint.x && first.y !== pt.y) {\r\n      result.push(new Point(hint.x, pt.y));\r\n    }\r\n  };\r\n\r\n  StyleRegistry.putValue('wireEdgeStyle', EdgeStyle.WireConnector);\r\n\r\n\r\n    let graph = new MyCustomGraph(container, null, [\r\n      MyCustomCellEditorHandler,\r\n      TooltipHandler,\r\n      SelectionCellsHandler,\r\n      PopupMenuHandler,\r\n      MyCustomConnectionHandler,\r\n      MyCustomSelectionHandler,\r\n      MyCustomPanningHandler,\r\n    ]);\r\n\r\n    let labelBackground = invert ? '#000000' : '#FFFFFF';\r\n  let fontColor = invert ? '#FFFFFF' : '#000000';\r\n  let strokeColor = invert ? '#C0C0C0' : '#000000';\r\n  let fillColor = invert ? 'none' : '#FFFFFF';\r\n\r\n  graph.view.scale = 1;\r\n  graph.setPanning(true);\r\n  graph.setConnectable(true);\r\n  graph.setConnectableEdges(true);\r\n  graph.setDisconnectOnMove(false);\r\n  graph.foldingEnabled = false;\r\n\r\n  //Maximum size\r\n  graph.maximumGraphBounds = new Rectangle(0, 0, 800, 600);\r\n  graph.border = 50;\r\n\r\n  // Enables return key to stop editing (use shift-enter for newlines)\r\n  graph.setEnterStopsCellEditing(true);\r\n\r\n  // Adds rubberband selection\r\n  new RubberBandHandler(graph);\r\n\r\n  // Adds a special tooltip for edges\r\n  graph.setTooltips(true);\r\n\r\n  let style = graph.getStylesheet().getDefaultEdgeStyle();\r\n  delete style.endArrow;\r\n  style.strokeColor = strokeColor;\r\n  style.labelBackgroundColor = labelBackground;\r\n  style.edgeStyle = 'wireEdgeStyle';\r\n  style.fontColor = fontColor;\r\n  style.fontSize = '9';\r\n  style.movable = '0';\r\n  style.strokeWidth = strokeWidth;\r\n  //style.rounded = '1';\r\n\r\n  // Sets join node size\r\n  style.startSize = joinNodeSize;\r\n  style.endSize = joinNodeSize;\r\n\r\n  style = graph.getStylesheet().getDefaultVertexStyle();\r\n  style.gradientDirection = 'south';\r\n  //style.gradientColor = '#909090';\r\n  style.strokeColor = strokeColor;\r\n  //style.fillColor = '#e0e0e0';\r\n  style.fillColor = 'none';\r\n  style.fontColor = fontColor;\r\n  style.fontStyle = '1';\r\n  style.fontSize = '12';\r\n  style.resizable = '0';\r\n  style.rounded = '1';\r\n  style.strokeWidth = strokeWidth;\r\n\r\n  // инородное дерьмо\r\n  const buttons = document.querySelectorAll('.bth');\r\n  const update = (event) => {\r\n    var parent = graph.getDefaultParent();\r\n    var doc = xmlUtils.createXmlDocument();\r\n    graph.batchUpdate(() => {\r\n      if ((event.target.textContent) == 'not x') {\r\n        //прямоугольник\r\n        var v1 = graph.insertVertex(parent, null, '', 80, 40, 40, 80,\r\n          'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\r\n        v1.setConnectable(false);\r\n\r\n\r\n        //выходы прямоугольника\r\n        var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16, {\r\n          shape: 'line',\r\n          align: 'left',\r\n          verticalAlign: 'middle',\r\n          fontSize: 10,\r\n          routingCenterX: -0.5,\r\n          spacingLeft: 12,\r\n          fontColor,\r\n          strokeColor,\r\n        });\r\n        v11.geometry.relative = true;\r\n        v11.geometry.offset = new Point(-v11.geometry.width, 12);\r\n        var v12 = v11.clone();\r\n        v12.value = 'Y';\r\n        v12.geometry.offset = new Point(-v11.geometry.width, 52);\r\n        v1.insert(v12);\r\n        var v15 = v11.clone();\r\n        v15.value = '';\r\n        v15.geometry.x = 1;\r\n        v15.style = {\r\n          shape: 'line',\r\n          align: 'right',\r\n          verticalAlign: 'middle',\r\n          fontSize: 10,\r\n          routingCenterX: 0.5,\r\n          spacingRight: 12,\r\n          fontColor: fontColor,\r\n          strokeColor: strokeColor\r\n        }\r\n         \r\n        v15.geometry.offset = new Point(5, 32);\r\n        v1.insert(v15);\r\n\r\n\r\n        var v16 = graph.insertVertex(v1, null, '○', 0, 0, 0, 0,\r\n        {\r\n          shape: 'line',\r\n          align: 'right',\r\n          verticalAlign: 'middle',\r\n          fontSize: 30,\r\n          routingCenterX: 0.5,\r\n          spacingLeft: 6,\r\n          fontColor: fontColor,\r\n          strokeColor: strokeColor\r\n        }\r\n        );\r\n        v16.geometry.x = 1;\r\n        v16.geometry.offset = new Point(49, 34);\r\n        v1.insert(v16);\r\n      }\r\n      if ((event.target.textContent) == 'x * y') {\r\n        //прямоугольник\r\n        var v1 = graph.insertVertex(parent, null, '', 180, 40, 40, 80,\r\n        {\r\n          verticalLabelPosition: 'top',\r\n          verticalAlign: 'bottom',\r\n          shadow: 1,\r\n          fillColor: fillColor\r\n        }\r\n        );\r\n        v1.setConnectable(false);\r\n\r\n        //выходы прямоугольника\r\n        var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16,\r\n        {\r\n          shape: 'line',\r\n          align: 'left',\r\n          verticalAlign: 'middle',\r\n          fontSize: 10,\r\n          routingCenterX: -0.5,\r\n          spacingLeft: 12,\r\n          fontColor: fontColor,\r\n          strokeColor: strokeColor\r\n        }\r\n        );\r\n        v11.geometry.relative = true;\r\n        v11.geometry.offset = new Point(-v11.geometry.width, 12);\r\n        var v12 = v11.clone();\r\n        v12.value = 'Y';\r\n        v12.geometry.offset = new Point(-v11.geometry.width, 52);\r\n        v1.insert(v12);\r\n        var v15 = v11.clone();\r\n        v15.value = '';\r\n        v15.geometry.x = 1;\r\n        v15.style = {\r\n          shape: 'line',\r\n          align: 'right',\r\n          verticalAlign: 'middle',\r\n          fontSize: 10,\r\n          routingCenterX: 0.5,\r\n          spacingRight: 12,\r\n          fontColor: fontColor,\r\n          strokeColor: strokeColor\r\n        }\r\n        ;\r\n        v15.geometry.offset = new Point(0, 32);\r\n        v1.insert(v15);\r\n\r\n\r\n        var v16 = graph.insertVertex(v1, null, '&', 0, 0, 0, 0,\r\n        {\r\n          shape: 'line',\r\n          align: 'right',\r\n          verticalAlign: 'middle',\r\n          fontSize: 20,\r\n          routingCenterX: 0.5,\r\n          spacingLeft: 6,\r\n          fontColor: fontColor,\r\n          strokeColor: strokeColor\r\n        }\r\n        );\r\n        v16.geometry.x = 1;\r\n        v16.geometry.offset = new Point(28.5, 37);\r\n        v1.insert(v16);\r\n      }\r\n      if ((event.target.textContent) == 'x + y') {\r\n        //прямоугольник\r\n        var v1 = graph.insertVertex(parent, null, '', 250, 40, 40, 80,\r\n        {\r\n          verticalLabelPosition: 'top',\r\n          verticalAlign: 'bottom',\r\n          shadow: 1,\r\n          fillColor: fillColor\r\n        }\r\n        );\r\n        v1.setConnectable(false);\r\n\r\n        //выходы прямоугольника\r\n        var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16,\r\n        {\r\n          shape: 'line',\r\n          align: 'left',\r\n          verticalAlign: 'middle',\r\n          fontSize: 10,\r\n          routingCenterX: -0.5,\r\n          spacingLeft: 12,\r\n          fontColor: fontColor,\r\n          strokeColor: strokeColor\r\n        }\r\n        );\r\n        v11.geometry.relative = true;\r\n        v11.geometry.offset = new Point(-v11.geometry.width, 12);\r\n        var v12 = v11.clone();\r\n        v12.value = 'Y';\r\n        v12.geometry.offset = new Point(-v11.geometry.width, 52);\r\n        v1.insert(v12);\r\n        var v15 = v11.clone();\r\n        v15.value = '';\r\n        v15.geometry.x = 1;\r\n        v15.style = {\r\n          shape: 'line',\r\n          align: 'right',\r\n          verticalAlign: 'middle',\r\n          fontSize: 10,\r\n          routingCenterX: 0.5,\r\n          spacingRight: 12,\r\n          fontColor: fontColor,\r\n          strokeColor: strokeColor\r\n        }\r\n        ;\r\n        v15.geometry.offset = new Point(0, 32);\r\n        v1.insert(v15);\r\n\r\n        var v16 = graph.insertVertex(v1, null, '|', 0, 0, 0, 0,\r\n        {\r\n          shape: 'line',\r\n          align: 'right',\r\n          verticalAlign: 'middle',\r\n          fontSize: 20,\r\n          routingCenterX: 0.5,\r\n          spacingLeft: 6,\r\n          fontColor: fontColor,\r\n          strokeColor: strokeColor\r\n        }\r\n        );\r\n        v16.geometry.x = 1;\r\n        v16.geometry.offset = new Point(24, 37);\r\n        v1.insert(v16);\r\n      }\r\n      if ((event.target.textContent) == 'x == y') {\r\n        //прямоугольник\r\n        var v1 = graph.insertVertex(parent, null, '', 180, 140, 40, 80,\r\n        {\r\n          verticalLabelPosition: 'top',\r\n          verticalAlign: 'bottom',\r\n          shadow: 1,\r\n          fillColor: fillColor\r\n        }\r\n        );\r\n        v1.setConnectable(false);\r\n\r\n        //выходы прямоугольника\r\n        var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16,\r\n        {\r\n          shape: 'line',\r\n          align: 'left',\r\n          verticalAlign: 'middle',\r\n          fontSize: 10,\r\n          routingCenterX: -0.5,\r\n          spacingLeft: 12,\r\n          fontColor: fontColor,\r\n          strokeColor: strokeColor\r\n        }\r\n        );\r\n        v11.geometry.relative = true;\r\n        v11.geometry.offset = new Point(-v11.geometry.width, 12);\r\n        var v12 = v11.clone();\r\n        v12.value = 'Y';\r\n        v12.geometry.offset = new Point(-v11.geometry.width, 52);\r\n        v1.insert(v12);\r\n        var v15 = v11.clone();\r\n        v15.value = '';\r\n        v15.geometry.x = 1;\r\n        v15.style = {\r\n          shape: 'line',\r\n          align: 'right',\r\n          verticalAlign: 'middle',\r\n          fontSize: 10,\r\n          routingCenterX: 0.5,\r\n          spacingRight: 12,\r\n          fontColor: fontColor,\r\n          strokeColor: strokeColor\r\n        }\r\n        ;\r\n        v15.geometry.offset = new Point(0, 32);\r\n        v1.insert(v15);\r\n\r\n        var v16 = graph.insertVertex(v1, null, '==', 0, 0, 0, 0,\r\n        {\r\n          shape: 'line',\r\n          align: 'right',\r\n          verticalAlign: 'middle',\r\n          fontSize: 15,\r\n          routingCenterX: 0.5,\r\n          spacingLeft: 6,\r\n          fontColor: fontColor,\r\n          strokeColor: strokeColor\r\n        }\r\n        );\r\n        v16.geometry.x = 1;\r\n        v16.geometry.offset = new Point(30, 38);\r\n        v1.insert(v16);\r\n      }\r\n      if ((event.target.textContent) == 'x => y') {\r\n        //прямоугольник\r\n        var v1 = graph.insertVertex(parent, null, '', 80, 140, 40, 80,\r\n        {\r\n          verticalLabelPosition: 'top',\r\n          verticalAlign: 'bottom',\r\n          shadow: 1,\r\n          fillColor: fillColor\r\n        }\r\n        );\r\n        v1.setConnectable(false);\r\n\r\n        //выходы прямоугольника\r\n        var v11 = graph.insertVertex(v1, null, '', 0, 0, 14, 16,\r\n        {\r\n          shape: 'line',\r\n          align: 'left',\r\n          verticalAlign: 'middle',\r\n          fontSize: 10,\r\n          routingCenterX: -0.5,\r\n          spacingLeft: 12,\r\n          fontColor: fontColor,\r\n          strokeColor: strokeColor\r\n        }\r\n        );\r\n        v11.geometry.relative = true;\r\n        v11.geometry.offset = new Point(-v11.geometry.width, 12);\r\n        var v12 = v11.clone();\r\n        v12.value = '';\r\n        v12.geometry.offset = new Point(-v11.geometry.width, 52);\r\n        v1.insert(v12);\r\n        var v15 = v11.clone();\r\n        v15.value = '';\r\n        v15.geometry.x = 1;\r\n        v15.style = {\r\n          shape: 'line',\r\n          align: 'right',\r\n          verticalAlign: 'middle',\r\n          fontSize: 10,\r\n          routingCenterX: 0.5,\r\n          spacingRight: 12,\r\n          fontColor: fontColor,\r\n          strokeColor: strokeColor\r\n        }\r\n        ;\r\n        v15.geometry.offset = new Point(0, 32);\r\n        v1.insert(v15);\r\n\r\n        var v16 = graph.insertVertex(v1, null, '○', 0, 0, 0, 0,\r\n        {\r\n          shape: 'line',\r\n          align: 'right',\r\n          verticalAlign: 'middle',\r\n          fontSize: 25,\r\n          routingCenterX: 0.5,\r\n          spacingLeft: 6,\r\n          fontColor: fontColor,\r\n          strokeColor: strokeColor\r\n        }\r\n        );\r\n        v16.geometry.x = 1;\r\n        v16.geometry.offset = new Point(8, 15);\r\n        v1.insert(v16);\r\n        var v17 = graph.insertVertex(v1, null, 'X', 0, 0, 0, 0,\r\n        {\r\n          shape: 'line',\r\n          align: 'right',\r\n          verticalAlign: 'middle',\r\n          fontSize: 10,\r\n          routingCenterX: 0.5,\r\n          spacingLeft: 6,\r\n          fontColor: fontColor,\r\n          strokeColor: strokeColor\r\n        }\r\n        );\r\n        v17.geometry.x = 1;\r\n        v17.geometry.offset = new Point(14, 20);\r\n        v1.insert(v17);\r\n        var v18 = graph.insertVertex(v1, null, 'Y', 0, 0, 0, 0,\r\n        {\r\n          shape: 'line',\r\n          align: 'right',\r\n          verticalAlign: 'middle',\r\n          fontSize: 10,\r\n          routingCenterX: 0.5,\r\n          spacingLeft: 6,\r\n          fontColor: fontColor,\r\n          strokeColor: strokeColor\r\n        }\r\n        );\r\n        v18.geometry.x = 1;\r\n        v18.geometry.offset = new Point(14, 59);\r\n        v1.insert(v18);\r\n      }\r\n    })\r\n  }\r\n\r\n  buttons.forEach((button) => {\r\n    button.addEventListener('click', update);\r\n  });\r\n\r\n  document.body.appendChild(DomHelpers.button('View XML', function () {\r\n    var encoder = new Codec();\r\n    var node = encoder.encode(graph.getDataModel());\r\n    popup(getPrettyXml(node), true);\r\n\r\n  }));\r\n  var parent = graph.getDefaultParent();\r\n  var doc = xmlUtils.createXmlDocument();\r\n\r\n  document.body.appendChild(DomHelpers.button('полусумматор', function () {\r\n    var parent = graph.getDefaultParent();\r\n    var doc = xmlUtils.createXmlDocument();\r\n\r\n  graph.batchUpdate(() => {\r\n    var v1 = graph.insertVertex(parent, null, '', 170, 110, 40, 80,\r\n    'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\r\n  v1.setConnectable(false);\r\n  var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16,\r\n    'shape=line;align=left;verticalAlign=middle;fontSize=10;routingCenterX=-0.5;' +\r\n    'spacingLeft=12;fontColor=' + fontColor + ';strokeColor=' + strokeColor);\r\n  v11.geometry.relative = true;\r\n  v11.geometry.offset = new Point(-v11.geometry.width, 12);\r\n  var v12 = v11.clone();\r\n  v12.value = 'Y';\r\n  v12.geometry.offset = new Point(-v11.geometry.width, 52);\r\n  v1.insert(v12);\r\n  var v15 = v11.clone();\r\n  v15.value = '';\r\n  v15.geometry.x = 1;\r\n  v15.style = 'shape=line;align=right;verticalAlign=middle;fontSize=10;routingCenterX=0.5;' +\r\n    'spacingRight=12;fontColor=' + fontColor + ';strokeColor=' + strokeColor;\r\n  v15.geometry.offset = new Point(0, 32);\r\n  v1.insert(v15);\r\n\r\n\r\n  var v16 = graph.insertVertex(v1, null, '○', 49, 34, 0, 0,\r\n    'shape=line;align=right;verticalAlign=middle;fontSize=30;routingCenterX=0.5;' +\r\n    'spacingLeft=6;fontColor=' + fontColor + ';strokeColor=' + strokeColor);\r\n  v16.geometry.x = 1;\r\n  v16.geometry.offset = new Point(49, 0);\r\n  v1.insert(v16);\r\n\r\n\r\n\r\n\r\n\r\n  //выходы прямоугольника\r\n  var v1 = graph.insertVertex(parent, null, '', 170, 200, 40, 80,\r\n    'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\r\n  v1.setConnectable(false);\r\n  var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16,\r\n    'shape=line;align=left;verticalAlign=middle;fontSize=10;routingCenterX=-0.5;' +\r\n    'spacingLeft=12;fontColor=' + fontColor + ';strokeColor=' + strokeColor);\r\n  v11.geometry.relative = true;\r\n  v11.geometry.offset = new Point(-v11.geometry.width, 12);\r\n  var v12 = v11.clone();\r\n  v12.value = 'Y';\r\n  v12.geometry.offset = new Point(-v11.geometry.width, 52);\r\n  v1.insert(v12);\r\n  var v15 = v11.clone();\r\n  v15.value = '';\r\n  v15.geometry.x = 1;\r\n  v15.style = 'shape=line;align=right;verticalAlign=middle;fontSize=10;routingCenterX=0.5;' +\r\n    'spacingRight=12;fontColor=' + fontColor + ';strokeColor=' + strokeColor;\r\n  v15.geometry.offset = new Point(0, 32);\r\n  v1.insert(v15);\r\n\r\n\r\n  var v16 = graph.insertVertex(v1, null, '○', 49, 34, 0, 0,\r\n    'shape=line;align=right;verticalAlign=middle;fontSize=30;routingCenterX=0.5;' +\r\n    'spacingLeft=6;fontColor=' + fontColor + ';strokeColor=' + strokeColor);\r\n  v16.geometry.x = 1;\r\n  v16.geometry.offset = new Point(49, 0);\r\n  v1.insert(v16);\r\n\r\n\r\n  //выходы прямоугольника\r\n  var v1 = graph.insertVertex(parent, null, '', 310, 70, 40, 80,\r\n    'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\r\n  v1.setConnectable(false);\r\n  var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16,\r\n    'shape=line;align=left;verticalAlign=middle;fontSize=10;routingCenterX=-0.5;' +\r\n    'spacingLeft=12;fontColor=' + fontColor + ';strokeColor=' + strokeColor);\r\n  v11.geometry.relative = true;\r\n  v11.geometry.offset = new Point(-v11.geometry.width, 12);\r\n  var v12 = v11.clone();\r\n  v12.value = 'Y';\r\n  v12.geometry.offset = new Point(-v11.geometry.width, 52);\r\n  v1.insert(v12);\r\n  var v15 = v11.clone();\r\n  v15.value = '';\r\n  v15.geometry.x = 1;\r\n  v15.style = 'shape=line;align=right;verticalAlign=middle;fontSize=10;routingCenterX=0.5;' +\r\n    'spacingRight=12;fontColor=' + fontColor + ';strokeColor=' + strokeColor;\r\n  v15.geometry.offset = new Point(0, 32);\r\n  v1.insert(v15);\r\n\r\n\r\n  var v16 = graph.insertVertex(v1, null, '&', 49, 38, 0, 0,\r\n    'shape=line;align=right;verticalAlign=middle;fontSize=20;routingCenterX=0.5;' +\r\n    'spacingLeft=6;fontColor=' + fontColor + ';strokeColor=' + strokeColor);\r\n  v16.geometry.x = 1;\r\n  v16.geometry.offset = new Point(49, 0);\r\n  v1.insert(v16);\r\n\r\n\r\n\r\n  //выходы прямоугольника\r\n  var v1 = graph.insertVertex(parent, null, '', 310, 320, 40, 80,\r\n    'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\r\n  v1.setConnectable(false);\r\n\r\n  var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16,\r\n    'shape=line;align=left;verticalAlign=middle;fontSize=10;routingCenterX=-0.5;' +\r\n    'spacingLeft=12;fontColor=' + fontColor + ';strokeColor=' + strokeColor);\r\n  v11.geometry.relative = true;\r\n  v11.geometry.offset = new Point(-v11.geometry.width, 12);\r\n  var v12 = v11.clone();\r\n  v12.value = 'Y';\r\n  v12.geometry.offset = new Point(-v11.geometry.width, 52);\r\n  v1.insert(v12);\r\n  var v15 = v11.clone();\r\n  v15.value = '';\r\n  v15.geometry.x = 1;\r\n  v15.style = 'shape=line;align=right;verticalAlign=middle;fontSize=10;routingCenterX=0.5;' +\r\n    'spacingRight=12;fontColor=' + fontColor + ';strokeColor=' + strokeColor;\r\n  v15.geometry.offset = new Point(0, 32);\r\n  v1.insert(v15);\r\n\r\n\r\n  var v16 = graph.insertVertex(v1, null, '&', 49, 38, 0, 0,\r\n    'shape=line;align=right;verticalAlign=middle;fontSize=20;routingCenterX=0.5;' +\r\n    'spacingLeft=6;fontColor=' + fontColor + ';strokeColor=' + strokeColor);\r\n  v16.geometry.x = 1;\r\n  v16.geometry.offset = new Point(49, 0);\r\n  v1.insert(v16);\r\n\r\n\r\n\r\n\r\n\r\n  //выходы прямоугольника\r\n  var v1 = graph.insertVertex(parent, null, '', 310, 220, 40, 80,\r\n    'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\r\n  v1.setConnectable(false);\r\n\r\n  var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16,\r\n    'shape=line;align=left;verticalAlign=middle;fontSize=10;routingCenterX=-0.5;' +\r\n    'spacingLeft=12;fontColor=' + fontColor + ';strokeColor=' + strokeColor);\r\n  v11.geometry.relative = true;\r\n  v11.geometry.offset = new Point(-v11.geometry.width, 12);\r\n  var v12 = v11.clone();\r\n  v12.value = 'Y';\r\n  v12.geometry.offset = new Point(-v11.geometry.width, 52);\r\n  v1.insert(v12);\r\n  var v15 = v11.clone();\r\n  v15.value = '';\r\n  v15.geometry.x = 1;\r\n  v15.style = {\r\n    shape: 'line',\r\n    align: 'right',\r\n    verticalAlign: 'middle',\r\n    fontSize: 10,\r\n    routingCenterX: 0.5,\r\n    spacingRight: 12,\r\n    fontColor,\r\n    strokeColor,\r\n  };\r\n  v15.geometry.offset = new Point(0, 32);\r\n  v1.insert(v15);\r\n\r\n\r\n  var v16 = graph.insertVertex(v1, null, '&', 49, 38, 0, 0,\r\n    'shape=line;align=right;verticalAlign=middle;fontSize=20;routingCenterX=0.5;' +\r\n    'spacingLeft=6;fontColor=' + fontColor + ';strokeColor=' + strokeColor);\r\n  v16.geometry.x = 1;\r\n  v16.geometry.offset = new Point(49, 0);\r\n  v1.insert(v16);\r\n\r\n\r\n\r\n\r\n\r\n  var v1 = graph.insertVertex(parent, null, '', 430, 140, 40, 80,\r\n    'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\r\n  v1.setConnectable(false);\r\n\r\n  //выходы прямоугольника\r\n  var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16,\r\n    'shape=line;align=left;verticalAlign=middle;fontSize=10;routingCenterX=-0.5;' +\r\n    'spacingLeft=12;fontColor=' + fontColor + ';strokeColor=' + strokeColor);\r\n  v11.geometry.relative = true;\r\n  v11.geometry.offset = new Point(-v11.geometry.width, 12);\r\n  var v12 = v11.clone();\r\n  v12.value = 'Y';\r\n  v12.geometry.offset = new Point(-v11.geometry.width, 52);\r\n  v1.insert(v12);\r\n  var v15 = v11.clone();\r\n  v15.value = '';\r\n  v15.geometry.x = 1;\r\n  v15.style = 'shape=line;align=right;verticalAlign=middle;fontSize=10;routingCenterX=0.5;' +\r\n    'spacingRight=12;fontColor=' + fontColor + ';strokeColor=' + strokeColor;\r\n  v15.geometry.offset = new Point(0, 32);\r\n  v1.insert(v15);\r\n\r\n\r\n  var v16 = graph.insertVertex(v1, null, '|', 49, 36, 0, 0,\r\n    'shape=line;align=right;verticalAlign=middle;fontSize=20;routingCenterX=0.5;' +\r\n    'spacingLeft=6;fontColor=' + fontColor + ';strokeColor=' + strokeColor);\r\n  v16.geometry.x = 1;\r\n  v16.geometry.offset = new Point(49, 0);\r\n  v1.insert(v16);\r\n  })\r\n          \r\n\t\t\t\t\t// МЕСТО ГДЕ НАЧИНАЕТСЯ ДЕРЬМО\r\n  }));\r\n\r\n\r\n    parentContainer.appendChild(DomHelpers.button('Zoom In', () => graph.zoomIn()));\r\n\r\n    parentContainer.appendChild(DomHelpers.button('Zoom Out', () => graph.zoomOut()));\r\n\r\n      // Undo/redo\r\n  let undoManager = new UndoManager();\r\n  let listener = function (sender, evt) {\r\n    undoManager.undoableEditHappened(evt.getProperty('edit'));\r\n  };\r\n  graph.getDataModel().addListener(InternalEvent.UNDO, listener);\r\n  graph.getView().addListener(InternalEvent.UNDO, listener);\r\n\r\n  parentContainer.appendChild(\r\n    DomHelpers.button('Undo', function () {\r\n      undoManager.undo();\r\n    })\r\n  );\r\n\r\n  parentContainer.appendChild(\r\n    DomHelpers.button('Redo', function () {\r\n      undoManager.redo();\r\n    })\r\n  );\r\n\r\n  // Shows XML for debugging the actual model\r\n  parentContainer.appendChild(\r\n    DomHelpers.button('Delete', function () {\r\n      graph.removeCells();\r\n    })\r\n  );\r\n\r\n  // Wire-mode\r\n  let checkbox = document.createElement('input');\r\n  checkbox.setAttribute('type', 'checkbox');\r\n\r\n  parentContainer.appendChild(checkbox);\r\n  domUtils.write(parentContainer, 'Wire Mode');\r\n\r\n  // Grid\r\n  let checkbox2 = document.createElement('input');\r\n  checkbox2.setAttribute('type', 'checkbox');\r\n  checkbox2.setAttribute('checked', 'true');\r\n\r\n  parentContainer.appendChild(checkbox2);\r\n  domUtils.write(parentContainer, 'Grid');\r\n\r\n  InternalEvent.addListener(checkbox2, 'click', function (evt) {\r\n    if (checkbox2.checked) {\r\n      container.style.background = 'url(./images/grid.gif)';\r\n    } else {\r\n      container.style.background = '';\r\n    }\r\n    container.style.backgroundColor = invert ? 'black' : 'white';\r\n  });\r\n  InternalEvent.disableContextMenu(container);\r\n\r\n\r\n    graphContainer.appendChild(parentContainer);\r\n\r\n    return () => {\r\n      // Clean up if needed\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={graphContainerRef} style={{ width: '100%', height: '100%' }} />;\r\n};\r\n\r\nexport default YourComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Point from '../../geometry/Point';\nexport const EllipsePerimeter = function (bounds, _vertex, next) {\n  let orthogonal = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  const {\n    x\n  } = bounds;\n  const {\n    y\n  } = bounds;\n  const a = bounds.width / 2;\n  const b = bounds.height / 2;\n  const cx = x + a;\n  const cy = y + b;\n  const px = next.x;\n  const py = next.y;\n  // Calculates straight line equation through\n  // point and ellipse center y = d * x + h\n  const dx = parseInt(String(px - cx));\n  const dy = parseInt(String(py - cy));\n  if (dx === 0 && dy !== 0) {\n    return new Point(cx, cy + b * dy / Math.abs(dy));\n  }\n  if (dx === 0 && dy === 0) {\n    return new Point(px, py);\n  }\n  if (orthogonal) {\n    if (py >= y && py <= y + bounds.height) {\n      const ty = py - cy;\n      let tx = Math.sqrt(a * a * (1 - ty * ty / (b * b))) || 0;\n      if (px <= x) {\n        tx = -tx;\n      }\n      return new Point(cx + tx, py);\n    }\n    if (px >= x && px <= x + bounds.width) {\n      const tx = px - cx;\n      let ty = Math.sqrt(b * b * (1 - tx * tx / (a * a))) || 0;\n      if (py <= y) {\n        ty = -ty;\n      }\n      return new Point(px, cy + ty);\n    }\n  }\n  // Calculates intersection\n  const d = dy / dx;\n  const h = cy - d * cx;\n  const e = a * a * d * d + b * b;\n  const f = -2 * cx * e;\n  const g = a * a * d * d * cx * cx + b * b * cx * cx - a * a * b * b;\n  const det = Math.sqrt(f * f - 4 * e * g);\n  // Two solutions (perimeter points)\n  const xout1 = (-f + det) / (2 * e);\n  const xout2 = (-f - det) / (2 * e);\n  const yout1 = d * xout1 + h;\n  const yout2 = d * xout2 + h;\n  const dist1 = Math.sqrt(Math.pow(xout1 - px, 2) + Math.pow(yout1 - py, 2));\n  const dist2 = Math.sqrt(Math.pow(xout2 - px, 2) + Math.pow(yout2 - py, 2));\n  // Correct solution\n  let xout = 0;\n  let yout = 0;\n  if (dist1 < dist2) {\n    xout = xout1;\n    yout = yout1;\n  } else {\n    xout = xout2;\n    yout = yout2;\n  }\n  return new Point(xout, yout);\n};","map":{"version":3,"names":["Point","EllipsePerimeter","bounds","_vertex","next","orthogonal","arguments","length","undefined","x","y","a","width","b","height","cx","cy","px","py","dx","parseInt","String","dy","Math","abs","ty","tx","sqrt","d","h","e","f","g","det","xout1","xout2","yout1","yout2","dist1","pow","dist2","xout","yout"],"sources":["D:/ospanel/domains/react/react-intro/node_modules/@maxgraph/core/dist/view/style/perimeter/EllipsePerimeter.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Point from '../../geometry/Point';\nexport const EllipsePerimeter = (bounds, _vertex, next, orthogonal = false) => {\n    const { x } = bounds;\n    const { y } = bounds;\n    const a = bounds.width / 2;\n    const b = bounds.height / 2;\n    const cx = x + a;\n    const cy = y + b;\n    const px = next.x;\n    const py = next.y;\n    // Calculates straight line equation through\n    // point and ellipse center y = d * x + h\n    const dx = parseInt(String(px - cx));\n    const dy = parseInt(String(py - cy));\n    if (dx === 0 && dy !== 0) {\n        return new Point(cx, cy + (b * dy) / Math.abs(dy));\n    }\n    if (dx === 0 && dy === 0) {\n        return new Point(px, py);\n    }\n    if (orthogonal) {\n        if (py >= y && py <= y + bounds.height) {\n            const ty = py - cy;\n            let tx = Math.sqrt(a * a * (1 - (ty * ty) / (b * b))) || 0;\n            if (px <= x) {\n                tx = -tx;\n            }\n            return new Point(cx + tx, py);\n        }\n        if (px >= x && px <= x + bounds.width) {\n            const tx = px - cx;\n            let ty = Math.sqrt(b * b * (1 - (tx * tx) / (a * a))) || 0;\n            if (py <= y) {\n                ty = -ty;\n            }\n            return new Point(px, cy + ty);\n        }\n    }\n    // Calculates intersection\n    const d = dy / dx;\n    const h = cy - d * cx;\n    const e = a * a * d * d + b * b;\n    const f = -2 * cx * e;\n    const g = a * a * d * d * cx * cx + b * b * cx * cx - a * a * b * b;\n    const det = Math.sqrt(f * f - 4 * e * g);\n    // Two solutions (perimeter points)\n    const xout1 = (-f + det) / (2 * e);\n    const xout2 = (-f - det) / (2 * e);\n    const yout1 = d * xout1 + h;\n    const yout2 = d * xout2 + h;\n    const dist1 = Math.sqrt(Math.pow(xout1 - px, 2) + Math.pow(yout1 - py, 2));\n    const dist2 = Math.sqrt(Math.pow(xout2 - px, 2) + Math.pow(yout2 - py, 2));\n    // Correct solution\n    let xout = 0;\n    let yout = 0;\n    if (dist1 < dist2) {\n        xout = xout1;\n        yout = yout1;\n    }\n    else {\n        xout = xout2;\n        yout = yout2;\n    }\n    return new Point(xout, yout);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
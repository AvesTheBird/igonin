{"ast":null,"code":"/*\nCopyright 2023-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport ObjectCodec from '../../ObjectCodec';\nimport EditorPopupMenu from '../../../editor/EditorPopupMenu';\n/**\n * Custom codec for configuring {@link EditorPopupMenu}s.\n *\n * This class is created and registered dynamically at load time and used implicitly via {@link Codec} and the {@link CodecRegistry}.\n *\n * This codec only reads configuration data for existing popup menus, it does not encode or create menus.\n * Note that this codec only passes the configuration node to the popup menu, which uses the config to dynamically create menus.\n *\n * @see {@link EditorPopupMenu.createMenu}.\n */\nexport class EditorPopupMenuCodec extends ObjectCodec {\n  constructor() {\n    super(new EditorPopupMenu());\n  }\n  /**\n   * Returns null.\n   */\n  encode(_enc, _obj) {\n    return null;\n  }\n  /**\n   * Uses the given node as the config for <EditorPopupMenu>.\n   */\n  decode(dec, node, into) {\n    const inc = node.getElementsByTagName('include')[0];\n    if (inc != null) {\n      this.processInclude(dec, inc, into);\n    } else if (into != null) {\n      into.config = node;\n    }\n    return into;\n  }\n}","map":{"version":3,"names":["ObjectCodec","EditorPopupMenu","EditorPopupMenuCodec","constructor","encode","_enc","_obj","decode","dec","node","into","inc","getElementsByTagName","processInclude","config"],"sources":["D:/ospanel/domains/проекты open server/old/react/react-intro-main/node_modules/@maxgraph/core/dist/serialization/codecs/editor/EditorPopupMenuCodec.js"],"sourcesContent":["/*\nCopyright 2023-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport ObjectCodec from '../../ObjectCodec';\nimport EditorPopupMenu from '../../../editor/EditorPopupMenu';\n/**\n * Custom codec for configuring {@link EditorPopupMenu}s.\n *\n * This class is created and registered dynamically at load time and used implicitly via {@link Codec} and the {@link CodecRegistry}.\n *\n * This codec only reads configuration data for existing popup menus, it does not encode or create menus.\n * Note that this codec only passes the configuration node to the popup menu, which uses the config to dynamically create menus.\n *\n * @see {@link EditorPopupMenu.createMenu}.\n */\nexport class EditorPopupMenuCodec extends ObjectCodec {\n    constructor() {\n        super(new EditorPopupMenu());\n    }\n    /**\n     * Returns null.\n     */\n    encode(_enc, _obj) {\n        return null;\n    }\n    /**\n     * Uses the given node as the config for <EditorPopupMenu>.\n     */\n    decode(dec, node, into) {\n        const inc = node.getElementsByTagName('include')[0];\n        if (inc != null) {\n            this.processInclude(dec, inc, into);\n        }\n        else if (into != null) {\n            into.config = node;\n        }\n        return into;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,eAAe,MAAM,iCAAiC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,oBAAoB,SAASF,WAAW,CAAC;EAClDG,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,IAAIF,eAAe,CAAC,CAAC,CAAC;EAChC;EACA;AACJ;AACA;EACIG,MAAMA,CAACC,IAAI,EAAEC,IAAI,EAAE;IACf,OAAO,IAAI;EACf;EACA;AACJ;AACA;EACIC,MAAMA,CAACC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAE;IACpB,MAAMC,GAAG,GAAGF,IAAI,CAACG,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACnD,IAAID,GAAG,IAAI,IAAI,EAAE;MACb,IAAI,CAACE,cAAc,CAACL,GAAG,EAAEG,GAAG,EAAED,IAAI,CAAC;IACvC,CAAC,MACI,IAAIA,IAAI,IAAI,IAAI,EAAE;MACnBA,IAAI,CAACI,MAAM,GAAGL,IAAI;IACtB;IACA,OAAOC,IAAI;EACf;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
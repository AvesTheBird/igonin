{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Client from '../Client';\nimport InternalEvent from '../view/event/InternalEvent';\nimport { getInnerHtml, write } from '../util/domUtils';\nimport { toString } from '../util/StringUtils';\nimport MaxWindow, { popup } from './MaxWindow';\nimport { copyTextToClipboard } from '../util/Utils';\n/**\n * A singleton class that implements a simple console.\n */\nclass MaxLog {\n  /**\n   * Initializes the DOM node for the console.\n   * This requires `document.body` to point to a non-null value.\n   * This is called from within setVisible if the log has not yet been initialized.\n   */\n  static init() {\n    if (MaxLog.window == null && document.body != null) {\n      const title = `${MaxLog.consoleName} - mxGraph ${Client.VERSION}`;\n      // Creates a table that maintains the layout\n      const table = document.createElement('table');\n      table.setAttribute('width', '100%');\n      table.setAttribute('height', '100%');\n      const tbody = document.createElement('tbody');\n      let tr = document.createElement('tr');\n      const td = document.createElement('td');\n      td.style.verticalAlign = 'top';\n      // Adds the actual console as a textarea\n      MaxLog.textarea = document.createElement('textarea');\n      MaxLog.textarea.setAttribute('wrap', 'off');\n      MaxLog.textarea.setAttribute('readOnly', 'true');\n      MaxLog.textarea.style.height = '100%';\n      MaxLog.textarea.style.resize = 'none';\n      MaxLog.textarea.value = MaxLog.buffer;\n      // Workaround for wrong width in standards mode\n      if (Client.IS_NS && document.compatMode !== 'BackCompat') {\n        MaxLog.textarea.style.width = '99%';\n      } else {\n        MaxLog.textarea.style.width = '100%';\n      }\n      td.appendChild(MaxLog.textarea);\n      tr.appendChild(td);\n      tbody.appendChild(tr);\n      // Creates the container div\n      tr = document.createElement('tr');\n      MaxLog.td = document.createElement('td');\n      MaxLog.td.style.verticalAlign = 'top';\n      MaxLog.td.setAttribute('height', '30px');\n      tr.appendChild(MaxLog.td);\n      tbody.appendChild(tr);\n      table.appendChild(tbody);\n      // Adds various debugging buttons\n      MaxLog.addButton('Info', function (evt) {\n        MaxLog.info();\n      });\n      MaxLog.addButton('DOM', function (evt) {\n        const content = getInnerHtml(document.body);\n        MaxLog.debug(content);\n      });\n      MaxLog.addButton('Trace', function (evt) {\n        MaxLog.TRACE = !MaxLog.TRACE;\n        if (MaxLog.TRACE) {\n          MaxLog.debug('Tracing enabled');\n        } else {\n          MaxLog.debug('Tracing disabled');\n        }\n      });\n      MaxLog.addButton('Copy', function (evt) {\n        try {\n          copyTextToClipboard(MaxLog.textarea.value);\n        } catch (err) {\n          alert(err);\n        }\n      });\n      MaxLog.addButton('Show', function (evt) {\n        try {\n          popup(MaxLog.textarea.value);\n        } catch (err) {\n          alert(err);\n        }\n      });\n      MaxLog.addButton('Clear', function (evt) {\n        MaxLog.textarea.value = '';\n      });\n      // Cross-browser code to get window size\n      let h = 0;\n      let w = 0;\n      if (typeof window.innerWidth === 'number') {\n        h = window.innerHeight;\n        w = window.innerWidth;\n      } else {\n        h = document.documentElement.clientHeight || document.body.clientHeight;\n        w = document.body.clientWidth;\n      }\n      MaxLog.window = new MaxWindow(title, table, Math.max(0, w - 320), Math.max(0, h - 210), 300, 160);\n      MaxLog.window.setMaximizable(true);\n      MaxLog.window.setScrollable(false);\n      MaxLog.window.setResizable(true);\n      MaxLog.window.setClosable(true);\n      MaxLog.window.destroyOnClose = false;\n      // Workaround for ignored textarea height in various setups\n      if (Client.IS_NS && !Client.IS_GC && !Client.IS_SF && document.compatMode !== 'BackCompat') {\n        const elt = MaxLog.window.getElement();\n        const resizeHandler = (sender, evt) => {\n          MaxLog.textarea.style.height = `${Math.max(0, elt.offsetHeight - 70)}px`;\n        };\n        MaxLog.window.addListener(InternalEvent.RESIZE_END, resizeHandler);\n        MaxLog.window.addListener(InternalEvent.MAXIMIZE, resizeHandler);\n        MaxLog.window.addListener(InternalEvent.NORMALIZE, resizeHandler);\n        MaxLog.textarea.style.height = '92px';\n      }\n    }\n  }\n  /**\n   * Writes the current navigator information to the console.\n   */\n  static info() {\n    MaxLog.writeln(toString(navigator));\n  }\n  /**\n   * Adds a button to the console using the given label and function.\n   */\n  static addButton(lab, funct) {\n    const button = document.createElement('button');\n    write(button, lab);\n    InternalEvent.addListener(button, 'click', funct);\n    MaxLog.td.appendChild(button);\n  }\n  /**\n   * Returns `true` if the console is visible.\n   */\n  static isVisible() {\n    if (MaxLog.window != null) {\n      return MaxLog.window.isVisible();\n    }\n    return false;\n  }\n  /**\n   * Shows the console.\n   */\n  static show() {\n    MaxLog.setVisible(true);\n  }\n  /**\n   * Shows or hides the console.\n   */\n  static setVisible(visible) {\n    if (MaxLog.window == null) {\n      MaxLog.init();\n    }\n    if (MaxLog.window != null) {\n      MaxLog.window.setVisible(visible);\n    }\n  }\n  /**\n   * Writes the specified string to the console if {@link TRACE} is `true` and returns the current time in milliseconds.\n   */\n  static enter(string) {\n    if (MaxLog.TRACE) {\n      MaxLog.writeln(`Entering ${string}`);\n      return new Date().getTime();\n    }\n  }\n  /**\n   * Writes the specified string to the console if {@link TRACE} is `true` and computes the difference between the current\n   * time and t0 in milliseconds.\n   *\n   * @see {@link enter} for an example.\n   */\n  static leave(string, t0) {\n    if (MaxLog.TRACE) {\n      const dt = t0 !== 0 ? ` (${new Date().getTime() - t0} ms)` : '';\n      MaxLog.writeln(`Leaving ${string}${dt}`);\n    }\n  }\n  /**\n   * Adds all arguments to the console if {@link DEBUG} is enabled.\n   */\n  static debug(...args) {\n    if (MaxLog.DEBUG) {\n      MaxLog.writeln(...args);\n    }\n  }\n  /**\n   * Adds all arguments to the console if {@link WARN} is enabled.\n   */\n  static warn(...args) {\n    if (MaxLog.WARN) {\n      MaxLog.writeln(...args);\n    }\n  }\n  /**\n   * Adds the specified strings to the console.\n   */\n  static write(...args) {\n    let string = '';\n    for (let i = 0; i < args.length; i += 1) {\n      string += args[i];\n      if (i < args.length - 1) {\n        string += ' ';\n      }\n    }\n    if (MaxLog.textarea != null) {\n      MaxLog.textarea.value = MaxLog.textarea.value + string;\n      // Workaround for no update in Presto 2.5.22 (Opera 10.5)\n      if (navigator.userAgent != null && navigator.userAgent.indexOf('Presto/2.5') >= 0) {\n        MaxLog.textarea.style.visibility = 'hidden';\n        MaxLog.textarea.style.visibility = 'visible';\n      }\n      MaxLog.textarea.scrollTop = MaxLog.textarea.scrollHeight;\n    } else {\n      MaxLog.buffer += string;\n    }\n  }\n  /**\n   * Adds the specified strings to the console, appending a linefeed at the end of each string.\n   */\n  static writeln(...args) {\n    let string = '';\n    for (let i = 0; i < args.length; i += 1) {\n      string += args[i];\n      if (i < args.length - 1) {\n        string += ' ';\n      }\n    }\n    MaxLog.write(`${string}\\n`);\n  }\n}\nMaxLog.textarea = null;\n/**\n * Specifies the name of the console window.\n * @default 'Console'\n */\nMaxLog.consoleName = 'Console';\n/**\n * Specified if the output for <enter> and <leave> should be visible in the\n * console. Default is false.\n */\nMaxLog.TRACE = false;\n/**\n * Specifies if the output for <debug> should be visible in the console.\n * Default is true.\n */\nMaxLog.DEBUG = true;\n/**\n * Specifies if the output for <warn> should be visible in the console.\n * Default is true.\n */\nMaxLog.WARN = true;\n/**\n * Buffer for pre-initialized content.\n */\nMaxLog.buffer = '';\nexport default MaxLog;","map":{"version":3,"names":["Client","InternalEvent","getInnerHtml","write","toString","MaxWindow","popup","copyTextToClipboard","MaxLog","init","window","document","body","title","consoleName","VERSION","table","createElement","setAttribute","tbody","tr","td","style","verticalAlign","textarea","height","resize","value","buffer","IS_NS","compatMode","width","appendChild","addButton","evt","info","content","debug","TRACE","err","alert","h","w","innerWidth","innerHeight","documentElement","clientHeight","clientWidth","Math","max","setMaximizable","setScrollable","setResizable","setClosable","destroyOnClose","IS_GC","IS_SF","elt","getElement","resizeHandler","sender","offsetHeight","addListener","RESIZE_END","MAXIMIZE","NORMALIZE","writeln","navigator","lab","funct","button","isVisible","show","setVisible","visible","enter","string","Date","getTime","leave","t0","dt","args","DEBUG","warn","WARN","i","length","userAgent","indexOf","visibility","scrollTop","scrollHeight"],"sources":["D:/ospanel/domains/react/react-intro/node_modules/@maxgraph/core/dist/gui/MaxLog.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Client from '../Client';\nimport InternalEvent from '../view/event/InternalEvent';\nimport { getInnerHtml, write } from '../util/domUtils';\nimport { toString } from '../util/StringUtils';\nimport MaxWindow, { popup } from './MaxWindow';\nimport { copyTextToClipboard } from '../util/Utils';\n/**\n * A singleton class that implements a simple console.\n */\nclass MaxLog {\n    /**\n     * Initializes the DOM node for the console.\n     * This requires `document.body` to point to a non-null value.\n     * This is called from within setVisible if the log has not yet been initialized.\n     */\n    static init() {\n        if (MaxLog.window == null && document.body != null) {\n            const title = `${MaxLog.consoleName} - mxGraph ${Client.VERSION}`;\n            // Creates a table that maintains the layout\n            const table = document.createElement('table');\n            table.setAttribute('width', '100%');\n            table.setAttribute('height', '100%');\n            const tbody = document.createElement('tbody');\n            let tr = document.createElement('tr');\n            const td = document.createElement('td');\n            td.style.verticalAlign = 'top';\n            // Adds the actual console as a textarea\n            MaxLog.textarea = document.createElement('textarea');\n            MaxLog.textarea.setAttribute('wrap', 'off');\n            MaxLog.textarea.setAttribute('readOnly', 'true');\n            MaxLog.textarea.style.height = '100%';\n            MaxLog.textarea.style.resize = 'none';\n            MaxLog.textarea.value = MaxLog.buffer;\n            // Workaround for wrong width in standards mode\n            if (Client.IS_NS && document.compatMode !== 'BackCompat') {\n                MaxLog.textarea.style.width = '99%';\n            }\n            else {\n                MaxLog.textarea.style.width = '100%';\n            }\n            td.appendChild(MaxLog.textarea);\n            tr.appendChild(td);\n            tbody.appendChild(tr);\n            // Creates the container div\n            tr = document.createElement('tr');\n            MaxLog.td = document.createElement('td');\n            MaxLog.td.style.verticalAlign = 'top';\n            MaxLog.td.setAttribute('height', '30px');\n            tr.appendChild(MaxLog.td);\n            tbody.appendChild(tr);\n            table.appendChild(tbody);\n            // Adds various debugging buttons\n            MaxLog.addButton('Info', function (evt) {\n                MaxLog.info();\n            });\n            MaxLog.addButton('DOM', function (evt) {\n                const content = getInnerHtml(document.body);\n                MaxLog.debug(content);\n            });\n            MaxLog.addButton('Trace', function (evt) {\n                MaxLog.TRACE = !MaxLog.TRACE;\n                if (MaxLog.TRACE) {\n                    MaxLog.debug('Tracing enabled');\n                }\n                else {\n                    MaxLog.debug('Tracing disabled');\n                }\n            });\n            MaxLog.addButton('Copy', function (evt) {\n                try {\n                    copyTextToClipboard(MaxLog.textarea.value);\n                }\n                catch (err) {\n                    alert(err);\n                }\n            });\n            MaxLog.addButton('Show', function (evt) {\n                try {\n                    popup(MaxLog.textarea.value);\n                }\n                catch (err) {\n                    alert(err);\n                }\n            });\n            MaxLog.addButton('Clear', function (evt) {\n                MaxLog.textarea.value = '';\n            });\n            // Cross-browser code to get window size\n            let h = 0;\n            let w = 0;\n            if (typeof window.innerWidth === 'number') {\n                h = window.innerHeight;\n                w = window.innerWidth;\n            }\n            else {\n                h = document.documentElement.clientHeight || document.body.clientHeight;\n                w = document.body.clientWidth;\n            }\n            MaxLog.window = new MaxWindow(title, table, Math.max(0, w - 320), Math.max(0, h - 210), 300, 160);\n            MaxLog.window.setMaximizable(true);\n            MaxLog.window.setScrollable(false);\n            MaxLog.window.setResizable(true);\n            MaxLog.window.setClosable(true);\n            MaxLog.window.destroyOnClose = false;\n            // Workaround for ignored textarea height in various setups\n            if (Client.IS_NS &&\n                !Client.IS_GC &&\n                !Client.IS_SF &&\n                document.compatMode !== 'BackCompat') {\n                const elt = MaxLog.window.getElement();\n                const resizeHandler = (sender, evt) => {\n                    MaxLog.textarea.style.height = `${Math.max(0, elt.offsetHeight - 70)}px`;\n                };\n                MaxLog.window.addListener(InternalEvent.RESIZE_END, resizeHandler);\n                MaxLog.window.addListener(InternalEvent.MAXIMIZE, resizeHandler);\n                MaxLog.window.addListener(InternalEvent.NORMALIZE, resizeHandler);\n                MaxLog.textarea.style.height = '92px';\n            }\n        }\n    }\n    /**\n     * Writes the current navigator information to the console.\n     */\n    static info() {\n        MaxLog.writeln(toString(navigator));\n    }\n    /**\n     * Adds a button to the console using the given label and function.\n     */\n    static addButton(lab, funct) {\n        const button = document.createElement('button');\n        write(button, lab);\n        InternalEvent.addListener(button, 'click', funct);\n        MaxLog.td.appendChild(button);\n    }\n    /**\n     * Returns `true` if the console is visible.\n     */\n    static isVisible() {\n        if (MaxLog.window != null) {\n            return MaxLog.window.isVisible();\n        }\n        return false;\n    }\n    /**\n     * Shows the console.\n     */\n    static show() {\n        MaxLog.setVisible(true);\n    }\n    /**\n     * Shows or hides the console.\n     */\n    static setVisible(visible) {\n        if (MaxLog.window == null) {\n            MaxLog.init();\n        }\n        if (MaxLog.window != null) {\n            MaxLog.window.setVisible(visible);\n        }\n    }\n    /**\n     * Writes the specified string to the console if {@link TRACE} is `true` and returns the current time in milliseconds.\n     */\n    static enter(string) {\n        if (MaxLog.TRACE) {\n            MaxLog.writeln(`Entering ${string}`);\n            return new Date().getTime();\n        }\n    }\n    /**\n     * Writes the specified string to the console if {@link TRACE} is `true` and computes the difference between the current\n     * time and t0 in milliseconds.\n     *\n     * @see {@link enter} for an example.\n     */\n    static leave(string, t0) {\n        if (MaxLog.TRACE) {\n            const dt = t0 !== 0 ? ` (${new Date().getTime() - t0} ms)` : '';\n            MaxLog.writeln(`Leaving ${string}${dt}`);\n        }\n    }\n    /**\n     * Adds all arguments to the console if {@link DEBUG} is enabled.\n     */\n    static debug(...args) {\n        if (MaxLog.DEBUG) {\n            MaxLog.writeln(...args);\n        }\n    }\n    /**\n     * Adds all arguments to the console if {@link WARN} is enabled.\n     */\n    static warn(...args) {\n        if (MaxLog.WARN) {\n            MaxLog.writeln(...args);\n        }\n    }\n    /**\n     * Adds the specified strings to the console.\n     */\n    static write(...args) {\n        let string = '';\n        for (let i = 0; i < args.length; i += 1) {\n            string += args[i];\n            if (i < args.length - 1) {\n                string += ' ';\n            }\n        }\n        if (MaxLog.textarea != null) {\n            MaxLog.textarea.value = MaxLog.textarea.value + string;\n            // Workaround for no update in Presto 2.5.22 (Opera 10.5)\n            if (navigator.userAgent != null && navigator.userAgent.indexOf('Presto/2.5') >= 0) {\n                MaxLog.textarea.style.visibility = 'hidden';\n                MaxLog.textarea.style.visibility = 'visible';\n            }\n            MaxLog.textarea.scrollTop = MaxLog.textarea.scrollHeight;\n        }\n        else {\n            MaxLog.buffer += string;\n        }\n    }\n    /**\n     * Adds the specified strings to the console, appending a linefeed at the end of each string.\n     */\n    static writeln(...args) {\n        let string = '';\n        for (let i = 0; i < args.length; i += 1) {\n            string += args[i];\n            if (i < args.length - 1) {\n                string += ' ';\n            }\n        }\n        MaxLog.write(`${string}\\n`);\n    }\n}\nMaxLog.textarea = null;\n/**\n * Specifies the name of the console window.\n * @default 'Console'\n */\nMaxLog.consoleName = 'Console';\n/**\n * Specified if the output for <enter> and <leave> should be visible in the\n * console. Default is false.\n */\nMaxLog.TRACE = false;\n/**\n * Specifies if the output for <debug> should be visible in the console.\n * Default is true.\n */\nMaxLog.DEBUG = true;\n/**\n * Specifies if the output for <warn> should be visible in the console.\n * Default is true.\n */\nMaxLog.WARN = true;\n/**\n * Buffer for pre-initialized content.\n */\nMaxLog.buffer = '';\nexport default MaxLog;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
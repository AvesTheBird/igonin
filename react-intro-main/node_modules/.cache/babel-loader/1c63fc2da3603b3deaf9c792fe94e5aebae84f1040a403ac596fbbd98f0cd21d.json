{"ast":null,"code":"/*\nCopyright 2024-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport ObjectCodec from '../../ObjectCodec';\nimport Geometry from '../../../view/geometry/Geometry';\nimport Point from '../../../view/geometry/Point';\nexport class mxGeometryCodec extends ObjectCodec {\n  getName() {\n    return 'mxGeometry';\n  }\n  constructor() {\n    super(new Geometry());\n  }\n  afterDecode(dec, node, obj) {\n    // Convert points to the right form\n    // input: [ { x: 420, y: 60 }, ... ]\n    // output: [ Point { _x: 420, _y: 60 }, ... ]\n    //\n    // In mxGraph XML, the points are modeled as Object, so there is no way to create an alias to do the decoding with a custom Codec.\n    // Then, it is easier to convert the values to Point objects after the whole decoding of the geometry\n    // <Array as=\"points\">\n    //   <Object x=\"420\" y=\"60\"/>\n    // </Array>\n    const originalPoints = obj.points;\n    if (originalPoints) {\n      const points = [];\n      for (const pointInput of originalPoints) {\n        const rawPoint = pointInput;\n        points.push(new Point(rawPoint.x, rawPoint.y));\n      }\n      obj.points = points;\n    }\n    return obj;\n  }\n}","map":{"version":3,"names":["ObjectCodec","Geometry","Point","mxGeometryCodec","getName","constructor","afterDecode","dec","node","obj","originalPoints","points","pointInput","rawPoint","push","x","y"],"sources":["D:/OSPanel/domains/old/react/react-intro-main/node_modules/@maxgraph/core/dist/serialization/codecs/mxGraph/mxGeometryCodec.js"],"sourcesContent":["/*\nCopyright 2024-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport ObjectCodec from '../../ObjectCodec';\nimport Geometry from '../../../view/geometry/Geometry';\nimport Point from '../../../view/geometry/Point';\nexport class mxGeometryCodec extends ObjectCodec {\n    getName() {\n        return 'mxGeometry';\n    }\n    constructor() {\n        super(new Geometry());\n    }\n    afterDecode(dec, node, obj) {\n        // Convert points to the right form\n        // input: [ { x: 420, y: 60 }, ... ]\n        // output: [ Point { _x: 420, _y: 60 }, ... ]\n        //\n        // In mxGraph XML, the points are modeled as Object, so there is no way to create an alias to do the decoding with a custom Codec.\n        // Then, it is easier to convert the values to Point objects after the whole decoding of the geometry\n        // <Array as=\"points\">\n        //   <Object x=\"420\" y=\"60\"/>\n        // </Array>\n        const originalPoints = obj.points;\n        if (originalPoints) {\n            const points = [];\n            for (const pointInput of originalPoints) {\n                const rawPoint = pointInput;\n                points.push(new Point(rawPoint.x, rawPoint.y));\n            }\n            obj.points = points;\n        }\n        return obj;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAO,MAAMC,eAAe,SAASH,WAAW,CAAC;EAC7CI,OAAOA,CAAA,EAAG;IACN,OAAO,YAAY;EACvB;EACAC,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,IAAIJ,QAAQ,CAAC,CAAC,CAAC;EACzB;EACAK,WAAWA,CAACC,GAAG,EAAEC,IAAI,EAAEC,GAAG,EAAE;IACxB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAMC,cAAc,GAAGD,GAAG,CAACE,MAAM;IACjC,IAAID,cAAc,EAAE;MAChB,MAAMC,MAAM,GAAG,EAAE;MACjB,KAAK,MAAMC,UAAU,IAAIF,cAAc,EAAE;QACrC,MAAMG,QAAQ,GAAGD,UAAU;QAC3BD,MAAM,CAACG,IAAI,CAAC,IAAIZ,KAAK,CAACW,QAAQ,CAACE,CAAC,EAAEF,QAAQ,CAACG,CAAC,CAAC,CAAC;MAClD;MACAP,GAAG,CAACE,MAAM,GAAGA,MAAM;IACvB;IACA,OAAOF,GAAG;EACd;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
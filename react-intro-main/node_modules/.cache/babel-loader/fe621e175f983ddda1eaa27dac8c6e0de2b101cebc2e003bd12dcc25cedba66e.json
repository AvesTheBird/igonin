{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport ObjectIdentity from './ObjectIdentity';\n/**\n * Recursively clones the specified object ignoring all fieldnames in the\n * given array of transient fields. {@link ObjectIdentity#FIELD_NAME} is always\n * ignored by this function.\n *\n * @param obj Object to be cloned.\n * @param transients Optional array of strings representing the fieldname to be\n * ignored.\n * @param shallow Optional boolean argument to specify if a shallow clone should\n * be created, that is, one where all object references are not cloned or,\n * in other words, one where only atomic (strings, numbers) values are\n * cloned. Default is false.\n */\nexport const clone = function _clone(obj, transients = null, shallow = false) {\n  shallow = shallow != null ? shallow : false;\n  let clone = null;\n  if (obj != null && typeof obj.constructor === 'function') {\n    clone = new obj.constructor();\n    for (const i in obj) {\n      if (i != ObjectIdentity.FIELD_NAME && (transients == null || transients.indexOf(i) < 0)) {\n        if (!shallow && typeof obj[i] === 'object') {\n          clone[i] = _clone(obj[i]);\n        } else {\n          clone[i] = obj[i];\n        }\n      }\n    }\n  }\n  return clone;\n};","map":{"version":3,"names":["ObjectIdentity","clone","_clone","obj","transients","shallow","constructor","i","FIELD_NAME","indexOf"],"sources":["D:/OSPanel/domains/old/react/react-intro/node_modules/@maxgraph/core/dist/util/cloneUtils.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport ObjectIdentity from './ObjectIdentity';\n/**\n * Recursively clones the specified object ignoring all fieldnames in the\n * given array of transient fields. {@link ObjectIdentity#FIELD_NAME} is always\n * ignored by this function.\n *\n * @param obj Object to be cloned.\n * @param transients Optional array of strings representing the fieldname to be\n * ignored.\n * @param shallow Optional boolean argument to specify if a shallow clone should\n * be created, that is, one where all object references are not cloned or,\n * in other words, one where only atomic (strings, numbers) values are\n * cloned. Default is false.\n */\nexport const clone = function _clone(obj, transients = null, shallow = false) {\n    shallow = shallow != null ? shallow : false;\n    let clone = null;\n    if (obj != null && typeof obj.constructor === 'function') {\n        clone = new obj.constructor();\n        for (const i in obj) {\n            if (i != ObjectIdentity.FIELD_NAME &&\n                (transients == null || transients.indexOf(i) < 0)) {\n                if (!shallow && typeof obj[i] === 'object') {\n                    clone[i] = _clone(obj[i]);\n                }\n                else {\n                    clone[i] = obj[i];\n                }\n            }\n        }\n    }\n    return clone;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,cAAc,MAAM,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,KAAK,GAAG,SAASC,MAAMA,CAACC,GAAG,EAAEC,UAAU,GAAG,IAAI,EAAEC,OAAO,GAAG,KAAK,EAAE;EAC1EA,OAAO,GAAGA,OAAO,IAAI,IAAI,GAAGA,OAAO,GAAG,KAAK;EAC3C,IAAIJ,KAAK,GAAG,IAAI;EAChB,IAAIE,GAAG,IAAI,IAAI,IAAI,OAAOA,GAAG,CAACG,WAAW,KAAK,UAAU,EAAE;IACtDL,KAAK,GAAG,IAAIE,GAAG,CAACG,WAAW,CAAC,CAAC;IAC7B,KAAK,MAAMC,CAAC,IAAIJ,GAAG,EAAE;MACjB,IAAII,CAAC,IAAIP,cAAc,CAACQ,UAAU,KAC7BJ,UAAU,IAAI,IAAI,IAAIA,UAAU,CAACK,OAAO,CAACF,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;QACnD,IAAI,CAACF,OAAO,IAAI,OAAOF,GAAG,CAACI,CAAC,CAAC,KAAK,QAAQ,EAAE;UACxCN,KAAK,CAACM,CAAC,CAAC,GAAGL,MAAM,CAACC,GAAG,CAACI,CAAC,CAAC,CAAC;QAC7B,CAAC,MACI;UACDN,KAAK,CAACM,CAAC,CAAC,GAAGJ,GAAG,CAACI,CAAC,CAAC;QACrB;MACJ;IACJ;EACJ;EACA,OAAON,KAAK;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getWindow, h } from '../../../../base/browser/dom.js';\nimport { findLast } from '../../../../base/common/arraysFind.js';\nimport { BugIndicatingError, onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, disposableObservableValue, observableFromEvent, observableValue, recomputeInitiallyAndOnChange, subtransaction, transaction } from '../../../../base/common/observable.js';\nimport { derivedDisposable } from '../../../../base/common/observableInternal/derived.js';\nimport './style.css';\nimport { EditorExtensionsRegistry } from '../../editorExtensions.js';\nimport { ICodeEditorService } from '../../services/codeEditorService.js';\nimport { StableEditorScrollState } from '../../stableEditorScroll.js';\nimport { CodeEditorWidget } from '../codeEditor/codeEditorWidget.js';\nimport { AccessibleDiffViewer, AccessibleDiffViewerModelFromEditors } from './components/accessibleDiffViewer.js';\nimport { DiffEditorDecorations } from './components/diffEditorDecorations.js';\nimport { DiffEditorSash, SashLayout } from './components/diffEditorSash.js';\nimport { DiffEditorViewZones } from './components/diffEditorViewZones/diffEditorViewZones.js';\nimport { DiffEditorGutter } from './features/gutterFeature.js';\nimport { HideUnchangedRegionsFeature } from './features/hideUnchangedRegionsFeature.js';\nimport { MovedBlocksLinesFeature } from './features/movedBlocksLinesFeature.js';\nimport { OverviewRulerFeature } from './features/overviewRulerFeature.js';\nimport { RevertButtonsFeature } from './features/revertButtonsFeature.js';\nimport { ObservableElementSizeObserver, RefCounted, applyStyle, applyViewZones, translatePosition } from './utils.js';\nimport { readHotReloadableExport } from '../../../../base/common/hotReloadHelpers.js';\nimport { bindContextKey } from '../../../../platform/observable/common/platformObservableUtils.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorType } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { DiffEditorEditors } from './components/diffEditorEditors.js';\nimport { DelegatingEditor } from './delegatingEditorImpl.js';\nimport { DiffEditorOptions } from './diffEditorOptions.js';\nimport { DiffEditorViewModel } from './diffEditorViewModel.js';\nlet DiffEditorWidget = class DiffEditorWidget extends DelegatingEditor {\n  get onDidContentSizeChange() {\n    return this._editors.onDidContentSizeChange;\n  }\n  constructor(_domElement, options, codeEditorWidgetOptions, _parentContextKeyService, _parentInstantiationService, codeEditorService, _accessibilitySignalService, _editorProgressService) {\n    var _options$automaticLay;\n    super();\n    this._domElement = _domElement;\n    this._parentContextKeyService = _parentContextKeyService;\n    this._parentInstantiationService = _parentInstantiationService;\n    this._accessibilitySignalService = _accessibilitySignalService;\n    this._editorProgressService = _editorProgressService;\n    this.elements = h('div.monaco-diff-editor.side-by-side', {\n      style: {\n        position: 'relative',\n        height: '100%'\n      }\n    }, [h('div.editor.original@original', {\n      style: {\n        position: 'absolute',\n        height: '100%'\n      }\n    }), h('div.editor.modified@modified', {\n      style: {\n        position: 'absolute',\n        height: '100%'\n      }\n    }), h('div.accessibleDiffViewer@accessibleDiffViewer', {\n      style: {\n        position: 'absolute',\n        height: '100%'\n      }\n    })]);\n    this._diffModelSrc = this._register(disposableObservableValue(this, undefined));\n    this._diffModel = derived(this, reader => {\n      var _this$_diffModelSrc$r;\n      return (_this$_diffModelSrc$r = this._diffModelSrc.read(reader)) === null || _this$_diffModelSrc$r === void 0 ? void 0 : _this$_diffModelSrc$r.object;\n    });\n    this.onDidChangeModel = Event.fromObservableLight(this._diffModel);\n    this._contextKeyService = this._register(this._parentContextKeyService.createScoped(this._domElement));\n    this._instantiationService = this._register(this._parentInstantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService])));\n    this._boundarySashes = observableValue(this, undefined);\n    this._accessibleDiffViewerShouldBeVisible = observableValue(this, false);\n    this._accessibleDiffViewerVisible = derived(this, reader => this._options.onlyShowAccessibleDiffViewer.read(reader) ? true : this._accessibleDiffViewerShouldBeVisible.read(reader));\n    this._movedBlocksLinesPart = observableValue(this, undefined);\n    this._layoutInfo = derived(this, reader => {\n      var _gutter$width$read, _this$_overviewRulerP, _this$_overviewRulerP2;\n      const fullWidth = this._rootSizeObserver.width.read(reader);\n      const fullHeight = this._rootSizeObserver.height.read(reader);\n      if (this._rootSizeObserver.automaticLayout) {\n        this.elements.root.style.height = '100%';\n      } else {\n        this.elements.root.style.height = fullHeight + 'px';\n      }\n      const sash = this._sash.read(reader);\n      const gutter = this._gutter.read(reader);\n      const gutterWidth = (_gutter$width$read = gutter === null || gutter === void 0 ? void 0 : gutter.width.read(reader)) !== null && _gutter$width$read !== void 0 ? _gutter$width$read : 0;\n      const overviewRulerPartWidth = (_this$_overviewRulerP = (_this$_overviewRulerP2 = this._overviewRulerPart.read(reader)) === null || _this$_overviewRulerP2 === void 0 ? void 0 : _this$_overviewRulerP2.width) !== null && _this$_overviewRulerP !== void 0 ? _this$_overviewRulerP : 0;\n      let originalLeft, originalWidth, modifiedLeft, modifiedWidth, gutterLeft;\n      const sideBySide = !!sash;\n      if (sideBySide) {\n        var _this$_movedBlocksLin, _this$_movedBlocksLin2;\n        const sashLeft = sash.sashLeft.read(reader);\n        const movedBlocksLinesWidth = (_this$_movedBlocksLin = (_this$_movedBlocksLin2 = this._movedBlocksLinesPart.read(reader)) === null || _this$_movedBlocksLin2 === void 0 ? void 0 : _this$_movedBlocksLin2.width.read(reader)) !== null && _this$_movedBlocksLin !== void 0 ? _this$_movedBlocksLin : 0;\n        originalLeft = 0;\n        originalWidth = sashLeft - gutterWidth - movedBlocksLinesWidth;\n        gutterLeft = sashLeft - gutterWidth;\n        modifiedLeft = sashLeft;\n        modifiedWidth = fullWidth - modifiedLeft - overviewRulerPartWidth;\n      } else {\n        gutterLeft = 0;\n        const shouldHideOriginalLineNumbers = this._options.inlineViewHideOriginalLineNumbers.read(reader);\n        originalLeft = gutterWidth;\n        if (shouldHideOriginalLineNumbers) {\n          originalWidth = 0;\n        } else {\n          originalWidth = Math.max(5, this._editors.originalObs.layoutInfoDecorationsLeft.read(reader));\n        }\n        modifiedLeft = gutterWidth + originalWidth;\n        modifiedWidth = fullWidth - modifiedLeft - overviewRulerPartWidth;\n      }\n      this.elements.original.style.left = originalLeft + 'px';\n      this.elements.original.style.width = originalWidth + 'px';\n      this._editors.original.layout({\n        width: originalWidth,\n        height: fullHeight\n      }, true);\n      gutter === null || gutter === void 0 || gutter.layout(gutterLeft);\n      this.elements.modified.style.left = modifiedLeft + 'px';\n      this.elements.modified.style.width = modifiedWidth + 'px';\n      this._editors.modified.layout({\n        width: modifiedWidth,\n        height: fullHeight\n      }, true);\n      return {\n        modifiedEditor: this._editors.modified.getLayoutInfo(),\n        originalEditor: this._editors.original.getLayoutInfo()\n      };\n    });\n    this._diffValue = this._diffModel.map((m, r) => m === null || m === void 0 ? void 0 : m.diff.read(r));\n    this.onDidUpdateDiff = Event.fromObservableLight(this._diffValue);\n    codeEditorService.willCreateDiffEditor();\n    this._contextKeyService.createKey('isInDiffEditor', true);\n    this._domElement.appendChild(this.elements.root);\n    this._register(toDisposable(() => this.elements.root.remove()));\n    this._rootSizeObserver = this._register(new ObservableElementSizeObserver(this.elements.root, options.dimension));\n    this._rootSizeObserver.setAutomaticLayout((_options$automaticLay = options.automaticLayout) !== null && _options$automaticLay !== void 0 ? _options$automaticLay : false);\n    this._options = this._instantiationService.createInstance(DiffEditorOptions, options);\n    this._register(autorun(reader => {\n      this._options.setWidth(this._rootSizeObserver.width.read(reader));\n    }));\n    this._contextKeyService.createKey(EditorContextKeys.isEmbeddedDiffEditor.key, false);\n    this._register(bindContextKey(EditorContextKeys.isEmbeddedDiffEditor, this._contextKeyService, reader => this._options.isInEmbeddedEditor.read(reader)));\n    this._register(bindContextKey(EditorContextKeys.comparingMovedCode, this._contextKeyService, reader => {\n      var _this$_diffModel$read;\n      return !!((_this$_diffModel$read = this._diffModel.read(reader)) !== null && _this$_diffModel$read !== void 0 && _this$_diffModel$read.movedTextToCompare.read(reader));\n    }));\n    this._register(bindContextKey(EditorContextKeys.diffEditorRenderSideBySideInlineBreakpointReached, this._contextKeyService, reader => this._options.couldShowInlineViewBecauseOfSize.read(reader)));\n    this._register(bindContextKey(EditorContextKeys.diffEditorInlineMode, this._contextKeyService, reader => !this._options.renderSideBySide.read(reader)));\n    this._register(bindContextKey(EditorContextKeys.hasChanges, this._contextKeyService, reader => {\n      var _this$_diffModel$read2, _this$_diffModel$read3;\n      return ((_this$_diffModel$read2 = (_this$_diffModel$read3 = this._diffModel.read(reader)) === null || _this$_diffModel$read3 === void 0 || (_this$_diffModel$read3 = _this$_diffModel$read3.diff.read(reader)) === null || _this$_diffModel$read3 === void 0 ? void 0 : _this$_diffModel$read3.mappings.length) !== null && _this$_diffModel$read2 !== void 0 ? _this$_diffModel$read2 : 0) > 0;\n    }));\n    this._editors = this._register(this._instantiationService.createInstance(DiffEditorEditors, this.elements.original, this.elements.modified, this._options, codeEditorWidgetOptions, (i, c, o, o2) => this._createInnerEditor(i, c, o, o2)));\n    this._register(bindContextKey(EditorContextKeys.diffEditorOriginalWritable, this._contextKeyService, reader => this._options.originalEditable.read(reader)));\n    this._register(bindContextKey(EditorContextKeys.diffEditorModifiedWritable, this._contextKeyService, reader => !this._options.readOnly.read(reader)));\n    this._register(bindContextKey(EditorContextKeys.diffEditorOriginalUri, this._contextKeyService, reader => {\n      var _this$_diffModel$read4, _this$_diffModel$read5;\n      return (_this$_diffModel$read4 = (_this$_diffModel$read5 = this._diffModel.read(reader)) === null || _this$_diffModel$read5 === void 0 ? void 0 : _this$_diffModel$read5.model.original.uri.toString()) !== null && _this$_diffModel$read4 !== void 0 ? _this$_diffModel$read4 : '';\n    }));\n    this._register(bindContextKey(EditorContextKeys.diffEditorModifiedUri, this._contextKeyService, reader => {\n      var _this$_diffModel$read6, _this$_diffModel$read7;\n      return (_this$_diffModel$read6 = (_this$_diffModel$read7 = this._diffModel.read(reader)) === null || _this$_diffModel$read7 === void 0 ? void 0 : _this$_diffModel$read7.model.modified.uri.toString()) !== null && _this$_diffModel$read6 !== void 0 ? _this$_diffModel$read6 : '';\n    }));\n    this._overviewRulerPart = derivedDisposable(this, reader => !this._options.renderOverviewRuler.read(reader) ? undefined : this._instantiationService.createInstance(readHotReloadableExport(OverviewRulerFeature, reader), this._editors, this.elements.root, this._diffModel, this._rootSizeObserver.width, this._rootSizeObserver.height, this._layoutInfo.map(i => i.modifiedEditor))).recomputeInitiallyAndOnChange(this._store);\n    const dimensions = {\n      height: this._rootSizeObserver.height,\n      width: this._rootSizeObserver.width.map((w, reader) => {\n        var _this$_overviewRulerP3, _this$_overviewRulerP4;\n        return w - ((_this$_overviewRulerP3 = (_this$_overviewRulerP4 = this._overviewRulerPart.read(reader)) === null || _this$_overviewRulerP4 === void 0 ? void 0 : _this$_overviewRulerP4.width) !== null && _this$_overviewRulerP3 !== void 0 ? _this$_overviewRulerP3 : 0);\n      })\n    };\n    this._sashLayout = new SashLayout(this._options, dimensions);\n    this._sash = derivedDisposable(this, reader => {\n      const showSash = this._options.renderSideBySide.read(reader);\n      this.elements.root.classList.toggle('side-by-side', showSash);\n      return !showSash ? undefined : new DiffEditorSash(this.elements.root, dimensions, this._options.enableSplitViewResizing, this._boundarySashes, this._sashLayout.sashLeft, () => this._sashLayout.resetSash());\n    }).recomputeInitiallyAndOnChange(this._store);\n    const unchangedRangesFeature = derivedDisposable(this, reader => /** @description UnchangedRangesFeature */this._instantiationService.createInstance(readHotReloadableExport(HideUnchangedRegionsFeature, reader), this._editors, this._diffModel, this._options)).recomputeInitiallyAndOnChange(this._store);\n    derivedDisposable(this, reader => /** @description DiffEditorDecorations */this._instantiationService.createInstance(readHotReloadableExport(DiffEditorDecorations, reader), this._editors, this._diffModel, this._options, this)).recomputeInitiallyAndOnChange(this._store);\n    const origViewZoneIdsToIgnore = new Set();\n    const modViewZoneIdsToIgnore = new Set();\n    let isUpdatingViewZones = false;\n    const viewZoneManager = derivedDisposable(this, reader => /** @description ViewZoneManager */this._instantiationService.createInstance(readHotReloadableExport(DiffEditorViewZones, reader), getWindow(this._domElement), this._editors, this._diffModel, this._options, this, () => isUpdatingViewZones || unchangedRangesFeature.get().isUpdatingHiddenAreas, origViewZoneIdsToIgnore, modViewZoneIdsToIgnore)).recomputeInitiallyAndOnChange(this._store);\n    const originalViewZones = derived(this, reader => {\n      const orig = viewZoneManager.read(reader).viewZones.read(reader).orig;\n      const orig2 = unchangedRangesFeature.read(reader).viewZones.read(reader).origViewZones;\n      return orig.concat(orig2);\n    });\n    const modifiedViewZones = derived(this, reader => {\n      const mod = viewZoneManager.read(reader).viewZones.read(reader).mod;\n      const mod2 = unchangedRangesFeature.read(reader).viewZones.read(reader).modViewZones;\n      return mod.concat(mod2);\n    });\n    this._register(applyViewZones(this._editors.original, originalViewZones, isUpdatingOrigViewZones => {\n      isUpdatingViewZones = isUpdatingOrigViewZones;\n    }, origViewZoneIdsToIgnore));\n    let scrollState;\n    this._register(applyViewZones(this._editors.modified, modifiedViewZones, isUpdatingModViewZones => {\n      isUpdatingViewZones = isUpdatingModViewZones;\n      if (isUpdatingViewZones) {\n        scrollState = StableEditorScrollState.capture(this._editors.modified);\n      } else {\n        var _scrollState;\n        (_scrollState = scrollState) === null || _scrollState === void 0 || _scrollState.restore(this._editors.modified);\n        scrollState = undefined;\n      }\n    }, modViewZoneIdsToIgnore));\n    this._accessibleDiffViewer = derivedDisposable(this, reader => this._instantiationService.createInstance(readHotReloadableExport(AccessibleDiffViewer, reader), this.elements.accessibleDiffViewer, this._accessibleDiffViewerVisible, (visible, tx) => this._accessibleDiffViewerShouldBeVisible.set(visible, tx), this._options.onlyShowAccessibleDiffViewer.map(v => !v), this._rootSizeObserver.width, this._rootSizeObserver.height, this._diffModel.map((m, r) => {\n      var _m$diff$read;\n      return m === null || m === void 0 || (_m$diff$read = m.diff.read(r)) === null || _m$diff$read === void 0 ? void 0 : _m$diff$read.mappings.map(m => m.lineRangeMapping);\n    }), new AccessibleDiffViewerModelFromEditors(this._editors))).recomputeInitiallyAndOnChange(this._store);\n    const visibility = this._accessibleDiffViewerVisible.map(v => v ? 'hidden' : 'visible');\n    this._register(applyStyle(this.elements.modified, {\n      visibility\n    }));\n    this._register(applyStyle(this.elements.original, {\n      visibility\n    }));\n    this._createDiffEditorContributions();\n    codeEditorService.addDiffEditor(this);\n    this._gutter = derivedDisposable(this, reader => {\n      return this._options.shouldRenderGutterMenu.read(reader) ? this._instantiationService.createInstance(readHotReloadableExport(DiffEditorGutter, reader), this.elements.root, this._diffModel, this._editors, this._options, this._sashLayout, this._boundarySashes) : undefined;\n    });\n    this._register(recomputeInitiallyAndOnChange(this._layoutInfo));\n    derivedDisposable(this, reader => /** @description MovedBlocksLinesPart */new (readHotReloadableExport(MovedBlocksLinesFeature, reader))(this.elements.root, this._diffModel, this._layoutInfo.map(i => i.originalEditor), this._layoutInfo.map(i => i.modifiedEditor), this._editors)).recomputeInitiallyAndOnChange(this._store, value => {\n      // This is to break the layout info <-> moved blocks lines part dependency cycle.\n      this._movedBlocksLinesPart.set(value, undefined);\n    });\n    this._register(Event.runAndSubscribe(this._editors.modified.onDidChangeCursorPosition, e => this._handleCursorPositionChange(e, true)));\n    this._register(Event.runAndSubscribe(this._editors.original.onDidChangeCursorPosition, e => this._handleCursorPositionChange(e, false)));\n    const isInitializingDiff = this._diffModel.map(this, (m, reader) => {\n      /** @isInitializingDiff isDiffUpToDate */\n      if (!m) {\n        return undefined;\n      }\n      return m.diff.read(reader) === undefined && !m.isDiffUpToDate.read(reader);\n    });\n    this._register(autorunWithStore((reader, store) => {\n      /** @description DiffEditorWidgetHelper.ShowProgress */\n      if (isInitializingDiff.read(reader) === true) {\n        const r = this._editorProgressService.show(true, 1000);\n        store.add(toDisposable(() => r.done()));\n      }\n    }));\n    this._register(autorunWithStore((reader, store) => {\n      store.add(new (readHotReloadableExport(RevertButtonsFeature, reader))(this._editors, this._diffModel, this._options, this));\n    }));\n    this._register(autorunWithStore((reader, store) => {\n      const model = this._diffModel.read(reader);\n      if (!model) {\n        return;\n      }\n      for (const m of [model.model.original, model.model.modified]) {\n        store.add(m.onWillDispose(e => {\n          onUnexpectedError(new BugIndicatingError('TextModel got disposed before DiffEditorWidget model got reset'));\n          this.setModel(null);\n        }));\n      }\n    }));\n    this._register(autorun(reader => {\n      this._options.setModel(this._diffModel.read(reader));\n    }));\n  }\n  _createInnerEditor(instantiationService, container, options, editorWidgetOptions) {\n    const editor = instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\n    return editor;\n  }\n  _createDiffEditorContributions() {\n    const contributions = EditorExtensionsRegistry.getDiffEditorContributions();\n    for (const desc of contributions) {\n      try {\n        this._register(this._instantiationService.createInstance(desc.ctor, this));\n      } catch (err) {\n        onUnexpectedError(err);\n      }\n    }\n  }\n  get _targetEditor() {\n    return this._editors.modified;\n  }\n  getEditorType() {\n    return EditorType.IDiffEditor;\n  }\n  layout(dimension) {\n    this._rootSizeObserver.observe(dimension);\n  }\n  hasTextFocus() {\n    return this._editors.original.hasTextFocus() || this._editors.modified.hasTextFocus();\n  }\n  saveViewState() {\n    var _this$_diffModel$get;\n    const originalViewState = this._editors.original.saveViewState();\n    const modifiedViewState = this._editors.modified.saveViewState();\n    return {\n      original: originalViewState,\n      modified: modifiedViewState,\n      modelState: (_this$_diffModel$get = this._diffModel.get()) === null || _this$_diffModel$get === void 0 ? void 0 : _this$_diffModel$get.serializeState()\n    };\n  }\n  restoreViewState(s) {\n    if (s && s.original && s.modified) {\n      const diffEditorState = s;\n      this._editors.original.restoreViewState(diffEditorState.original);\n      this._editors.modified.restoreViewState(diffEditorState.modified);\n      if (diffEditorState.modelState) {\n        var _this$_diffModel$get2;\n        (_this$_diffModel$get2 = this._diffModel.get()) === null || _this$_diffModel$get2 === void 0 || _this$_diffModel$get2.restoreSerializedState(diffEditorState.modelState);\n      }\n    }\n  }\n  handleInitialized() {\n    this._editors.original.handleInitialized();\n    this._editors.modified.handleInitialized();\n  }\n  createViewModel(model) {\n    return this._instantiationService.createInstance(DiffEditorViewModel, model, this._options);\n  }\n  getModel() {\n    var _this$_diffModel$get$, _this$_diffModel$get3;\n    return (_this$_diffModel$get$ = (_this$_diffModel$get3 = this._diffModel.get()) === null || _this$_diffModel$get3 === void 0 ? void 0 : _this$_diffModel$get3.model) !== null && _this$_diffModel$get$ !== void 0 ? _this$_diffModel$get$ : null;\n  }\n  setModel(model) {\n    const vm = !model ? null : 'model' in model ? RefCounted.create(model).createNewRef(this) : RefCounted.create(this.createViewModel(model), this);\n    this.setDiffModel(vm);\n  }\n  setDiffModel(viewModel, tx) {\n    const currentModel = this._diffModel.get();\n    if (!viewModel && currentModel) {\n      // Transitioning from a model to no-model\n      this._accessibleDiffViewer.get().close();\n    }\n    if (this._diffModel.get() !== (viewModel === null || viewModel === void 0 ? void 0 : viewModel.object)) {\n      subtransaction(tx, tx => {\n        var _this$_diffModelSrc$g;\n        const vm = viewModel === null || viewModel === void 0 ? void 0 : viewModel.object;\n        /** @description DiffEditorWidget.setModel */\n        observableFromEvent.batchEventsGlobally(tx, () => {\n          this._editors.original.setModel(vm ? vm.model.original : null);\n          this._editors.modified.setModel(vm ? vm.model.modified : null);\n        });\n        const prevValueRef = (_this$_diffModelSrc$g = this._diffModelSrc.get()) === null || _this$_diffModelSrc$g === void 0 ? void 0 : _this$_diffModelSrc$g.createNewRef(this);\n        this._diffModelSrc.set(viewModel === null || viewModel === void 0 ? void 0 : viewModel.createNewRef(this), tx);\n        setTimeout(() => {\n          // async, so that this runs after the transaction finished.\n          // TODO: use the transaction to schedule disposal\n          prevValueRef === null || prevValueRef === void 0 || prevValueRef.dispose();\n        }, 0);\n      });\n    }\n  }\n  /**\n   * @param changedOptions Only has values for top-level options that have actually changed.\n   */\n  updateOptions(changedOptions) {\n    this._options.updateOptions(changedOptions);\n  }\n  getContainerDomNode() {\n    return this._domElement;\n  }\n  getOriginalEditor() {\n    return this._editors.original;\n  }\n  getModifiedEditor() {\n    return this._editors.modified;\n  }\n  /**\n   * @deprecated Use `this.getDiffComputationResult().changes2` instead.\n   */\n  getLineChanges() {\n    var _this$_diffModel$get4;\n    const diffState = (_this$_diffModel$get4 = this._diffModel.get()) === null || _this$_diffModel$get4 === void 0 ? void 0 : _this$_diffModel$get4.diff.get();\n    if (!diffState) {\n      return null;\n    }\n    return toLineChanges(diffState);\n  }\n  revert(diff) {\n    const model = this._diffModel.get();\n    if (!model || !model.isDiffUpToDate.get()) {\n      return;\n    }\n    this._editors.modified.executeEdits('diffEditor', [{\n      range: diff.modified.toExclusiveRange(),\n      text: model.model.original.getValueInRange(diff.original.toExclusiveRange())\n    }]);\n  }\n  revertRangeMappings(diffs) {\n    const model = this._diffModel.get();\n    if (!model || !model.isDiffUpToDate.get()) {\n      return;\n    }\n    const changes = diffs.map(c => ({\n      range: c.modifiedRange,\n      text: model.model.original.getValueInRange(c.originalRange)\n    }));\n    this._editors.modified.executeEdits('diffEditor', changes);\n  }\n  _goTo(diff) {\n    this._editors.modified.setPosition(new Position(diff.lineRangeMapping.modified.startLineNumber, 1));\n    this._editors.modified.revealRangeInCenter(diff.lineRangeMapping.modified.toExclusiveRange());\n  }\n  goToDiff(target) {\n    var _this$_diffModel$get5;\n    const diffs = (_this$_diffModel$get5 = this._diffModel.get()) === null || _this$_diffModel$get5 === void 0 || (_this$_diffModel$get5 = _this$_diffModel$get5.diff.get()) === null || _this$_diffModel$get5 === void 0 ? void 0 : _this$_diffModel$get5.mappings;\n    if (!diffs || diffs.length === 0) {\n      return;\n    }\n    const curLineNumber = this._editors.modified.getPosition().lineNumber;\n    let diff;\n    if (target === 'next') {\n      var _diffs$find;\n      diff = (_diffs$find = diffs.find(d => d.lineRangeMapping.modified.startLineNumber > curLineNumber)) !== null && _diffs$find !== void 0 ? _diffs$find : diffs[0];\n    } else {\n      var _findLast;\n      diff = (_findLast = findLast(diffs, d => d.lineRangeMapping.modified.startLineNumber < curLineNumber)) !== null && _findLast !== void 0 ? _findLast : diffs[diffs.length - 1];\n    }\n    this._goTo(diff);\n    if (diff.lineRangeMapping.modified.isEmpty) {\n      this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineDeleted, {\n        source: 'diffEditor.goToDiff'\n      });\n    } else if (diff.lineRangeMapping.original.isEmpty) {\n      this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineInserted, {\n        source: 'diffEditor.goToDiff'\n      });\n    } else if (diff) {\n      this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineModified, {\n        source: 'diffEditor.goToDiff'\n      });\n    }\n  }\n  revealFirstDiff() {\n    const diffModel = this._diffModel.get();\n    if (!diffModel) {\n      return;\n    }\n    // wait for the diff computation to finish\n    this.waitForDiff().then(() => {\n      var _diffModel$diff$get;\n      const diffs = (_diffModel$diff$get = diffModel.diff.get()) === null || _diffModel$diff$get === void 0 ? void 0 : _diffModel$diff$get.mappings;\n      if (!diffs || diffs.length === 0) {\n        return;\n      }\n      this._goTo(diffs[0]);\n    });\n  }\n  accessibleDiffViewerNext() {\n    this._accessibleDiffViewer.get().next();\n  }\n  accessibleDiffViewerPrev() {\n    this._accessibleDiffViewer.get().prev();\n  }\n  async waitForDiff() {\n    const diffModel = this._diffModel.get();\n    if (!diffModel) {\n      return;\n    }\n    await diffModel.waitForDiff();\n  }\n  mapToOtherSide() {\n    const isModifiedFocus = this._editors.modified.hasWidgetFocus();\n    const source = isModifiedFocus ? this._editors.modified : this._editors.original;\n    const destination = isModifiedFocus ? this._editors.original : this._editors.modified;\n    let destinationSelection;\n    const sourceSelection = source.getSelection();\n    if (sourceSelection) {\n      var _this$_diffModel$get6;\n      const mappings = (_this$_diffModel$get6 = this._diffModel.get()) === null || _this$_diffModel$get6 === void 0 || (_this$_diffModel$get6 = _this$_diffModel$get6.diff.get()) === null || _this$_diffModel$get6 === void 0 ? void 0 : _this$_diffModel$get6.mappings.map(m => isModifiedFocus ? m.lineRangeMapping.flip() : m.lineRangeMapping);\n      if (mappings) {\n        const newRange1 = translatePosition(sourceSelection.getStartPosition(), mappings);\n        const newRange2 = translatePosition(sourceSelection.getEndPosition(), mappings);\n        destinationSelection = Range.plusRange(newRange1, newRange2);\n      }\n    }\n    return {\n      destination,\n      destinationSelection\n    };\n  }\n  switchSide() {\n    const {\n      destination,\n      destinationSelection\n    } = this.mapToOtherSide();\n    destination.focus();\n    if (destinationSelection) {\n      destination.setSelection(destinationSelection);\n    }\n  }\n  exitCompareMove() {\n    const model = this._diffModel.get();\n    if (!model) {\n      return;\n    }\n    model.movedTextToCompare.set(undefined, undefined);\n  }\n  collapseAllUnchangedRegions() {\n    var _this$_diffModel$get7;\n    const unchangedRegions = (_this$_diffModel$get7 = this._diffModel.get()) === null || _this$_diffModel$get7 === void 0 ? void 0 : _this$_diffModel$get7.unchangedRegions.get();\n    if (!unchangedRegions) {\n      return;\n    }\n    transaction(tx => {\n      for (const region of unchangedRegions) {\n        region.collapseAll(tx);\n      }\n    });\n  }\n  showAllUnchangedRegions() {\n    var _this$_diffModel$get8;\n    const unchangedRegions = (_this$_diffModel$get8 = this._diffModel.get()) === null || _this$_diffModel$get8 === void 0 ? void 0 : _this$_diffModel$get8.unchangedRegions.get();\n    if (!unchangedRegions) {\n      return;\n    }\n    transaction(tx => {\n      for (const region of unchangedRegions) {\n        region.showAll(tx);\n      }\n    });\n  }\n  _handleCursorPositionChange(e, isModifiedEditor) {\n    if ((e === null || e === void 0 ? void 0 : e.reason) === 3 /* CursorChangeReason.Explicit */) {\n      var _this$_diffModel$get9;\n      const diff = (_this$_diffModel$get9 = this._diffModel.get()) === null || _this$_diffModel$get9 === void 0 || (_this$_diffModel$get9 = _this$_diffModel$get9.diff.get()) === null || _this$_diffModel$get9 === void 0 ? void 0 : _this$_diffModel$get9.mappings.find(m => isModifiedEditor ? m.lineRangeMapping.modified.contains(e.position.lineNumber) : m.lineRangeMapping.original.contains(e.position.lineNumber));\n      if (diff !== null && diff !== void 0 && diff.lineRangeMapping.modified.isEmpty) {\n        this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineDeleted, {\n          source: 'diffEditor.cursorPositionChanged'\n        });\n      } else if (diff !== null && diff !== void 0 && diff.lineRangeMapping.original.isEmpty) {\n        this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineInserted, {\n          source: 'diffEditor.cursorPositionChanged'\n        });\n      } else if (diff) {\n        this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineModified, {\n          source: 'diffEditor.cursorPositionChanged'\n        });\n      }\n    }\n  }\n};\nDiffEditorWidget = __decorate([__param(3, IContextKeyService), __param(4, IInstantiationService), __param(5, ICodeEditorService), __param(6, IAccessibilitySignalService), __param(7, IEditorProgressService)], DiffEditorWidget);\nexport { DiffEditorWidget };\nfunction toLineChanges(state) {\n  return state.mappings.map(x => {\n    var _innerChanges;\n    const m = x.lineRangeMapping;\n    let originalStartLineNumber;\n    let originalEndLineNumber;\n    let modifiedStartLineNumber;\n    let modifiedEndLineNumber;\n    let innerChanges = m.innerChanges;\n    if (m.original.isEmpty) {\n      // Insertion\n      originalStartLineNumber = m.original.startLineNumber - 1;\n      originalEndLineNumber = 0;\n      innerChanges = undefined;\n    } else {\n      originalStartLineNumber = m.original.startLineNumber;\n      originalEndLineNumber = m.original.endLineNumberExclusive - 1;\n    }\n    if (m.modified.isEmpty) {\n      // Deletion\n      modifiedStartLineNumber = m.modified.startLineNumber - 1;\n      modifiedEndLineNumber = 0;\n      innerChanges = undefined;\n    } else {\n      modifiedStartLineNumber = m.modified.startLineNumber;\n      modifiedEndLineNumber = m.modified.endLineNumberExclusive - 1;\n    }\n    return {\n      originalStartLineNumber,\n      originalEndLineNumber,\n      modifiedStartLineNumber,\n      modifiedEndLineNumber,\n      charChanges: (_innerChanges = innerChanges) === null || _innerChanges === void 0 ? void 0 : _innerChanges.map(m => ({\n        originalStartLineNumber: m.originalRange.startLineNumber,\n        originalStartColumn: m.originalRange.startColumn,\n        originalEndLineNumber: m.originalRange.endLineNumber,\n        originalEndColumn: m.originalRange.endColumn,\n        modifiedStartLineNumber: m.modifiedRange.startLineNumber,\n        modifiedStartColumn: m.modifiedRange.startColumn,\n        modifiedEndLineNumber: m.modifiedRange.endLineNumber,\n        modifiedEndColumn: m.modifiedRange.endColumn\n      }))\n    };\n  });\n}","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","getWindow","h","findLast","BugIndicatingError","onUnexpectedError","Event","toDisposable","autorun","autorunWithStore","derived","disposableObservableValue","observableFromEvent","observableValue","recomputeInitiallyAndOnChange","subtransaction","transaction","derivedDisposable","EditorExtensionsRegistry","ICodeEditorService","StableEditorScrollState","CodeEditorWidget","AccessibleDiffViewer","AccessibleDiffViewerModelFromEditors","DiffEditorDecorations","DiffEditorSash","SashLayout","DiffEditorViewZones","DiffEditorGutter","HideUnchangedRegionsFeature","MovedBlocksLinesFeature","OverviewRulerFeature","RevertButtonsFeature","ObservableElementSizeObserver","RefCounted","applyStyle","applyViewZones","translatePosition","readHotReloadableExport","bindContextKey","Position","Range","EditorType","EditorContextKeys","AccessibilitySignal","IAccessibilitySignalService","IContextKeyService","IInstantiationService","ServiceCollection","IEditorProgressService","DiffEditorEditors","DelegatingEditor","DiffEditorOptions","DiffEditorViewModel","DiffEditorWidget","onDidContentSizeChange","_editors","constructor","_domElement","options","codeEditorWidgetOptions","_parentContextKeyService","_parentInstantiationService","codeEditorService","_accessibilitySignalService","_editorProgressService","_options$automaticLay","elements","style","position","height","_diffModelSrc","_register","undefined","_diffModel","reader","_this$_diffModelSrc$r","read","object","onDidChangeModel","fromObservableLight","_contextKeyService","createScoped","_instantiationService","createChild","_boundarySashes","_accessibleDiffViewerShouldBeVisible","_accessibleDiffViewerVisible","_options","onlyShowAccessibleDiffViewer","_movedBlocksLinesPart","_layoutInfo","_gutter$width$read","_this$_overviewRulerP","_this$_overviewRulerP2","fullWidth","_rootSizeObserver","width","fullHeight","automaticLayout","root","sash","_sash","gutter","_gutter","gutterWidth","overviewRulerPartWidth","_overviewRulerPart","originalLeft","originalWidth","modifiedLeft","modifiedWidth","gutterLeft","sideBySide","_this$_movedBlocksLin","_this$_movedBlocksLin2","sashLeft","movedBlocksLinesWidth","shouldHideOriginalLineNumbers","inlineViewHideOriginalLineNumbers","Math","max","originalObs","layoutInfoDecorationsLeft","original","left","layout","modified","modifiedEditor","getLayoutInfo","originalEditor","_diffValue","map","m","diff","onDidUpdateDiff","willCreateDiffEditor","createKey","appendChild","remove","dimension","setAutomaticLayout","createInstance","setWidth","isEmbeddedDiffEditor","isInEmbeddedEditor","comparingMovedCode","_this$_diffModel$read","movedTextToCompare","diffEditorRenderSideBySideInlineBreakpointReached","couldShowInlineViewBecauseOfSize","diffEditorInlineMode","renderSideBySide","hasChanges","_this$_diffModel$read2","_this$_diffModel$read3","mappings","o","o2","_createInnerEditor","diffEditorOriginalWritable","originalEditable","diffEditorModifiedWritable","readOnly","diffEditorOriginalUri","_this$_diffModel$read4","_this$_diffModel$read5","model","uri","toString","diffEditorModifiedUri","_this$_diffModel$read6","_this$_diffModel$read7","renderOverviewRuler","_store","dimensions","w","_this$_overviewRulerP3","_this$_overviewRulerP4","_sashLayout","showSash","classList","toggle","enableSplitViewResizing","resetSash","unchangedRangesFeature","origViewZoneIdsToIgnore","Set","modViewZoneIdsToIgnore","isUpdatingViewZones","viewZoneManager","get","isUpdatingHiddenAreas","originalViewZones","orig","viewZones","orig2","origViewZones","concat","modifiedViewZones","mod","mod2","modViewZones","isUpdatingOrigViewZones","scrollState","isUpdatingModViewZones","capture","_scrollState","restore","_accessibleDiffViewer","accessibleDiffViewer","visible","tx","set","v","_m$diff$read","lineRangeMapping","visibility","_createDiffEditorContributions","addDiffEditor","shouldRenderGutterMenu","value","runAndSubscribe","onDidChangeCursorPosition","e","_handleCursorPositionChange","isInitializingDiff","isDiffUpToDate","store","show","add","done","onWillDispose","setModel","instantiationService","container","editorWidgetOptions","editor","contributions","getDiffEditorContributions","ctor","err","_targetEditor","getEditorType","IDiffEditor","observe","hasTextFocus","saveViewState","_this$_diffModel$get","originalViewState","modifiedViewState","modelState","serializeState","restoreViewState","s","diffEditorState","_this$_diffModel$get2","restoreSerializedState","handleInitialized","createViewModel","getModel","_this$_diffModel$get$","_this$_diffModel$get3","vm","create","createNewRef","setDiffModel","viewModel","currentModel","close","_this$_diffModelSrc$g","batchEventsGlobally","prevValueRef","setTimeout","dispose","updateOptions","changedOptions","getContainerDomNode","getOriginalEditor","getModifiedEditor","getLineChanges","_this$_diffModel$get4","diffState","toLineChanges","revert","executeEdits","range","toExclusiveRange","text","getValueInRange","revertRangeMappings","diffs","changes","modifiedRange","originalRange","_goTo","setPosition","startLineNumber","revealRangeInCenter","goToDiff","_this$_diffModel$get5","curLineNumber","getPosition","lineNumber","_diffs$find","find","_findLast","isEmpty","playSignal","diffLineDeleted","source","diffLineInserted","diffLineModified","revealFirstDiff","diffModel","waitForDiff","then","_diffModel$diff$get","accessibleDiffViewerNext","next","accessibleDiffViewerPrev","prev","mapToOtherSide","isModifiedFocus","hasWidgetFocus","destination","destinationSelection","sourceSelection","getSelection","_this$_diffModel$get6","flip","newRange1","getStartPosition","newRange2","getEndPosition","plusRange","switchSide","focus","setSelection","exitCompareMove","collapseAllUnchangedRegions","_this$_diffModel$get7","unchangedRegions","region","collapseAll","showAllUnchangedRegions","_this$_diffModel$get8","showAll","isModifiedEditor","reason","_this$_diffModel$get9","contains","state","x","_innerChanges","originalStartLineNumber","originalEndLineNumber","modifiedStartLineNumber","modifiedEndLineNumber","innerChanges","endLineNumberExclusive","charChanges","originalStartColumn","startColumn","endLineNumber","originalEndColumn","endColumn","modifiedStartColumn","modifiedEndColumn"],"sources":["D:/ospanel/domains/react/react-intro-main/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/diffEditorWidget.js"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getWindow, h } from '../../../../base/browser/dom.js';\nimport { findLast } from '../../../../base/common/arraysFind.js';\nimport { BugIndicatingError, onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, disposableObservableValue, observableFromEvent, observableValue, recomputeInitiallyAndOnChange, subtransaction, transaction } from '../../../../base/common/observable.js';\nimport { derivedDisposable } from '../../../../base/common/observableInternal/derived.js';\nimport './style.css';\nimport { EditorExtensionsRegistry } from '../../editorExtensions.js';\nimport { ICodeEditorService } from '../../services/codeEditorService.js';\nimport { StableEditorScrollState } from '../../stableEditorScroll.js';\nimport { CodeEditorWidget } from '../codeEditor/codeEditorWidget.js';\nimport { AccessibleDiffViewer, AccessibleDiffViewerModelFromEditors } from './components/accessibleDiffViewer.js';\nimport { DiffEditorDecorations } from './components/diffEditorDecorations.js';\nimport { DiffEditorSash, SashLayout } from './components/diffEditorSash.js';\nimport { DiffEditorViewZones } from './components/diffEditorViewZones/diffEditorViewZones.js';\nimport { DiffEditorGutter } from './features/gutterFeature.js';\nimport { HideUnchangedRegionsFeature } from './features/hideUnchangedRegionsFeature.js';\nimport { MovedBlocksLinesFeature } from './features/movedBlocksLinesFeature.js';\nimport { OverviewRulerFeature } from './features/overviewRulerFeature.js';\nimport { RevertButtonsFeature } from './features/revertButtonsFeature.js';\nimport { ObservableElementSizeObserver, RefCounted, applyStyle, applyViewZones, translatePosition } from './utils.js';\nimport { readHotReloadableExport } from '../../../../base/common/hotReloadHelpers.js';\nimport { bindContextKey } from '../../../../platform/observable/common/platformObservableUtils.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorType } from '../../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../../platform/instantiation/common/serviceCollection.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { DiffEditorEditors } from './components/diffEditorEditors.js';\nimport { DelegatingEditor } from './delegatingEditorImpl.js';\nimport { DiffEditorOptions } from './diffEditorOptions.js';\nimport { DiffEditorViewModel } from './diffEditorViewModel.js';\nlet DiffEditorWidget = class DiffEditorWidget extends DelegatingEditor {\n    get onDidContentSizeChange() { return this._editors.onDidContentSizeChange; }\n    constructor(_domElement, options, codeEditorWidgetOptions, _parentContextKeyService, _parentInstantiationService, codeEditorService, _accessibilitySignalService, _editorProgressService) {\n        super();\n        this._domElement = _domElement;\n        this._parentContextKeyService = _parentContextKeyService;\n        this._parentInstantiationService = _parentInstantiationService;\n        this._accessibilitySignalService = _accessibilitySignalService;\n        this._editorProgressService = _editorProgressService;\n        this.elements = h('div.monaco-diff-editor.side-by-side', { style: { position: 'relative', height: '100%' } }, [\n            h('div.editor.original@original', { style: { position: 'absolute', height: '100%', } }),\n            h('div.editor.modified@modified', { style: { position: 'absolute', height: '100%', } }),\n            h('div.accessibleDiffViewer@accessibleDiffViewer', { style: { position: 'absolute', height: '100%' } }),\n        ]);\n        this._diffModelSrc = this._register(disposableObservableValue(this, undefined));\n        this._diffModel = derived(this, reader => this._diffModelSrc.read(reader)?.object);\n        this.onDidChangeModel = Event.fromObservableLight(this._diffModel);\n        this._contextKeyService = this._register(this._parentContextKeyService.createScoped(this._domElement));\n        this._instantiationService = this._register(this._parentInstantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService])));\n        this._boundarySashes = observableValue(this, undefined);\n        this._accessibleDiffViewerShouldBeVisible = observableValue(this, false);\n        this._accessibleDiffViewerVisible = derived(this, reader => this._options.onlyShowAccessibleDiffViewer.read(reader)\n            ? true\n            : this._accessibleDiffViewerShouldBeVisible.read(reader));\n        this._movedBlocksLinesPart = observableValue(this, undefined);\n        this._layoutInfo = derived(this, reader => {\n            const fullWidth = this._rootSizeObserver.width.read(reader);\n            const fullHeight = this._rootSizeObserver.height.read(reader);\n            if (this._rootSizeObserver.automaticLayout) {\n                this.elements.root.style.height = '100%';\n            }\n            else {\n                this.elements.root.style.height = fullHeight + 'px';\n            }\n            const sash = this._sash.read(reader);\n            const gutter = this._gutter.read(reader);\n            const gutterWidth = gutter?.width.read(reader) ?? 0;\n            const overviewRulerPartWidth = this._overviewRulerPart.read(reader)?.width ?? 0;\n            let originalLeft, originalWidth, modifiedLeft, modifiedWidth, gutterLeft;\n            const sideBySide = !!sash;\n            if (sideBySide) {\n                const sashLeft = sash.sashLeft.read(reader);\n                const movedBlocksLinesWidth = this._movedBlocksLinesPart.read(reader)?.width.read(reader) ?? 0;\n                originalLeft = 0;\n                originalWidth = sashLeft - gutterWidth - movedBlocksLinesWidth;\n                gutterLeft = sashLeft - gutterWidth;\n                modifiedLeft = sashLeft;\n                modifiedWidth = fullWidth - modifiedLeft - overviewRulerPartWidth;\n            }\n            else {\n                gutterLeft = 0;\n                const shouldHideOriginalLineNumbers = this._options.inlineViewHideOriginalLineNumbers.read(reader);\n                originalLeft = gutterWidth;\n                if (shouldHideOriginalLineNumbers) {\n                    originalWidth = 0;\n                }\n                else {\n                    originalWidth = Math.max(5, this._editors.originalObs.layoutInfoDecorationsLeft.read(reader));\n                }\n                modifiedLeft = gutterWidth + originalWidth;\n                modifiedWidth = fullWidth - modifiedLeft - overviewRulerPartWidth;\n            }\n            this.elements.original.style.left = originalLeft + 'px';\n            this.elements.original.style.width = originalWidth + 'px';\n            this._editors.original.layout({ width: originalWidth, height: fullHeight }, true);\n            gutter?.layout(gutterLeft);\n            this.elements.modified.style.left = modifiedLeft + 'px';\n            this.elements.modified.style.width = modifiedWidth + 'px';\n            this._editors.modified.layout({ width: modifiedWidth, height: fullHeight }, true);\n            return {\n                modifiedEditor: this._editors.modified.getLayoutInfo(),\n                originalEditor: this._editors.original.getLayoutInfo(),\n            };\n        });\n        this._diffValue = this._diffModel.map((m, r) => m?.diff.read(r));\n        this.onDidUpdateDiff = Event.fromObservableLight(this._diffValue);\n        codeEditorService.willCreateDiffEditor();\n        this._contextKeyService.createKey('isInDiffEditor', true);\n        this._domElement.appendChild(this.elements.root);\n        this._register(toDisposable(() => this.elements.root.remove()));\n        this._rootSizeObserver = this._register(new ObservableElementSizeObserver(this.elements.root, options.dimension));\n        this._rootSizeObserver.setAutomaticLayout(options.automaticLayout ?? false);\n        this._options = this._instantiationService.createInstance(DiffEditorOptions, options);\n        this._register(autorun(reader => {\n            this._options.setWidth(this._rootSizeObserver.width.read(reader));\n        }));\n        this._contextKeyService.createKey(EditorContextKeys.isEmbeddedDiffEditor.key, false);\n        this._register(bindContextKey(EditorContextKeys.isEmbeddedDiffEditor, this._contextKeyService, reader => this._options.isInEmbeddedEditor.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.comparingMovedCode, this._contextKeyService, reader => !!this._diffModel.read(reader)?.movedTextToCompare.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.diffEditorRenderSideBySideInlineBreakpointReached, this._contextKeyService, reader => this._options.couldShowInlineViewBecauseOfSize.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.diffEditorInlineMode, this._contextKeyService, reader => !this._options.renderSideBySide.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.hasChanges, this._contextKeyService, reader => (this._diffModel.read(reader)?.diff.read(reader)?.mappings.length ?? 0) > 0));\n        this._editors = this._register(this._instantiationService.createInstance(DiffEditorEditors, this.elements.original, this.elements.modified, this._options, codeEditorWidgetOptions, (i, c, o, o2) => this._createInnerEditor(i, c, o, o2)));\n        this._register(bindContextKey(EditorContextKeys.diffEditorOriginalWritable, this._contextKeyService, reader => this._options.originalEditable.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.diffEditorModifiedWritable, this._contextKeyService, reader => !this._options.readOnly.read(reader)));\n        this._register(bindContextKey(EditorContextKeys.diffEditorOriginalUri, this._contextKeyService, reader => this._diffModel.read(reader)?.model.original.uri.toString() ?? ''));\n        this._register(bindContextKey(EditorContextKeys.diffEditorModifiedUri, this._contextKeyService, reader => this._diffModel.read(reader)?.model.modified.uri.toString() ?? ''));\n        this._overviewRulerPart = derivedDisposable(this, reader => !this._options.renderOverviewRuler.read(reader)\n            ? undefined\n            : this._instantiationService.createInstance(readHotReloadableExport(OverviewRulerFeature, reader), this._editors, this.elements.root, this._diffModel, this._rootSizeObserver.width, this._rootSizeObserver.height, this._layoutInfo.map(i => i.modifiedEditor))).recomputeInitiallyAndOnChange(this._store);\n        const dimensions = {\n            height: this._rootSizeObserver.height,\n            width: this._rootSizeObserver.width.map((w, reader) => w - (this._overviewRulerPart.read(reader)?.width ?? 0)),\n        };\n        this._sashLayout = new SashLayout(this._options, dimensions);\n        this._sash = derivedDisposable(this, reader => {\n            const showSash = this._options.renderSideBySide.read(reader);\n            this.elements.root.classList.toggle('side-by-side', showSash);\n            return !showSash ? undefined : new DiffEditorSash(this.elements.root, dimensions, this._options.enableSplitViewResizing, this._boundarySashes, this._sashLayout.sashLeft, () => this._sashLayout.resetSash());\n        }).recomputeInitiallyAndOnChange(this._store);\n        const unchangedRangesFeature = derivedDisposable(this, reader => /** @description UnchangedRangesFeature */ this._instantiationService.createInstance(readHotReloadableExport(HideUnchangedRegionsFeature, reader), this._editors, this._diffModel, this._options)).recomputeInitiallyAndOnChange(this._store);\n        derivedDisposable(this, reader => /** @description DiffEditorDecorations */ this._instantiationService.createInstance(readHotReloadableExport(DiffEditorDecorations, reader), this._editors, this._diffModel, this._options, this)).recomputeInitiallyAndOnChange(this._store);\n        const origViewZoneIdsToIgnore = new Set();\n        const modViewZoneIdsToIgnore = new Set();\n        let isUpdatingViewZones = false;\n        const viewZoneManager = derivedDisposable(this, reader => /** @description ViewZoneManager */ this._instantiationService.createInstance(readHotReloadableExport(DiffEditorViewZones, reader), getWindow(this._domElement), this._editors, this._diffModel, this._options, this, () => isUpdatingViewZones || unchangedRangesFeature.get().isUpdatingHiddenAreas, origViewZoneIdsToIgnore, modViewZoneIdsToIgnore)).recomputeInitiallyAndOnChange(this._store);\n        const originalViewZones = derived(this, (reader) => {\n            const orig = viewZoneManager.read(reader).viewZones.read(reader).orig;\n            const orig2 = unchangedRangesFeature.read(reader).viewZones.read(reader).origViewZones;\n            return orig.concat(orig2);\n        });\n        const modifiedViewZones = derived(this, (reader) => {\n            const mod = viewZoneManager.read(reader).viewZones.read(reader).mod;\n            const mod2 = unchangedRangesFeature.read(reader).viewZones.read(reader).modViewZones;\n            return mod.concat(mod2);\n        });\n        this._register(applyViewZones(this._editors.original, originalViewZones, isUpdatingOrigViewZones => {\n            isUpdatingViewZones = isUpdatingOrigViewZones;\n        }, origViewZoneIdsToIgnore));\n        let scrollState;\n        this._register(applyViewZones(this._editors.modified, modifiedViewZones, isUpdatingModViewZones => {\n            isUpdatingViewZones = isUpdatingModViewZones;\n            if (isUpdatingViewZones) {\n                scrollState = StableEditorScrollState.capture(this._editors.modified);\n            }\n            else {\n                scrollState?.restore(this._editors.modified);\n                scrollState = undefined;\n            }\n        }, modViewZoneIdsToIgnore));\n        this._accessibleDiffViewer = derivedDisposable(this, reader => this._instantiationService.createInstance(readHotReloadableExport(AccessibleDiffViewer, reader), this.elements.accessibleDiffViewer, this._accessibleDiffViewerVisible, (visible, tx) => this._accessibleDiffViewerShouldBeVisible.set(visible, tx), this._options.onlyShowAccessibleDiffViewer.map(v => !v), this._rootSizeObserver.width, this._rootSizeObserver.height, this._diffModel.map((m, r) => m?.diff.read(r)?.mappings.map(m => m.lineRangeMapping)), new AccessibleDiffViewerModelFromEditors(this._editors))).recomputeInitiallyAndOnChange(this._store);\n        const visibility = this._accessibleDiffViewerVisible.map(v => v ? 'hidden' : 'visible');\n        this._register(applyStyle(this.elements.modified, { visibility }));\n        this._register(applyStyle(this.elements.original, { visibility }));\n        this._createDiffEditorContributions();\n        codeEditorService.addDiffEditor(this);\n        this._gutter = derivedDisposable(this, reader => {\n            return this._options.shouldRenderGutterMenu.read(reader)\n                ? this._instantiationService.createInstance(readHotReloadableExport(DiffEditorGutter, reader), this.elements.root, this._diffModel, this._editors, this._options, this._sashLayout, this._boundarySashes)\n                : undefined;\n        });\n        this._register(recomputeInitiallyAndOnChange(this._layoutInfo));\n        derivedDisposable(this, reader => /** @description MovedBlocksLinesPart */ new (readHotReloadableExport(MovedBlocksLinesFeature, reader))(this.elements.root, this._diffModel, this._layoutInfo.map(i => i.originalEditor), this._layoutInfo.map(i => i.modifiedEditor), this._editors)).recomputeInitiallyAndOnChange(this._store, value => {\n            // This is to break the layout info <-> moved blocks lines part dependency cycle.\n            this._movedBlocksLinesPart.set(value, undefined);\n        });\n        this._register(Event.runAndSubscribe(this._editors.modified.onDidChangeCursorPosition, e => this._handleCursorPositionChange(e, true)));\n        this._register(Event.runAndSubscribe(this._editors.original.onDidChangeCursorPosition, e => this._handleCursorPositionChange(e, false)));\n        const isInitializingDiff = this._diffModel.map(this, (m, reader) => {\n            /** @isInitializingDiff isDiffUpToDate */\n            if (!m) {\n                return undefined;\n            }\n            return m.diff.read(reader) === undefined && !m.isDiffUpToDate.read(reader);\n        });\n        this._register(autorunWithStore((reader, store) => {\n            /** @description DiffEditorWidgetHelper.ShowProgress */\n            if (isInitializingDiff.read(reader) === true) {\n                const r = this._editorProgressService.show(true, 1000);\n                store.add(toDisposable(() => r.done()));\n            }\n        }));\n        this._register(autorunWithStore((reader, store) => {\n            store.add(new (readHotReloadableExport(RevertButtonsFeature, reader))(this._editors, this._diffModel, this._options, this));\n        }));\n        this._register(autorunWithStore((reader, store) => {\n            const model = this._diffModel.read(reader);\n            if (!model) {\n                return;\n            }\n            for (const m of [model.model.original, model.model.modified]) {\n                store.add(m.onWillDispose(e => {\n                    onUnexpectedError(new BugIndicatingError('TextModel got disposed before DiffEditorWidget model got reset'));\n                    this.setModel(null);\n                }));\n            }\n        }));\n        this._register(autorun(reader => {\n            this._options.setModel(this._diffModel.read(reader));\n        }));\n    }\n    _createInnerEditor(instantiationService, container, options, editorWidgetOptions) {\n        const editor = instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\n        return editor;\n    }\n    _createDiffEditorContributions() {\n        const contributions = EditorExtensionsRegistry.getDiffEditorContributions();\n        for (const desc of contributions) {\n            try {\n                this._register(this._instantiationService.createInstance(desc.ctor, this));\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n        }\n    }\n    get _targetEditor() { return this._editors.modified; }\n    getEditorType() { return EditorType.IDiffEditor; }\n    layout(dimension) {\n        this._rootSizeObserver.observe(dimension);\n    }\n    hasTextFocus() { return this._editors.original.hasTextFocus() || this._editors.modified.hasTextFocus(); }\n    saveViewState() {\n        const originalViewState = this._editors.original.saveViewState();\n        const modifiedViewState = this._editors.modified.saveViewState();\n        return {\n            original: originalViewState,\n            modified: modifiedViewState,\n            modelState: this._diffModel.get()?.serializeState(),\n        };\n    }\n    restoreViewState(s) {\n        if (s && s.original && s.modified) {\n            const diffEditorState = s;\n            this._editors.original.restoreViewState(diffEditorState.original);\n            this._editors.modified.restoreViewState(diffEditorState.modified);\n            if (diffEditorState.modelState) {\n                this._diffModel.get()?.restoreSerializedState(diffEditorState.modelState);\n            }\n        }\n    }\n    handleInitialized() {\n        this._editors.original.handleInitialized();\n        this._editors.modified.handleInitialized();\n    }\n    createViewModel(model) {\n        return this._instantiationService.createInstance(DiffEditorViewModel, model, this._options);\n    }\n    getModel() { return this._diffModel.get()?.model ?? null; }\n    setModel(model) {\n        const vm = !model ? null\n            : ('model' in model) ? RefCounted.create(model).createNewRef(this)\n                : RefCounted.create(this.createViewModel(model), this);\n        this.setDiffModel(vm);\n    }\n    setDiffModel(viewModel, tx) {\n        const currentModel = this._diffModel.get();\n        if (!viewModel && currentModel) {\n            // Transitioning from a model to no-model\n            this._accessibleDiffViewer.get().close();\n        }\n        if (this._diffModel.get() !== viewModel?.object) {\n            subtransaction(tx, tx => {\n                const vm = viewModel?.object;\n                /** @description DiffEditorWidget.setModel */\n                observableFromEvent.batchEventsGlobally(tx, () => {\n                    this._editors.original.setModel(vm ? vm.model.original : null);\n                    this._editors.modified.setModel(vm ? vm.model.modified : null);\n                });\n                const prevValueRef = this._diffModelSrc.get()?.createNewRef(this);\n                this._diffModelSrc.set(viewModel?.createNewRef(this), tx);\n                setTimeout(() => {\n                    // async, so that this runs after the transaction finished.\n                    // TODO: use the transaction to schedule disposal\n                    prevValueRef?.dispose();\n                }, 0);\n            });\n        }\n    }\n    /**\n     * @param changedOptions Only has values for top-level options that have actually changed.\n     */\n    updateOptions(changedOptions) {\n        this._options.updateOptions(changedOptions);\n    }\n    getContainerDomNode() { return this._domElement; }\n    getOriginalEditor() { return this._editors.original; }\n    getModifiedEditor() { return this._editors.modified; }\n    /**\n     * @deprecated Use `this.getDiffComputationResult().changes2` instead.\n     */\n    getLineChanges() {\n        const diffState = this._diffModel.get()?.diff.get();\n        if (!diffState) {\n            return null;\n        }\n        return toLineChanges(diffState);\n    }\n    revert(diff) {\n        const model = this._diffModel.get();\n        if (!model || !model.isDiffUpToDate.get()) {\n            return;\n        }\n        this._editors.modified.executeEdits('diffEditor', [\n            {\n                range: diff.modified.toExclusiveRange(),\n                text: model.model.original.getValueInRange(diff.original.toExclusiveRange())\n            }\n        ]);\n    }\n    revertRangeMappings(diffs) {\n        const model = this._diffModel.get();\n        if (!model || !model.isDiffUpToDate.get()) {\n            return;\n        }\n        const changes = diffs.map(c => ({\n            range: c.modifiedRange,\n            text: model.model.original.getValueInRange(c.originalRange)\n        }));\n        this._editors.modified.executeEdits('diffEditor', changes);\n    }\n    _goTo(diff) {\n        this._editors.modified.setPosition(new Position(diff.lineRangeMapping.modified.startLineNumber, 1));\n        this._editors.modified.revealRangeInCenter(diff.lineRangeMapping.modified.toExclusiveRange());\n    }\n    goToDiff(target) {\n        const diffs = this._diffModel.get()?.diff.get()?.mappings;\n        if (!diffs || diffs.length === 0) {\n            return;\n        }\n        const curLineNumber = this._editors.modified.getPosition().lineNumber;\n        let diff;\n        if (target === 'next') {\n            diff = diffs.find(d => d.lineRangeMapping.modified.startLineNumber > curLineNumber) ?? diffs[0];\n        }\n        else {\n            diff = findLast(diffs, d => d.lineRangeMapping.modified.startLineNumber < curLineNumber) ?? diffs[diffs.length - 1];\n        }\n        this._goTo(diff);\n        if (diff.lineRangeMapping.modified.isEmpty) {\n            this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineDeleted, { source: 'diffEditor.goToDiff' });\n        }\n        else if (diff.lineRangeMapping.original.isEmpty) {\n            this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineInserted, { source: 'diffEditor.goToDiff' });\n        }\n        else if (diff) {\n            this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineModified, { source: 'diffEditor.goToDiff' });\n        }\n    }\n    revealFirstDiff() {\n        const diffModel = this._diffModel.get();\n        if (!diffModel) {\n            return;\n        }\n        // wait for the diff computation to finish\n        this.waitForDiff().then(() => {\n            const diffs = diffModel.diff.get()?.mappings;\n            if (!diffs || diffs.length === 0) {\n                return;\n            }\n            this._goTo(diffs[0]);\n        });\n    }\n    accessibleDiffViewerNext() { this._accessibleDiffViewer.get().next(); }\n    accessibleDiffViewerPrev() { this._accessibleDiffViewer.get().prev(); }\n    async waitForDiff() {\n        const diffModel = this._diffModel.get();\n        if (!diffModel) {\n            return;\n        }\n        await diffModel.waitForDiff();\n    }\n    mapToOtherSide() {\n        const isModifiedFocus = this._editors.modified.hasWidgetFocus();\n        const source = isModifiedFocus ? this._editors.modified : this._editors.original;\n        const destination = isModifiedFocus ? this._editors.original : this._editors.modified;\n        let destinationSelection;\n        const sourceSelection = source.getSelection();\n        if (sourceSelection) {\n            const mappings = this._diffModel.get()?.diff.get()?.mappings.map(m => isModifiedFocus ? m.lineRangeMapping.flip() : m.lineRangeMapping);\n            if (mappings) {\n                const newRange1 = translatePosition(sourceSelection.getStartPosition(), mappings);\n                const newRange2 = translatePosition(sourceSelection.getEndPosition(), mappings);\n                destinationSelection = Range.plusRange(newRange1, newRange2);\n            }\n        }\n        return { destination, destinationSelection };\n    }\n    switchSide() {\n        const { destination, destinationSelection } = this.mapToOtherSide();\n        destination.focus();\n        if (destinationSelection) {\n            destination.setSelection(destinationSelection);\n        }\n    }\n    exitCompareMove() {\n        const model = this._diffModel.get();\n        if (!model) {\n            return;\n        }\n        model.movedTextToCompare.set(undefined, undefined);\n    }\n    collapseAllUnchangedRegions() {\n        const unchangedRegions = this._diffModel.get()?.unchangedRegions.get();\n        if (!unchangedRegions) {\n            return;\n        }\n        transaction(tx => {\n            for (const region of unchangedRegions) {\n                region.collapseAll(tx);\n            }\n        });\n    }\n    showAllUnchangedRegions() {\n        const unchangedRegions = this._diffModel.get()?.unchangedRegions.get();\n        if (!unchangedRegions) {\n            return;\n        }\n        transaction(tx => {\n            for (const region of unchangedRegions) {\n                region.showAll(tx);\n            }\n        });\n    }\n    _handleCursorPositionChange(e, isModifiedEditor) {\n        if (e?.reason === 3 /* CursorChangeReason.Explicit */) {\n            const diff = this._diffModel.get()?.diff.get()?.mappings.find(m => isModifiedEditor ? m.lineRangeMapping.modified.contains(e.position.lineNumber) : m.lineRangeMapping.original.contains(e.position.lineNumber));\n            if (diff?.lineRangeMapping.modified.isEmpty) {\n                this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineDeleted, { source: 'diffEditor.cursorPositionChanged' });\n            }\n            else if (diff?.lineRangeMapping.original.isEmpty) {\n                this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineInserted, { source: 'diffEditor.cursorPositionChanged' });\n            }\n            else if (diff) {\n                this._accessibilitySignalService.playSignal(AccessibilitySignal.diffLineModified, { source: 'diffEditor.cursorPositionChanged' });\n            }\n        }\n    }\n};\nDiffEditorWidget = __decorate([\n    __param(3, IContextKeyService),\n    __param(4, IInstantiationService),\n    __param(5, ICodeEditorService),\n    __param(6, IAccessibilitySignalService),\n    __param(7, IEditorProgressService)\n], DiffEditorWidget);\nexport { DiffEditorWidget };\nfunction toLineChanges(state) {\n    return state.mappings.map(x => {\n        const m = x.lineRangeMapping;\n        let originalStartLineNumber;\n        let originalEndLineNumber;\n        let modifiedStartLineNumber;\n        let modifiedEndLineNumber;\n        let innerChanges = m.innerChanges;\n        if (m.original.isEmpty) {\n            // Insertion\n            originalStartLineNumber = m.original.startLineNumber - 1;\n            originalEndLineNumber = 0;\n            innerChanges = undefined;\n        }\n        else {\n            originalStartLineNumber = m.original.startLineNumber;\n            originalEndLineNumber = m.original.endLineNumberExclusive - 1;\n        }\n        if (m.modified.isEmpty) {\n            // Deletion\n            modifiedStartLineNumber = m.modified.startLineNumber - 1;\n            modifiedEndLineNumber = 0;\n            innerChanges = undefined;\n        }\n        else {\n            modifiedStartLineNumber = m.modified.startLineNumber;\n            modifiedEndLineNumber = m.modified.endLineNumberExclusive - 1;\n        }\n        return {\n            originalStartLineNumber,\n            originalEndLineNumber,\n            modifiedStartLineNumber,\n            modifiedEndLineNumber,\n            charChanges: innerChanges?.map(m => ({\n                originalStartLineNumber: m.originalRange.startLineNumber,\n                originalStartColumn: m.originalRange.startColumn,\n                originalEndLineNumber: m.originalRange.endLineNumber,\n                originalEndColumn: m.originalRange.endColumn,\n                modifiedStartLineNumber: m.modifiedRange.startLineNumber,\n                modifiedStartColumn: m.modifiedRange.startColumn,\n                modifiedEndLineNumber: m.modifiedRange.endLineNumber,\n                modifiedEndColumn: m.modifiedRange.endColumn,\n            }))\n        };\n    });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
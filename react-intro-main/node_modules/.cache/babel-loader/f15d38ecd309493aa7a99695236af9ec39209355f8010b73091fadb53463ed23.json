{"ast":null,"code":"var _jsxFileName = \"D:\\\\ospanel\\\\domains\\\\react\\\\react-intro\\\\src\\\\components\\\\GraphComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { domUtils, createGraphContainer, Graph, InternalEvent, RubberBandHandler, ConnectionHandler, EdgeStyle, UndoManager, CellEditorHandler, Guide, GraphView, SelectionHandler, PanningHandler, TooltipHandler, SelectionCellsHandler, PopupMenuHandler } from '@maxgraph/core';\nimport '@maxgraph/core/css/common.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectionsWires = () => {\n  _s();\n  const graphContainerRef = useRef(null);\n  const graphRef = useRef(null);\n  useEffect(() => {\n    const graphContainer = createGraphContainer({\n      // pass any configuration props here if needed\n    });\n    graphContainerRef.current.appendChild(graphContainer);\n\n    // Create Graph instance\n    const graph = new Graph(graphContainer, null, [CellEditorHandler, TooltipHandler, SelectionCellsHandler, PopupMenuHandler, ConnectionHandler, SelectionHandler, PanningHandler]);\n\n    // Set initial settings for the graph\n    graph.view.scale = 1;\n    graph.setPanning(true);\n    graph.setConnectable(true);\n    graph.setConnectableEdges(true);\n    graph.setDisconnectOnMove(false);\n    graph.foldingEnabled = false;\n    graph.maximumGraphBounds = {\n      x: 0,\n      y: 0,\n      width: 800,\n      height: 600\n    };\n    graph.border = 50;\n    graph.setEnterStopsCellEditing(true);\n    new RubberBandHandler(graph);\n    graph.setTooltips(true);\n\n    // Customize styles\n    const style = graph.getStylesheet().getDefaultEdgeStyle();\n    delete style.endArrow;\n    style.strokeColor = '#000000';\n    style.labelBackgroundColor = '#FFFFFF';\n    style.edgeStyle = EdgeStyle.WireConnector;\n    style.fontColor = '#000000';\n    style.fontSize = '9';\n    style.movable = '0';\n    style.strokeWidth = 2;\n    style.startSize = 7;\n    style.endSize = 7;\n    const vertexStyle = graph.getStylesheet().getDefaultVertexStyle();\n    vertexStyle.gradientDirection = 'south';\n    vertexStyle.strokeColor = '#000000';\n    vertexStyle.fillColor = 'none';\n    vertexStyle.fontColor = '#000000';\n    vertexStyle.fontStyle = '1';\n    vertexStyle.fontSize = '12';\n    vertexStyle.resizable = '0';\n    vertexStyle.rounded = '1';\n    vertexStyle.strokeWidth = 2;\n\n    // Add graph instance to ref\n    graphRef.current = graph;\n    return () => {\n      // Cleanup graph instance\n      graph.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: graphContainerRef,\n      style: {\n        overflow: 'auto',\n        position: 'relative',\n        width: '800px',\n        height: '600px',\n        border: '1px solid gray',\n        background: \"url('images/wires-grid.gif')\",\n        backgroundPosition: '-1px 0px',\n        cursor: 'crosshair'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => graphRef.current.zoomIn(),\n      children: \"Zoom In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => graphRef.current.zoomOut(),\n      children: \"Zoom Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => graphRef.current.undo(),\n      children: \"Undo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => graphRef.current.redo(),\n      children: \"Redo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => graphRef.current.removeCells(),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: e => {\n        if (e.target.checked) {\n          graphContainerRef.current.style.background = 'url(./images/grid.gif)';\n        } else {\n          graphContainerRef.current.style.background = '';\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectionsWires, \"OMKQGOQGd1anqB/b/kCJKE2eJZM=\");\n_c = ConnectionsWires;\nexport default ConnectionsWires;\nvar _c;\n$RefreshReg$(_c, \"ConnectionsWires\");","map":{"version":3,"names":["React","useEffect","useRef","domUtils","createGraphContainer","Graph","InternalEvent","RubberBandHandler","ConnectionHandler","EdgeStyle","UndoManager","CellEditorHandler","Guide","GraphView","SelectionHandler","PanningHandler","TooltipHandler","SelectionCellsHandler","PopupMenuHandler","jsxDEV","_jsxDEV","ConnectionsWires","_s","graphContainerRef","graphRef","graphContainer","current","appendChild","graph","view","scale","setPanning","setConnectable","setConnectableEdges","setDisconnectOnMove","foldingEnabled","maximumGraphBounds","x","y","width","height","border","setEnterStopsCellEditing","setTooltips","style","getStylesheet","getDefaultEdgeStyle","endArrow","strokeColor","labelBackgroundColor","edgeStyle","WireConnector","fontColor","fontSize","movable","strokeWidth","startSize","endSize","vertexStyle","getDefaultVertexStyle","gradientDirection","fillColor","fontStyle","resizable","rounded","destroy","children","ref","overflow","position","background","backgroundPosition","cursor","fileName","_jsxFileName","lineNumber","columnNumber","onClick","zoomIn","zoomOut","undo","redo","removeCells","type","onChange","e","target","checked","_c","$RefreshReg$"],"sources":["D:/ospanel/domains/react/react-intro/src/components/GraphComponent.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport {\r\n  domUtils,\r\n  createGraphContainer,\r\n  Graph,\r\n  InternalEvent,\r\n  RubberBandHandler,\r\n  ConnectionHandler,\r\n  EdgeStyle,\r\n  UndoManager,\r\n  CellEditorHandler,\r\n  Guide,\r\n  GraphView,\r\n  SelectionHandler,\r\n  PanningHandler,\r\n  TooltipHandler,\r\n  SelectionCellsHandler,\r\n  PopupMenuHandler,\r\n} from '@maxgraph/core';\r\nimport '@maxgraph/core/css/common.css';\r\n\r\nconst ConnectionsWires = () => {\r\n  const graphContainerRef = useRef(null);\r\n  const graphRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const graphContainer = createGraphContainer({\r\n      // pass any configuration props here if needed\r\n    });\r\n\r\n    graphContainerRef.current.appendChild(graphContainer);\r\n\r\n    // Create Graph instance\r\n    const graph = new Graph(graphContainer, null, [\r\n      CellEditorHandler,\r\n      TooltipHandler,\r\n      SelectionCellsHandler,\r\n      PopupMenuHandler,\r\n      ConnectionHandler,\r\n      SelectionHandler,\r\n      PanningHandler,\r\n    ]);\r\n\r\n    // Set initial settings for the graph\r\n    graph.view.scale = 1;\r\n    graph.setPanning(true);\r\n    graph.setConnectable(true);\r\n    graph.setConnectableEdges(true);\r\n    graph.setDisconnectOnMove(false);\r\n    graph.foldingEnabled = false;\r\n    graph.maximumGraphBounds = { x: 0, y: 0, width: 800, height: 600 };\r\n    graph.border = 50;\r\n    graph.setEnterStopsCellEditing(true);\r\n    new RubberBandHandler(graph);\r\n    graph.setTooltips(true);\r\n\r\n    // Customize styles\r\n    const style = graph.getStylesheet().getDefaultEdgeStyle();\r\n    delete style.endArrow;\r\n    style.strokeColor = '#000000';\r\n    style.labelBackgroundColor = '#FFFFFF';\r\n    style.edgeStyle = EdgeStyle.WireConnector;\r\n    style.fontColor = '#000000';\r\n    style.fontSize = '9';\r\n    style.movable = '0';\r\n    style.strokeWidth = 2;\r\n    style.startSize = 7;\r\n    style.endSize = 7;\r\n\r\n    const vertexStyle = graph.getStylesheet().getDefaultVertexStyle();\r\n    vertexStyle.gradientDirection = 'south';\r\n    vertexStyle.strokeColor = '#000000';\r\n    vertexStyle.fillColor = 'none';\r\n    vertexStyle.fontColor = '#000000';\r\n    vertexStyle.fontStyle = '1';\r\n    vertexStyle.fontSize = '12';\r\n    vertexStyle.resizable = '0';\r\n    vertexStyle.rounded = '1';\r\n    vertexStyle.strokeWidth = 2;\r\n\r\n    // Add graph instance to ref\r\n    graphRef.current = graph;\r\n\r\n    return () => {\r\n      // Cleanup graph instance\r\n      graph.destroy();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div ref={graphContainerRef} style={{ overflow: 'auto', position: 'relative', width: '800px', height: '600px', border: '1px solid gray', background: \"url('images/wires-grid.gif')\", backgroundPosition: '-1px 0px', cursor: 'crosshair' }}>\r\n      </div>\r\n      <button onClick={() => graphRef.current.zoomIn()}>Zoom In</button>\r\n      <button onClick={() => graphRef.current.zoomOut()}>Zoom Out</button>\r\n      <button onClick={() => graphRef.current.undo()}>Undo</button>\r\n      <button onClick={() => graphRef.current.redo()}>Redo</button>\r\n      <button onClick={() => graphRef.current.removeCells()}>Delete</button>\r\n      <input type=\"checkbox\" onChange={(e) => {\r\n        if (e.target.checked) {\r\n          graphContainerRef.current.style.background = 'url(./images/grid.gif)';\r\n        } else {\r\n          graphContainerRef.current.style.background = '';\r\n        }\r\n      }} />\r\n      <label>Grid</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConnectionsWires;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
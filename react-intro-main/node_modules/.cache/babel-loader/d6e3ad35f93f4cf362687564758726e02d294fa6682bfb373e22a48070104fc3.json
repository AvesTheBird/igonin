{"ast":null,"code":"var _jsxFileName = \"D:\\\\ospanel\\\\domains\\\\\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B open server\\\\old\\\\react\\\\react-intro-main\\\\src\\\\components\\\\Editor.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react'; // добавлен useRef\nimport * as monaco from 'monaco-editor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VHDLEditor = ({\n  id,\n  onCodeChange,\n  initialCode\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  useEffect(() => {\n    if (editorRef.current) {\n      const editorInstance = monaco.editor.create(editorRef.current, {\n        value: initialCode,\n        language: 'vhdl',\n        theme: 'vs-dark',\n        automaticLayout: true\n      });\n      const debounceChangeHandler = debounce(() => {\n        const code = editorInstance.getValue();\n        onCodeChange(code);\n      }, 300);\n      editorInstance.onDidChangeModelContent(debounceChangeHandler);\n      return () => {\n        editorInstance.dispose();\n      };\n    }\n  }, [initialCode, onCodeChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    ref: editorRef,\n    className: \"vhdl-editor\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n_s(VHDLEditor, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n_c = VHDLEditor;\nfunction debounce(func, wait) {\n  let timeout;\n  return function () {\n    clearTimeout(timeout);\n    timeout = setTimeout(func, wait);\n  };\n}\nconst CompilerConsole = ({\n  output\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"compiler-console\",\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"\\u041A\\u043E\\u043D\\u0441\\u043E\\u043B\\u044C:\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n    children: output\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 3\n}, this);\n_c2 = CompilerConsole;\nconst VHDLEditorWithCompiler = () => {\n  _s2();\n  const [architectureCode, setArchitectureCode] = useState(`library IEEE;\nuse IEEE.STD_LOGIC_1164.ALL;\n\nentity AND_Gate is\n    Port (\n        A : in STD_LOGIC;\n        B : in STD_LOGIC;\n        Y : out STD_LOGIC\n    );\nend AND_Gate;\n\narchitecture Behavioral of AND_Gate is\nbegin\n    Y <= A and B;\nend Behavioral;`);\n  const [testbenchCode, setTestbenchCode] = useState(`library IEEE;\nuse IEEE.STD_LOGIC_1164.ALL;\n\nentity AND_Gate_TB is\nend AND_Gate_TB;\n\narchitecture Behavioral of AND_Gate_TB is\n    component AND_Gate\n        Port (\n            A : in STD_LOGIC;\n            B : in STD_LOGIC;\n            Y : out STD_LOGIC\n        );\n    end component;\n\n    signal A : STD_LOGIC := '0';\n    signal B : STD_LOGIC := '0';\n    signal Y : STD_LOGIC;\n\nbegin\n    UUT: AND_Gate\n        Port map (\n            A => A,\n            B => B,\n            Y => Y\n        );\n\n    stimulus: process\n    begin\n        A <= '0'; B <= '0';\n        wait for 10 ns;\n        A <= '0'; B <= '1';\n        wait for 10 ns;\n        A <= '1'; B <= '0';\n        wait for 10 ns;\n        A <= '1'; B <= '1';\n        wait for 10 ns;\n        wait;\n    end process;\nend Behavioral;`);\n  const [output, setOutput] = useState('');\n  const compileCode = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/compile-vhdl', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          architectureCode,\n          testbenchCode\n        })\n      });\n      const result = await response.json(); // Получаем ответ в формате JSON\n      setOutput(result.message); // Сообщение от сервера\n    } catch (error) {\n      setOutput('Ошибка компиляции: ' + error.message);\n    }\n  };\n  const downloadVCD = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/compile-vhdl', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          architectureCode,\n          testbenchCode\n        })\n      });\n      const result = await response.json();\n      if (result.vcd) {\n        const blob = new Blob([result.vcd], {\n          type: 'text/plain'\n        });\n        const link = document.createElement('a');\n        link.href = URL.createObjectURL(blob);\n        link.download = 'out.vcd'; // Устанавливаем имя файла для скачивания\n        link.click();\n      }\n    } catch (error) {\n      setOutput('Ошибка скачивания VCD: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"content-container\",\n    className: \"content-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0410\\u0440\\u0445\\u0438\\u0442\\u0435\\u043A\\u0442\\u0443\\u0440\\u0430:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VHDLEditor, {\n      id: \"architecture-editor\",\n      onCodeChange: setArchitectureCode,\n      initialCode: architectureCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0439 \\u0441\\u0442\\u0435\\u043D\\u0434:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VHDLEditor, {\n      id: \"testbench-editor\",\n      onCodeChange: setTestbenchCode,\n      initialCode: testbenchCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompilerConsole, {\n      output: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: compileCode,\n      children: \"\\u041A\\u043E\\u043C\\u043F\\u0438\\u043B\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: downloadVCD,\n      children: \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C VCD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s2(VHDLEditorWithCompiler, \"I9cDmI3k2eAVmSMd+x2wJhEB8n8=\");\n_c3 = VHDLEditorWithCompiler;\nexport default VHDLEditorWithCompiler;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"VHDLEditor\");\n$RefreshReg$(_c2, \"CompilerConsole\");\n$RefreshReg$(_c3, \"VHDLEditorWithCompiler\");","map":{"version":3,"names":["React","useState","useEffect","useRef","monaco","jsxDEV","_jsxDEV","VHDLEditor","id","onCodeChange","initialCode","_s","editorRef","current","editorInstance","editor","create","value","language","theme","automaticLayout","debounceChangeHandler","debounce","code","getValue","onDidChangeModelContent","dispose","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","func","wait","timeout","clearTimeout","setTimeout","CompilerConsole","output","children","_c2","VHDLEditorWithCompiler","_s2","architectureCode","setArchitectureCode","testbenchCode","setTestbenchCode","setOutput","compileCode","response","fetch","method","headers","body","JSON","stringify","result","json","message","error","downloadVCD","vcd","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","click","onClick","_c3","$RefreshReg$"],"sources":["D:/ospanel/domains/проекты open server/old/react/react-intro-main/src/components/Editor.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'; // добавлен useRef\r\nimport * as monaco from 'monaco-editor';\r\n\r\nconst VHDLEditor = ({ id, onCodeChange, initialCode }) => {\r\n  const editorRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (editorRef.current) {\r\n      const editorInstance = monaco.editor.create(editorRef.current, {\r\n        value: initialCode,\r\n        language: 'vhdl',\r\n        theme: 'vs-dark',\r\n        automaticLayout: true,\r\n      });\r\n\r\n      const debounceChangeHandler = debounce(() => {\r\n        const code = editorInstance.getValue();\r\n        onCodeChange(code);\r\n      }, 300);\r\n\r\n      editorInstance.onDidChangeModelContent(debounceChangeHandler);\r\n\r\n      return () => {\r\n        editorInstance.dispose();\r\n      };\r\n    }\r\n  }, [initialCode, onCodeChange]);\r\n\r\n  return <div id={id} ref={editorRef} className=\"vhdl-editor\"></div>;\r\n};\r\n\r\nfunction debounce(func, wait) {\r\n  let timeout;\r\n  return function () {\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(func, wait);\r\n  };\r\n}\r\n\r\nconst CompilerConsole = ({ output }) => (\r\n  <div className=\"compiler-console\">\r\n    <h3>Консоль:</h3>\r\n    <pre>{output}</pre>\r\n  </div>\r\n);\r\n\r\nconst VHDLEditorWithCompiler = () => {\r\n  const [architectureCode, setArchitectureCode] = useState(`library IEEE;\r\nuse IEEE.STD_LOGIC_1164.ALL;\r\n\r\nentity AND_Gate is\r\n    Port (\r\n        A : in STD_LOGIC;\r\n        B : in STD_LOGIC;\r\n        Y : out STD_LOGIC\r\n    );\r\nend AND_Gate;\r\n\r\narchitecture Behavioral of AND_Gate is\r\nbegin\r\n    Y <= A and B;\r\nend Behavioral;`);\r\n  \r\n  const [testbenchCode, setTestbenchCode] = useState(`library IEEE;\r\nuse IEEE.STD_LOGIC_1164.ALL;\r\n\r\nentity AND_Gate_TB is\r\nend AND_Gate_TB;\r\n\r\narchitecture Behavioral of AND_Gate_TB is\r\n    component AND_Gate\r\n        Port (\r\n            A : in STD_LOGIC;\r\n            B : in STD_LOGIC;\r\n            Y : out STD_LOGIC\r\n        );\r\n    end component;\r\n\r\n    signal A : STD_LOGIC := '0';\r\n    signal B : STD_LOGIC := '0';\r\n    signal Y : STD_LOGIC;\r\n\r\nbegin\r\n    UUT: AND_Gate\r\n        Port map (\r\n            A => A,\r\n            B => B,\r\n            Y => Y\r\n        );\r\n\r\n    stimulus: process\r\n    begin\r\n        A <= '0'; B <= '0';\r\n        wait for 10 ns;\r\n        A <= '0'; B <= '1';\r\n        wait for 10 ns;\r\n        A <= '1'; B <= '0';\r\n        wait for 10 ns;\r\n        A <= '1'; B <= '1';\r\n        wait for 10 ns;\r\n        wait;\r\n    end process;\r\nend Behavioral;`);\r\n  \r\n  const [output, setOutput] = useState('');\r\n  \r\n  const compileCode = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/compile-vhdl', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ architectureCode, testbenchCode }),\r\n      });\r\n      const result = await response.json(); // Получаем ответ в формате JSON\r\n      setOutput(result.message); // Сообщение от сервера\r\n    } catch (error) {\r\n      setOutput('Ошибка компиляции: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const downloadVCD = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/compile-vhdl', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ architectureCode, testbenchCode }),\r\n      });\r\n      const result = await response.json();\r\n      \r\n      if (result.vcd) {\r\n        const blob = new Blob([result.vcd], { type: 'text/plain' });\r\n        const link = document.createElement('a');\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = 'out.vcd'; // Устанавливаем имя файла для скачивания\r\n        link.click();\r\n      }\r\n    } catch (error) {\r\n      setOutput('Ошибка скачивания VCD: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"content-container\" className=\"content-container\">\r\n      <h3>Архитектура:</h3>\r\n      <VHDLEditor\r\n        id=\"architecture-editor\"\r\n        onCodeChange={setArchitectureCode}\r\n        initialCode={architectureCode}\r\n      />\r\n\r\n      <h3>Тестовый стенд:</h3>\r\n      <VHDLEditor\r\n        id=\"testbench-editor\"\r\n        onCodeChange={setTestbenchCode}\r\n        initialCode={testbenchCode}\r\n      />\r\n\r\n      <CompilerConsole output={output} />\r\n\r\n      <button onClick={compileCode}>Компилировать</button>\r\n      <button onClick={downloadVCD}>Скачать VCD</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VHDLEditorWithCompiler;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _QuickInputController;\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar QuickInputController_1;\nimport * as dom from '../../../base/browser/dom.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { Button } from '../../../base/browser/ui/button/button.js';\nimport { CountBadge } from '../../../base/browser/ui/countBadge/countBadge.js';\nimport { ProgressBar } from '../../../base/browser/ui/progressbar/progressbar.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable, dispose } from '../../../base/common/lifecycle.js';\nimport Severity from '../../../base/common/severity.js';\nimport { localize } from '../../../nls.js';\nimport { QuickInputHideReason } from '../common/quickInput.js';\nimport { QuickInputBox } from './quickInputBox.js';\nimport { QuickPick, backButton, InputBox, InQuickInputContextKey, QuickInputTypeContextKey, EndOfQuickInputBoxContextKey } from './quickInput.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { QuickInputTree } from './quickInputTree.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport './quickInputActions.js';\nconst $ = dom.$;\nlet QuickInputController = (_QuickInputController = class QuickInputController extends Disposable {\n  // Max total width of quick input widget\n  get currentQuickInput() {\n    var _this$controller;\n    return (_this$controller = this.controller) !== null && _this$controller !== void 0 ? _this$controller : undefined;\n  }\n  get container() {\n    return this._container;\n  }\n  constructor(options, layoutService, instantiationService, contextKeyService) {\n    super();\n    this.options = options;\n    this.layoutService = layoutService;\n    this.instantiationService = instantiationService;\n    this.contextKeyService = contextKeyService;\n    this.enabled = true;\n    this.onDidAcceptEmitter = this._register(new Emitter());\n    this.onDidCustomEmitter = this._register(new Emitter());\n    this.onDidTriggerButtonEmitter = this._register(new Emitter());\n    this.keyMods = {\n      ctrlCmd: false,\n      alt: false\n    };\n    this.controller = null;\n    this.onShowEmitter = this._register(new Emitter());\n    this.onShow = this.onShowEmitter.event;\n    this.onHideEmitter = this._register(new Emitter());\n    this.onHide = this.onHideEmitter.event;\n    this.inQuickInputContext = InQuickInputContextKey.bindTo(this.contextKeyService);\n    this.quickInputTypeContext = QuickInputTypeContextKey.bindTo(this.contextKeyService);\n    this.endOfQuickInputBoxContext = EndOfQuickInputBoxContextKey.bindTo(this.contextKeyService);\n    this.idPrefix = options.idPrefix;\n    this._container = options.container;\n    this.styles = options.styles;\n    this._register(Event.runAndSubscribe(dom.onDidRegisterWindow, _ref => {\n      let {\n        window,\n        disposables\n      } = _ref;\n      return this.registerKeyModsListeners(window, disposables);\n    }, {\n      window: mainWindow,\n      disposables: this._store\n    }));\n    this._register(dom.onWillUnregisterWindow(window => {\n      if (this.ui && dom.getWindow(this.ui.container) === window) {\n        // The window this quick input is contained in is about to\n        // close, so we have to make sure to reparent it back to an\n        // existing parent to not loose functionality.\n        // (https://github.com/microsoft/vscode/issues/195870)\n        this.reparentUI(this.layoutService.mainContainer);\n        this.layout(this.layoutService.mainContainerDimension, this.layoutService.mainContainerOffset.quickPickTop);\n      }\n    }));\n  }\n  registerKeyModsListeners(window, disposables) {\n    const listener = e => {\n      this.keyMods.ctrlCmd = e.ctrlKey || e.metaKey;\n      this.keyMods.alt = e.altKey;\n    };\n    for (const event of [dom.EventType.KEY_DOWN, dom.EventType.KEY_UP, dom.EventType.MOUSE_DOWN]) {\n      disposables.add(dom.addDisposableListener(window, event, listener, true));\n    }\n  }\n  getUI(showInActiveContainer) {\n    if (this.ui) {\n      // In order to support aux windows, re-parent the controller\n      // if the original event is from a different document\n      if (showInActiveContainer) {\n        if (dom.getWindow(this._container) !== dom.getWindow(this.layoutService.activeContainer)) {\n          this.reparentUI(this.layoutService.activeContainer);\n          this.layout(this.layoutService.activeContainerDimension, this.layoutService.activeContainerOffset.quickPickTop);\n        }\n      }\n      return this.ui;\n    }\n    const container = dom.append(this._container, $('.quick-input-widget.show-file-icons'));\n    container.tabIndex = -1;\n    container.style.display = 'none';\n    const styleSheet = dom.createStyleSheet(container);\n    const titleBar = dom.append(container, $('.quick-input-titlebar'));\n    const leftActionBar = this._register(new ActionBar(titleBar, {\n      hoverDelegate: this.options.hoverDelegate\n    }));\n    leftActionBar.domNode.classList.add('quick-input-left-action-bar');\n    const title = dom.append(titleBar, $('.quick-input-title'));\n    const rightActionBar = this._register(new ActionBar(titleBar, {\n      hoverDelegate: this.options.hoverDelegate\n    }));\n    rightActionBar.domNode.classList.add('quick-input-right-action-bar');\n    const headerContainer = dom.append(container, $('.quick-input-header'));\n    const checkAll = dom.append(headerContainer, $('input.quick-input-check-all'));\n    checkAll.type = 'checkbox';\n    checkAll.setAttribute('aria-label', localize('quickInput.checkAll', \"Toggle all checkboxes\"));\n    this._register(dom.addStandardDisposableListener(checkAll, dom.EventType.CHANGE, e => {\n      const checked = checkAll.checked;\n      list.setAllVisibleChecked(checked);\n    }));\n    this._register(dom.addDisposableListener(checkAll, dom.EventType.CLICK, e => {\n      if (e.x || e.y) {\n        // Avoid 'click' triggered by 'space'...\n        inputBox.setFocus();\n      }\n    }));\n    const description2 = dom.append(headerContainer, $('.quick-input-description'));\n    const inputContainer = dom.append(headerContainer, $('.quick-input-and-message'));\n    const filterContainer = dom.append(inputContainer, $('.quick-input-filter'));\n    const inputBox = this._register(new QuickInputBox(filterContainer, this.styles.inputBox, this.styles.toggle));\n    inputBox.setAttribute('aria-describedby', \"\".concat(this.idPrefix, \"message\"));\n    const visibleCountContainer = dom.append(filterContainer, $('.quick-input-visible-count'));\n    visibleCountContainer.setAttribute('aria-live', 'polite');\n    visibleCountContainer.setAttribute('aria-atomic', 'true');\n    const visibleCount = new CountBadge(visibleCountContainer, {\n      countFormat: localize({\n        key: 'quickInput.visibleCount',\n        comment: ['This tells the user how many items are shown in a list of items to select from. The items can be anything. Currently not visible, but read by screen readers.']\n      }, \"{0} Results\")\n    }, this.styles.countBadge);\n    const countContainer = dom.append(filterContainer, $('.quick-input-count'));\n    countContainer.setAttribute('aria-live', 'polite');\n    const count = new CountBadge(countContainer, {\n      countFormat: localize({\n        key: 'quickInput.countSelected',\n        comment: ['This tells the user how many items are selected in a list of items to select from. The items can be anything.']\n      }, \"{0} Selected\")\n    }, this.styles.countBadge);\n    const inlineActionBar = this._register(new ActionBar(headerContainer, {\n      hoverDelegate: this.options.hoverDelegate\n    }));\n    inlineActionBar.domNode.classList.add('quick-input-inline-action-bar');\n    const okContainer = dom.append(headerContainer, $('.quick-input-action'));\n    const ok = this._register(new Button(okContainer, this.styles.button));\n    ok.label = localize('ok', \"OK\");\n    this._register(ok.onDidClick(e => {\n      this.onDidAcceptEmitter.fire();\n    }));\n    const customButtonContainer = dom.append(headerContainer, $('.quick-input-action'));\n    const customButton = this._register(new Button(customButtonContainer, {\n      ...this.styles.button,\n      supportIcons: true\n    }));\n    customButton.label = localize('custom', \"Custom\");\n    this._register(customButton.onDidClick(e => {\n      this.onDidCustomEmitter.fire();\n    }));\n    const message = dom.append(inputContainer, $(\"#\".concat(this.idPrefix, \"message.quick-input-message\")));\n    const progressBar = this._register(new ProgressBar(container, this.styles.progressBar));\n    progressBar.getContainer().classList.add('quick-input-progress');\n    const widget = dom.append(container, $('.quick-input-html-widget'));\n    widget.tabIndex = -1;\n    const description1 = dom.append(container, $('.quick-input-description'));\n    const listId = this.idPrefix + 'list';\n    const list = this._register(this.instantiationService.createInstance(QuickInputTree, container, this.options.hoverDelegate, this.options.linkOpenerDelegate, listId));\n    inputBox.setAttribute('aria-controls', listId);\n    this._register(list.onDidChangeFocus(() => {\n      var _list$getActiveDescen;\n      inputBox.setAttribute('aria-activedescendant', (_list$getActiveDescen = list.getActiveDescendant()) !== null && _list$getActiveDescen !== void 0 ? _list$getActiveDescen : '');\n    }));\n    this._register(list.onChangedAllVisibleChecked(checked => {\n      checkAll.checked = checked;\n    }));\n    this._register(list.onChangedVisibleCount(c => {\n      visibleCount.setCount(c);\n    }));\n    this._register(list.onChangedCheckedCount(c => {\n      count.setCount(c);\n    }));\n    this._register(list.onLeave(() => {\n      // Defer to avoid the input field reacting to the triggering key.\n      // TODO@TylerLeonhardt https://github.com/microsoft/vscode/issues/203675\n      setTimeout(() => {\n        if (!this.controller) {\n          return;\n        }\n        inputBox.setFocus();\n        if (this.controller instanceof QuickPick && this.controller.canSelectMany) {\n          list.clearFocus();\n        }\n      }, 0);\n    }));\n    const focusTracker = dom.trackFocus(container);\n    this._register(focusTracker);\n    this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, e => {\n      const ui = this.getUI();\n      if (dom.isAncestor(e.relatedTarget, ui.inputContainer)) {\n        const value = ui.inputBox.isSelectionAtEnd();\n        if (this.endOfQuickInputBoxContext.get() !== value) {\n          this.endOfQuickInputBoxContext.set(value);\n        }\n      }\n      // Ignore focus events within container\n      if (dom.isAncestor(e.relatedTarget, ui.container)) {\n        return;\n      }\n      this.inQuickInputContext.set(true);\n      this.previousFocusElement = dom.isHTMLElement(e.relatedTarget) ? e.relatedTarget : undefined;\n    }, true));\n    this._register(focusTracker.onDidBlur(() => {\n      if (!this.getUI().ignoreFocusOut && !this.options.ignoreFocusOut()) {\n        this.hide(QuickInputHideReason.Blur);\n      }\n      this.inQuickInputContext.set(false);\n      this.endOfQuickInputBoxContext.set(false);\n      this.previousFocusElement = undefined;\n    }));\n    this._register(inputBox.onKeyDown(_ => {\n      const value = this.getUI().inputBox.isSelectionAtEnd();\n      if (this.endOfQuickInputBoxContext.get() !== value) {\n        this.endOfQuickInputBoxContext.set(value);\n      }\n    }));\n    this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, e => {\n      inputBox.setFocus();\n    }));\n    // TODO: Turn into commands instead of handling KEY_DOWN\n    // Keybindings for the quickinput widget as a whole\n    this._register(dom.addStandardDisposableListener(container, dom.EventType.KEY_DOWN, event => {\n      if (dom.isAncestor(event.target, widget)) {\n        return; // Ignore event if target is inside widget to allow the widget to handle the event.\n      }\n      switch (event.keyCode) {\n        case 3 /* KeyCode.Enter */:\n          dom.EventHelper.stop(event, true);\n          if (this.enabled) {\n            this.onDidAcceptEmitter.fire();\n          }\n          break;\n        case 9 /* KeyCode.Escape */:\n          dom.EventHelper.stop(event, true);\n          this.hide(QuickInputHideReason.Gesture);\n          break;\n        case 2 /* KeyCode.Tab */:\n          if (!event.altKey && !event.ctrlKey && !event.metaKey) {\n            // detect only visible actions\n            const selectors = ['.quick-input-list .monaco-action-bar .always-visible', '.quick-input-list-entry:hover .monaco-action-bar', '.monaco-list-row.focused .monaco-action-bar'];\n            if (container.classList.contains('show-checkboxes')) {\n              selectors.push('input');\n            } else {\n              selectors.push('input[type=text]');\n            }\n            if (this.getUI().list.displayed) {\n              selectors.push('.monaco-list');\n            }\n            // focus links if there are any\n            if (this.getUI().message) {\n              selectors.push('.quick-input-message a');\n            }\n            if (this.getUI().widget) {\n              if (dom.isAncestor(event.target, this.getUI().widget)) {\n                // let the widget control tab\n                break;\n              }\n              selectors.push('.quick-input-html-widget');\n            }\n            const stops = container.querySelectorAll(selectors.join(', '));\n            if (event.shiftKey && event.target === stops[0]) {\n              // Clear the focus from the list in order to allow\n              // screen readers to read operations in the input box.\n              dom.EventHelper.stop(event, true);\n              list.clearFocus();\n            } else if (!event.shiftKey && dom.isAncestor(event.target, stops[stops.length - 1])) {\n              dom.EventHelper.stop(event, true);\n              stops[0].focus();\n            }\n          }\n          break;\n        case 10 /* KeyCode.Space */:\n          if (event.ctrlKey) {\n            dom.EventHelper.stop(event, true);\n            this.getUI().list.toggleHover();\n          }\n          break;\n      }\n    }));\n    this.ui = {\n      container,\n      styleSheet,\n      leftActionBar,\n      titleBar,\n      title,\n      description1,\n      description2,\n      widget,\n      rightActionBar,\n      inlineActionBar,\n      checkAll,\n      inputContainer,\n      filterContainer,\n      inputBox,\n      visibleCountContainer,\n      visibleCount,\n      countContainer,\n      count,\n      okContainer,\n      ok,\n      message,\n      customButtonContainer,\n      customButton,\n      list,\n      progressBar,\n      onDidAccept: this.onDidAcceptEmitter.event,\n      onDidCustom: this.onDidCustomEmitter.event,\n      onDidTriggerButton: this.onDidTriggerButtonEmitter.event,\n      ignoreFocusOut: false,\n      keyMods: this.keyMods,\n      show: controller => this.show(controller),\n      hide: () => this.hide(),\n      setVisibilities: visibilities => this.setVisibilities(visibilities),\n      setEnabled: enabled => this.setEnabled(enabled),\n      setContextKey: contextKey => this.options.setContextKey(contextKey),\n      linkOpenerDelegate: content => this.options.linkOpenerDelegate(content)\n    };\n    this.updateStyles();\n    return this.ui;\n  }\n  reparentUI(container) {\n    if (this.ui) {\n      this._container = container;\n      dom.append(this._container, this.ui.container);\n    }\n  }\n  pick(picks) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : CancellationToken.None;\n    return new Promise((doResolve, reject) => {\n      let resolve = result => {\n        var _options$onKeyMods;\n        resolve = doResolve;\n        (_options$onKeyMods = options.onKeyMods) === null || _options$onKeyMods === void 0 || _options$onKeyMods.call(options, input.keyMods);\n        doResolve(result);\n      };\n      if (token.isCancellationRequested) {\n        resolve(undefined);\n        return;\n      }\n      const input = this.createQuickPick({\n        useSeparators: true\n      });\n      let activeItem;\n      const disposables = [input, input.onDidAccept(() => {\n        if (input.canSelectMany) {\n          resolve(input.selectedItems.slice());\n          input.hide();\n        } else {\n          const result = input.activeItems[0];\n          if (result) {\n            resolve(result);\n            input.hide();\n          }\n        }\n      }), input.onDidChangeActive(items => {\n        const focused = items[0];\n        if (focused && options.onDidFocus) {\n          options.onDidFocus(focused);\n        }\n      }), input.onDidChangeSelection(items => {\n        if (!input.canSelectMany) {\n          const result = items[0];\n          if (result) {\n            resolve(result);\n            input.hide();\n          }\n        }\n      }), input.onDidTriggerItemButton(event => options.onDidTriggerItemButton && options.onDidTriggerItemButton({\n        ...event,\n        removeItem: () => {\n          const index = input.items.indexOf(event.item);\n          if (index !== -1) {\n            const items = input.items.slice();\n            const removed = items.splice(index, 1);\n            const activeItems = input.activeItems.filter(activeItem => activeItem !== removed[0]);\n            const keepScrollPositionBefore = input.keepScrollPosition;\n            input.keepScrollPosition = true;\n            input.items = items;\n            if (activeItems) {\n              input.activeItems = activeItems;\n            }\n            input.keepScrollPosition = keepScrollPositionBefore;\n          }\n        }\n      })), input.onDidTriggerSeparatorButton(event => {\n        var _options$onDidTrigger;\n        return (_options$onDidTrigger = options.onDidTriggerSeparatorButton) === null || _options$onDidTrigger === void 0 ? void 0 : _options$onDidTrigger.call(options, event);\n      }), input.onDidChangeValue(value => {\n        if (activeItem && !value && (input.activeItems.length !== 1 || input.activeItems[0] !== activeItem)) {\n          input.activeItems = [activeItem];\n        }\n      }), token.onCancellationRequested(() => {\n        input.hide();\n      }), input.onDidHide(() => {\n        dispose(disposables);\n        resolve(undefined);\n      })];\n      input.title = options.title;\n      if (options.value) {\n        input.value = options.value;\n      }\n      input.canSelectMany = !!options.canPickMany;\n      input.placeholder = options.placeHolder;\n      input.ignoreFocusOut = !!options.ignoreFocusLost;\n      input.matchOnDescription = !!options.matchOnDescription;\n      input.matchOnDetail = !!options.matchOnDetail;\n      input.matchOnLabel = options.matchOnLabel === undefined || options.matchOnLabel; // default to true\n      input.quickNavigate = options.quickNavigate;\n      input.hideInput = !!options.hideInput;\n      input.contextKey = options.contextKey;\n      input.busy = true;\n      Promise.all([picks, options.activeItem]).then(_ref2 => {\n        let [items, _activeItem] = _ref2;\n        activeItem = _activeItem;\n        input.busy = false;\n        input.items = items;\n        if (input.canSelectMany) {\n          input.selectedItems = items.filter(item => item.type !== 'separator' && item.picked);\n        }\n        if (activeItem) {\n          input.activeItems = [activeItem];\n        }\n      });\n      input.show();\n      Promise.resolve(picks).then(undefined, err => {\n        reject(err);\n        input.hide();\n      });\n    });\n  }\n  createQuickPick() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      useSeparators: false\n    };\n    const ui = this.getUI(true);\n    return new QuickPick(ui);\n  }\n  createInputBox() {\n    const ui = this.getUI(true);\n    return new InputBox(ui);\n  }\n  show(controller) {\n    const ui = this.getUI(true);\n    this.onShowEmitter.fire();\n    const oldController = this.controller;\n    this.controller = controller;\n    oldController === null || oldController === void 0 || oldController.didHide();\n    this.setEnabled(true);\n    ui.leftActionBar.clear();\n    ui.title.textContent = '';\n    ui.description1.textContent = '';\n    ui.description2.textContent = '';\n    dom.reset(ui.widget);\n    ui.rightActionBar.clear();\n    ui.inlineActionBar.clear();\n    ui.checkAll.checked = false;\n    // ui.inputBox.value = ''; Avoid triggering an event.\n    ui.inputBox.placeholder = '';\n    ui.inputBox.password = false;\n    ui.inputBox.showDecoration(Severity.Ignore);\n    ui.visibleCount.setCount(0);\n    ui.count.setCount(0);\n    dom.reset(ui.message);\n    ui.progressBar.stop();\n    ui.list.setElements([]);\n    ui.list.matchOnDescription = false;\n    ui.list.matchOnDetail = false;\n    ui.list.matchOnLabel = true;\n    ui.list.sortByLabel = true;\n    ui.ignoreFocusOut = false;\n    ui.inputBox.toggles = undefined;\n    const backKeybindingLabel = this.options.backKeybindingLabel();\n    backButton.tooltip = backKeybindingLabel ? localize('quickInput.backWithKeybinding', \"Back ({0})\", backKeybindingLabel) : localize('quickInput.back', \"Back\");\n    ui.container.style.display = '';\n    this.updateLayout();\n    ui.inputBox.setFocus();\n    this.quickInputTypeContext.set(controller.type);\n  }\n  isVisible() {\n    return !!this.ui && this.ui.container.style.display !== 'none';\n  }\n  setVisibilities(visibilities) {\n    const ui = this.getUI();\n    ui.title.style.display = visibilities.title ? '' : 'none';\n    ui.description1.style.display = visibilities.description && (visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n    ui.description2.style.display = visibilities.description && !(visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n    ui.checkAll.style.display = visibilities.checkAll ? '' : 'none';\n    ui.inputContainer.style.display = visibilities.inputBox ? '' : 'none';\n    ui.filterContainer.style.display = visibilities.inputBox ? '' : 'none';\n    ui.visibleCountContainer.style.display = visibilities.visibleCount ? '' : 'none';\n    ui.countContainer.style.display = visibilities.count ? '' : 'none';\n    ui.okContainer.style.display = visibilities.ok ? '' : 'none';\n    ui.customButtonContainer.style.display = visibilities.customButton ? '' : 'none';\n    ui.message.style.display = visibilities.message ? '' : 'none';\n    ui.progressBar.getContainer().style.display = visibilities.progressBar ? '' : 'none';\n    ui.list.displayed = !!visibilities.list;\n    ui.container.classList.toggle('show-checkboxes', !!visibilities.checkBox);\n    ui.container.classList.toggle('hidden-input', !visibilities.inputBox && !visibilities.description);\n    this.updateLayout(); // TODO\n  }\n  setEnabled(enabled) {\n    if (enabled !== this.enabled) {\n      this.enabled = enabled;\n      for (const item of this.getUI().leftActionBar.viewItems) {\n        item.action.enabled = enabled;\n      }\n      for (const item of this.getUI().rightActionBar.viewItems) {\n        item.action.enabled = enabled;\n      }\n      this.getUI().checkAll.disabled = !enabled;\n      this.getUI().inputBox.enabled = enabled;\n      this.getUI().ok.enabled = enabled;\n      this.getUI().list.enabled = enabled;\n    }\n  }\n  hide(reason) {\n    var _this$ui;\n    const controller = this.controller;\n    if (!controller) {\n      return;\n    }\n    controller.willHide(reason);\n    const container = (_this$ui = this.ui) === null || _this$ui === void 0 ? void 0 : _this$ui.container;\n    const focusChanged = container && !dom.isAncestorOfActiveElement(container);\n    this.controller = null;\n    this.onHideEmitter.fire();\n    if (container) {\n      container.style.display = 'none';\n    }\n    if (!focusChanged) {\n      var _currentElement;\n      let currentElement = this.previousFocusElement;\n      while (currentElement && !currentElement.offsetParent) {\n        var _currentElement$paren;\n        currentElement = (_currentElement$paren = currentElement.parentElement) !== null && _currentElement$paren !== void 0 ? _currentElement$paren : undefined;\n      }\n      if ((_currentElement = currentElement) !== null && _currentElement !== void 0 && _currentElement.offsetParent) {\n        currentElement.focus();\n        this.previousFocusElement = undefined;\n      } else {\n        this.options.returnFocus();\n      }\n    }\n    controller.didHide(reason);\n  }\n  layout(dimension, titleBarOffset) {\n    this.dimension = dimension;\n    this.titleBarOffset = titleBarOffset;\n    this.updateLayout();\n  }\n  updateLayout() {\n    if (this.ui && this.isVisible()) {\n      this.ui.container.style.top = \"\".concat(this.titleBarOffset, \"px\");\n      const style = this.ui.container.style;\n      const width = Math.min(this.dimension.width * 0.62 /* golden cut */, QuickInputController_1.MAX_WIDTH);\n      style.width = width + 'px';\n      style.marginLeft = '-' + width / 2 + 'px';\n      this.ui.inputBox.layout();\n      this.ui.list.layout(this.dimension && this.dimension.height * 0.4);\n    }\n  }\n  applyStyles(styles) {\n    this.styles = styles;\n    this.updateStyles();\n  }\n  updateStyles() {\n    if (this.ui) {\n      const {\n        quickInputTitleBackground,\n        quickInputBackground,\n        quickInputForeground,\n        widgetBorder,\n        widgetShadow\n      } = this.styles.widget;\n      this.ui.titleBar.style.backgroundColor = quickInputTitleBackground !== null && quickInputTitleBackground !== void 0 ? quickInputTitleBackground : '';\n      this.ui.container.style.backgroundColor = quickInputBackground !== null && quickInputBackground !== void 0 ? quickInputBackground : '';\n      this.ui.container.style.color = quickInputForeground !== null && quickInputForeground !== void 0 ? quickInputForeground : '';\n      this.ui.container.style.border = widgetBorder ? \"1px solid \".concat(widgetBorder) : '';\n      this.ui.container.style.boxShadow = widgetShadow ? \"0 0 8px 2px \".concat(widgetShadow) : '';\n      this.ui.list.style(this.styles.list);\n      const content = [];\n      if (this.styles.pickerGroup.pickerGroupBorder) {\n        content.push(\".quick-input-list .quick-input-list-entry { border-top-color:  \".concat(this.styles.pickerGroup.pickerGroupBorder, \"; }\"));\n      }\n      if (this.styles.pickerGroup.pickerGroupForeground) {\n        content.push(\".quick-input-list .quick-input-list-separator { color:  \".concat(this.styles.pickerGroup.pickerGroupForeground, \"; }\"));\n      }\n      if (this.styles.pickerGroup.pickerGroupForeground) {\n        content.push(\".quick-input-list .quick-input-list-separator-as-item { color: var(--vscode-descriptionForeground); }\");\n      }\n      if (this.styles.keybindingLabel.keybindingLabelBackground || this.styles.keybindingLabel.keybindingLabelBorder || this.styles.keybindingLabel.keybindingLabelBottomBorder || this.styles.keybindingLabel.keybindingLabelShadow || this.styles.keybindingLabel.keybindingLabelForeground) {\n        content.push('.quick-input-list .monaco-keybinding > .monaco-keybinding-key {');\n        if (this.styles.keybindingLabel.keybindingLabelBackground) {\n          content.push(\"background-color: \".concat(this.styles.keybindingLabel.keybindingLabelBackground, \";\"));\n        }\n        if (this.styles.keybindingLabel.keybindingLabelBorder) {\n          // Order matters here. `border-color` must come before `border-bottom-color`.\n          content.push(\"border-color: \".concat(this.styles.keybindingLabel.keybindingLabelBorder, \";\"));\n        }\n        if (this.styles.keybindingLabel.keybindingLabelBottomBorder) {\n          content.push(\"border-bottom-color: \".concat(this.styles.keybindingLabel.keybindingLabelBottomBorder, \";\"));\n        }\n        if (this.styles.keybindingLabel.keybindingLabelShadow) {\n          content.push(\"box-shadow: inset 0 -1px 0 \".concat(this.styles.keybindingLabel.keybindingLabelShadow, \";\"));\n        }\n        if (this.styles.keybindingLabel.keybindingLabelForeground) {\n          content.push(\"color: \".concat(this.styles.keybindingLabel.keybindingLabelForeground, \";\"));\n        }\n        content.push('}');\n      }\n      const newStyles = content.join('\\n');\n      if (newStyles !== this.ui.styleSheet.textContent) {\n        this.ui.styleSheet.textContent = newStyles;\n      }\n    }\n  }\n}, QuickInputController_1 = _QuickInputController, _QuickInputController.MAX_WIDTH = 600, _QuickInputController);\nQuickInputController = QuickInputController_1 = __decorate([__param(1, ILayoutService), __param(2, IInstantiationService), __param(3, IContextKeyService)], QuickInputController);\nexport { QuickInputController };","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","QuickInputController_1","dom","ActionBar","Button","CountBadge","ProgressBar","CancellationToken","Emitter","Event","Disposable","dispose","Severity","localize","QuickInputHideReason","QuickInputBox","QuickPick","backButton","InputBox","InQuickInputContextKey","QuickInputTypeContextKey","EndOfQuickInputBoxContextKey","ILayoutService","mainWindow","IInstantiationService","QuickInputTree","IContextKeyService","$","QuickInputController","_QuickInputController","currentQuickInput","_this$controller","controller","undefined","container","_container","constructor","options","layoutService","instantiationService","contextKeyService","enabled","onDidAcceptEmitter","_register","onDidCustomEmitter","onDidTriggerButtonEmitter","keyMods","ctrlCmd","alt","onShowEmitter","onShow","event","onHideEmitter","onHide","inQuickInputContext","bindTo","quickInputTypeContext","endOfQuickInputBoxContext","idPrefix","styles","runAndSubscribe","onDidRegisterWindow","_ref","window","disposables","registerKeyModsListeners","_store","onWillUnregisterWindow","ui","getWindow","reparentUI","mainContainer","layout","mainContainerDimension","mainContainerOffset","quickPickTop","listener","e","ctrlKey","metaKey","altKey","EventType","KEY_DOWN","KEY_UP","MOUSE_DOWN","add","addDisposableListener","getUI","showInActiveContainer","activeContainer","activeContainerDimension","activeContainerOffset","append","tabIndex","style","display","styleSheet","createStyleSheet","titleBar","leftActionBar","hoverDelegate","domNode","classList","title","rightActionBar","headerContainer","checkAll","type","setAttribute","addStandardDisposableListener","CHANGE","checked","list","setAllVisibleChecked","CLICK","x","y","inputBox","setFocus","description2","inputContainer","filterContainer","toggle","concat","visibleCountContainer","visibleCount","countFormat","comment","countBadge","countContainer","count","inlineActionBar","okContainer","ok","button","label","onDidClick","fire","customButtonContainer","customButton","supportIcons","message","progressBar","getContainer","widget","description1","listId","createInstance","linkOpenerDelegate","onDidChangeFocus","_list$getActiveDescen","getActiveDescendant","onChangedAllVisibleChecked","onChangedVisibleCount","setCount","onChangedCheckedCount","onLeave","setTimeout","canSelectMany","clearFocus","focusTracker","trackFocus","FOCUS","isAncestor","relatedTarget","value","isSelectionAtEnd","get","set","previousFocusElement","isHTMLElement","onDidBlur","ignoreFocusOut","hide","Blur","onKeyDown","_","keyCode","EventHelper","stop","Gesture","selectors","contains","push","displayed","stops","querySelectorAll","join","shiftKey","focus","toggleHover","onDidAccept","onDidCustom","onDidTriggerButton","show","setVisibilities","visibilities","setEnabled","setContextKey","contextKey","content","updateStyles","pick","picks","token","None","Promise","doResolve","reject","resolve","result","_options$onKeyMods","onKeyMods","call","input","isCancellationRequested","createQuickPick","useSeparators","activeItem","selectedItems","slice","activeItems","onDidChangeActive","items","focused","onDidFocus","onDidChangeSelection","onDidTriggerItemButton","removeItem","index","indexOf","item","removed","splice","filter","keepScrollPositionBefore","keepScrollPosition","onDidTriggerSeparatorButton","_options$onDidTrigger","onDidChangeValue","onCancellationRequested","onDidHide","canPickMany","placeholder","placeHolder","ignoreFocusLost","matchOnDescription","matchOnDetail","matchOnLabel","quickNavigate","hideInput","busy","all","then","_ref2","_activeItem","picked","err","createInputBox","oldController","didHide","clear","textContent","reset","password","showDecoration","Ignore","setElements","sortByLabel","toggles","backKeybindingLabel","tooltip","updateLayout","isVisible","description","checkBox","viewItems","action","disabled","reason","_this$ui","willHide","focusChanged","isAncestorOfActiveElement","_currentElement","currentElement","offsetParent","_currentElement$paren","parentElement","returnFocus","dimension","titleBarOffset","top","width","Math","min","MAX_WIDTH","marginLeft","height","applyStyles","quickInputTitleBackground","quickInputBackground","quickInputForeground","widgetBorder","widgetShadow","backgroundColor","color","border","boxShadow","pickerGroup","pickerGroupBorder","pickerGroupForeground","keybindingLabel","keybindingLabelBackground","keybindingLabelBorder","keybindingLabelBottomBorder","keybindingLabelShadow","keybindingLabelForeground","newStyles"],"sources":["D:/ospanel/domains/react/react-intro-main/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInputController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar QuickInputController_1;\nimport * as dom from '../../../base/browser/dom.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { Button } from '../../../base/browser/ui/button/button.js';\nimport { CountBadge } from '../../../base/browser/ui/countBadge/countBadge.js';\nimport { ProgressBar } from '../../../base/browser/ui/progressbar/progressbar.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable, dispose } from '../../../base/common/lifecycle.js';\nimport Severity from '../../../base/common/severity.js';\nimport { localize } from '../../../nls.js';\nimport { QuickInputHideReason } from '../common/quickInput.js';\nimport { QuickInputBox } from './quickInputBox.js';\nimport { QuickPick, backButton, InputBox, InQuickInputContextKey, QuickInputTypeContextKey, EndOfQuickInputBoxContextKey } from './quickInput.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { QuickInputTree } from './quickInputTree.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport './quickInputActions.js';\nconst $ = dom.$;\nlet QuickInputController = class QuickInputController extends Disposable {\n    static { QuickInputController_1 = this; }\n    static { this.MAX_WIDTH = 600; } // Max total width of quick input widget\n    get currentQuickInput() { return this.controller ?? undefined; }\n    get container() { return this._container; }\n    constructor(options, layoutService, instantiationService, contextKeyService) {\n        super();\n        this.options = options;\n        this.layoutService = layoutService;\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.enabled = true;\n        this.onDidAcceptEmitter = this._register(new Emitter());\n        this.onDidCustomEmitter = this._register(new Emitter());\n        this.onDidTriggerButtonEmitter = this._register(new Emitter());\n        this.keyMods = { ctrlCmd: false, alt: false };\n        this.controller = null;\n        this.onShowEmitter = this._register(new Emitter());\n        this.onShow = this.onShowEmitter.event;\n        this.onHideEmitter = this._register(new Emitter());\n        this.onHide = this.onHideEmitter.event;\n        this.inQuickInputContext = InQuickInputContextKey.bindTo(this.contextKeyService);\n        this.quickInputTypeContext = QuickInputTypeContextKey.bindTo(this.contextKeyService);\n        this.endOfQuickInputBoxContext = EndOfQuickInputBoxContextKey.bindTo(this.contextKeyService);\n        this.idPrefix = options.idPrefix;\n        this._container = options.container;\n        this.styles = options.styles;\n        this._register(Event.runAndSubscribe(dom.onDidRegisterWindow, ({ window, disposables }) => this.registerKeyModsListeners(window, disposables), { window: mainWindow, disposables: this._store }));\n        this._register(dom.onWillUnregisterWindow(window => {\n            if (this.ui && dom.getWindow(this.ui.container) === window) {\n                // The window this quick input is contained in is about to\n                // close, so we have to make sure to reparent it back to an\n                // existing parent to not loose functionality.\n                // (https://github.com/microsoft/vscode/issues/195870)\n                this.reparentUI(this.layoutService.mainContainer);\n                this.layout(this.layoutService.mainContainerDimension, this.layoutService.mainContainerOffset.quickPickTop);\n            }\n        }));\n    }\n    registerKeyModsListeners(window, disposables) {\n        const listener = (e) => {\n            this.keyMods.ctrlCmd = e.ctrlKey || e.metaKey;\n            this.keyMods.alt = e.altKey;\n        };\n        for (const event of [dom.EventType.KEY_DOWN, dom.EventType.KEY_UP, dom.EventType.MOUSE_DOWN]) {\n            disposables.add(dom.addDisposableListener(window, event, listener, true));\n        }\n    }\n    getUI(showInActiveContainer) {\n        if (this.ui) {\n            // In order to support aux windows, re-parent the controller\n            // if the original event is from a different document\n            if (showInActiveContainer) {\n                if (dom.getWindow(this._container) !== dom.getWindow(this.layoutService.activeContainer)) {\n                    this.reparentUI(this.layoutService.activeContainer);\n                    this.layout(this.layoutService.activeContainerDimension, this.layoutService.activeContainerOffset.quickPickTop);\n                }\n            }\n            return this.ui;\n        }\n        const container = dom.append(this._container, $('.quick-input-widget.show-file-icons'));\n        container.tabIndex = -1;\n        container.style.display = 'none';\n        const styleSheet = dom.createStyleSheet(container);\n        const titleBar = dom.append(container, $('.quick-input-titlebar'));\n        const leftActionBar = this._register(new ActionBar(titleBar, { hoverDelegate: this.options.hoverDelegate }));\n        leftActionBar.domNode.classList.add('quick-input-left-action-bar');\n        const title = dom.append(titleBar, $('.quick-input-title'));\n        const rightActionBar = this._register(new ActionBar(titleBar, { hoverDelegate: this.options.hoverDelegate }));\n        rightActionBar.domNode.classList.add('quick-input-right-action-bar');\n        const headerContainer = dom.append(container, $('.quick-input-header'));\n        const checkAll = dom.append(headerContainer, $('input.quick-input-check-all'));\n        checkAll.type = 'checkbox';\n        checkAll.setAttribute('aria-label', localize('quickInput.checkAll', \"Toggle all checkboxes\"));\n        this._register(dom.addStandardDisposableListener(checkAll, dom.EventType.CHANGE, e => {\n            const checked = checkAll.checked;\n            list.setAllVisibleChecked(checked);\n        }));\n        this._register(dom.addDisposableListener(checkAll, dom.EventType.CLICK, e => {\n            if (e.x || e.y) { // Avoid 'click' triggered by 'space'...\n                inputBox.setFocus();\n            }\n        }));\n        const description2 = dom.append(headerContainer, $('.quick-input-description'));\n        const inputContainer = dom.append(headerContainer, $('.quick-input-and-message'));\n        const filterContainer = dom.append(inputContainer, $('.quick-input-filter'));\n        const inputBox = this._register(new QuickInputBox(filterContainer, this.styles.inputBox, this.styles.toggle));\n        inputBox.setAttribute('aria-describedby', `${this.idPrefix}message`);\n        const visibleCountContainer = dom.append(filterContainer, $('.quick-input-visible-count'));\n        visibleCountContainer.setAttribute('aria-live', 'polite');\n        visibleCountContainer.setAttribute('aria-atomic', 'true');\n        const visibleCount = new CountBadge(visibleCountContainer, { countFormat: localize({ key: 'quickInput.visibleCount', comment: ['This tells the user how many items are shown in a list of items to select from. The items can be anything. Currently not visible, but read by screen readers.'] }, \"{0} Results\") }, this.styles.countBadge);\n        const countContainer = dom.append(filterContainer, $('.quick-input-count'));\n        countContainer.setAttribute('aria-live', 'polite');\n        const count = new CountBadge(countContainer, { countFormat: localize({ key: 'quickInput.countSelected', comment: ['This tells the user how many items are selected in a list of items to select from. The items can be anything.'] }, \"{0} Selected\") }, this.styles.countBadge);\n        const inlineActionBar = this._register(new ActionBar(headerContainer, { hoverDelegate: this.options.hoverDelegate }));\n        inlineActionBar.domNode.classList.add('quick-input-inline-action-bar');\n        const okContainer = dom.append(headerContainer, $('.quick-input-action'));\n        const ok = this._register(new Button(okContainer, this.styles.button));\n        ok.label = localize('ok', \"OK\");\n        this._register(ok.onDidClick(e => {\n            this.onDidAcceptEmitter.fire();\n        }));\n        const customButtonContainer = dom.append(headerContainer, $('.quick-input-action'));\n        const customButton = this._register(new Button(customButtonContainer, { ...this.styles.button, supportIcons: true }));\n        customButton.label = localize('custom', \"Custom\");\n        this._register(customButton.onDidClick(e => {\n            this.onDidCustomEmitter.fire();\n        }));\n        const message = dom.append(inputContainer, $(`#${this.idPrefix}message.quick-input-message`));\n        const progressBar = this._register(new ProgressBar(container, this.styles.progressBar));\n        progressBar.getContainer().classList.add('quick-input-progress');\n        const widget = dom.append(container, $('.quick-input-html-widget'));\n        widget.tabIndex = -1;\n        const description1 = dom.append(container, $('.quick-input-description'));\n        const listId = this.idPrefix + 'list';\n        const list = this._register(this.instantiationService.createInstance(QuickInputTree, container, this.options.hoverDelegate, this.options.linkOpenerDelegate, listId));\n        inputBox.setAttribute('aria-controls', listId);\n        this._register(list.onDidChangeFocus(() => {\n            inputBox.setAttribute('aria-activedescendant', list.getActiveDescendant() ?? '');\n        }));\n        this._register(list.onChangedAllVisibleChecked(checked => {\n            checkAll.checked = checked;\n        }));\n        this._register(list.onChangedVisibleCount(c => {\n            visibleCount.setCount(c);\n        }));\n        this._register(list.onChangedCheckedCount(c => {\n            count.setCount(c);\n        }));\n        this._register(list.onLeave(() => {\n            // Defer to avoid the input field reacting to the triggering key.\n            // TODO@TylerLeonhardt https://github.com/microsoft/vscode/issues/203675\n            setTimeout(() => {\n                if (!this.controller) {\n                    return;\n                }\n                inputBox.setFocus();\n                if (this.controller instanceof QuickPick && this.controller.canSelectMany) {\n                    list.clearFocus();\n                }\n            }, 0);\n        }));\n        const focusTracker = dom.trackFocus(container);\n        this._register(focusTracker);\n        this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, e => {\n            const ui = this.getUI();\n            if (dom.isAncestor(e.relatedTarget, ui.inputContainer)) {\n                const value = ui.inputBox.isSelectionAtEnd();\n                if (this.endOfQuickInputBoxContext.get() !== value) {\n                    this.endOfQuickInputBoxContext.set(value);\n                }\n            }\n            // Ignore focus events within container\n            if (dom.isAncestor(e.relatedTarget, ui.container)) {\n                return;\n            }\n            this.inQuickInputContext.set(true);\n            this.previousFocusElement = dom.isHTMLElement(e.relatedTarget) ? e.relatedTarget : undefined;\n        }, true));\n        this._register(focusTracker.onDidBlur(() => {\n            if (!this.getUI().ignoreFocusOut && !this.options.ignoreFocusOut()) {\n                this.hide(QuickInputHideReason.Blur);\n            }\n            this.inQuickInputContext.set(false);\n            this.endOfQuickInputBoxContext.set(false);\n            this.previousFocusElement = undefined;\n        }));\n        this._register(inputBox.onKeyDown(_ => {\n            const value = this.getUI().inputBox.isSelectionAtEnd();\n            if (this.endOfQuickInputBoxContext.get() !== value) {\n                this.endOfQuickInputBoxContext.set(value);\n            }\n        }));\n        this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, (e) => {\n            inputBox.setFocus();\n        }));\n        // TODO: Turn into commands instead of handling KEY_DOWN\n        // Keybindings for the quickinput widget as a whole\n        this._register(dom.addStandardDisposableListener(container, dom.EventType.KEY_DOWN, (event) => {\n            if (dom.isAncestor(event.target, widget)) {\n                return; // Ignore event if target is inside widget to allow the widget to handle the event.\n            }\n            switch (event.keyCode) {\n                case 3 /* KeyCode.Enter */:\n                    dom.EventHelper.stop(event, true);\n                    if (this.enabled) {\n                        this.onDidAcceptEmitter.fire();\n                    }\n                    break;\n                case 9 /* KeyCode.Escape */:\n                    dom.EventHelper.stop(event, true);\n                    this.hide(QuickInputHideReason.Gesture);\n                    break;\n                case 2 /* KeyCode.Tab */:\n                    if (!event.altKey && !event.ctrlKey && !event.metaKey) {\n                        // detect only visible actions\n                        const selectors = [\n                            '.quick-input-list .monaco-action-bar .always-visible',\n                            '.quick-input-list-entry:hover .monaco-action-bar',\n                            '.monaco-list-row.focused .monaco-action-bar'\n                        ];\n                        if (container.classList.contains('show-checkboxes')) {\n                            selectors.push('input');\n                        }\n                        else {\n                            selectors.push('input[type=text]');\n                        }\n                        if (this.getUI().list.displayed) {\n                            selectors.push('.monaco-list');\n                        }\n                        // focus links if there are any\n                        if (this.getUI().message) {\n                            selectors.push('.quick-input-message a');\n                        }\n                        if (this.getUI().widget) {\n                            if (dom.isAncestor(event.target, this.getUI().widget)) {\n                                // let the widget control tab\n                                break;\n                            }\n                            selectors.push('.quick-input-html-widget');\n                        }\n                        const stops = container.querySelectorAll(selectors.join(', '));\n                        if (event.shiftKey && event.target === stops[0]) {\n                            // Clear the focus from the list in order to allow\n                            // screen readers to read operations in the input box.\n                            dom.EventHelper.stop(event, true);\n                            list.clearFocus();\n                        }\n                        else if (!event.shiftKey && dom.isAncestor(event.target, stops[stops.length - 1])) {\n                            dom.EventHelper.stop(event, true);\n                            stops[0].focus();\n                        }\n                    }\n                    break;\n                case 10 /* KeyCode.Space */:\n                    if (event.ctrlKey) {\n                        dom.EventHelper.stop(event, true);\n                        this.getUI().list.toggleHover();\n                    }\n                    break;\n            }\n        }));\n        this.ui = {\n            container,\n            styleSheet,\n            leftActionBar,\n            titleBar,\n            title,\n            description1,\n            description2,\n            widget,\n            rightActionBar,\n            inlineActionBar,\n            checkAll,\n            inputContainer,\n            filterContainer,\n            inputBox,\n            visibleCountContainer,\n            visibleCount,\n            countContainer,\n            count,\n            okContainer,\n            ok,\n            message,\n            customButtonContainer,\n            customButton,\n            list,\n            progressBar,\n            onDidAccept: this.onDidAcceptEmitter.event,\n            onDidCustom: this.onDidCustomEmitter.event,\n            onDidTriggerButton: this.onDidTriggerButtonEmitter.event,\n            ignoreFocusOut: false,\n            keyMods: this.keyMods,\n            show: controller => this.show(controller),\n            hide: () => this.hide(),\n            setVisibilities: visibilities => this.setVisibilities(visibilities),\n            setEnabled: enabled => this.setEnabled(enabled),\n            setContextKey: contextKey => this.options.setContextKey(contextKey),\n            linkOpenerDelegate: content => this.options.linkOpenerDelegate(content)\n        };\n        this.updateStyles();\n        return this.ui;\n    }\n    reparentUI(container) {\n        if (this.ui) {\n            this._container = container;\n            dom.append(this._container, this.ui.container);\n        }\n    }\n    pick(picks, options = {}, token = CancellationToken.None) {\n        return new Promise((doResolve, reject) => {\n            let resolve = (result) => {\n                resolve = doResolve;\n                options.onKeyMods?.(input.keyMods);\n                doResolve(result);\n            };\n            if (token.isCancellationRequested) {\n                resolve(undefined);\n                return;\n            }\n            const input = this.createQuickPick({ useSeparators: true });\n            let activeItem;\n            const disposables = [\n                input,\n                input.onDidAccept(() => {\n                    if (input.canSelectMany) {\n                        resolve(input.selectedItems.slice());\n                        input.hide();\n                    }\n                    else {\n                        const result = input.activeItems[0];\n                        if (result) {\n                            resolve(result);\n                            input.hide();\n                        }\n                    }\n                }),\n                input.onDidChangeActive(items => {\n                    const focused = items[0];\n                    if (focused && options.onDidFocus) {\n                        options.onDidFocus(focused);\n                    }\n                }),\n                input.onDidChangeSelection(items => {\n                    if (!input.canSelectMany) {\n                        const result = items[0];\n                        if (result) {\n                            resolve(result);\n                            input.hide();\n                        }\n                    }\n                }),\n                input.onDidTriggerItemButton(event => options.onDidTriggerItemButton && options.onDidTriggerItemButton({\n                    ...event,\n                    removeItem: () => {\n                        const index = input.items.indexOf(event.item);\n                        if (index !== -1) {\n                            const items = input.items.slice();\n                            const removed = items.splice(index, 1);\n                            const activeItems = input.activeItems.filter(activeItem => activeItem !== removed[0]);\n                            const keepScrollPositionBefore = input.keepScrollPosition;\n                            input.keepScrollPosition = true;\n                            input.items = items;\n                            if (activeItems) {\n                                input.activeItems = activeItems;\n                            }\n                            input.keepScrollPosition = keepScrollPositionBefore;\n                        }\n                    }\n                })),\n                input.onDidTriggerSeparatorButton(event => options.onDidTriggerSeparatorButton?.(event)),\n                input.onDidChangeValue(value => {\n                    if (activeItem && !value && (input.activeItems.length !== 1 || input.activeItems[0] !== activeItem)) {\n                        input.activeItems = [activeItem];\n                    }\n                }),\n                token.onCancellationRequested(() => {\n                    input.hide();\n                }),\n                input.onDidHide(() => {\n                    dispose(disposables);\n                    resolve(undefined);\n                }),\n            ];\n            input.title = options.title;\n            if (options.value) {\n                input.value = options.value;\n            }\n            input.canSelectMany = !!options.canPickMany;\n            input.placeholder = options.placeHolder;\n            input.ignoreFocusOut = !!options.ignoreFocusLost;\n            input.matchOnDescription = !!options.matchOnDescription;\n            input.matchOnDetail = !!options.matchOnDetail;\n            input.matchOnLabel = (options.matchOnLabel === undefined) || options.matchOnLabel; // default to true\n            input.quickNavigate = options.quickNavigate;\n            input.hideInput = !!options.hideInput;\n            input.contextKey = options.contextKey;\n            input.busy = true;\n            Promise.all([picks, options.activeItem])\n                .then(([items, _activeItem]) => {\n                activeItem = _activeItem;\n                input.busy = false;\n                input.items = items;\n                if (input.canSelectMany) {\n                    input.selectedItems = items.filter(item => item.type !== 'separator' && item.picked);\n                }\n                if (activeItem) {\n                    input.activeItems = [activeItem];\n                }\n            });\n            input.show();\n            Promise.resolve(picks).then(undefined, err => {\n                reject(err);\n                input.hide();\n            });\n        });\n    }\n    createQuickPick(options = { useSeparators: false }) {\n        const ui = this.getUI(true);\n        return new QuickPick(ui);\n    }\n    createInputBox() {\n        const ui = this.getUI(true);\n        return new InputBox(ui);\n    }\n    show(controller) {\n        const ui = this.getUI(true);\n        this.onShowEmitter.fire();\n        const oldController = this.controller;\n        this.controller = controller;\n        oldController?.didHide();\n        this.setEnabled(true);\n        ui.leftActionBar.clear();\n        ui.title.textContent = '';\n        ui.description1.textContent = '';\n        ui.description2.textContent = '';\n        dom.reset(ui.widget);\n        ui.rightActionBar.clear();\n        ui.inlineActionBar.clear();\n        ui.checkAll.checked = false;\n        // ui.inputBox.value = ''; Avoid triggering an event.\n        ui.inputBox.placeholder = '';\n        ui.inputBox.password = false;\n        ui.inputBox.showDecoration(Severity.Ignore);\n        ui.visibleCount.setCount(0);\n        ui.count.setCount(0);\n        dom.reset(ui.message);\n        ui.progressBar.stop();\n        ui.list.setElements([]);\n        ui.list.matchOnDescription = false;\n        ui.list.matchOnDetail = false;\n        ui.list.matchOnLabel = true;\n        ui.list.sortByLabel = true;\n        ui.ignoreFocusOut = false;\n        ui.inputBox.toggles = undefined;\n        const backKeybindingLabel = this.options.backKeybindingLabel();\n        backButton.tooltip = backKeybindingLabel ? localize('quickInput.backWithKeybinding', \"Back ({0})\", backKeybindingLabel) : localize('quickInput.back', \"Back\");\n        ui.container.style.display = '';\n        this.updateLayout();\n        ui.inputBox.setFocus();\n        this.quickInputTypeContext.set(controller.type);\n    }\n    isVisible() {\n        return !!this.ui && this.ui.container.style.display !== 'none';\n    }\n    setVisibilities(visibilities) {\n        const ui = this.getUI();\n        ui.title.style.display = visibilities.title ? '' : 'none';\n        ui.description1.style.display = visibilities.description && (visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n        ui.description2.style.display = visibilities.description && !(visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n        ui.checkAll.style.display = visibilities.checkAll ? '' : 'none';\n        ui.inputContainer.style.display = visibilities.inputBox ? '' : 'none';\n        ui.filterContainer.style.display = visibilities.inputBox ? '' : 'none';\n        ui.visibleCountContainer.style.display = visibilities.visibleCount ? '' : 'none';\n        ui.countContainer.style.display = visibilities.count ? '' : 'none';\n        ui.okContainer.style.display = visibilities.ok ? '' : 'none';\n        ui.customButtonContainer.style.display = visibilities.customButton ? '' : 'none';\n        ui.message.style.display = visibilities.message ? '' : 'none';\n        ui.progressBar.getContainer().style.display = visibilities.progressBar ? '' : 'none';\n        ui.list.displayed = !!visibilities.list;\n        ui.container.classList.toggle('show-checkboxes', !!visibilities.checkBox);\n        ui.container.classList.toggle('hidden-input', !visibilities.inputBox && !visibilities.description);\n        this.updateLayout(); // TODO\n    }\n    setEnabled(enabled) {\n        if (enabled !== this.enabled) {\n            this.enabled = enabled;\n            for (const item of this.getUI().leftActionBar.viewItems) {\n                item.action.enabled = enabled;\n            }\n            for (const item of this.getUI().rightActionBar.viewItems) {\n                item.action.enabled = enabled;\n            }\n            this.getUI().checkAll.disabled = !enabled;\n            this.getUI().inputBox.enabled = enabled;\n            this.getUI().ok.enabled = enabled;\n            this.getUI().list.enabled = enabled;\n        }\n    }\n    hide(reason) {\n        const controller = this.controller;\n        if (!controller) {\n            return;\n        }\n        controller.willHide(reason);\n        const container = this.ui?.container;\n        const focusChanged = container && !dom.isAncestorOfActiveElement(container);\n        this.controller = null;\n        this.onHideEmitter.fire();\n        if (container) {\n            container.style.display = 'none';\n        }\n        if (!focusChanged) {\n            let currentElement = this.previousFocusElement;\n            while (currentElement && !currentElement.offsetParent) {\n                currentElement = currentElement.parentElement ?? undefined;\n            }\n            if (currentElement?.offsetParent) {\n                currentElement.focus();\n                this.previousFocusElement = undefined;\n            }\n            else {\n                this.options.returnFocus();\n            }\n        }\n        controller.didHide(reason);\n    }\n    layout(dimension, titleBarOffset) {\n        this.dimension = dimension;\n        this.titleBarOffset = titleBarOffset;\n        this.updateLayout();\n    }\n    updateLayout() {\n        if (this.ui && this.isVisible()) {\n            this.ui.container.style.top = `${this.titleBarOffset}px`;\n            const style = this.ui.container.style;\n            const width = Math.min(this.dimension.width * 0.62 /* golden cut */, QuickInputController_1.MAX_WIDTH);\n            style.width = width + 'px';\n            style.marginLeft = '-' + (width / 2) + 'px';\n            this.ui.inputBox.layout();\n            this.ui.list.layout(this.dimension && this.dimension.height * 0.4);\n        }\n    }\n    applyStyles(styles) {\n        this.styles = styles;\n        this.updateStyles();\n    }\n    updateStyles() {\n        if (this.ui) {\n            const { quickInputTitleBackground, quickInputBackground, quickInputForeground, widgetBorder, widgetShadow, } = this.styles.widget;\n            this.ui.titleBar.style.backgroundColor = quickInputTitleBackground ?? '';\n            this.ui.container.style.backgroundColor = quickInputBackground ?? '';\n            this.ui.container.style.color = quickInputForeground ?? '';\n            this.ui.container.style.border = widgetBorder ? `1px solid ${widgetBorder}` : '';\n            this.ui.container.style.boxShadow = widgetShadow ? `0 0 8px 2px ${widgetShadow}` : '';\n            this.ui.list.style(this.styles.list);\n            const content = [];\n            if (this.styles.pickerGroup.pickerGroupBorder) {\n                content.push(`.quick-input-list .quick-input-list-entry { border-top-color:  ${this.styles.pickerGroup.pickerGroupBorder}; }`);\n            }\n            if (this.styles.pickerGroup.pickerGroupForeground) {\n                content.push(`.quick-input-list .quick-input-list-separator { color:  ${this.styles.pickerGroup.pickerGroupForeground}; }`);\n            }\n            if (this.styles.pickerGroup.pickerGroupForeground) {\n                content.push(`.quick-input-list .quick-input-list-separator-as-item { color: var(--vscode-descriptionForeground); }`);\n            }\n            if (this.styles.keybindingLabel.keybindingLabelBackground ||\n                this.styles.keybindingLabel.keybindingLabelBorder ||\n                this.styles.keybindingLabel.keybindingLabelBottomBorder ||\n                this.styles.keybindingLabel.keybindingLabelShadow ||\n                this.styles.keybindingLabel.keybindingLabelForeground) {\n                content.push('.quick-input-list .monaco-keybinding > .monaco-keybinding-key {');\n                if (this.styles.keybindingLabel.keybindingLabelBackground) {\n                    content.push(`background-color: ${this.styles.keybindingLabel.keybindingLabelBackground};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelBorder) {\n                    // Order matters here. `border-color` must come before `border-bottom-color`.\n                    content.push(`border-color: ${this.styles.keybindingLabel.keybindingLabelBorder};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelBottomBorder) {\n                    content.push(`border-bottom-color: ${this.styles.keybindingLabel.keybindingLabelBottomBorder};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelShadow) {\n                    content.push(`box-shadow: inset 0 -1px 0 ${this.styles.keybindingLabel.keybindingLabelShadow};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelForeground) {\n                    content.push(`color: ${this.styles.keybindingLabel.keybindingLabelForeground};`);\n                }\n                content.push('}');\n            }\n            const newStyles = content.join('\\n');\n            if (newStyles !== this.ui.styleSheet.textContent) {\n                this.ui.styleSheet.textContent = newStyles;\n            }\n        }\n    }\n};\nQuickInputController = QuickInputController_1 = __decorate([\n    __param(1, ILayoutService),\n    __param(2, IInstantiationService),\n    __param(3, IContextKeyService)\n], QuickInputController);\nexport { QuickInputController };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
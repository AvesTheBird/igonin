{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Shape from '../Shape';\nimport { ARROW_SIZE, ARROW_SPACING, ARROW_WIDTH } from '../../../util/Constants';\n/**\n * Extends {@link Shape} to implement an arrow shape. The shape is used to represent edges, not vertices.\n *\n * This shape is registered under {@link mxConstants.SHAPE_ARROW} in {@link mxCellRenderer}.\n */\nclass ArrowShape extends Shape {\n  constructor(points, fill, stroke) {\n    let strokeWidth = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    let arrowWidth = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : ARROW_WIDTH;\n    let spacing = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : ARROW_SPACING;\n    let endSize = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : ARROW_SIZE;\n    super();\n    this.points = points;\n    this.fill = fill;\n    this.stroke = stroke;\n    this.strokeWidth = strokeWidth;\n    this.arrowWidth = arrowWidth;\n    this.spacing = spacing;\n    this.endSize = endSize;\n  }\n  /**\n   * Augments the bounding box with the edge width and markers.\n   */\n  augmentBoundingBox(bbox) {\n    super.augmentBoundingBox(bbox);\n    const w = Math.max(this.arrowWidth, this.endSize);\n    bbox.grow((w / 2 + this.strokeWidth) * this.scale);\n  }\n  /**\n   * Paints the line shape.\n   */\n  paintEdgeShape(c, pts) {\n    // Geometry of arrow\n    const spacing = ARROW_SPACING;\n    const width = ARROW_WIDTH;\n    const arrow = ARROW_SIZE;\n    // Base vector (between end points)\n    const p0 = pts[0];\n    const pe = pts[pts.length - 1];\n    const dx = pe.x - p0.x;\n    const dy = pe.y - p0.y;\n    const dist = Math.sqrt(dx * dx + dy * dy);\n    const length = dist - 2 * spacing - arrow;\n    // Computes the norm and the inverse norm\n    const nx = dx / dist;\n    const ny = dy / dist;\n    const basex = length * nx;\n    const basey = length * ny;\n    const floorx = width * ny / 3;\n    const floory = -width * nx / 3;\n    // Computes points\n    const p0x = p0.x - floorx / 2 + spacing * nx;\n    const p0y = p0.y - floory / 2 + spacing * ny;\n    const p1x = p0x + floorx;\n    const p1y = p0y + floory;\n    const p2x = p1x + basex;\n    const p2y = p1y + basey;\n    const p3x = p2x + floorx;\n    const p3y = p2y + floory;\n    // p4 not necessary\n    const p5x = p3x - 3 * floorx;\n    const p5y = p3y - 3 * floory;\n    c.begin();\n    c.moveTo(p0x, p0y);\n    c.lineTo(p1x, p1y);\n    c.lineTo(p2x, p2y);\n    c.lineTo(p3x, p3y);\n    c.lineTo(pe.x - spacing * nx, pe.y - spacing * ny);\n    c.lineTo(p5x, p5y);\n    c.lineTo(p5x + floorx, p5y + floory);\n    c.close();\n    c.fillAndStroke();\n  }\n}\nexport default ArrowShape;","map":{"version":3,"names":["Shape","ARROW_SIZE","ARROW_SPACING","ARROW_WIDTH","ArrowShape","constructor","points","fill","stroke","strokeWidth","arguments","length","undefined","arrowWidth","spacing","endSize","augmentBoundingBox","bbox","w","Math","max","grow","scale","paintEdgeShape","c","pts","width","arrow","p0","pe","dx","x","dy","y","dist","sqrt","nx","ny","basex","basey","floorx","floory","p0x","p0y","p1x","p1y","p2x","p2y","p3x","p3y","p5x","p5y","begin","moveTo","lineTo","close","fillAndStroke"],"sources":["D:/OSPanel/domains/old/react/react-intro/node_modules/@maxgraph/core/dist/view/geometry/edge/ArrowShape.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Shape from '../Shape';\nimport { ARROW_SIZE, ARROW_SPACING, ARROW_WIDTH } from '../../../util/Constants';\n/**\n * Extends {@link Shape} to implement an arrow shape. The shape is used to represent edges, not vertices.\n *\n * This shape is registered under {@link mxConstants.SHAPE_ARROW} in {@link mxCellRenderer}.\n */\nclass ArrowShape extends Shape {\n    constructor(points, fill, stroke, strokeWidth = 1, arrowWidth = ARROW_WIDTH, spacing = ARROW_SPACING, endSize = ARROW_SIZE) {\n        super();\n        this.points = points;\n        this.fill = fill;\n        this.stroke = stroke;\n        this.strokeWidth = strokeWidth;\n        this.arrowWidth = arrowWidth;\n        this.spacing = spacing;\n        this.endSize = endSize;\n    }\n    /**\n     * Augments the bounding box with the edge width and markers.\n     */\n    augmentBoundingBox(bbox) {\n        super.augmentBoundingBox(bbox);\n        const w = Math.max(this.arrowWidth, this.endSize);\n        bbox.grow((w / 2 + this.strokeWidth) * this.scale);\n    }\n    /**\n     * Paints the line shape.\n     */\n    paintEdgeShape(c, pts) {\n        // Geometry of arrow\n        const spacing = ARROW_SPACING;\n        const width = ARROW_WIDTH;\n        const arrow = ARROW_SIZE;\n        // Base vector (between end points)\n        const p0 = pts[0];\n        const pe = pts[pts.length - 1];\n        const dx = pe.x - p0.x;\n        const dy = pe.y - p0.y;\n        const dist = Math.sqrt(dx * dx + dy * dy);\n        const length = dist - 2 * spacing - arrow;\n        // Computes the norm and the inverse norm\n        const nx = dx / dist;\n        const ny = dy / dist;\n        const basex = length * nx;\n        const basey = length * ny;\n        const floorx = (width * ny) / 3;\n        const floory = (-width * nx) / 3;\n        // Computes points\n        const p0x = p0.x - floorx / 2 + spacing * nx;\n        const p0y = p0.y - floory / 2 + spacing * ny;\n        const p1x = p0x + floorx;\n        const p1y = p0y + floory;\n        const p2x = p1x + basex;\n        const p2y = p1y + basey;\n        const p3x = p2x + floorx;\n        const p3y = p2y + floory;\n        // p4 not necessary\n        const p5x = p3x - 3 * floorx;\n        const p5y = p3y - 3 * floory;\n        c.begin();\n        c.moveTo(p0x, p0y);\n        c.lineTo(p1x, p1y);\n        c.lineTo(p2x, p2y);\n        c.lineTo(p3x, p3y);\n        c.lineTo(pe.x - spacing * nx, pe.y - spacing * ny);\n        c.lineTo(p5x, p5y);\n        c.lineTo(p5x + floorx, p5y + floory);\n        c.close();\n        c.fillAndStroke();\n    }\n}\nexport default ArrowShape;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { StandardAutoClosingPairConditional } from '../languageConfiguration.js';\nexport class CharacterPairSupport {\n  static {\n    this.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_QUOTES = ';:.,=}])> \\n\\t';\n  }\n  static {\n    this.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_BRACKETS = '\\'\"`;:.,=}])> \\n\\t';\n  }\n  constructor(config) {\n    if (config.autoClosingPairs) {\n      this._autoClosingPairs = config.autoClosingPairs.map(el => new StandardAutoClosingPairConditional(el));\n    } else if (config.brackets) {\n      this._autoClosingPairs = config.brackets.map(b => new StandardAutoClosingPairConditional({\n        open: b[0],\n        close: b[1]\n      }));\n    } else {\n      this._autoClosingPairs = [];\n    }\n    if (config.__electricCharacterSupport && config.__electricCharacterSupport.docComment) {\n      const docComment = config.__electricCharacterSupport.docComment;\n      // IDocComment is legacy, only partially supported\n      this._autoClosingPairs.push(new StandardAutoClosingPairConditional({\n        open: docComment.open,\n        close: docComment.close || ''\n      }));\n    }\n    this._autoCloseBeforeForQuotes = typeof config.autoCloseBefore === 'string' ? config.autoCloseBefore : CharacterPairSupport.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_QUOTES;\n    this._autoCloseBeforeForBrackets = typeof config.autoCloseBefore === 'string' ? config.autoCloseBefore : CharacterPairSupport.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_BRACKETS;\n    this._surroundingPairs = config.surroundingPairs || this._autoClosingPairs;\n  }\n  getAutoClosingPairs() {\n    return this._autoClosingPairs;\n  }\n  getAutoCloseBeforeSet(forQuotes) {\n    return forQuotes ? this._autoCloseBeforeForQuotes : this._autoCloseBeforeForBrackets;\n  }\n  getSurroundingPairs() {\n    return this._surroundingPairs;\n  }\n}","map":{"version":3,"names":["StandardAutoClosingPairConditional","CharacterPairSupport","DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_QUOTES","DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_BRACKETS","constructor","config","autoClosingPairs","_autoClosingPairs","map","el","brackets","b","open","close","__electricCharacterSupport","docComment","push","_autoCloseBeforeForQuotes","autoCloseBefore","_autoCloseBeforeForBrackets","_surroundingPairs","surroundingPairs","getAutoClosingPairs","getAutoCloseBeforeSet","forQuotes","getSurroundingPairs"],"sources":["D:/ospanel/domains/проекты open server/old/react/react-intro-main/node_modules/monaco-editor/esm/vs/editor/common/languages/supports/characterPair.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { StandardAutoClosingPairConditional } from '../languageConfiguration.js';\nexport class CharacterPairSupport {\n    static { this.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_QUOTES = ';:.,=}])> \\n\\t'; }\n    static { this.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_BRACKETS = '\\'\"`;:.,=}])> \\n\\t'; }\n    constructor(config) {\n        if (config.autoClosingPairs) {\n            this._autoClosingPairs = config.autoClosingPairs.map(el => new StandardAutoClosingPairConditional(el));\n        }\n        else if (config.brackets) {\n            this._autoClosingPairs = config.brackets.map(b => new StandardAutoClosingPairConditional({ open: b[0], close: b[1] }));\n        }\n        else {\n            this._autoClosingPairs = [];\n        }\n        if (config.__electricCharacterSupport && config.__electricCharacterSupport.docComment) {\n            const docComment = config.__electricCharacterSupport.docComment;\n            // IDocComment is legacy, only partially supported\n            this._autoClosingPairs.push(new StandardAutoClosingPairConditional({ open: docComment.open, close: docComment.close || '' }));\n        }\n        this._autoCloseBeforeForQuotes = typeof config.autoCloseBefore === 'string' ? config.autoCloseBefore : CharacterPairSupport.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_QUOTES;\n        this._autoCloseBeforeForBrackets = typeof config.autoCloseBefore === 'string' ? config.autoCloseBefore : CharacterPairSupport.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED_BRACKETS;\n        this._surroundingPairs = config.surroundingPairs || this._autoClosingPairs;\n    }\n    getAutoClosingPairs() {\n        return this._autoClosingPairs;\n    }\n    getAutoCloseBeforeSet(forQuotes) {\n        return (forQuotes ? this._autoCloseBeforeForQuotes : this._autoCloseBeforeForBrackets);\n    }\n    getSurroundingPairs() {\n        return this._surroundingPairs;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,kCAAkC,QAAQ,6BAA6B;AAChF,OAAO,MAAMC,oBAAoB,CAAC;EAC9B;IAAS,IAAI,CAACC,gDAAgD,GAAG,gBAAgB;EAAE;EACnF;IAAS,IAAI,CAACC,kDAAkD,GAAG,oBAAoB;EAAE;EACzFC,WAAWA,CAACC,MAAM,EAAE;IAChB,IAAIA,MAAM,CAACC,gBAAgB,EAAE;MACzB,IAAI,CAACC,iBAAiB,GAAGF,MAAM,CAACC,gBAAgB,CAACE,GAAG,CAACC,EAAE,IAAI,IAAIT,kCAAkC,CAACS,EAAE,CAAC,CAAC;IAC1G,CAAC,MACI,IAAIJ,MAAM,CAACK,QAAQ,EAAE;MACtB,IAAI,CAACH,iBAAiB,GAAGF,MAAM,CAACK,QAAQ,CAACF,GAAG,CAACG,CAAC,IAAI,IAAIX,kCAAkC,CAAC;QAAEY,IAAI,EAAED,CAAC,CAAC,CAAC,CAAC;QAAEE,KAAK,EAAEF,CAAC,CAAC,CAAC;MAAE,CAAC,CAAC,CAAC;IAC1H,CAAC,MACI;MACD,IAAI,CAACJ,iBAAiB,GAAG,EAAE;IAC/B;IACA,IAAIF,MAAM,CAACS,0BAA0B,IAAIT,MAAM,CAACS,0BAA0B,CAACC,UAAU,EAAE;MACnF,MAAMA,UAAU,GAAGV,MAAM,CAACS,0BAA0B,CAACC,UAAU;MAC/D;MACA,IAAI,CAACR,iBAAiB,CAACS,IAAI,CAAC,IAAIhB,kCAAkC,CAAC;QAAEY,IAAI,EAAEG,UAAU,CAACH,IAAI;QAAEC,KAAK,EAAEE,UAAU,CAACF,KAAK,IAAI;MAAG,CAAC,CAAC,CAAC;IACjI;IACA,IAAI,CAACI,yBAAyB,GAAG,OAAOZ,MAAM,CAACa,eAAe,KAAK,QAAQ,GAAGb,MAAM,CAACa,eAAe,GAAGjB,oBAAoB,CAACC,gDAAgD;IAC5K,IAAI,CAACiB,2BAA2B,GAAG,OAAOd,MAAM,CAACa,eAAe,KAAK,QAAQ,GAAGb,MAAM,CAACa,eAAe,GAAGjB,oBAAoB,CAACE,kDAAkD;IAChL,IAAI,CAACiB,iBAAiB,GAAGf,MAAM,CAACgB,gBAAgB,IAAI,IAAI,CAACd,iBAAiB;EAC9E;EACAe,mBAAmBA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACf,iBAAiB;EACjC;EACAgB,qBAAqBA,CAACC,SAAS,EAAE;IAC7B,OAAQA,SAAS,GAAG,IAAI,CAACP,yBAAyB,GAAG,IAAI,CAACE,2BAA2B;EACzF;EACAM,mBAAmBA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACL,iBAAiB;EACjC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{DomHelpers,EdgeStyle,Graph,ModelXmlSerializer,Point,popup,RubberBandHandler}from'@maxgraph/core';import{globalValues,rubberBandValues}from'./shared/args.js';import{configureImagesBasePath,createGraphContainer}from'./shared/configure.js';import{jsx as _jsx}from\"react/jsx-runtime\";const GraphComponent=_ref=>{let{label,...args}=_ref;const graphContainerRef=useRef(null);useEffect(()=>{configureImagesBasePath();const container=createGraphContainer(args);graphContainerRef.current.appendChild(container);// Creates the graph inside the given container\nconst graph=new Graph(container);graph.setConnectable(true);graph.setTooltips(true);// Sets the default edge style\nconst style=graph.getStylesheet().getDefaultEdgeStyle();style.edgeStyle=EdgeStyle.ElbowConnector;// Ports are not used as terminals for edges, they are\n// only used to compute the graphical connection point\ngraph.isPort=function(cell){var _geo$relative;const geo=cell===null||cell===void 0?void 0:cell.getGeometry();return(_geo$relative=geo===null||geo===void 0?void 0:geo.relative)!==null&&_geo$relative!==void 0?_geo$relative:false;};// Implements a tooltip that shows the actual\n// source and target of an edge\ngraph.getTooltipForCell=function(cell){if(cell&&cell.isEdge()){const source=cell.getTerminal(true);const target=cell.getTerminal(false);if(source&&target){return\"\".concat(this.convertValueToString(source),\" => \").concat(this.convertValueToString(target));}}return Graph.prototype.getTooltipForCell.apply(this,[cell]);};// Removes the folding icon and disables any folding\ngraph.isCellFoldable=_cell=>false;// Enables rubberband selection\nif(args.rubberBand)new RubberBandHandler(graph);// Gets the default parent for inserting new cells. This\n// is normally the first child of the root (ie. layer 0).\nconst parent=graph.getDefaultParent();// Adds cells to the model in a single step\ngraph.batchUpdate(()=>{const v1=graph.insertVertex(parent,null,'Hello',20,80,80,30);v1.setConnectable(false);const v11=graph.insertVertex(v1,null,'',1,1,10,10);if(v11.geometry){v11.geometry.offset=new Point(-5,-5);v11.geometry.relative=true;}const v12=graph.insertVertex(v1,null,'',1,0,10,10);if(v12.geometry){v12.geometry.offset=new Point(-5,-5);v12.geometry.relative=true;}const v2=graph.insertVertex(parent,null,'World!',200,150,80,30);const v3=graph.insertVertex(parent,null,'World2',200,20,80,30);graph.insertEdge(parent,null,'',v11,v2);graph.insertEdge(parent,null,'',v12,v3);});const controller=document.createElement('div');graphContainerRef.current.appendChild(controller);const button=DomHelpers.button('View XML',function(){const xml=new ModelXmlSerializer(graph.getDataModel()).export();popup(xml,true);});controller.appendChild(button);},[]);return/*#__PURE__*/_jsx(\"div\",{ref:graphContainerRef});};export default GraphComponent;","map":{"version":3,"names":["React","useEffect","useRef","DomHelpers","EdgeStyle","Graph","ModelXmlSerializer","Point","popup","RubberBandHandler","globalValues","rubberBandValues","configureImagesBasePath","createGraphContainer","jsx","_jsx","GraphComponent","_ref","label","args","graphContainerRef","container","current","appendChild","graph","setConnectable","setTooltips","style","getStylesheet","getDefaultEdgeStyle","edgeStyle","ElbowConnector","isPort","cell","_geo$relative","geo","getGeometry","relative","getTooltipForCell","isEdge","source","getTerminal","target","concat","convertValueToString","prototype","apply","isCellFoldable","_cell","rubberBand","parent","getDefaultParent","batchUpdate","v1","insertVertex","v11","geometry","offset","v12","v2","v3","insertEdge","controller","document","createElement","button","xml","getDataModel","export","ref"],"sources":["D:/ospanel/domains/react/react-intro/src/components/GraphComponent.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport {\r\n  DomHelpers,\r\n  EdgeStyle,\r\n  Graph,\r\n  ModelXmlSerializer,\r\n  Point,\r\n  popup,\r\n  RubberBandHandler,\r\n} from '@maxgraph/core';\r\n\r\nimport {\r\n  globalValues,\r\n  rubberBandValues,\r\n} from './shared/args.js';\r\nimport { configureImagesBasePath, createGraphContainer } from './shared/configure.js';\r\n\r\nconst GraphComponent = ({ label, ...args }) => {\r\n  const graphContainerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    configureImagesBasePath();\r\n\r\n    const container = createGraphContainer(args);\r\n    graphContainerRef.current.appendChild(container);\r\n\r\n    // Creates the graph inside the given container\r\n    const graph = new Graph(container);\r\n    graph.setConnectable(true);\r\n    graph.setTooltips(true);\r\n\r\n    // Sets the default edge style\r\n    const style = graph.getStylesheet().getDefaultEdgeStyle();\r\n    style.edgeStyle = EdgeStyle.ElbowConnector;\r\n\r\n    // Ports are not used as terminals for edges, they are\r\n    // only used to compute the graphical connection point\r\n    graph.isPort = function (cell) {\r\n      const geo = cell?.getGeometry();\r\n      return geo?.relative ?? false;\r\n    };\r\n\r\n    // Implements a tooltip that shows the actual\r\n    // source and target of an edge\r\n    graph.getTooltipForCell = function (cell) {\r\n      if (cell && cell.isEdge()) {\r\n        const source = cell.getTerminal(true);\r\n        const target = cell.getTerminal(false);\r\n        if (source && target) {\r\n          return `${this.convertValueToString(source)} => ${this.convertValueToString(\r\n            target\r\n          )}`;\r\n        }\r\n      }\r\n\r\n      return Graph.prototype.getTooltipForCell.apply(this, [cell]);\r\n    };\r\n\r\n    // Removes the folding icon and disables any folding\r\n    graph.isCellFoldable = (_cell) => false;\r\n\r\n    // Enables rubberband selection\r\n    if (args.rubberBand) new RubberBandHandler(graph);\r\n\r\n    // Gets the default parent for inserting new cells. This\r\n    // is normally the first child of the root (ie. layer 0).\r\n    const parent = graph.getDefaultParent();\r\n\r\n    // Adds cells to the model in a single step\r\n    graph.batchUpdate(() => {\r\n      const v1 = graph.insertVertex(parent, null, 'Hello', 20, 80, 80, 30);\r\n      v1.setConnectable(false);\r\n      const v11 = graph.insertVertex(v1, null, '', 1, 1, 10, 10);\r\n      if (v11.geometry) {\r\n        v11.geometry.offset = new Point(-5, -5);\r\n        v11.geometry.relative = true;\r\n      }\r\n      const v12 = graph.insertVertex(v1, null, '', 1, 0, 10, 10);\r\n      if (v12.geometry) {\r\n        v12.geometry.offset = new Point(-5, -5);\r\n        v12.geometry.relative = true;\r\n      }\r\n      const v2 = graph.insertVertex(parent, null, 'World!', 200, 150, 80, 30);\r\n      const v3 = graph.insertVertex(parent, null, 'World2', 200, 20, 80, 30);\r\n      graph.insertEdge(parent, null, '', v11, v2);\r\n      graph.insertEdge(parent, null, '', v12, v3);\r\n    });\r\n\r\n    const controller = document.createElement('div');\r\n    graphContainerRef.current.appendChild(controller);\r\n\r\n    const button = DomHelpers.button('View XML', function () {\r\n      const xml = new ModelXmlSerializer(graph.getDataModel()).export();\r\n      popup(xml, true);\r\n    });\r\n\r\n    controller.appendChild(button);\r\n  }, []);\r\n\r\n  return <div ref={graphContainerRef}></div>;\r\n};\r\n\r\nexport default GraphComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport EventSource from '../event/EventSource';\nimport EventObject from '../event/EventObject';\nimport InternalEvent from '../event/InternalEvent';\n/**\n * Implements a basic animation in JavaScript.\n *\n * @class Animation\n * @extends {EventSource}\n */\nclass Animation extends EventSource {\n  constructor() {\n    let delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;\n    super();\n    /**\n     * Reference to the thread while the animation is running.\n     */\n    this.thread = null;\n    this.delay = delay;\n  }\n  /**\n   * Returns true if the animation is running.\n   */\n  isRunning() {\n    return this.thread != null;\n  }\n  /**\n   * Starts the animation by repeatedly invoking updateAnimation.\n   */\n  startAnimation() {\n    if (this.thread == null) {\n      this.thread = window.setInterval(this.updateAnimation.bind(this), this.delay);\n    }\n  }\n  /**\n   * Hook for subclassers to implement the animation. Invoke stopAnimation\n   * when finished, startAnimation to resume. This is called whenever the\n   * timer fires and fires an mxEvent.EXECUTE event with no properties.\n   */\n  updateAnimation() {\n    this.fireEvent(new EventObject(InternalEvent.EXECUTE));\n  }\n  /**\n   * Stops the animation by deleting the timer and fires an {@link Event#DONE}.\n   */\n  stopAnimation() {\n    if (this.thread != null) {\n      window.clearInterval(this.thread);\n      this.thread = null;\n      this.fireEvent(new EventObject(InternalEvent.DONE));\n    }\n  }\n}\nexport default Animation;","map":{"version":3,"names":["EventSource","EventObject","InternalEvent","Animation","constructor","delay","arguments","length","undefined","thread","isRunning","startAnimation","window","setInterval","updateAnimation","bind","fireEvent","EXECUTE","stopAnimation","clearInterval","DONE"],"sources":["D:/ospanel/domains/old/react/react-intro/node_modules/@maxgraph/core/dist/view/animate/Animation.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport EventSource from '../event/EventSource';\nimport EventObject from '../event/EventObject';\nimport InternalEvent from '../event/InternalEvent';\n/**\n * Implements a basic animation in JavaScript.\n *\n * @class Animation\n * @extends {EventSource}\n */\nclass Animation extends EventSource {\n    constructor(delay = 20) {\n        super();\n        /**\n         * Reference to the thread while the animation is running.\n         */\n        this.thread = null;\n        this.delay = delay;\n    }\n    /**\n     * Returns true if the animation is running.\n     */\n    isRunning() {\n        return this.thread != null;\n    }\n    /**\n     * Starts the animation by repeatedly invoking updateAnimation.\n     */\n    startAnimation() {\n        if (this.thread == null) {\n            this.thread = window.setInterval(this.updateAnimation.bind(this), this.delay);\n        }\n    }\n    /**\n     * Hook for subclassers to implement the animation. Invoke stopAnimation\n     * when finished, startAnimation to resume. This is called whenever the\n     * timer fires and fires an mxEvent.EXECUTE event with no properties.\n     */\n    updateAnimation() {\n        this.fireEvent(new EventObject(InternalEvent.EXECUTE));\n    }\n    /**\n     * Stops the animation by deleting the timer and fires an {@link Event#DONE}.\n     */\n    stopAnimation() {\n        if (this.thread != null) {\n            window.clearInterval(this.thread);\n            this.thread = null;\n            this.fireEvent(new EventObject(InternalEvent.DONE));\n        }\n    }\n}\nexport default Animation;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,aAAa,MAAM,wBAAwB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,SAAS,SAASH,WAAW,CAAC;EAChCI,WAAWA,CAAA,EAAa;IAAA,IAAZC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IAClB,KAAK,CAAC,CAAC;IACP;AACR;AACA;IACQ,IAAI,CAACG,MAAM,GAAG,IAAI;IAClB,IAAI,CAACJ,KAAK,GAAGA,KAAK;EACtB;EACA;AACJ;AACA;EACIK,SAASA,CAAA,EAAG;IACR,OAAO,IAAI,CAACD,MAAM,IAAI,IAAI;EAC9B;EACA;AACJ;AACA;EACIE,cAAcA,CAAA,EAAG;IACb,IAAI,IAAI,CAACF,MAAM,IAAI,IAAI,EAAE;MACrB,IAAI,CAACA,MAAM,GAAGG,MAAM,CAACC,WAAW,CAAC,IAAI,CAACC,eAAe,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAACV,KAAK,CAAC;IACjF;EACJ;EACA;AACJ;AACA;AACA;AACA;EACIS,eAAeA,CAAA,EAAG;IACd,IAAI,CAACE,SAAS,CAAC,IAAIf,WAAW,CAACC,aAAa,CAACe,OAAO,CAAC,CAAC;EAC1D;EACA;AACJ;AACA;EACIC,aAAaA,CAAA,EAAG;IACZ,IAAI,IAAI,CAACT,MAAM,IAAI,IAAI,EAAE;MACrBG,MAAM,CAACO,aAAa,CAAC,IAAI,CAACV,MAAM,CAAC;MACjC,IAAI,CAACA,MAAM,GAAG,IAAI;MAClB,IAAI,CAACO,SAAS,CAAC,IAAIf,WAAW,CAACC,aAAa,CAACkB,IAAI,CAAC,CAAC;IACvD;EACJ;AACJ;AACA,eAAejB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
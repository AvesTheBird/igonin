{"ast":null,"code":"import { localize } from '../../../nls.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IAccessibilitySignalService = createDecorator('accessibilitySignalService');\n/** Make sure you understand the doc comments of the method you want to call when using this token! */\nexport const AcknowledgeDocCommentsToken = Symbol('AcknowledgeDocCommentsToken');\n/**\n * Corresponds to the audio files in ./media.\n*/\nexport class Sound {\n  static register(options) {\n    const sound = new Sound(options.fileName);\n    return sound;\n  }\n  static {\n    this.error = Sound.register({\n      fileName: 'error.mp3'\n    });\n  }\n  static {\n    this.warning = Sound.register({\n      fileName: 'warning.mp3'\n    });\n  }\n  static {\n    this.success = Sound.register({\n      fileName: 'success.mp3'\n    });\n  }\n  static {\n    this.foldedArea = Sound.register({\n      fileName: 'foldedAreas.mp3'\n    });\n  }\n  static {\n    this.break = Sound.register({\n      fileName: 'break.mp3'\n    });\n  }\n  static {\n    this.quickFixes = Sound.register({\n      fileName: 'quickFixes.mp3'\n    });\n  }\n  static {\n    this.taskCompleted = Sound.register({\n      fileName: 'taskCompleted.mp3'\n    });\n  }\n  static {\n    this.taskFailed = Sound.register({\n      fileName: 'taskFailed.mp3'\n    });\n  }\n  static {\n    this.terminalBell = Sound.register({\n      fileName: 'terminalBell.mp3'\n    });\n  }\n  static {\n    this.diffLineInserted = Sound.register({\n      fileName: 'diffLineInserted.mp3'\n    });\n  }\n  static {\n    this.diffLineDeleted = Sound.register({\n      fileName: 'diffLineDeleted.mp3'\n    });\n  }\n  static {\n    this.diffLineModified = Sound.register({\n      fileName: 'diffLineModified.mp3'\n    });\n  }\n  static {\n    this.chatRequestSent = Sound.register({\n      fileName: 'chatRequestSent.mp3'\n    });\n  }\n  static {\n    this.chatResponseReceived1 = Sound.register({\n      fileName: 'chatResponseReceived1.mp3'\n    });\n  }\n  static {\n    this.chatResponseReceived2 = Sound.register({\n      fileName: 'chatResponseReceived2.mp3'\n    });\n  }\n  static {\n    this.chatResponseReceived3 = Sound.register({\n      fileName: 'chatResponseReceived3.mp3'\n    });\n  }\n  static {\n    this.chatResponseReceived4 = Sound.register({\n      fileName: 'chatResponseReceived4.mp3'\n    });\n  }\n  static {\n    this.clear = Sound.register({\n      fileName: 'clear.mp3'\n    });\n  }\n  static {\n    this.save = Sound.register({\n      fileName: 'save.mp3'\n    });\n  }\n  static {\n    this.format = Sound.register({\n      fileName: 'format.mp3'\n    });\n  }\n  static {\n    this.voiceRecordingStarted = Sound.register({\n      fileName: 'voiceRecordingStarted.mp3'\n    });\n  }\n  static {\n    this.voiceRecordingStopped = Sound.register({\n      fileName: 'voiceRecordingStopped.mp3'\n    });\n  }\n  static {\n    this.progress = Sound.register({\n      fileName: 'progress.mp3'\n    });\n  }\n  constructor(fileName) {\n    this.fileName = fileName;\n  }\n}\nexport class SoundSource {\n  constructor(randomOneOf) {\n    this.randomOneOf = randomOneOf;\n  }\n}\nexport class AccessibilitySignal {\n  constructor(sound, name, legacySoundSettingsKey, settingsKey, legacyAnnouncementSettingsKey, announcementMessage) {\n    this.sound = sound;\n    this.name = name;\n    this.legacySoundSettingsKey = legacySoundSettingsKey;\n    this.settingsKey = settingsKey;\n    this.legacyAnnouncementSettingsKey = legacyAnnouncementSettingsKey;\n    this.announcementMessage = announcementMessage;\n  }\n  static {\n    this._signals = new Set();\n  }\n  static register(options) {\n    const soundSource = new SoundSource('randomOneOf' in options.sound ? options.sound.randomOneOf : [options.sound]);\n    const signal = new AccessibilitySignal(soundSource, options.name, options.legacySoundSettingsKey, options.settingsKey, options.legacyAnnouncementSettingsKey, options.announcementMessage);\n    AccessibilitySignal._signals.add(signal);\n    return signal;\n  }\n  static {\n    this.errorAtPosition = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.positionHasError.name', 'Error at Position'),\n      sound: Sound.error,\n      announcementMessage: localize('accessibility.signals.positionHasError', 'Error'),\n      settingsKey: 'accessibility.signals.positionHasError',\n      delaySettingsKey: 'accessibility.signalOptions.delays.errorAtPosition'\n    });\n  }\n  static {\n    this.warningAtPosition = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.positionHasWarning.name', 'Warning at Position'),\n      sound: Sound.warning,\n      announcementMessage: localize('accessibility.signals.positionHasWarning', 'Warning'),\n      settingsKey: 'accessibility.signals.positionHasWarning',\n      delaySettingsKey: 'accessibility.signalOptions.delays.warningAtPosition'\n    });\n  }\n  static {\n    this.errorOnLine = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.lineHasError.name', 'Error on Line'),\n      sound: Sound.error,\n      legacySoundSettingsKey: 'audioCues.lineHasError',\n      legacyAnnouncementSettingsKey: 'accessibility.alert.error',\n      announcementMessage: localize('accessibility.signals.lineHasError', 'Error on Line'),\n      settingsKey: 'accessibility.signals.lineHasError'\n    });\n  }\n  static {\n    this.warningOnLine = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.lineHasWarning.name', 'Warning on Line'),\n      sound: Sound.warning,\n      legacySoundSettingsKey: 'audioCues.lineHasWarning',\n      legacyAnnouncementSettingsKey: 'accessibility.alert.warning',\n      announcementMessage: localize('accessibility.signals.lineHasWarning', 'Warning on Line'),\n      settingsKey: 'accessibility.signals.lineHasWarning'\n    });\n  }\n  static {\n    this.foldedArea = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.lineHasFoldedArea.name', 'Folded Area on Line'),\n      sound: Sound.foldedArea,\n      legacySoundSettingsKey: 'audioCues.lineHasFoldedArea',\n      legacyAnnouncementSettingsKey: 'accessibility.alert.foldedArea',\n      announcementMessage: localize('accessibility.signals.lineHasFoldedArea', 'Folded'),\n      settingsKey: 'accessibility.signals.lineHasFoldedArea'\n    });\n  }\n  static {\n    this.break = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.lineHasBreakpoint.name', 'Breakpoint on Line'),\n      sound: Sound.break,\n      legacySoundSettingsKey: 'audioCues.lineHasBreakpoint',\n      legacyAnnouncementSettingsKey: 'accessibility.alert.breakpoint',\n      announcementMessage: localize('accessibility.signals.lineHasBreakpoint', 'Breakpoint'),\n      settingsKey: 'accessibility.signals.lineHasBreakpoint'\n    });\n  }\n  static {\n    this.inlineSuggestion = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.lineHasInlineSuggestion.name', 'Inline Suggestion on Line'),\n      sound: Sound.quickFixes,\n      legacySoundSettingsKey: 'audioCues.lineHasInlineSuggestion',\n      settingsKey: 'accessibility.signals.lineHasInlineSuggestion'\n    });\n  }\n  static {\n    this.terminalQuickFix = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.terminalQuickFix.name', 'Terminal Quick Fix'),\n      sound: Sound.quickFixes,\n      legacySoundSettingsKey: 'audioCues.terminalQuickFix',\n      legacyAnnouncementSettingsKey: 'accessibility.alert.terminalQuickFix',\n      announcementMessage: localize('accessibility.signals.terminalQuickFix', 'Quick Fix'),\n      settingsKey: 'accessibility.signals.terminalQuickFix'\n    });\n  }\n  static {\n    this.onDebugBreak = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.onDebugBreak.name', 'Debugger Stopped on Breakpoint'),\n      sound: Sound.break,\n      legacySoundSettingsKey: 'audioCues.onDebugBreak',\n      legacyAnnouncementSettingsKey: 'accessibility.alert.onDebugBreak',\n      announcementMessage: localize('accessibility.signals.onDebugBreak', 'Breakpoint'),\n      settingsKey: 'accessibility.signals.onDebugBreak'\n    });\n  }\n  static {\n    this.noInlayHints = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.noInlayHints', 'No Inlay Hints on Line'),\n      sound: Sound.error,\n      legacySoundSettingsKey: 'audioCues.noInlayHints',\n      legacyAnnouncementSettingsKey: 'accessibility.alert.noInlayHints',\n      announcementMessage: localize('accessibility.signals.noInlayHints', 'No Inlay Hints'),\n      settingsKey: 'accessibility.signals.noInlayHints'\n    });\n  }\n  static {\n    this.taskCompleted = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.taskCompleted', 'Task Completed'),\n      sound: Sound.taskCompleted,\n      legacySoundSettingsKey: 'audioCues.taskCompleted',\n      legacyAnnouncementSettingsKey: 'accessibility.alert.taskCompleted',\n      announcementMessage: localize('accessibility.signals.taskCompleted', 'Task Completed'),\n      settingsKey: 'accessibility.signals.taskCompleted'\n    });\n  }\n  static {\n    this.taskFailed = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.taskFailed', 'Task Failed'),\n      sound: Sound.taskFailed,\n      legacySoundSettingsKey: 'audioCues.taskFailed',\n      legacyAnnouncementSettingsKey: 'accessibility.alert.taskFailed',\n      announcementMessage: localize('accessibility.signals.taskFailed', 'Task Failed'),\n      settingsKey: 'accessibility.signals.taskFailed'\n    });\n  }\n  static {\n    this.terminalCommandFailed = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.terminalCommandFailed', 'Terminal Command Failed'),\n      sound: Sound.error,\n      legacySoundSettingsKey: 'audioCues.terminalCommandFailed',\n      legacyAnnouncementSettingsKey: 'accessibility.alert.terminalCommandFailed',\n      announcementMessage: localize('accessibility.signals.terminalCommandFailed', 'Command Failed'),\n      settingsKey: 'accessibility.signals.terminalCommandFailed'\n    });\n  }\n  static {\n    this.terminalCommandSucceeded = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.terminalCommandSucceeded', 'Terminal Command Succeeded'),\n      sound: Sound.success,\n      announcementMessage: localize('accessibility.signals.terminalCommandSucceeded', 'Command Succeeded'),\n      settingsKey: 'accessibility.signals.terminalCommandSucceeded'\n    });\n  }\n  static {\n    this.terminalBell = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.terminalBell', 'Terminal Bell'),\n      sound: Sound.terminalBell,\n      legacySoundSettingsKey: 'audioCues.terminalBell',\n      legacyAnnouncementSettingsKey: 'accessibility.alert.terminalBell',\n      announcementMessage: localize('accessibility.signals.terminalBell', 'Terminal Bell'),\n      settingsKey: 'accessibility.signals.terminalBell'\n    });\n  }\n  static {\n    this.notebookCellCompleted = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.notebookCellCompleted', 'Notebook Cell Completed'),\n      sound: Sound.taskCompleted,\n      legacySoundSettingsKey: 'audioCues.notebookCellCompleted',\n      legacyAnnouncementSettingsKey: 'accessibility.alert.notebookCellCompleted',\n      announcementMessage: localize('accessibility.signals.notebookCellCompleted', 'Notebook Cell Completed'),\n      settingsKey: 'accessibility.signals.notebookCellCompleted'\n    });\n  }\n  static {\n    this.notebookCellFailed = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.notebookCellFailed', 'Notebook Cell Failed'),\n      sound: Sound.taskFailed,\n      legacySoundSettingsKey: 'audioCues.notebookCellFailed',\n      legacyAnnouncementSettingsKey: 'accessibility.alert.notebookCellFailed',\n      announcementMessage: localize('accessibility.signals.notebookCellFailed', 'Notebook Cell Failed'),\n      settingsKey: 'accessibility.signals.notebookCellFailed'\n    });\n  }\n  static {\n    this.diffLineInserted = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.diffLineInserted', 'Diff Line Inserted'),\n      sound: Sound.diffLineInserted,\n      legacySoundSettingsKey: 'audioCues.diffLineInserted',\n      settingsKey: 'accessibility.signals.diffLineInserted'\n    });\n  }\n  static {\n    this.diffLineDeleted = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.diffLineDeleted', 'Diff Line Deleted'),\n      sound: Sound.diffLineDeleted,\n      legacySoundSettingsKey: 'audioCues.diffLineDeleted',\n      settingsKey: 'accessibility.signals.diffLineDeleted'\n    });\n  }\n  static {\n    this.diffLineModified = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.diffLineModified', 'Diff Line Modified'),\n      sound: Sound.diffLineModified,\n      legacySoundSettingsKey: 'audioCues.diffLineModified',\n      settingsKey: 'accessibility.signals.diffLineModified'\n    });\n  }\n  static {\n    this.chatRequestSent = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.chatRequestSent', 'Chat Request Sent'),\n      sound: Sound.chatRequestSent,\n      legacySoundSettingsKey: 'audioCues.chatRequestSent',\n      legacyAnnouncementSettingsKey: 'accessibility.alert.chatRequestSent',\n      announcementMessage: localize('accessibility.signals.chatRequestSent', 'Chat Request Sent'),\n      settingsKey: 'accessibility.signals.chatRequestSent'\n    });\n  }\n  static {\n    this.chatResponseReceived = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.chatResponseReceived', 'Chat Response Received'),\n      legacySoundSettingsKey: 'audioCues.chatResponseReceived',\n      sound: {\n        randomOneOf: [Sound.chatResponseReceived1, Sound.chatResponseReceived2, Sound.chatResponseReceived3, Sound.chatResponseReceived4]\n      },\n      settingsKey: 'accessibility.signals.chatResponseReceived'\n    });\n  }\n  static {\n    this.progress = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.progress', 'Progress'),\n      sound: Sound.progress,\n      legacySoundSettingsKey: 'audioCues.chatResponsePending',\n      legacyAnnouncementSettingsKey: 'accessibility.alert.progress',\n      announcementMessage: localize('accessibility.signals.progress', 'Progress'),\n      settingsKey: 'accessibility.signals.progress'\n    });\n  }\n  static {\n    this.clear = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.clear', 'Clear'),\n      sound: Sound.clear,\n      legacySoundSettingsKey: 'audioCues.clear',\n      legacyAnnouncementSettingsKey: 'accessibility.alert.clear',\n      announcementMessage: localize('accessibility.signals.clear', 'Clear'),\n      settingsKey: 'accessibility.signals.clear'\n    });\n  }\n  static {\n    this.save = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.save', 'Save'),\n      sound: Sound.save,\n      legacySoundSettingsKey: 'audioCues.save',\n      legacyAnnouncementSettingsKey: 'accessibility.alert.save',\n      announcementMessage: localize('accessibility.signals.save', 'Save'),\n      settingsKey: 'accessibility.signals.save'\n    });\n  }\n  static {\n    this.format = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.format', 'Format'),\n      sound: Sound.format,\n      legacySoundSettingsKey: 'audioCues.format',\n      legacyAnnouncementSettingsKey: 'accessibility.alert.format',\n      announcementMessage: localize('accessibility.signals.format', 'Format'),\n      settingsKey: 'accessibility.signals.format'\n    });\n  }\n  static {\n    this.voiceRecordingStarted = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.voiceRecordingStarted', 'Voice Recording Started'),\n      sound: Sound.voiceRecordingStarted,\n      legacySoundSettingsKey: 'audioCues.voiceRecordingStarted',\n      settingsKey: 'accessibility.signals.voiceRecordingStarted'\n    });\n  }\n  static {\n    this.voiceRecordingStopped = AccessibilitySignal.register({\n      name: localize('accessibilitySignals.voiceRecordingStopped', 'Voice Recording Stopped'),\n      sound: Sound.voiceRecordingStopped,\n      legacySoundSettingsKey: 'audioCues.voiceRecordingStopped',\n      settingsKey: 'accessibility.signals.voiceRecordingStopped'\n    });\n  }\n}","map":{"version":3,"names":["localize","createDecorator","IAccessibilitySignalService","AcknowledgeDocCommentsToken","Symbol","Sound","register","options","sound","fileName","error","warning","success","foldedArea","break","quickFixes","taskCompleted","taskFailed","terminalBell","diffLineInserted","diffLineDeleted","diffLineModified","chatRequestSent","chatResponseReceived1","chatResponseReceived2","chatResponseReceived3","chatResponseReceived4","clear","save","format","voiceRecordingStarted","voiceRecordingStopped","progress","constructor","SoundSource","randomOneOf","AccessibilitySignal","name","legacySoundSettingsKey","settingsKey","legacyAnnouncementSettingsKey","announcementMessage","_signals","Set","soundSource","signal","add","errorAtPosition","delaySettingsKey","warningAtPosition","errorOnLine","warningOnLine","inlineSuggestion","terminalQuickFix","onDebugBreak","noInlayHints","terminalCommandFailed","terminalCommandSucceeded","notebookCellCompleted","notebookCellFailed","chatResponseReceived"],"sources":["D:/OSPanel/domains/react/react-intro-main/node_modules/monaco-editor/esm/vs/platform/accessibilitySignal/browser/accessibilitySignalService.js"],"sourcesContent":["import { localize } from '../../../nls.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IAccessibilitySignalService = createDecorator('accessibilitySignalService');\n/** Make sure you understand the doc comments of the method you want to call when using this token! */\nexport const AcknowledgeDocCommentsToken = Symbol('AcknowledgeDocCommentsToken');\n/**\n * Corresponds to the audio files in ./media.\n*/\nexport class Sound {\n    static register(options) {\n        const sound = new Sound(options.fileName);\n        return sound;\n    }\n    static { this.error = Sound.register({ fileName: 'error.mp3' }); }\n    static { this.warning = Sound.register({ fileName: 'warning.mp3' }); }\n    static { this.success = Sound.register({ fileName: 'success.mp3' }); }\n    static { this.foldedArea = Sound.register({ fileName: 'foldedAreas.mp3' }); }\n    static { this.break = Sound.register({ fileName: 'break.mp3' }); }\n    static { this.quickFixes = Sound.register({ fileName: 'quickFixes.mp3' }); }\n    static { this.taskCompleted = Sound.register({ fileName: 'taskCompleted.mp3' }); }\n    static { this.taskFailed = Sound.register({ fileName: 'taskFailed.mp3' }); }\n    static { this.terminalBell = Sound.register({ fileName: 'terminalBell.mp3' }); }\n    static { this.diffLineInserted = Sound.register({ fileName: 'diffLineInserted.mp3' }); }\n    static { this.diffLineDeleted = Sound.register({ fileName: 'diffLineDeleted.mp3' }); }\n    static { this.diffLineModified = Sound.register({ fileName: 'diffLineModified.mp3' }); }\n    static { this.chatRequestSent = Sound.register({ fileName: 'chatRequestSent.mp3' }); }\n    static { this.chatResponseReceived1 = Sound.register({ fileName: 'chatResponseReceived1.mp3' }); }\n    static { this.chatResponseReceived2 = Sound.register({ fileName: 'chatResponseReceived2.mp3' }); }\n    static { this.chatResponseReceived3 = Sound.register({ fileName: 'chatResponseReceived3.mp3' }); }\n    static { this.chatResponseReceived4 = Sound.register({ fileName: 'chatResponseReceived4.mp3' }); }\n    static { this.clear = Sound.register({ fileName: 'clear.mp3' }); }\n    static { this.save = Sound.register({ fileName: 'save.mp3' }); }\n    static { this.format = Sound.register({ fileName: 'format.mp3' }); }\n    static { this.voiceRecordingStarted = Sound.register({ fileName: 'voiceRecordingStarted.mp3' }); }\n    static { this.voiceRecordingStopped = Sound.register({ fileName: 'voiceRecordingStopped.mp3' }); }\n    static { this.progress = Sound.register({ fileName: 'progress.mp3' }); }\n    constructor(fileName) {\n        this.fileName = fileName;\n    }\n}\nexport class SoundSource {\n    constructor(randomOneOf) {\n        this.randomOneOf = randomOneOf;\n    }\n}\nexport class AccessibilitySignal {\n    constructor(sound, name, legacySoundSettingsKey, settingsKey, legacyAnnouncementSettingsKey, announcementMessage) {\n        this.sound = sound;\n        this.name = name;\n        this.legacySoundSettingsKey = legacySoundSettingsKey;\n        this.settingsKey = settingsKey;\n        this.legacyAnnouncementSettingsKey = legacyAnnouncementSettingsKey;\n        this.announcementMessage = announcementMessage;\n    }\n    static { this._signals = new Set(); }\n    static register(options) {\n        const soundSource = new SoundSource('randomOneOf' in options.sound ? options.sound.randomOneOf : [options.sound]);\n        const signal = new AccessibilitySignal(soundSource, options.name, options.legacySoundSettingsKey, options.settingsKey, options.legacyAnnouncementSettingsKey, options.announcementMessage);\n        AccessibilitySignal._signals.add(signal);\n        return signal;\n    }\n    static { this.errorAtPosition = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.positionHasError.name', 'Error at Position'),\n        sound: Sound.error,\n        announcementMessage: localize('accessibility.signals.positionHasError', 'Error'),\n        settingsKey: 'accessibility.signals.positionHasError',\n        delaySettingsKey: 'accessibility.signalOptions.delays.errorAtPosition'\n    }); }\n    static { this.warningAtPosition = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.positionHasWarning.name', 'Warning at Position'),\n        sound: Sound.warning,\n        announcementMessage: localize('accessibility.signals.positionHasWarning', 'Warning'),\n        settingsKey: 'accessibility.signals.positionHasWarning',\n        delaySettingsKey: 'accessibility.signalOptions.delays.warningAtPosition'\n    }); }\n    static { this.errorOnLine = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.lineHasError.name', 'Error on Line'),\n        sound: Sound.error,\n        legacySoundSettingsKey: 'audioCues.lineHasError',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.error',\n        announcementMessage: localize('accessibility.signals.lineHasError', 'Error on Line'),\n        settingsKey: 'accessibility.signals.lineHasError',\n    }); }\n    static { this.warningOnLine = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.lineHasWarning.name', 'Warning on Line'),\n        sound: Sound.warning,\n        legacySoundSettingsKey: 'audioCues.lineHasWarning',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.warning',\n        announcementMessage: localize('accessibility.signals.lineHasWarning', 'Warning on Line'),\n        settingsKey: 'accessibility.signals.lineHasWarning',\n    }); }\n    static { this.foldedArea = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.lineHasFoldedArea.name', 'Folded Area on Line'),\n        sound: Sound.foldedArea,\n        legacySoundSettingsKey: 'audioCues.lineHasFoldedArea',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.foldedArea',\n        announcementMessage: localize('accessibility.signals.lineHasFoldedArea', 'Folded'),\n        settingsKey: 'accessibility.signals.lineHasFoldedArea',\n    }); }\n    static { this.break = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.lineHasBreakpoint.name', 'Breakpoint on Line'),\n        sound: Sound.break,\n        legacySoundSettingsKey: 'audioCues.lineHasBreakpoint',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.breakpoint',\n        announcementMessage: localize('accessibility.signals.lineHasBreakpoint', 'Breakpoint'),\n        settingsKey: 'accessibility.signals.lineHasBreakpoint',\n    }); }\n    static { this.inlineSuggestion = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.lineHasInlineSuggestion.name', 'Inline Suggestion on Line'),\n        sound: Sound.quickFixes,\n        legacySoundSettingsKey: 'audioCues.lineHasInlineSuggestion',\n        settingsKey: 'accessibility.signals.lineHasInlineSuggestion',\n    }); }\n    static { this.terminalQuickFix = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.terminalQuickFix.name', 'Terminal Quick Fix'),\n        sound: Sound.quickFixes,\n        legacySoundSettingsKey: 'audioCues.terminalQuickFix',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.terminalQuickFix',\n        announcementMessage: localize('accessibility.signals.terminalQuickFix', 'Quick Fix'),\n        settingsKey: 'accessibility.signals.terminalQuickFix',\n    }); }\n    static { this.onDebugBreak = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.onDebugBreak.name', 'Debugger Stopped on Breakpoint'),\n        sound: Sound.break,\n        legacySoundSettingsKey: 'audioCues.onDebugBreak',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.onDebugBreak',\n        announcementMessage: localize('accessibility.signals.onDebugBreak', 'Breakpoint'),\n        settingsKey: 'accessibility.signals.onDebugBreak',\n    }); }\n    static { this.noInlayHints = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.noInlayHints', 'No Inlay Hints on Line'),\n        sound: Sound.error,\n        legacySoundSettingsKey: 'audioCues.noInlayHints',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.noInlayHints',\n        announcementMessage: localize('accessibility.signals.noInlayHints', 'No Inlay Hints'),\n        settingsKey: 'accessibility.signals.noInlayHints',\n    }); }\n    static { this.taskCompleted = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.taskCompleted', 'Task Completed'),\n        sound: Sound.taskCompleted,\n        legacySoundSettingsKey: 'audioCues.taskCompleted',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.taskCompleted',\n        announcementMessage: localize('accessibility.signals.taskCompleted', 'Task Completed'),\n        settingsKey: 'accessibility.signals.taskCompleted',\n    }); }\n    static { this.taskFailed = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.taskFailed', 'Task Failed'),\n        sound: Sound.taskFailed,\n        legacySoundSettingsKey: 'audioCues.taskFailed',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.taskFailed',\n        announcementMessage: localize('accessibility.signals.taskFailed', 'Task Failed'),\n        settingsKey: 'accessibility.signals.taskFailed',\n    }); }\n    static { this.terminalCommandFailed = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.terminalCommandFailed', 'Terminal Command Failed'),\n        sound: Sound.error,\n        legacySoundSettingsKey: 'audioCues.terminalCommandFailed',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.terminalCommandFailed',\n        announcementMessage: localize('accessibility.signals.terminalCommandFailed', 'Command Failed'),\n        settingsKey: 'accessibility.signals.terminalCommandFailed',\n    }); }\n    static { this.terminalCommandSucceeded = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.terminalCommandSucceeded', 'Terminal Command Succeeded'),\n        sound: Sound.success,\n        announcementMessage: localize('accessibility.signals.terminalCommandSucceeded', 'Command Succeeded'),\n        settingsKey: 'accessibility.signals.terminalCommandSucceeded',\n    }); }\n    static { this.terminalBell = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.terminalBell', 'Terminal Bell'),\n        sound: Sound.terminalBell,\n        legacySoundSettingsKey: 'audioCues.terminalBell',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.terminalBell',\n        announcementMessage: localize('accessibility.signals.terminalBell', 'Terminal Bell'),\n        settingsKey: 'accessibility.signals.terminalBell',\n    }); }\n    static { this.notebookCellCompleted = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.notebookCellCompleted', 'Notebook Cell Completed'),\n        sound: Sound.taskCompleted,\n        legacySoundSettingsKey: 'audioCues.notebookCellCompleted',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.notebookCellCompleted',\n        announcementMessage: localize('accessibility.signals.notebookCellCompleted', 'Notebook Cell Completed'),\n        settingsKey: 'accessibility.signals.notebookCellCompleted',\n    }); }\n    static { this.notebookCellFailed = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.notebookCellFailed', 'Notebook Cell Failed'),\n        sound: Sound.taskFailed,\n        legacySoundSettingsKey: 'audioCues.notebookCellFailed',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.notebookCellFailed',\n        announcementMessage: localize('accessibility.signals.notebookCellFailed', 'Notebook Cell Failed'),\n        settingsKey: 'accessibility.signals.notebookCellFailed',\n    }); }\n    static { this.diffLineInserted = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.diffLineInserted', 'Diff Line Inserted'),\n        sound: Sound.diffLineInserted,\n        legacySoundSettingsKey: 'audioCues.diffLineInserted',\n        settingsKey: 'accessibility.signals.diffLineInserted',\n    }); }\n    static { this.diffLineDeleted = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.diffLineDeleted', 'Diff Line Deleted'),\n        sound: Sound.diffLineDeleted,\n        legacySoundSettingsKey: 'audioCues.diffLineDeleted',\n        settingsKey: 'accessibility.signals.diffLineDeleted',\n    }); }\n    static { this.diffLineModified = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.diffLineModified', 'Diff Line Modified'),\n        sound: Sound.diffLineModified,\n        legacySoundSettingsKey: 'audioCues.diffLineModified',\n        settingsKey: 'accessibility.signals.diffLineModified',\n    }); }\n    static { this.chatRequestSent = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.chatRequestSent', 'Chat Request Sent'),\n        sound: Sound.chatRequestSent,\n        legacySoundSettingsKey: 'audioCues.chatRequestSent',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.chatRequestSent',\n        announcementMessage: localize('accessibility.signals.chatRequestSent', 'Chat Request Sent'),\n        settingsKey: 'accessibility.signals.chatRequestSent',\n    }); }\n    static { this.chatResponseReceived = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.chatResponseReceived', 'Chat Response Received'),\n        legacySoundSettingsKey: 'audioCues.chatResponseReceived',\n        sound: {\n            randomOneOf: [\n                Sound.chatResponseReceived1,\n                Sound.chatResponseReceived2,\n                Sound.chatResponseReceived3,\n                Sound.chatResponseReceived4\n            ]\n        },\n        settingsKey: 'accessibility.signals.chatResponseReceived'\n    }); }\n    static { this.progress = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.progress', 'Progress'),\n        sound: Sound.progress,\n        legacySoundSettingsKey: 'audioCues.chatResponsePending',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.progress',\n        announcementMessage: localize('accessibility.signals.progress', 'Progress'),\n        settingsKey: 'accessibility.signals.progress'\n    }); }\n    static { this.clear = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.clear', 'Clear'),\n        sound: Sound.clear,\n        legacySoundSettingsKey: 'audioCues.clear',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.clear',\n        announcementMessage: localize('accessibility.signals.clear', 'Clear'),\n        settingsKey: 'accessibility.signals.clear'\n    }); }\n    static { this.save = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.save', 'Save'),\n        sound: Sound.save,\n        legacySoundSettingsKey: 'audioCues.save',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.save',\n        announcementMessage: localize('accessibility.signals.save', 'Save'),\n        settingsKey: 'accessibility.signals.save'\n    }); }\n    static { this.format = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.format', 'Format'),\n        sound: Sound.format,\n        legacySoundSettingsKey: 'audioCues.format',\n        legacyAnnouncementSettingsKey: 'accessibility.alert.format',\n        announcementMessage: localize('accessibility.signals.format', 'Format'),\n        settingsKey: 'accessibility.signals.format'\n    }); }\n    static { this.voiceRecordingStarted = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.voiceRecordingStarted', 'Voice Recording Started'),\n        sound: Sound.voiceRecordingStarted,\n        legacySoundSettingsKey: 'audioCues.voiceRecordingStarted',\n        settingsKey: 'accessibility.signals.voiceRecordingStarted'\n    }); }\n    static { this.voiceRecordingStopped = AccessibilitySignal.register({\n        name: localize('accessibilitySignals.voiceRecordingStopped', 'Voice Recording Stopped'),\n        sound: Sound.voiceRecordingStopped,\n        legacySoundSettingsKey: 'audioCues.voiceRecordingStopped',\n        settingsKey: 'accessibility.signals.voiceRecordingStopped'\n    }); }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Implements a 2-dimensional vector with double precision coordinates.\n *\n * Constructor: mxPoint\n *\n * Constructs a new point for the optional x and y coordinates. If no\n * coordinates are given, then the default values for <x> and <y> are used.\n */\nclass Point {\n  constructor() {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    /**\n     * Holds the x-coordinate of the point. Default is 0.\n     */\n    this._x = 0;\n    /**\n     * Holds the y-coordinate of the point. Default is 0.\n     */\n    this._y = 0;\n    this.x = x;\n    this.y = y;\n  }\n  get x() {\n    return this._x;\n  }\n  set x(x) {\n    if (Number.isNaN(x)) throw new Error('Invalid x supplied.');\n    this._x = x;\n  }\n  get y() {\n    return this._y;\n  }\n  set y(y) {\n    if (Number.isNaN(y)) throw new Error('Invalid y supplied.');\n    this._y = y;\n  }\n  /**\n   * Returns true if the given object equals this point.\n   */\n  equals(p) {\n    if (!p) return false;\n    return p.x === this.x && p.y === this.y;\n  }\n  /**\n   * Returns a clone of this {@link Point}.\n   */\n  clone() {\n    return new Point(this.x, this.y);\n  }\n}\nexport default Point;","map":{"version":3,"names":["Point","constructor","x","arguments","length","undefined","y","_x","_y","Number","isNaN","Error","equals","p","clone"],"sources":["D:/OSPanel/domains/old/react/react-intro/node_modules/@maxgraph/core/dist/view/geometry/Point.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Implements a 2-dimensional vector with double precision coordinates.\n *\n * Constructor: mxPoint\n *\n * Constructs a new point for the optional x and y coordinates. If no\n * coordinates are given, then the default values for <x> and <y> are used.\n */\nclass Point {\n    constructor(x = 0, y = 0) {\n        /**\n         * Holds the x-coordinate of the point. Default is 0.\n         */\n        this._x = 0;\n        /**\n         * Holds the y-coordinate of the point. Default is 0.\n         */\n        this._y = 0;\n        this.x = x;\n        this.y = y;\n    }\n    get x() {\n        return this._x;\n    }\n    set x(x) {\n        if (Number.isNaN(x))\n            throw new Error('Invalid x supplied.');\n        this._x = x;\n    }\n    get y() {\n        return this._y;\n    }\n    set y(y) {\n        if (Number.isNaN(y))\n            throw new Error('Invalid y supplied.');\n        this._y = y;\n    }\n    /**\n     * Returns true if the given object equals this point.\n     */\n    equals(p) {\n        if (!p)\n            return false;\n        return p.x === this.x && p.y === this.y;\n    }\n    /**\n     * Returns a clone of this {@link Point}.\n     */\n    clone() {\n        return new Point(this.x, this.y);\n    }\n}\nexport default Point;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,KAAK,CAAC;EACRC,WAAWA,CAAA,EAAe;IAAA,IAAdC,CAAC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;IAAA,IAAEG,CAAC,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;IACpB;AACR;AACA;IACQ,IAAI,CAACI,EAAE,GAAG,CAAC;IACX;AACR;AACA;IACQ,IAAI,CAACC,EAAE,GAAG,CAAC;IACX,IAAI,CAACN,CAAC,GAAGA,CAAC;IACV,IAAI,CAACI,CAAC,GAAGA,CAAC;EACd;EACA,IAAIJ,CAACA,CAAA,EAAG;IACJ,OAAO,IAAI,CAACK,EAAE;EAClB;EACA,IAAIL,CAACA,CAACA,CAAC,EAAE;IACL,IAAIO,MAAM,CAACC,KAAK,CAACR,CAAC,CAAC,EACf,MAAM,IAAIS,KAAK,CAAC,qBAAqB,CAAC;IAC1C,IAAI,CAACJ,EAAE,GAAGL,CAAC;EACf;EACA,IAAII,CAACA,CAAA,EAAG;IACJ,OAAO,IAAI,CAACE,EAAE;EAClB;EACA,IAAIF,CAACA,CAACA,CAAC,EAAE;IACL,IAAIG,MAAM,CAACC,KAAK,CAACJ,CAAC,CAAC,EACf,MAAM,IAAIK,KAAK,CAAC,qBAAqB,CAAC;IAC1C,IAAI,CAACH,EAAE,GAAGF,CAAC;EACf;EACA;AACJ;AACA;EACIM,MAAMA,CAACC,CAAC,EAAE;IACN,IAAI,CAACA,CAAC,EACF,OAAO,KAAK;IAChB,OAAOA,CAAC,CAACX,CAAC,KAAK,IAAI,CAACA,CAAC,IAAIW,CAAC,CAACP,CAAC,KAAK,IAAI,CAACA,CAAC;EAC3C;EACA;AACJ;AACA;EACIQ,KAAKA,CAAA,EAAG;IACJ,OAAO,IAAId,KAAK,CAAC,IAAI,CAACE,CAAC,EAAE,IAAI,CAACI,CAAC,CAAC;EACpC;AACJ;AACA,eAAeN,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
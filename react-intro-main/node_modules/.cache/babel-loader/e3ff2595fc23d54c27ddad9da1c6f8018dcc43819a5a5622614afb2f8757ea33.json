{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import axios from'axios';import{popup,ModelXmlSerializer,domUtils,styleUtils,mathUtils,cloneUtils,eventUtils,Graph,InternalEvent,RubberBandHandler,ConnectionHandler,ConnectionConstraint,Point,CylinderShape,CellRenderer,DomHelpers,EdgeStyle,Rectangle,EdgeHandler,StyleRegistry,EdgeSegmentHandler,UndoManager,CellEditorHandler,ConstraintHandler,Guide,ImageBox,GraphView,SelectionHandler,PanningHandler,TooltipHandler,SelectionCellsHandler,PopupMenuHandler,xmlUtils,Codec,Shape}from'@maxgraph/core';import{contextMenuTypes,contextMenuValues,globalTypes,globalValues,rubberBandTypes,rubberBandValues}from'./shared/args.js';import{createGraphContainer}from'./shared/configure.js';// style required by RubberBand\nimport'@maxgraph/core/css/common.css';import{render}from'react-dom';import{MyCustomGraph,MyCustomEdgeSegmentHandler,MyCustomGraphView,MyCustomConnectionHandler,MyCustomPanningHandler,MyCustomSelectionHandler,MyCustomEdgeHandler,MyCustomConstraintHandler}from'./MyCustomGraph.jsx';import{jsx as _jsx}from\"react/jsx-runtime\";export const YourComponent=()=>{const importFileInputRef=useRef(null);const graphContainerRef=useRef(null);const[xmlText,setXmlText]=useState('');// Инициализируем переменную для graph\nlet[graphInstance,setGraphInstance]=useState(null);let[variableFromEffect,setVariableFromEffect]=useState(null);let counter=1;let[jsonData,setJsonData]=useState(null);// Задаем начальное состояние как null\nconst[graph,setGraph]=useState(null);const LINE_ARCSIZE=20;useEffect(()=>{axios.get('./data.json').then(response=>{console.log(response.data);// Проверяем, что данные приходят\nsetJsonData(response.data);// Обновляем состояние с данными из файла\njsonData=response.data;console.log(jsonData);});console.log(jsonData);if(graphContainerRef.current){const graphContainer=graphContainerRef.current;const newGraph=new Graph(graphContainerRef.current);setGraph(newGraph);// Сохраняем граф в состояние\n////\n////\nconst parentContainer=document.createElement('div');const container=createGraphContainer({imageUrl:'images/grid.gif'});parentContainer.appendChild(container);//console.log({graph})\n// Changes some default colors\n// TODO Find a way of modifying globally or setting locally! See https://github.com/maxGraph/maxGraph/issues/192\n//constants.SHADOWCOLOR = '#C0C0C0';\nlet joinNodeSize=7;let strokeWidth=2;// Switch for black background and bright styles\nlet invert=false;let MyCustomCellEditorHandler;if(!graphInstance){const newGraph=new MyCustomGraph(graphContainer,null,[]);setGraphInstance(newGraph);}if(invert){container.style.backgroundColor='black';// White in-place editor text color\nMyCustomCellEditorHandler=class extends CellEditorHandler{startEditing(cell,trigger){super.startEditing.apply(this,arguments);if(this.textarea!=null){this.textarea.style.color='#FFFFFF';}}};}else{MyCustomCellEditorHandler=CellEditorHandler;}// Imlements a custom resistor shape. Direction currently ignored here.\nclass ResistorShape extends CylinderShape{constructor(){// TODO: The original didn't seem to call the super\nsuper(null,null,null,null);}redrawPath(path,x,y,w,h,isForeground){let dx=w/16;if(isForeground){path.moveTo(0,h/2);path.lineTo(2*dx,h/2);path.lineTo(3*dx,0);path.lineTo(5*dx,h);path.lineTo(7*dx,0);path.lineTo(9*dx,h);path.lineTo(11*dx,0);path.lineTo(13*dx,h);path.lineTo(14*dx,h/2);path.lineTo(16*dx,h/2);path.end();}}}CellRenderer.registerShape('resistor',ResistorShape);///////////////////////////////////////////////////\nclass CustomTriangleShape extends Shape{constructor(){super();}paintVertexShape(c,x,y,w,h){var _this$style$arcSize,_this$style;c.begin();// Начинаем с нижнего левого угла треугольника\nconst arcSize=((_this$style$arcSize=(_this$style=this.style)===null||_this$style===void 0?void 0:_this$style.arcSize)!==null&&_this$style$arcSize!==void 0?_this$style$arcSize:LINE_ARCSIZE)/5;this.addPoints(c,[new Point(x,y),new Point(x+w,y),new Point(x+w+w/2,y+h/2),new Point(x+w,y+h),new Point(x,y+h)],this.isRounded,arcSize,true);// Закрываем фигуру (оставляем открытой одну сторону)\nc.end();c.stroke();// Рисуем только границы без заливки\n}}// Регистрация новой формы\nCellRenderer.registerShape('customTriangle',CustomTriangleShape);class Shape2 extends Shape{constructor(){super();}paintVertexShape(c,x,y,w,h){var _this$style$arcSize2,_this$style2;c.begin();// Начинаем с нижнего левого угла треугольника\nconst arcSize=((_this$style$arcSize2=(_this$style2=this.style)===null||_this$style2===void 0?void 0:_this$style2.arcSize)!==null&&_this$style$arcSize2!==void 0?_this$style$arcSize2:LINE_ARCSIZE)/5;this.addPoints(c,[new Point(x,y),new Point(x+w,y+h/2),new Point(x,y+h)],this.isRounded,arcSize,true);// Закрываем фигуру (оставляем открытой одну сторону)\nc.end();c.stroke();// Рисуем только границы без заливки\n}}// Регистрация новой формы\nCellRenderer.registerShape('shape2',Shape2);class Shape3 extends Shape{constructor(){super();}paintVertexShape(c,x,y,w,h){c.begin();c.moveTo(x,y);c.curveTo(x+w/2,y,x+w+w/5,y+h/4,x+w+w/3.5,y+h/2.5);c.moveTo(x+w+w/3.5,y+h/2.5);c.curveTo(x+w+w/3.5,y+h/2.5,x+w+w/5,y+h/1.5,x,y+h/1.3);c.moveTo(x,y+h/1.3);c.curveTo(x,y+h/1.3,x+w/3,y+h/2.2,x,y);c.end();c.stroke();// Рисуем только границы без заливки\n}}// Регистрация новой формы\nCellRenderer.registerShape('shape3',Shape3);class Shape4 extends Shape{constructor(){super();}paintVertexShape(c,x,y,w,h){c.begin();// Рисуем полукруг. Используем arcTo для создания дуги\nconst r=w/2;// Радиус по ширине\nc.moveTo(x,y+h);// Начинаем с нижней левой точки\nc.arcTo(r,h,0,0,1,x+w,y+h);// Рисуем полукруг от левого нижнего угла к правому\n// Соединяем линию обратно к левой нижней точке\nc.lineTo(x,y+h);c.end();c.stroke();// Рисуем только границы без заливки\n}}// Регистрация новой формы\nCellRenderer.registerShape('shape4',Shape4);////////////////////////////////////////////////////////\n// Imlements a custom resistor shape. Direction currently ignored here.\nEdgeStyle.WireConnector=function(state,source,target,hints,result){// Creates array of all way- and terminalpoints\nlet pts=state.absolutePoints;let horizontal=true;let hint=null;// Gets the initial connection from the source terminal or edge\nif(source!=null&&source.cell.isEdge()){horizontal=state.style.sourceConstraint=='horizontal';}else if(source!=null){horizontal=source.style.portConstraint!='vertical';// Checks the direction of the shape and rotates\nlet direction=source.style.direction;if(direction=='north'||direction=='south'){horizontal=!horizontal;}}// Adds the first point\n// TODO: Should move along connected segment\nlet pt=pts[0];if(pt==null&&source!=null){pt=new Point(state.view.getRoutingCenterX(source),state.view.getRoutingCenterY(source));}else if(pt!=null){pt=pt.clone();}let first=pt;// Adds the waypoints\nif(hints!=null&&hints.length>0){// FIXME: First segment not movable\n/*hint = state.view.transformControlPoint(state, hints[0]);\n      MaxLog.show();\n      MaxLog.debug(hints.length,'hints0.y='+hint.y, pt.y)\n\n      if (horizontal && Math.floor(hint.y) != Math.floor(pt.y))\n      {\n        MaxLog.show();\n        MaxLog.debug('add waypoint');\n\n        pt = new Point(pt.x, hint.y);\n        result.push(pt);\n        pt = pt.clone();\n        //horizontal = !horizontal;\n      }*/for(let i=0;i<hints.length;i++){horizontal=!horizontal;hint=state.view.transformControlPoint(state,hints[i]);if(horizontal){if(pt.y!==hint.y){pt.y=hint.y;result.push(pt.clone());}}else if(pt.x!==hint.x){pt.x=hint.x;result.push(pt.clone());}}}else{hint=pt;}// Adds the last point\npt=pts[pts.length-1];// TODO: Should move along connected segment\nif(pt==null&&target!=null){pt=new Point(state.view.getRoutingCenterX(target),state.view.getRoutingCenterY(target));}if(horizontal){if(pt.y!==hint.y&&first.x!==pt.x){result.push(new Point(pt.x,hint.y));}}else if(pt.x!==hint.x&&first.y!==pt.y){result.push(new Point(hint.x,pt.y));}};StyleRegistry.putValue('wireEdgeStyle',EdgeStyle.WireConnector);let graph=new MyCustomGraph(container,null,[MyCustomCellEditorHandler,TooltipHandler,SelectionCellsHandler,PopupMenuHandler,MyCustomConnectionHandler,MyCustomSelectionHandler,MyCustomPanningHandler]);setVariableFromEffect(graph);let labelBackground=invert?'#000000':'#FFFFFF';let fontColor=invert?'#FFFFFF':'#000000';let strokeColor=invert?'#C0C0C0':'#000000';let fillColor=invert?'none':'#FFFFFF';graph.view.scale=1;graph.setPanning(true);graph.setConnectable(true);graph.setConnectableEdges(true);graph.setDisconnectOnMove(false);graph.foldingEnabled=false;//Maximum size\ngraph.maximumGraphBounds=new Rectangle(0,0,1000,1000);graph.border=50;graph.spacingLeft=30;// Enables return key to stop editing (use shift-enter for newlines)\ngraph.setEnterStopsCellEditing(true);// Adds rubberband selection\nnew RubberBandHandler(graph);// Adds a special tooltip for edges\ngraph.setTooltips(true);let style=graph.getStylesheet().getDefaultEdgeStyle();delete style.endArrow;style.strokeColor=strokeColor;style.labelBackgroundColor=labelBackground;style.edgeStyle='wireEdgeStyle';style.fontColor=fontColor;style.fontSize='9';style.movable='0';style.strokeWidth=strokeWidth;//style.rounded = '1';\n// Sets join node size\nstyle.startSize=joinNodeSize;style.endSize=joinNodeSize;style=graph.getStylesheet().getDefaultVertexStyle();style.gradientDirection='south';//style.gradientColor = '#909090';\nstyle.strokeColor=strokeColor;//style.fillColor = '#e0e0e0';\nstyle.fillColor='none';style.fontColor=fontColor;style.fontStyle='1';style.fontSize='12';style.resizable='0';style.rounded='1';style.strokeWidth=strokeWidth;// инородное дерьмо\nconst btn1=document.getElementById('btn1');const btn2=document.getElementById('btn2');const btn3=document.getElementById('btn3');const btn6=document.getElementById('btn6');const btn7=document.getElementById('btn7');const update=event=>{var parent=graph.getDefaultParent();var doc=xmlUtils.createXmlDocument();graph.batchUpdate(()=>{const targetId=event.target.id;if(targetId==='btn3'){const v1=graph.insertVertex(parent,null,'',80,80,40,40,{shape:'shape2',strokeColor:strokeColor});v1.setConnectable(false);var v11=graph.insertVertex(v1,null,'',0,0,15,16,{shape:'line',align:'top',verticalAlign:'top',fontSize:10,routingCenterX:-0.5,spacingLeft:0,spacingTop:-7,fontColor,strokeColor});v11.geometry.relative=true;v11.geometry.offset=new Point(-v1.geometry.width+25,12);var v12=graph.insertVertex(v1,null,'◯',0,0,15,16,{shape:'line',align:'top',verticalAlign:'top',fontSize:10,routingCenterX:-0.5,spacingLeft:-20,spacingTop:0,fontColor,strokeColor});v12.geometry.relative=true;v12.geometry.offset=new Point(v1.geometry.width+7.5,12);}else if(targetId==='btn6'){const v1=graph.insertVertex(parent,null,'',80,80,35,25,{shape:'customTriangle',strokeColor:strokeColor});v1.setConnectable(false);const labelText='X'+counter;// Формируем текст с текущим значением счётчика\nlet fontColor='black';// По умолчанию цвет текста черный\nif(jsonData.inputs.includes(labelText)){fontColor='red';// Если есть совпадение, меняем цвет на красный\n}var v11=graph.insertVertex(v1,null,labelText,0,0,20,16,{shape:'line',align:'top',verticalAlign:'top',fontSize:10,routingCenterX:-0.5,spacingLeft:-5,spacingTop:-7,fontColor,strokeColor});counter+=1;v11.geometry.relative=true;v11.geometry.offset=new Point(v1.geometry.width+16.5,4.5);}else if(targetId==='btn7'){const v1=graph.insertVertex(parent,null,'',80,80,35,25,{shape:'customTriangle',strokeColor:strokeColor,rotation:180});v1.setConnectable(false);var v11=graph.insertVertex(v1,null,'F',0,0,20,16,{shape:'line',align:'top',verticalAlign:'top',fontSize:10,routingCenterX:-0.5,spacingLeft:-5,spacingTop:-7,fontColor,strokeColor});v11.geometry.relative=true;v11.geometry.offset=new Point(v1.geometry.width+16.5,4.5);}else if(targetId==='btn2'){const v1=graph.insertVertex(parent,null,'',80,100,60,60,{shape:'shape3',strokeColor:strokeColor});v1.setConnectable(false);var v11=graph.insertVertex(v1,null,'',0,0,20,16,{shape:'line',align:'top',verticalAlign:'top',fontSize:10,routingCenterX:-0.5,spacingLeft:-5,spacingTop:-7,fontColor,strokeColor});v11.geometry.relative=true;v11.geometry.offset=new Point(v1.geometry.width+17.8,16);var v12=graph.insertVertex(v1,null,'',0,0,20,16,{shape:'line',align:'top',verticalAlign:'top',fontSize:10,routingCenterX:-0.5,spacingLeft:-5,spacingTop:-7,fontColor,strokeColor});v12.geometry.relative=true;v12.geometry.offset=new Point(-v1.geometry.width+48,8);var v13=graph.insertVertex(v1,null,'',0,0,20,16,{shape:'line',align:'top',verticalAlign:'top',fontSize:10,routingCenterX:-0.5,spacingLeft:-5,spacingTop:-7,fontColor,strokeColor});v13.geometry.relative=true;v13.geometry.offset=new Point(-v1.geometry.width+48,24);}else if(targetId==='btn1'){const v1=graph.insertVertex(parent,null,'',80,100,47,70,{shape:'shape4',strokeColor:strokeColor,rotation:90});v1.setConnectable(false);var v13=graph.insertVertex(v1,null,'',0,0,20,16,{shape:'line',align:'top',verticalAlign:'top',fontSize:10,routingCenterX:-0.5,spacingLeft:-5,spacingTop:-7,fontColor,strokeColor});v13.geometry.relative=true;v13.geometry.offset=new Point(v1.geometry.width-33,-18);var v14=graph.insertVertex(v1,null,'',0,0,20,16,{shape:'line',align:'top',verticalAlign:'top',fontSize:10,routingCenterX:-0.5,spacingLeft:-5,spacingTop:-7,fontColor,strokeColor});v14.geometry.relative=true;v14.geometry.offset=new Point(5,71);var v15=graph.insertVertex(v1,null,'',0,0,20,16,{shape:'line',align:'top',verticalAlign:'top',fontSize:10,routingCenterX:-0.5,spacingLeft:-5,spacingTop:-7,fontColor,strokeColor});v15.geometry.relative=true;v15.geometry.offset=new Point(23,71);}else if(targetId==='btn4'){var v1=graph.insertVertex(parent,null,'',80,140,40,80,'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor='+fillColor);v1.setConnectable(false);var v11=graph.insertVertex(v1,null,'',0,0,14,16,{shape:'line',align:'left',verticalAlign:'middle',fontSize:10,routingCenterX:-0.5,spacingLeft:12,fontColor:fontColor,strokeColor:strokeColor});v11.geometry.relative=true;v11.geometry.offset=new Point(-v11.geometry.width,12);var v12=v11.clone();v12.value='';v12.geometry.offset=new Point(-v11.geometry.width,52);v1.insert(v12);var v15=v11.clone();v15.value='';v15.geometry.x=1;v15.style={shape:'line',align:'right',verticalAlign:'middle',fontSize:10,routingCenterX:0.5,spacingRight:12,fontColor:fontColor,strokeColor:strokeColor};v15.geometry.offset=new Point(0,32);v1.insert(v15);var v16=graph.insertVertex(v1,null,'○',0,0,0,0,{shape:'line',align:'right',verticalAlign:'middle',fontSize:25,routingCenterX:0.5,spacingLeft:6,fontColor:fontColor,strokeColor:strokeColor});v16.geometry.x=1;v16.geometry.offset=new Point(8,15);v1.insert(v16);var v17=graph.insertVertex(v1,null,'X',0,0,0,0,{shape:'line',align:'right',verticalAlign:'middle',fontSize:10,routingCenterX:0.5,spacingLeft:6,fontColor:fontColor,strokeColor:strokeColor});v17.geometry.x=1;v17.geometry.offset=new Point(14,20);v1.insert(v17);var v18=graph.insertVertex(v1,null,'Y',0,0,0,0,{shape:'line',align:'right',verticalAlign:'middle',fontSize:10,routingCenterX:0.5,spacingLeft:6,fontColor:fontColor,strokeColor:strokeColor});v18.geometry.x=1;v18.geometry.offset=new Point(14,59);v1.insert(v18);}});};btn1.addEventListener('click',update);btn2.addEventListener('click',update);btn3.addEventListener('click',update);btn6.addEventListener('click',update);btn7.addEventListener('click',update);const importButton=document.getElementById(\"import\");importButton.onclick=()=>{console.log(graph);const fileInput=document.getElementById(\"importFileInput\");console.log(fileInput);if(fileInput){// Добавляем обработчик события onchange\nfileInput.onchange=function(event){handleFileImport(event);// Вызываем твою функцию handleFileImport\n};fileInput.click();// Открываем диалог выбора файла\nconsole.log(\"клик\");}else{console.log(\"fileInput не найден!\");}};function handleFileImport(event){console.log(\"blyaaa\");// Очищаем граф перед загрузкой новой схемы\nconsole.log(graph);const file=event.target.files[0];if(file){// Вызов функции readXMLFile\nreadXMLFile(file,function(xmlContent){console.log('Файл импортирован: ',xmlContent);// Работаем с содержимым файла\nloadGraphFromXml(xmlContent,graph);// Загружаем граф из XML\n});}else{console.log(\"Файл не выбран!\");}}// Функция чтения XML файла\nfunction readXMLFile(file,callback){const reader=new FileReader();reader.onload=function(e){const xmlContent=e.target.result;callback(xmlContent);// Передаем результат чтения в коллбэк\n};reader.readAsText(file);// Читаем файл как текст\n}// Функция для загрузки графа из XML\nconst loadGraphFromXml=(xml,graph)=>{graph.removeCells(graph.getChildVertices(graph.getDefaultParent()));const node=xmlUtils.parseXml(xml).documentElement;graph.model.beginUpdate();try{console.log(node);const codec=new Codec();// Создаем кодек для декодирования XML\ncodec.decode(node,graph.model);// Декодируем XML и загружаем в модель графа\n}finally{graph.model.endUpdate();// Завершаем транзакцию\ngraph.refresh();}};////////////////////////////////////////////////////////\n// XML \ndocument.getElementById(\"xml\").onclick=()=>{// Получаем XML данные\nconsole.log(graph);const xml=new ModelXmlSerializer(graph.getDataModel()).export();// Создаем новый Blob объект с XML данными\nconst blob=new Blob([xml],{type:'text/xml'});// Создаем ссылку на Blob объект\nconst url=window.URL.createObjectURL(blob);// Создаем ссылку для скачивания\nconst a=document.createElement('a');a.href=url;a.download='data.xml';// Имя файла для скачивания\ndocument.body.appendChild(a);// Инициируем скачивание файла\na.click();// Освобождаем ресурсы\nwindow.URL.revokeObjectURL(url);};///////////////////////////////////////////////////////////\ndocument.getElementById(\"zoom\").onclick=()=>graph.zoomIn();document.getElementById(\"zoomout\").onclick=()=>graph.zoomOut();// Undo/redo\nlet undoManager=new UndoManager();let listener=function(sender,evt){undoManager.undoableEditHappened(evt.getProperty('edit'));};graph.getDataModel().addListener(InternalEvent.UNDO,listener);graph.getView().addListener(InternalEvent.UNDO,listener);document.getElementById(\"undo\").onclick=()=>undoManager.undo();document.getElementById(\"redo\").onclick=()=>undoManager.redo();document.getElementById(\"delete\").onclick=()=>graph.removeCells();// Wire-mode\nlet checkbox=document.getElementById(\"wire\");// Grid\nlet checkbox2=document.getElementById(\"grid\");checkbox2.setAttribute('checked','true');InternalEvent.addListener(checkbox2,'click',function(evt){if(checkbox2.checked){container.style.background='url(./images/grid.gif)';}else{container.style.background='';}container.style.backgroundColor=invert?'black':'white';});InternalEvent.disableContextMenu(container);graphContainer.appendChild(parentContainer);}},[]);return/*#__PURE__*/_jsx(\"div\",{ref:graphContainerRef,style:{width:'100%',height:'100%'}});};","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","popup","ModelXmlSerializer","domUtils","styleUtils","mathUtils","cloneUtils","eventUtils","Graph","InternalEvent","RubberBandHandler","ConnectionHandler","ConnectionConstraint","Point","CylinderShape","CellRenderer","DomHelpers","EdgeStyle","Rectangle","EdgeHandler","StyleRegistry","EdgeSegmentHandler","UndoManager","CellEditorHandler","ConstraintHandler","Guide","ImageBox","GraphView","SelectionHandler","PanningHandler","TooltipHandler","SelectionCellsHandler","PopupMenuHandler","xmlUtils","Codec","Shape","contextMenuTypes","contextMenuValues","globalTypes","globalValues","rubberBandTypes","rubberBandValues","createGraphContainer","render","MyCustomGraph","MyCustomEdgeSegmentHandler","MyCustomGraphView","MyCustomConnectionHandler","MyCustomPanningHandler","MyCustomSelectionHandler","MyCustomEdgeHandler","MyCustomConstraintHandler","jsx","_jsx","YourComponent","importFileInputRef","graphContainerRef","xmlText","setXmlText","graphInstance","setGraphInstance","variableFromEffect","setVariableFromEffect","counter","jsonData","setJsonData","graph","setGraph","LINE_ARCSIZE","get","then","response","console","log","data","current","graphContainer","newGraph","parentContainer","document","createElement","container","imageUrl","appendChild","joinNodeSize","strokeWidth","invert","MyCustomCellEditorHandler","style","backgroundColor","startEditing","cell","trigger","apply","arguments","textarea","color","ResistorShape","constructor","redrawPath","path","x","y","w","h","isForeground","dx","moveTo","lineTo","end","registerShape","CustomTriangleShape","paintVertexShape","c","_this$style$arcSize","_this$style","begin","arcSize","addPoints","isRounded","stroke","Shape2","_this$style$arcSize2","_this$style2","Shape3","curveTo","Shape4","r","arcTo","WireConnector","state","source","target","hints","result","pts","absolutePoints","horizontal","hint","isEdge","sourceConstraint","portConstraint","direction","pt","view","getRoutingCenterX","getRoutingCenterY","clone","first","length","i","transformControlPoint","push","putValue","labelBackground","fontColor","strokeColor","fillColor","scale","setPanning","setConnectable","setConnectableEdges","setDisconnectOnMove","foldingEnabled","maximumGraphBounds","border","spacingLeft","setEnterStopsCellEditing","setTooltips","getStylesheet","getDefaultEdgeStyle","endArrow","labelBackgroundColor","edgeStyle","fontSize","movable","startSize","endSize","getDefaultVertexStyle","gradientDirection","fontStyle","resizable","rounded","btn1","getElementById","btn2","btn3","btn6","btn7","update","event","parent","getDefaultParent","doc","createXmlDocument","batchUpdate","targetId","id","v1","insertVertex","shape","v11","align","verticalAlign","routingCenterX","spacingTop","geometry","relative","offset","width","v12","labelText","inputs","includes","rotation","v13","v14","v15","value","insert","spacingRight","v16","v17","v18","addEventListener","importButton","onclick","fileInput","onchange","handleFileImport","click","file","files","readXMLFile","xmlContent","loadGraphFromXml","callback","reader","FileReader","onload","e","readAsText","xml","removeCells","getChildVertices","node","parseXml","documentElement","model","beginUpdate","codec","decode","endUpdate","refresh","getDataModel","export","blob","Blob","type","url","window","URL","createObjectURL","a","href","download","body","revokeObjectURL","zoomIn","zoomOut","undoManager","listener","sender","evt","undoableEditHappened","getProperty","addListener","UNDO","getView","undo","redo","checkbox","checkbox2","setAttribute","checked","background","disableContextMenu","ref","height"],"sources":["D:/ospanel/domains/проекты open server/old/react/react-intro-main/src/components/GraphComponent.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nimport axios from 'axios';\nimport {\n  popup,\n  ModelXmlSerializer,\n  domUtils,\n  styleUtils,\n  mathUtils,\n  cloneUtils,\n  eventUtils,\n  Graph,\n  InternalEvent,\n  RubberBandHandler,\n  ConnectionHandler,\n  ConnectionConstraint,\n  Point,\n  CylinderShape,\n  CellRenderer,\n  DomHelpers,\n  EdgeStyle,\n  Rectangle,\n  EdgeHandler,\n  StyleRegistry,\n  EdgeSegmentHandler,\n  UndoManager,\n  CellEditorHandler,\n  ConstraintHandler,\n  Guide,\n  ImageBox,\n  GraphView,\n  SelectionHandler,\n  PanningHandler,\n  TooltipHandler,\n  SelectionCellsHandler,\n  PopupMenuHandler,\n  xmlUtils,\n  Codec,\n  Shape,\n} from '@maxgraph/core';\n\nimport {\n  contextMenuTypes,\n  contextMenuValues,\n  globalTypes,\n  globalValues,\n  rubberBandTypes,\n  rubberBandValues,\n} from './shared/args.js';\n\n\nimport { createGraphContainer } from './shared/configure.js';\n\n// style required by RubberBand\nimport '@maxgraph/core/css/common.css';\n\nimport { render } from 'react-dom';\n\nimport {\n  MyCustomGraph, \n  MyCustomEdgeSegmentHandler, \n  MyCustomGraphView, \n  MyCustomConnectionHandler,  \n  MyCustomPanningHandler, \n  MyCustomSelectionHandler,\n  MyCustomEdgeHandler,\n  MyCustomConstraintHandler\n} from './MyCustomGraph.jsx';\n\n\nexport const YourComponent = () => {\n  const importFileInputRef = useRef(null);\n  const graphContainerRef = useRef(null);\n  const [xmlText, setXmlText] = useState('');\n  // Инициализируем переменную для graph\n  let [graphInstance, setGraphInstance] = useState(null);\n  let [variableFromEffect, setVariableFromEffect] = useState(null);\n  let counter = 1;\n  let [jsonData, setJsonData] = useState(null);  // Задаем начальное состояние как null\n\n  const [graph, setGraph] = useState(null);\n  const LINE_ARCSIZE = 20;\n\n  useEffect(() => {\n\n    axios.get('./data.json')\n    .then(response => {\n      console.log(response.data);  // Проверяем, что данные приходят\n      setJsonData(response.data);  // Обновляем состояние с данными из файла\n      jsonData = response.data;\n      console.log(jsonData);\n    });\n    console.log(jsonData);\n\n\n    if (graphContainerRef.current) {\n    const graphContainer = graphContainerRef.current;\n    const newGraph = new Graph(graphContainerRef.current);\n    setGraph(newGraph); // Сохраняем граф в состояние\n\n   ////\n\n    \n    \n////\n    const parentContainer = document.createElement('div');\n    const container = createGraphContainer({\n      imageUrl: 'images/grid.gif'\n    });\n    parentContainer.appendChild(container);\n    //console.log({graph})\n      // Changes some default colors\n  // TODO Find a way of modifying globally or setting locally! See https://github.com/maxGraph/maxGraph/issues/192\n  //constants.SHADOWCOLOR = '#C0C0C0';\n\n  let joinNodeSize = 7;\n  let strokeWidth = 2;\n\n  // Switch for black background and bright styles\n  let invert = false;\n  let MyCustomCellEditorHandler;\n\n  if (!graphInstance) {\n    const newGraph = new MyCustomGraph(graphContainer, null, []);\n    setGraphInstance(newGraph);\n  }\n\n  if (invert) {\n    container.style.backgroundColor = 'black';\n\n    // White in-place editor text color\n    MyCustomCellEditorHandler = class extends CellEditorHandler {\n      startEditing(cell, trigger) {\n        super.startEditing.apply(this, arguments);\n\n        if (this.textarea != null) {\n          this.textarea.style.color = '#FFFFFF';\n        }\n      }\n    };\n  } else {\n    MyCustomCellEditorHandler = CellEditorHandler;\n  }\n\n  // Imlements a custom resistor shape. Direction currently ignored here.\n\n  class ResistorShape extends CylinderShape {\n    constructor() {\n      // TODO: The original didn't seem to call the super\n      super(null, null, null, null);\n    }\n\n    redrawPath(path, x, y, w, h, isForeground) {\n      let dx = w / 16;\n\n      if (isForeground) {\n        path.moveTo(0, h / 2);\n        path.lineTo(2 * dx, h / 2);\n        path.lineTo(3 * dx, 0);\n        path.lineTo(5 * dx, h);\n        path.lineTo(7 * dx, 0);\n        path.lineTo(9 * dx, h);\n        path.lineTo(11 * dx, 0);\n        path.lineTo(13 * dx, h);\n        path.lineTo(14 * dx, h / 2);\n        path.lineTo(16 * dx, h / 2);\n        path.end();\n      }\n    }\n  }\n\n  CellRenderer.registerShape('resistor', ResistorShape);\n\n\n\n///////////////////////////////////////////////////\nclass CustomTriangleShape extends Shape {\n  constructor() {\n    super();\n  }\n  paintVertexShape(c, x, y, w, h) {\n    c.begin();\n    // Начинаем с нижнего левого угла треугольника\n    const arcSize = (this.style?.arcSize ?? LINE_ARCSIZE) / 5;\n    this.addPoints(c, [new Point(x, y), new Point(x + w, y), new Point(x + w + w/2, y + h/2), new Point(x + w, y + h), new Point(x, y + h)], this.isRounded, arcSize, true);\n    // Закрываем фигуру (оставляем открытой одну сторону)\n    c.end();\n    c.stroke();  // Рисуем только границы без заливки\n  }\n}\n// Регистрация новой формы\nCellRenderer.registerShape('customTriangle', CustomTriangleShape);\n\n\n\nclass Shape2 extends Shape {\n  constructor() {\n    super();\n  }\n  paintVertexShape(c, x, y, w, h) {\n    c.begin();\n    // Начинаем с нижнего левого угла треугольника\n    const arcSize = (this.style?.arcSize ?? LINE_ARCSIZE) / 5;\n    this.addPoints(c, [new Point(x, y), new Point(x + w, y + h/2), new Point(x, y + h)], this.isRounded, arcSize, true);\n    // Закрываем фигуру (оставляем открытой одну сторону)\n    c.end();\n    c.stroke();  // Рисуем только границы без заливки\n  }\n}\n// Регистрация новой формы\nCellRenderer.registerShape('shape2', Shape2);\n\n\nclass Shape3 extends Shape {\n  constructor() {\n    super();\n  }\n  paintVertexShape(c, x, y, w, h) {\n    c.begin();\n    c.moveTo(x, y); \n    c.curveTo(x + w/2, y, x + w + w/5, y+h/4, x + w+w/3.5, y+h/2.5); \n    c.moveTo(x + w+w/3.5, y+h/2.5); \n    c.curveTo(x + w+w/3.5, y+h/2.5, x + w + w/5, y+h/1.5, x, y+h/1.3); \n    c.moveTo(x, y+h/1.3); \n    c.curveTo(x, y+h/1.3, x + w/3, y+h/2.2, x, y);\n    c.end();\n    c.stroke();  // Рисуем только границы без заливки\n  }\n}\n// Регистрация новой формы\nCellRenderer.registerShape('shape3', Shape3);\n\n\n\nclass Shape4 extends Shape {\n  constructor() {\n    super();\n  }\n  paintVertexShape(c, x, y, w, h) {\n    c.begin();\n    // Рисуем полукруг. Используем arcTo для создания дуги\n    const r = w / 2;  // Радиус по ширине\n    c.moveTo(x, y + h);  // Начинаем с нижней левой точки\n    c.arcTo(r, h, 0, 0, 1, x + w, y + h);  // Рисуем полукруг от левого нижнего угла к правому\n    \n    // Соединяем линию обратно к левой нижней точке\n    c.lineTo(x, y + h); \n    c.end();\n    c.stroke();  // Рисуем только границы без заливки\n  }\n}\n// Регистрация новой формы\nCellRenderer.registerShape('shape4', Shape4);\n////////////////////////////////////////////////////////\n\n\n  // Imlements a custom resistor shape. Direction currently ignored here.\n\n  EdgeStyle.WireConnector = function (state, source, target, hints, result) {\n    // Creates array of all way- and terminalpoints\n    let pts = state.absolutePoints;\n    let horizontal = true;\n    let hint = null;\n\n    // Gets the initial connection from the source terminal or edge\n    if (source != null && source.cell.isEdge()) {\n      horizontal = state.style.sourceConstraint == 'horizontal';\n    } else if (source != null) {\n      horizontal = source.style.portConstraint != 'vertical';\n\n      // Checks the direction of the shape and rotates\n      let direction = source.style.direction;\n\n      if (direction == 'north' || direction == 'south') {\n        horizontal = !horizontal;\n      }\n    }\n\n    // Adds the first point\n    // TODO: Should move along connected segment\n    let pt = pts[0];\n\n    if (pt == null && source != null) {\n      pt = new Point(\n        state.view.getRoutingCenterX(source),\n        state.view.getRoutingCenterY(source)\n      );\n    } else if (pt != null) {\n      pt = pt.clone();\n    }\n\n    let first = pt;\n\n    // Adds the waypoints\n    if (hints != null && hints.length > 0) {\n      // FIXME: First segment not movable\n      /*hint = state.view.transformControlPoint(state, hints[0]);\n      MaxLog.show();\n      MaxLog.debug(hints.length,'hints0.y='+hint.y, pt.y)\n\n      if (horizontal && Math.floor(hint.y) != Math.floor(pt.y))\n      {\n        MaxLog.show();\n        MaxLog.debug('add waypoint');\n\n        pt = new Point(pt.x, hint.y);\n        result.push(pt);\n        pt = pt.clone();\n        //horizontal = !horizontal;\n      }*/\n\n      for (let i = 0; i < hints.length; i++) {\n        horizontal = !horizontal;\n        hint = state.view.transformControlPoint(state, hints[i]);\n\n        if (horizontal) {\n          if (pt.y !== hint.y) {\n            pt.y = hint.y;\n            result.push(pt.clone());\n          }\n        } else if (pt.x !== hint.x) {\n          pt.x = hint.x;\n          result.push(pt.clone());\n        }\n      }\n    } else {\n      hint = pt;\n    }\n\n    // Adds the last point\n    pt = pts[pts.length - 1];\n\n    // TODO: Should move along connected segment\n    if (pt == null && target != null) {\n      pt = new Point(\n        state.view.getRoutingCenterX(target),\n        state.view.getRoutingCenterY(target)\n      );\n    }\n\n    if (horizontal) {\n      if (pt.y !== hint.y && first.x !== pt.x) {\n        result.push(new Point(pt.x, hint.y));\n      }\n    } else if (pt.x !== hint.x && first.y !== pt.y) {\n      result.push(new Point(hint.x, pt.y));\n    }\n  };\n\n  StyleRegistry.putValue('wireEdgeStyle', EdgeStyle.WireConnector);\n\n\n    let graph = new MyCustomGraph(container, null, [\n      MyCustomCellEditorHandler,\n      TooltipHandler,\n      SelectionCellsHandler,\n      PopupMenuHandler,\n      MyCustomConnectionHandler,\n      MyCustomSelectionHandler,\n      MyCustomPanningHandler,\n    ]);\n    setVariableFromEffect(graph);\n\n  let labelBackground = invert ? '#000000' : '#FFFFFF';\n  let fontColor = invert ? '#FFFFFF' : '#000000';\n  let strokeColor = invert ? '#C0C0C0' : '#000000';\n  let fillColor = invert ? 'none' : '#FFFFFF';\n\n  graph.view.scale = 1;\n  graph.setPanning(true);\n  graph.setConnectable(true);\n  graph.setConnectableEdges(true);\n  graph.setDisconnectOnMove(false);\n  graph.foldingEnabled = false;\n\n  //Maximum size\n  graph.maximumGraphBounds = new Rectangle(0, 0, 1000, 1000);\n  graph.border = 50;\n  graph.spacingLeft = 30;\n\n  // Enables return key to stop editing (use shift-enter for newlines)\n  graph.setEnterStopsCellEditing(true);\n\n  // Adds rubberband selection\n  new RubberBandHandler(graph);\n\n  // Adds a special tooltip for edges\n  graph.setTooltips(true);\n\n  let style = graph.getStylesheet().getDefaultEdgeStyle();\n  delete style.endArrow;\n  style.strokeColor = strokeColor;\n  style.labelBackgroundColor = labelBackground;\n  style.edgeStyle = 'wireEdgeStyle';\n  style.fontColor = fontColor;\n  style.fontSize = '9';\n  style.movable = '0';\n  style.strokeWidth = strokeWidth;\n  //style.rounded = '1';\n\n  // Sets join node size\n  style.startSize = joinNodeSize;\n  style.endSize = joinNodeSize;\n\n  style = graph.getStylesheet().getDefaultVertexStyle();\n  style.gradientDirection = 'south';\n  //style.gradientColor = '#909090';\n  style.strokeColor = strokeColor;\n  //style.fillColor = '#e0e0e0';\n  style.fillColor = 'none';\n  style.fontColor = fontColor;\n  style.fontStyle = '1';\n  style.fontSize = '12';\n  style.resizable = '0';\n  style.rounded = '1';\n  style.strokeWidth = strokeWidth;\n\n  // инородное дерьмо\n\n  const btn1 = document.getElementById('btn1');\n  const btn2 = document.getElementById('btn2');\n  const btn3 = document.getElementById('btn3');\n  const btn6 = document.getElementById('btn6');\n  const btn7 = document.getElementById('btn7');\n\n  const update = (event) => {\n    var parent = graph.getDefaultParent();\n    var doc = xmlUtils.createXmlDocument();\n    graph.batchUpdate(() => {\n      const targetId = event.target.id;\n      if (targetId === 'btn3') {\n        const v1 = graph.insertVertex(parent, null, '', 80, 80, 40, 40, {\n          shape: 'shape2',\n          strokeColor: strokeColor,\n        });\n        v1.setConnectable(false);\n        var v11 = graph.insertVertex(v1, null, '', 0, 0, 15, 16, {\n          shape: 'line',\n          align: 'top',\n          verticalAlign: 'top',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: 0,\n          spacingTop: -7,\n          fontColor,\n          strokeColor,\n        });\n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(-v1.geometry.width +25, 12);\n\n        var v12 = graph.insertVertex(v1, null, '◯', 0, 0, 15, 16, {\n          shape: 'line',\n          align: 'top',\n          verticalAlign: 'top',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: -20,\n          spacingTop: 0,\n          fontColor,\n          strokeColor,\n        });\n        v12.geometry.relative = true;\n        v12.geometry.offset = new Point(v1.geometry.width+7.5, 12);\n      }\n\n      else if (targetId === 'btn6') {\n        const v1 = graph.insertVertex(parent, null, '', 80, 80, 35, 25, {\n          shape: 'customTriangle',\n          strokeColor: strokeColor,\n        });\n        v1.setConnectable(false);\n        const labelText = 'X' + counter;  // Формируем текст с текущим значением счётчика\n        let fontColor = 'black';  // По умолчанию цвет текста черный\n        if (jsonData.inputs.includes(labelText)) {\n          fontColor = 'red';  // Если есть совпадение, меняем цвет на красный\n        }\n        var v11 = graph.insertVertex(v1, null, labelText, 0, 0, 20, 16, {\n          shape: 'line',\n          align: 'top',\n          verticalAlign: 'top',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: -5,\n          spacingTop: -7,\n          fontColor,\n          strokeColor,\n        });\n        counter += 1;\n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(v1.geometry.width+16.5, 4.5);\n        \n      }\n\n      \n      else if (targetId === 'btn7') {\n        const v1 = graph.insertVertex(parent, null, '', 80, 80, 35, 25, {\n          shape: 'customTriangle',\n          strokeColor: strokeColor,\n          rotation: 180  \n        });\n        v1.setConnectable(false);\n        var v11 = graph.insertVertex(v1, null, 'F', 0, 0, 20, 16, {\n          shape: 'line',\n          align: 'top',\n          verticalAlign: 'top',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: -5,\n          spacingTop: -7,\n          fontColor,\n          strokeColor,\n        });\n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(v1.geometry.width+16.5, 4.5);\n      }\n\n      else if (targetId === 'btn2') {\n        const v1 = graph.insertVertex(parent, null, '', 80, 100, 60, 60, {\n          shape: 'shape3',\n          strokeColor: strokeColor,  \n        });\n        v1.setConnectable(false);\n        var v11 = graph.insertVertex(v1, null, '', 0, 0, 20, 16, {\n          shape: 'line',\n          align: 'top',\n          verticalAlign: 'top',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: -5,\n          spacingTop: -7,\n          fontColor,\n          strokeColor,\n        });\n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(v1.geometry.width+17.8, 16);\n\n\n        var v12 = graph.insertVertex(v1, null, '', 0, 0, 20, 16, {\n          shape: 'line',\n          align: 'top',\n          verticalAlign: 'top',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: -5,\n          spacingTop: -7,\n          fontColor,\n          strokeColor,\n        });\n        v12.geometry.relative = true;\n        v12.geometry.offset = new Point(-v1.geometry.width+48, 8);\n\n        var v13 = graph.insertVertex(v1, null, '', 0, 0, 20, 16, {\n          shape: 'line',\n          align: 'top',\n          verticalAlign: 'top',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: -5,\n          spacingTop: -7,\n          fontColor,\n          strokeColor,\n        });\n        v13.geometry.relative = true;\n        v13.geometry.offset = new Point(-v1.geometry.width+48, 24);\n      } \n      \n      \n      \n      else if (targetId === 'btn1') {\n        const v1 = graph.insertVertex(parent, null, '', 80, 100, 47, 70, {\n          shape: 'shape4',\n          strokeColor: strokeColor,  \n          rotation: 90 \n        });\n        v1.setConnectable(false);\n\n\n        var v13 = graph.insertVertex(v1, null, '', 0, 0, 20, 16, {\n          shape: 'line',\n          align: 'top',\n          verticalAlign: 'top',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: -5,\n          spacingTop: -7,\n          fontColor,\n          strokeColor,\n        });\n        v13.geometry.relative = true;\n        v13.geometry.offset = new Point(v1.geometry.width-33, -18);\n\n\n\n        var v14 = graph.insertVertex(v1, null, '', 0, 0, 20, 16, {\n          shape: 'line',\n          align: 'top',\n          verticalAlign: 'top',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: -5,\n          spacingTop: -7,\n          fontColor,\n          strokeColor,\n        });\n        v14.geometry.relative = true;\n        v14.geometry.offset = new Point(5, 71);\n\n\n\n        var v15 = graph.insertVertex(v1, null, '', 0, 0, 20, 16, {\n          shape: 'line',\n          align: 'top',\n          verticalAlign: 'top',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: -5,\n          spacingTop: -7,\n          fontColor,\n          strokeColor,\n        });\n        v15.geometry.relative = true;\n        v15.geometry.offset = new Point(23, 71);\n\n      } \n      \n      \n      \n      else if (targetId === 'btn4') {\n        var v1 = graph.insertVertex(parent, null, '', 80, 140, 40, 80,\n          'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\n        v1.setConnectable(false);\n\n        var v11 = graph.insertVertex(v1, null, '', 0, 0, 14, 16, {\n          shape: 'line',\n          align: 'left',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        });\n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(-v11.geometry.width, 12);\n        var v12 = v11.clone();\n        v12.value = '';\n        v12.geometry.offset = new Point(-v11.geometry.width, 52);\n        v1.insert(v12);\n        var v15 = v11.clone();\n        v15.value = '';\n        v15.geometry.x = 1;\n        v15.style = {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingRight: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        };\n        v15.geometry.offset = new Point(0, 32);\n        v1.insert(v15);\n\n        var v16 = graph.insertVertex(v1, null, '○', 0, 0, 0, 0, {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 25,\n          routingCenterX: 0.5,\n          spacingLeft: 6,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        });\n        v16.geometry.x = 1;\n        v16.geometry.offset = new Point(8, 15);\n        v1.insert(v16);\n        var v17 = graph.insertVertex(v1, null, 'X', 0, 0, 0, 0, {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingLeft: 6,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        });\n        v17.geometry.x = 1;\n        v17.geometry.offset = new Point(14, 20);\n        v1.insert(v17);\n        var v18 = graph.insertVertex(v1, null, 'Y', 0, 0, 0, 0, {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingLeft: 6,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        });\n        v18.geometry.x = 1;\n        v18.geometry.offset = new Point(14, 59);\n        v1.insert(v18);\n      }\n    });\n  };\n\n\n  btn1.addEventListener('click', update);\n  btn2.addEventListener('click', update);\n  btn3.addEventListener('click', update);\n  btn6.addEventListener('click', update);\n  btn7.addEventListener('click', update);\n\n\n\n\n  const importButton = document.getElementById(\"import\");\n  importButton.onclick = () => {\n    console.log(graph);\n    const fileInput = document.getElementById(\"importFileInput\");\n    console.log(fileInput);\n    if (fileInput) {\n      // Добавляем обработчик события onchange\n      fileInput.onchange = function(event) {\n        handleFileImport(event);  // Вызываем твою функцию handleFileImport\n      };\n      fileInput.click();  // Открываем диалог выбора файла\n      console.log(\"клик\");\n    } else {\n      console.log(\"fileInput не найден!\");\n    }\n  };\n  function handleFileImport(event) {\n    console.log(\"blyaaa\");\n      // Очищаем граф перед загрузкой новой схемы\n      console.log(graph);\n    const file = event.target.files[0];\n    if (file) {\n      // Вызов функции readXMLFile\n      readXMLFile(file, function(xmlContent) {\n        console.log('Файл импортирован: ', xmlContent); // Работаем с содержимым файла\n        loadGraphFromXml(xmlContent, graph); // Загружаем граф из XML\n      });\n    } else {\n      console.log(\"Файл не выбран!\");\n    }\n  }\n  // Функция чтения XML файла\nfunction readXMLFile(file, callback) {\nconst reader = new FileReader();\nreader.onload = function(e) {\n  const xmlContent = e.target.result;\n  callback(xmlContent);  // Передаем результат чтения в коллбэк\n};\nreader.readAsText(file);  // Читаем файл как текст\n}\n\n// Функция для загрузки графа из XML\nconst loadGraphFromXml = (xml, graph) => {\ngraph.removeCells(graph.getChildVertices(graph.getDefaultParent()));\nconst node = xmlUtils.parseXml(xml).documentElement;\ngraph.model.beginUpdate();\ntry {\n  console.log(node);\n\n  const codec = new Codec();  // Создаем кодек для декодирования XML\n  codec.decode(node, graph.model);  // Декодируем XML и загружаем в модель графа\n} finally {\n  graph.model.endUpdate();  // Завершаем транзакцию\n  graph.refresh();\n}\n};\n\n  ////////////////////////////////////////////////////////\n// XML \n\ndocument.getElementById(\"xml\").onclick = () => {\n  // Получаем XML данные\n  console.log(graph);\n  const xml = new ModelXmlSerializer(graph.getDataModel()).export();\n  \n  // Создаем новый Blob объект с XML данными\n  const blob = new Blob([xml], { type: 'text/xml' });\n  \n  // Создаем ссылку на Blob объект\n  const url = window.URL.createObjectURL(blob);\n  \n  // Создаем ссылку для скачивания\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = 'data.xml'; // Имя файла для скачивания\n  document.body.appendChild(a);\n  \n  // Инициируем скачивание файла\n  a.click();\n  \n  // Освобождаем ресурсы\n  window.URL.revokeObjectURL(url);\n};\n\n\n\n\n\n\n\n\n\n///////////////////////////////////////////////////////////\n\n\n    document.getElementById(\"zoom\").onclick = () => graph.zoomIn();\n    document.getElementById(\"zoomout\").onclick = () => graph.zoomOut();\n\n  // Undo/redo\n  let undoManager = new UndoManager();\n  let listener = function (sender, evt) {\n    undoManager.undoableEditHappened(evt.getProperty('edit'));\n  };\n  graph.getDataModel().addListener(InternalEvent.UNDO, listener);\n  graph.getView().addListener(InternalEvent.UNDO, listener);\n\n  document.getElementById(\"undo\").onclick = () => undoManager.undo();\n  document.getElementById(\"redo\").onclick = () => undoManager.redo();\n\n\n  document.getElementById(\"delete\").onclick = () => graph.removeCells();\n\n  // Wire-mode\n  let checkbox = document.getElementById(\"wire\");\n\n  // Grid\n  let checkbox2 = document.getElementById(\"grid\");\n  checkbox2.setAttribute('checked', 'true');\n\n\n  InternalEvent.addListener(checkbox2, 'click', function (evt) {\n    if (checkbox2.checked) {\n      container.style.background = 'url(./images/grid.gif)';\n    } else {\n      container.style.background = '';\n    }\n    container.style.backgroundColor = invert ? 'black' : 'white';\n  });\n  InternalEvent.disableContextMenu(container);\n\n\n    graphContainer.appendChild(parentContainer);\n\n\n\n}\n}, []);\n\n\n\n  return (\n      <div ref={graphContainerRef} style={{ width: '100%', height: '100%' }} />\n  );\n  \n};\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\ospanel\\\\domains\\\\\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B open server\\\\old\\\\react\\\\react-intro-main\\\\src\\\\components\\\\GraphComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { popup, ModelXmlSerializer, domUtils, styleUtils, mathUtils, cloneUtils, eventUtils, Graph, InternalEvent, RubberBandHandler, ConnectionHandler, ConnectionConstraint, Point, CylinderShape, CellRenderer, DomHelpers, EdgeStyle, Rectangle, EdgeHandler, StyleRegistry, EdgeSegmentHandler, UndoManager, CellEditorHandler, ConstraintHandler, Guide, ImageBox, GraphView, SelectionHandler, PanningHandler, TooltipHandler, SelectionCellsHandler, PopupMenuHandler, xmlUtils, Codec } from '@maxgraph/core';\nimport { contextMenuTypes, contextMenuValues, globalTypes, globalValues, rubberBandTypes, rubberBandValues } from './shared/args.js';\nimport { createGraphContainer } from './shared/configure.js';\n\n// style required by RubberBand\nimport '@maxgraph/core/css/common.css';\nimport { render } from 'react-dom';\nimport { MyCustomGraph, MyCustomEdgeSegmentHandler, MyCustomGraphView, MyCustomConnectionHandler, MyCustomPanningHandler, MyCustomSelectionHandler, MyCustomEdgeHandler, MyCustomConstraintHandler } from './MyCustomGraph.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const YourComponent = () => {\n  _s();\n  const importFileInputRef = useRef(null);\n  const graphContainerRef = useRef(null);\n  const [xmlText, setXmlText] = useState('');\n  // Инициализируем переменную для graph\n  let [graphInstance, setGraphInstance] = useState(null);\n  let [variableFromEffect, setVariableFromEffect] = useState(null);\n  const [graph, setGraph] = useState(null);\n  useEffect(() => {\n    if (graphContainerRef.current) {\n      const graphContainer = graphContainerRef.current;\n      const newGraph = new Graph(graphContainerRef.current);\n      setGraph(newGraph); // Сохраняем граф в состояние\n\n      ////\n\n      ////\n      const parentContainer = document.createElement('div');\n      const container = createGraphContainer({\n        imageUrl: 'images/grid.gif'\n      });\n      parentContainer.appendChild(container);\n      //console.log({graph})\n      // Changes some default colors\n      // TODO Find a way of modifying globally or setting locally! See https://github.com/maxGraph/maxGraph/issues/192\n      //constants.SHADOWCOLOR = '#C0C0C0';\n\n      let joinNodeSize = 7;\n      let strokeWidth = 2;\n\n      // Switch for black background and bright styles\n      let invert = false;\n      let MyCustomCellEditorHandler;\n      if (!graphInstance) {\n        const newGraph = new MyCustomGraph(graphContainer, null, []);\n        setGraphInstance(newGraph);\n      }\n      if (invert) {\n        container.style.backgroundColor = 'black';\n\n        // White in-place editor text color\n        MyCustomCellEditorHandler = class extends CellEditorHandler {\n          startEditing(cell, trigger) {\n            super.startEditing.apply(this, arguments);\n            if (this.textarea != null) {\n              this.textarea.style.color = '#FFFFFF';\n            }\n          }\n        };\n      } else {\n        MyCustomCellEditorHandler = CellEditorHandler;\n      }\n\n      // Imlements a custom resistor shape. Direction currently ignored here.\n\n      class ResistorShape extends CylinderShape {\n        constructor() {\n          // TODO: The original didn't seem to call the super\n          super(null, null, null, null);\n        }\n        redrawPath(path, x, y, w, h, isForeground) {\n          let dx = w / 16;\n          if (isForeground) {\n            path.moveTo(0, h / 2);\n            path.lineTo(2 * dx, h / 2);\n            path.lineTo(3 * dx, 0);\n            path.lineTo(5 * dx, h);\n            path.lineTo(7 * dx, 0);\n            path.lineTo(9 * dx, h);\n            path.lineTo(11 * dx, 0);\n            path.lineTo(13 * dx, h);\n            path.lineTo(14 * dx, h / 2);\n            path.lineTo(16 * dx, h / 2);\n            path.end();\n          }\n        }\n      }\n      CellRenderer.registerShape('resistor', ResistorShape);\n\n      // Imlements a custom resistor shape. Direction currently ignored here.\n\n      EdgeStyle.WireConnector = function (state, source, target, hints, result) {\n        // Creates array of all way- and terminalpoints\n        let pts = state.absolutePoints;\n        let horizontal = true;\n        let hint = null;\n\n        // Gets the initial connection from the source terminal or edge\n        if (source != null && source.cell.isEdge()) {\n          horizontal = state.style.sourceConstraint == 'horizontal';\n        } else if (source != null) {\n          horizontal = source.style.portConstraint != 'vertical';\n\n          // Checks the direction of the shape and rotates\n          let direction = source.style.direction;\n          if (direction == 'north' || direction == 'south') {\n            horizontal = !horizontal;\n          }\n        }\n\n        // Adds the first point\n        // TODO: Should move along connected segment\n        let pt = pts[0];\n        if (pt == null && source != null) {\n          pt = new Point(state.view.getRoutingCenterX(source), state.view.getRoutingCenterY(source));\n        } else if (pt != null) {\n          pt = pt.clone();\n        }\n        let first = pt;\n\n        // Adds the waypoints\n        if (hints != null && hints.length > 0) {\n          // FIXME: First segment not movable\n          /*hint = state.view.transformControlPoint(state, hints[0]);\n          MaxLog.show();\n          MaxLog.debug(hints.length,'hints0.y='+hint.y, pt.y)\n           if (horizontal && Math.floor(hint.y) != Math.floor(pt.y))\n          {\n            MaxLog.show();\n            MaxLog.debug('add waypoint');\n             pt = new Point(pt.x, hint.y);\n            result.push(pt);\n            pt = pt.clone();\n            //horizontal = !horizontal;\n          }*/\n\n          for (let i = 0; i < hints.length; i++) {\n            horizontal = !horizontal;\n            hint = state.view.transformControlPoint(state, hints[i]);\n            if (horizontal) {\n              if (pt.y !== hint.y) {\n                pt.y = hint.y;\n                result.push(pt.clone());\n              }\n            } else if (pt.x !== hint.x) {\n              pt.x = hint.x;\n              result.push(pt.clone());\n            }\n          }\n        } else {\n          hint = pt;\n        }\n\n        // Adds the last point\n        pt = pts[pts.length - 1];\n\n        // TODO: Should move along connected segment\n        if (pt == null && target != null) {\n          pt = new Point(state.view.getRoutingCenterX(target), state.view.getRoutingCenterY(target));\n        }\n        if (horizontal) {\n          if (pt.y !== hint.y && first.x !== pt.x) {\n            result.push(new Point(pt.x, hint.y));\n          }\n        } else if (pt.x !== hint.x && first.y !== pt.y) {\n          result.push(new Point(hint.x, pt.y));\n        }\n      };\n      StyleRegistry.putValue('wireEdgeStyle', EdgeStyle.WireConnector);\n      let graph = new MyCustomGraph(container, null, [MyCustomCellEditorHandler, TooltipHandler, SelectionCellsHandler, PopupMenuHandler, MyCustomConnectionHandler, MyCustomSelectionHandler, MyCustomPanningHandler]);\n      setVariableFromEffect(graph);\n      let labelBackground = invert ? '#000000' : '#FFFFFF';\n      let fontColor = invert ? '#FFFFFF' : '#000000';\n      let strokeColor = invert ? '#C0C0C0' : '#000000';\n      let fillColor = invert ? 'none' : '#FFFFFF';\n      graph.view.scale = 1;\n      graph.setPanning(true);\n      graph.setConnectable(true);\n      graph.setConnectableEdges(true);\n      graph.setDisconnectOnMove(false);\n      graph.foldingEnabled = false;\n\n      //Maximum size\n      graph.maximumGraphBounds = new Rectangle(0, 0, 1000, 1000);\n      graph.border = 50;\n      graph.spacingLeft = 30;\n\n      // Enables return key to stop editing (use shift-enter for newlines)\n      graph.setEnterStopsCellEditing(true);\n\n      // Adds rubberband selection\n      new RubberBandHandler(graph);\n\n      // Adds a special tooltip for edges\n      graph.setTooltips(true);\n      let style = graph.getStylesheet().getDefaultEdgeStyle();\n      delete style.endArrow;\n      style.strokeColor = strokeColor;\n      style.labelBackgroundColor = labelBackground;\n      style.edgeStyle = 'wireEdgeStyle';\n      style.fontColor = fontColor;\n      style.fontSize = '9';\n      style.movable = '0';\n      style.strokeWidth = strokeWidth;\n      //style.rounded = '1';\n\n      // Sets join node size\n      style.startSize = joinNodeSize;\n      style.endSize = joinNodeSize;\n      style = graph.getStylesheet().getDefaultVertexStyle();\n      style.gradientDirection = 'south';\n      //style.gradientColor = '#909090';\n      style.strokeColor = strokeColor;\n      //style.fillColor = '#e0e0e0';\n      style.fillColor = 'none';\n      style.fontColor = fontColor;\n      style.fontStyle = '1';\n      style.fontSize = '12';\n      style.resizable = '0';\n      style.rounded = '1';\n      style.strokeWidth = strokeWidth;\n\n      // инородное дерьмо\n\n      const btn1 = document.getElementById('btn1');\n      const btn2 = document.getElementById('btn2');\n      const btn3 = document.getElementById('btn3');\n      const btn4 = document.getElementById('btn4');\n      const btn5 = document.getElementById('btn5');\n      const btn6 = document.getElementById('btn6');\n      const btn7 = document.getElementById('btn7');\n      const update = event => {\n        var parent = graph.getDefaultParent();\n        var doc = xmlUtils.createXmlDocument();\n        graph.batchUpdate(() => {\n          const targetId = event.target.id;\n          if (targetId === 'btn3') {\n            var v1 = graph.insertVertex(parent, null, '', 80, 40, 40, 80, 'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\n            v1.setConnectable(false);\n            var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16, {\n              shape: 'line',\n              align: 'left',\n              verticalAlign: 'middle',\n              fontSize: 10,\n              routingCenterX: -0.5,\n              spacingLeft: 12,\n              fontColor,\n              strokeColor\n            });\n            v11.geometry.relative = true;\n            v11.geometry.offset = new Point(-v11.geometry.width, 12);\n            var v12 = v11.clone();\n            v12.value = 'Y';\n            v12.geometry.offset = new Point(-v11.geometry.width, 52);\n            v1.insert(v12);\n            var v15 = v11.clone();\n            v15.value = '';\n            v15.geometry.x = 1;\n            v15.style = {\n              shape: 'line',\n              align: 'right',\n              verticalAlign: 'middle',\n              fontSize: 10,\n              routingCenterX: 0.5,\n              spacingRight: 12,\n              fontColor: fontColor,\n              strokeColor: strokeColor\n            };\n            v15.geometry.offset = new Point(5, 32);\n            v1.insert(v15);\n            var v16 = graph.insertVertex(v1, null, '○', 0, 0, 0, 0, {\n              shape: 'line',\n              align: 'right',\n              verticalAlign: 'middle',\n              fontSize: 30,\n              routingCenterX: 0.5,\n              spacingLeft: 6,\n              fontColor: fontColor,\n              strokeColor: strokeColor\n            });\n            v16.geometry.x = 1;\n            v16.geometry.offset = new Point(49, 34);\n            v1.insert(v16);\n          } else if (targetId === 'btn6') {\n            var inputVertex = graph.insertVertex(parent, null, 'вход', 80, 40, 40, 80, {\n              shape: 'ellipse',\n              fillColor: 'green',\n              fontColor: 'white',\n              strokeColor: 'black'\n            });\n            inputVertex.setConnectable(true);\n            console.log(\"blyaa\");\n          } else if (targetId === 'btn7') {\n            var outputVertex = graph.insertVertex(parent, null, 'Выход', 80, 40, 40, 80, {\n              shape: 'ellipse',\n              fillColor: 'red',\n              fontColor: 'white',\n              strokeColor: 'black'\n            });\n            outputVertex.setConnectable(true);\n          } else if (targetId === 'btn1') {\n            var v1 = graph.insertVertex(parent, null, '', 180, 40, 40, 80, 'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\n            v1.setConnectable(false);\n            var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16, {\n              shape: 'line',\n              align: 'left',\n              verticalAlign: 'middle',\n              fontSize: 10,\n              routingCenterX: -0.5,\n              spacingLeft: 12,\n              fontColor: fontColor,\n              strokeColor: strokeColor\n            });\n            v11.geometry.relative = true;\n            v11.geometry.offset = new Point(-v11.geometry.width, 12);\n            var v12 = v11.clone();\n            v12.value = 'Y';\n            v12.geometry.offset = new Point(-v11.geometry.width, 52);\n            v1.insert(v12);\n            var v15 = v11.clone();\n            v15.value = '';\n            v15.geometry.x = 1;\n            v15.style = {\n              shape: 'line',\n              align: 'right',\n              verticalAlign: 'middle',\n              fontSize: 10,\n              routingCenterX: 0.5,\n              spacingRight: 12,\n              fontColor: fontColor,\n              strokeColor: strokeColor\n            };\n            v15.geometry.offset = new Point(0, 32);\n            v1.insert(v15);\n            var v16 = graph.insertVertex(v1, null, '&', 0, 0, 0, 0, {\n              shape: 'line',\n              align: 'right',\n              verticalAlign: 'middle',\n              fontSize: 20,\n              routingCenterX: 0.5,\n              spacingLeft: 6,\n              fontColor: fontColor,\n              strokeColor: strokeColor\n            });\n            v16.geometry.x = 1;\n            v16.geometry.offset = new Point(28.5, 37);\n            v1.insert(v16);\n          } else if (targetId === 'btn2') {\n            var v1 = graph.insertVertex(parent, null, '', 250, 40, 40, 80, 'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\n            v1.setConnectable(false);\n            var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16, {\n              shape: 'line',\n              align: 'left',\n              verticalAlign: 'middle',\n              fontSize: 10,\n              routingCenterX: -0.5,\n              spacingLeft: 12,\n              fontColor: fontColor,\n              strokeColor: strokeColor\n            });\n            v11.geometry.relative = true;\n            v11.geometry.offset = new Point(-v11.geometry.width, 12);\n            var v12 = v11.clone();\n            v12.value = 'Y';\n            v12.geometry.offset = new Point(-v11.geometry.width, 52);\n            v1.insert(v12);\n            var v15 = v11.clone();\n            v15.value = '';\n            v15.geometry.x = 1;\n            v15.style = {\n              shape: 'line',\n              align: 'right',\n              verticalAlign: 'middle',\n              fontSize: 10,\n              routingCenterX: 0.5,\n              spacingRight: 12,\n              fontColor: fontColor,\n              strokeColor: strokeColor\n            };\n            v15.geometry.offset = new Point(0, 32);\n            v1.insert(v15);\n            var v16 = graph.insertVertex(v1, null, '|', 0, 0, 0, 0, {\n              shape: 'line',\n              align: 'right',\n              verticalAlign: 'middle',\n              fontSize: 20,\n              routingCenterX: 0.5,\n              spacingLeft: 6,\n              fontColor: fontColor,\n              strokeColor: strokeColor\n            });\n            v16.geometry.x = 1;\n            v16.geometry.offset = new Point(24, 37);\n            v1.insert(v16);\n          } else if (targetId === 'btn5') {\n            var v1 = graph.insertVertex(parent, null, '', 180, 140, 40, 80, 'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\n            v1.setConnectable(false);\n            var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16, {\n              shape: 'line',\n              align: 'left',\n              verticalAlign: 'middle',\n              fontSize: 10,\n              routingCenterX: -0.5,\n              spacingLeft: 12,\n              fontColor: fontColor,\n              strokeColor: strokeColor\n            });\n            v11.geometry.relative = true;\n            v11.geometry.offset = new Point(-v11.geometry.width, 12);\n            var v12 = v11.clone();\n            v12.value = 'Y';\n            v12.geometry.offset = new Point(-v11.geometry.width, 52);\n            v1.insert(v12);\n            var v15 = v11.clone();\n            v15.value = '';\n            v15.geometry.x = 1;\n            v15.style = {\n              shape: 'line',\n              align: 'right',\n              verticalAlign: 'middle',\n              fontSize: 10,\n              routingCenterX: 0.5,\n              spacingRight: 12,\n              fontColor: fontColor,\n              strokeColor: strokeColor\n            };\n            v15.geometry.offset = new Point(0, 32);\n            v1.insert(v15);\n            var v16 = graph.insertVertex(v1, null, '==', 0, 0, 0, 0, {\n              shape: 'line',\n              align: 'right',\n              verticalAlign: 'middle',\n              fontSize: 15,\n              routingCenterX: 0.5,\n              spacingLeft: 6,\n              fontColor: fontColor,\n              strokeColor: strokeColor\n            });\n            v16.geometry.x = 1;\n            v16.geometry.offset = new Point(30, 38);\n            v1.insert(v16);\n          } else if (targetId === 'btn4') {\n            var v1 = graph.insertVertex(parent, null, '', 80, 140, 40, 80, 'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\n            v1.setConnectable(false);\n            var v11 = graph.insertVertex(v1, null, '', 0, 0, 14, 16, {\n              shape: 'line',\n              align: 'left',\n              verticalAlign: 'middle',\n              fontSize: 10,\n              routingCenterX: -0.5,\n              spacingLeft: 12,\n              fontColor: fontColor,\n              strokeColor: strokeColor\n            });\n            v11.geometry.relative = true;\n            v11.geometry.offset = new Point(-v11.geometry.width, 12);\n            var v12 = v11.clone();\n            v12.value = '';\n            v12.geometry.offset = new Point(-v11.geometry.width, 52);\n            v1.insert(v12);\n            var v15 = v11.clone();\n            v15.value = '';\n            v15.geometry.x = 1;\n            v15.style = {\n              shape: 'line',\n              align: 'right',\n              verticalAlign: 'middle',\n              fontSize: 10,\n              routingCenterX: 0.5,\n              spacingRight: 12,\n              fontColor: fontColor,\n              strokeColor: strokeColor\n            };\n            v15.geometry.offset = new Point(0, 32);\n            v1.insert(v15);\n            var v16 = graph.insertVertex(v1, null, '○', 0, 0, 0, 0, {\n              shape: 'line',\n              align: 'right',\n              verticalAlign: 'middle',\n              fontSize: 25,\n              routingCenterX: 0.5,\n              spacingLeft: 6,\n              fontColor: fontColor,\n              strokeColor: strokeColor\n            });\n            v16.geometry.x = 1;\n            v16.geometry.offset = new Point(8, 15);\n            v1.insert(v16);\n            var v17 = graph.insertVertex(v1, null, 'X', 0, 0, 0, 0, {\n              shape: 'line',\n              align: 'right',\n              verticalAlign: 'middle',\n              fontSize: 10,\n              routingCenterX: 0.5,\n              spacingLeft: 6,\n              fontColor: fontColor,\n              strokeColor: strokeColor\n            });\n            v17.geometry.x = 1;\n            v17.geometry.offset = new Point(14, 20);\n            v1.insert(v17);\n            var v18 = graph.insertVertex(v1, null, 'Y', 0, 0, 0, 0, {\n              shape: 'line',\n              align: 'right',\n              verticalAlign: 'middle',\n              fontSize: 10,\n              routingCenterX: 0.5,\n              spacingLeft: 6,\n              fontColor: fontColor,\n              strokeColor: strokeColor\n            });\n            v18.geometry.x = 1;\n            v18.geometry.offset = new Point(14, 59);\n            v1.insert(v18);\n          }\n        });\n      };\n      btn1.addEventListener('click', update);\n      btn2.addEventListener('click', update);\n      btn3.addEventListener('click', update);\n      btn4.addEventListener('click', update);\n      btn5.addEventListener('click', update);\n      btn6.addEventListener('click', update);\n      btn7.addEventListener('click', update);\n\n      ////////////////////////////////////////////////////////\n      // XML \n\n      document.getElementById(\"xml\").onclick = () => {\n        // Получаем XML данные\n        console.log(graph);\n        const xml = new ModelXmlSerializer(graph.getDataModel()).export();\n\n        // Создаем новый Blob объект с XML данными\n        const blob = new Blob([xml], {\n          type: 'text/xml'\n        });\n\n        // Создаем ссылку на Blob объект\n        const url = window.URL.createObjectURL(blob);\n\n        // Создаем ссылку для скачивания\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'data.xml'; // Имя файла для скачивания\n        document.body.appendChild(a);\n\n        // Инициируем скачивание файла\n        a.click();\n\n        // Освобождаем ресурсы\n        window.URL.revokeObjectURL(url);\n      };\n\n      ///////////////////////////////////////////////////////////\n\n      document.getElementById(\"zoom\").onclick = () => graph.zoomIn();\n      document.getElementById(\"zoomout\").onclick = () => graph.zoomOut();\n\n      // Undo/redo\n      let undoManager = new UndoManager();\n      let listener = function (sender, evt) {\n        undoManager.undoableEditHappened(evt.getProperty('edit'));\n      };\n      graph.getDataModel().addListener(InternalEvent.UNDO, listener);\n      graph.getView().addListener(InternalEvent.UNDO, listener);\n      document.getElementById(\"undo\").onclick = () => undoManager.undo();\n      document.getElementById(\"redo\").onclick = () => undoManager.redo();\n      document.getElementById(\"delete\").onclick = () => graph.removeCells();\n\n      // Wire-mode\n      let checkbox = document.getElementById(\"wire\");\n\n      // Grid\n      let checkbox2 = document.getElementById(\"grid\");\n      checkbox2.setAttribute('checked', 'true');\n      InternalEvent.addListener(checkbox2, 'click', function (evt) {\n        if (checkbox2.checked) {\n          container.style.background = 'url(./images/grid.gif)';\n        } else {\n          container.style.background = '';\n        }\n        container.style.backgroundColor = invert ? 'black' : 'white';\n      });\n      InternalEvent.disableContextMenu(container);\n      graphContainer.appendChild(parentContainer);\n      const importButton = document.getElementById(\"import\");\n      importButton.onclick = () => {\n        console.log(graph);\n        const fileInput = document.getElementById(\"importFileInput\");\n        console.log(fileInput);\n        if (fileInput) {\n          // Добавляем обработчик события onchange\n          fileInput.onchange = function (event) {\n            handleFileImport(event); // Вызываем твою функцию handleFileImport\n          };\n          fileInput.click(); // Открываем диалог выбора файла\n          console.log(\"клик\");\n        } else {\n          console.log(\"fileInput не найден!\");\n        }\n      };\n    }\n    function handleFileImport(event) {\n      console.log(\"blyaaa\");\n      // Очищаем граф перед загрузкой новой схемы\n      console.log(graph);\n      const cells = graph.getChildVertices(graph.getDefaultParent()); // Получаем все элементы (узлы и рёбра) графа\n      graph.removeCells(cells, true); // Удаляем все элементы, включая рёбра\n\n      const file = event.target.files[0];\n      if (file) {\n        // Вызов функции readXMLFile\n        readXMLFile(file, function (xmlContent) {\n          console.log('Файл импортирован: ', xmlContent); // Работаем с содержимым файла\n          loadGraphFromXml(xmlContent, graph); // Загружаем граф из XML\n        });\n      } else {\n        console.log(\"Файл не выбран!\");\n      }\n    }\n    return () => {\n      // Clean up if needed\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: graphContainerRef,\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 769,\n    columnNumber: 7\n  }, this);\n};\n\n// Функция чтения XML файла\n_s(YourComponent, \"vOlmZy/K7jetclq4Bsv3wdTufik=\");\n_c = YourComponent;\nfunction readXMLFile(file, callback) {\n  const reader = new FileReader();\n  reader.onload = function (e) {\n    const xmlContent = e.target.result;\n    callback(xmlContent); // Передаем результат чтения в коллбэк\n  };\n  reader.readAsText(file); // Читаем файл как текст\n}\n\n// Функция для загрузки графа из XML\nconst loadGraphFromXml = (xml, graph) => {\n  if (!graph) {\n    console.error(\"Граф не инициализирован!\"); // Логируем ошибку\n    const newGraph = new Graph(graphContainerRef.current);\n    setGraph(newGraph);\n  }\n\n  // Преобразуем текст XML в DOM элемент\n  const node = xmlUtils.parseXml(xml).documentElement;\n\n  // Очищаем текущую модель графа и начинаем транзакцию обновления\n  graph.model.beginUpdate();\n  try {\n    const codec = new Codec(); // Создаем кодек для декодирования XML\n    codec.decode(node, graph.model); // Декодируем XML и загружаем в модель графа\n    graph.refresh(); // Обновляем отображение графа\n  } finally {\n    graph.model.endUpdate(); // Завершаем транзакцию\n    graph.refresh(); // Принудительно обновляем граф после декодирования\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"YourComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","popup","ModelXmlSerializer","domUtils","styleUtils","mathUtils","cloneUtils","eventUtils","Graph","InternalEvent","RubberBandHandler","ConnectionHandler","ConnectionConstraint","Point","CylinderShape","CellRenderer","DomHelpers","EdgeStyle","Rectangle","EdgeHandler","StyleRegistry","EdgeSegmentHandler","UndoManager","CellEditorHandler","ConstraintHandler","Guide","ImageBox","GraphView","SelectionHandler","PanningHandler","TooltipHandler","SelectionCellsHandler","PopupMenuHandler","xmlUtils","Codec","contextMenuTypes","contextMenuValues","globalTypes","globalValues","rubberBandTypes","rubberBandValues","createGraphContainer","render","MyCustomGraph","MyCustomEdgeSegmentHandler","MyCustomGraphView","MyCustomConnectionHandler","MyCustomPanningHandler","MyCustomSelectionHandler","MyCustomEdgeHandler","MyCustomConstraintHandler","jsxDEV","_jsxDEV","YourComponent","_s","importFileInputRef","graphContainerRef","xmlText","setXmlText","graphInstance","setGraphInstance","variableFromEffect","setVariableFromEffect","graph","setGraph","current","graphContainer","newGraph","parentContainer","document","createElement","container","imageUrl","appendChild","joinNodeSize","strokeWidth","invert","MyCustomCellEditorHandler","style","backgroundColor","startEditing","cell","trigger","apply","arguments","textarea","color","ResistorShape","constructor","redrawPath","path","x","y","w","h","isForeground","dx","moveTo","lineTo","end","registerShape","WireConnector","state","source","target","hints","result","pts","absolutePoints","horizontal","hint","isEdge","sourceConstraint","portConstraint","direction","pt","view","getRoutingCenterX","getRoutingCenterY","clone","first","length","i","transformControlPoint","push","putValue","labelBackground","fontColor","strokeColor","fillColor","scale","setPanning","setConnectable","setConnectableEdges","setDisconnectOnMove","foldingEnabled","maximumGraphBounds","border","spacingLeft","setEnterStopsCellEditing","setTooltips","getStylesheet","getDefaultEdgeStyle","endArrow","labelBackgroundColor","edgeStyle","fontSize","movable","startSize","endSize","getDefaultVertexStyle","gradientDirection","fontStyle","resizable","rounded","btn1","getElementById","btn2","btn3","btn4","btn5","btn6","btn7","update","event","parent","getDefaultParent","doc","createXmlDocument","batchUpdate","targetId","id","v1","insertVertex","v11","shape","align","verticalAlign","routingCenterX","geometry","relative","offset","width","v12","value","insert","v15","spacingRight","v16","inputVertex","console","log","outputVertex","v17","v18","addEventListener","onclick","xml","getDataModel","export","blob","Blob","type","url","window","URL","createObjectURL","a","href","download","body","click","revokeObjectURL","zoomIn","zoomOut","undoManager","listener","sender","evt","undoableEditHappened","getProperty","addListener","UNDO","getView","undo","redo","removeCells","checkbox","checkbox2","setAttribute","checked","background","disableContextMenu","importButton","fileInput","onchange","handleFileImport","cells","getChildVertices","file","files","readXMLFile","xmlContent","loadGraphFromXml","ref","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","callback","reader","FileReader","onload","e","readAsText","error","node","parseXml","documentElement","model","beginUpdate","codec","decode","refresh","endUpdate","$RefreshReg$"],"sources":["D:/ospanel/domains/проекты open server/old/react/react-intro-main/src/components/GraphComponent.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nimport axios from 'axios';\nimport {\n  popup,\n  ModelXmlSerializer,\n  domUtils,\n  styleUtils,\n  mathUtils,\n  cloneUtils,\n  eventUtils,\n  Graph,\n  InternalEvent,\n  RubberBandHandler,\n  ConnectionHandler,\n  ConnectionConstraint,\n  Point,\n  CylinderShape,\n  CellRenderer,\n  DomHelpers,\n  EdgeStyle,\n  Rectangle,\n  EdgeHandler,\n  StyleRegistry,\n  EdgeSegmentHandler,\n  UndoManager,\n  CellEditorHandler,\n  ConstraintHandler,\n  Guide,\n  ImageBox,\n  GraphView,\n  SelectionHandler,\n  PanningHandler,\n  TooltipHandler,\n  SelectionCellsHandler,\n  PopupMenuHandler,\n  xmlUtils,\n  Codec,\n} from '@maxgraph/core';\n\nimport {\n  contextMenuTypes,\n  contextMenuValues,\n  globalTypes,\n  globalValues,\n  rubberBandTypes,\n  rubberBandValues,\n} from './shared/args.js';\n\nimport { createGraphContainer } from './shared/configure.js';\n\n// style required by RubberBand\nimport '@maxgraph/core/css/common.css';\n\nimport { render } from 'react-dom';\n\nimport {\n  MyCustomGraph, \n  MyCustomEdgeSegmentHandler, \n  MyCustomGraphView, \n  MyCustomConnectionHandler,  \n  MyCustomPanningHandler, \n  MyCustomSelectionHandler,\n  MyCustomEdgeHandler,\n  MyCustomConstraintHandler\n} from './MyCustomGraph.jsx';\n\n\nexport const YourComponent = () => {\n  const importFileInputRef = useRef(null);\n  const graphContainerRef = useRef(null);\n  const [xmlText, setXmlText] = useState('');\n  // Инициализируем переменную для graph\n  let [graphInstance, setGraphInstance] = useState(null);\n  let [variableFromEffect, setVariableFromEffect] = useState(null);\n\n  const [graph, setGraph] = useState(null);\n\n  useEffect(() => {\n    if (graphContainerRef.current) {\n    const graphContainer = graphContainerRef.current;\n    const newGraph = new Graph(graphContainerRef.current);\n    setGraph(newGraph); // Сохраняем граф в состояние\n\n   ////\n\n    \n    \n////\n    const parentContainer = document.createElement('div');\n    const container = createGraphContainer({\n      imageUrl: 'images/grid.gif'\n    });\n    parentContainer.appendChild(container);\n    //console.log({graph})\n      // Changes some default colors\n  // TODO Find a way of modifying globally or setting locally! See https://github.com/maxGraph/maxGraph/issues/192\n  //constants.SHADOWCOLOR = '#C0C0C0';\n\n  let joinNodeSize = 7;\n  let strokeWidth = 2;\n\n  // Switch for black background and bright styles\n  let invert = false;\n  let MyCustomCellEditorHandler;\n\n  if (!graphInstance) {\n    const newGraph = new MyCustomGraph(graphContainer, null, []);\n    setGraphInstance(newGraph);\n  }\n\n  if (invert) {\n    container.style.backgroundColor = 'black';\n\n    // White in-place editor text color\n    MyCustomCellEditorHandler = class extends CellEditorHandler {\n      startEditing(cell, trigger) {\n        super.startEditing.apply(this, arguments);\n\n        if (this.textarea != null) {\n          this.textarea.style.color = '#FFFFFF';\n        }\n      }\n    };\n  } else {\n    MyCustomCellEditorHandler = CellEditorHandler;\n  }\n\n  // Imlements a custom resistor shape. Direction currently ignored here.\n\n  class ResistorShape extends CylinderShape {\n    constructor() {\n      // TODO: The original didn't seem to call the super\n      super(null, null, null, null);\n    }\n\n    redrawPath(path, x, y, w, h, isForeground) {\n      let dx = w / 16;\n\n      if (isForeground) {\n        path.moveTo(0, h / 2);\n        path.lineTo(2 * dx, h / 2);\n        path.lineTo(3 * dx, 0);\n        path.lineTo(5 * dx, h);\n        path.lineTo(7 * dx, 0);\n        path.lineTo(9 * dx, h);\n        path.lineTo(11 * dx, 0);\n        path.lineTo(13 * dx, h);\n        path.lineTo(14 * dx, h / 2);\n        path.lineTo(16 * dx, h / 2);\n        path.end();\n      }\n    }\n  }\n\n  CellRenderer.registerShape('resistor', ResistorShape);\n\n  // Imlements a custom resistor shape. Direction currently ignored here.\n\n  EdgeStyle.WireConnector = function (state, source, target, hints, result) {\n    // Creates array of all way- and terminalpoints\n    let pts = state.absolutePoints;\n    let horizontal = true;\n    let hint = null;\n\n    // Gets the initial connection from the source terminal or edge\n    if (source != null && source.cell.isEdge()) {\n      horizontal = state.style.sourceConstraint == 'horizontal';\n    } else if (source != null) {\n      horizontal = source.style.portConstraint != 'vertical';\n\n      // Checks the direction of the shape and rotates\n      let direction = source.style.direction;\n\n      if (direction == 'north' || direction == 'south') {\n        horizontal = !horizontal;\n      }\n    }\n\n    // Adds the first point\n    // TODO: Should move along connected segment\n    let pt = pts[0];\n\n    if (pt == null && source != null) {\n      pt = new Point(\n        state.view.getRoutingCenterX(source),\n        state.view.getRoutingCenterY(source)\n      );\n    } else if (pt != null) {\n      pt = pt.clone();\n    }\n\n    let first = pt;\n\n    // Adds the waypoints\n    if (hints != null && hints.length > 0) {\n      // FIXME: First segment not movable\n      /*hint = state.view.transformControlPoint(state, hints[0]);\n      MaxLog.show();\n      MaxLog.debug(hints.length,'hints0.y='+hint.y, pt.y)\n\n      if (horizontal && Math.floor(hint.y) != Math.floor(pt.y))\n      {\n        MaxLog.show();\n        MaxLog.debug('add waypoint');\n\n        pt = new Point(pt.x, hint.y);\n        result.push(pt);\n        pt = pt.clone();\n        //horizontal = !horizontal;\n      }*/\n\n      for (let i = 0; i < hints.length; i++) {\n        horizontal = !horizontal;\n        hint = state.view.transformControlPoint(state, hints[i]);\n\n        if (horizontal) {\n          if (pt.y !== hint.y) {\n            pt.y = hint.y;\n            result.push(pt.clone());\n          }\n        } else if (pt.x !== hint.x) {\n          pt.x = hint.x;\n          result.push(pt.clone());\n        }\n      }\n    } else {\n      hint = pt;\n    }\n\n    // Adds the last point\n    pt = pts[pts.length - 1];\n\n    // TODO: Should move along connected segment\n    if (pt == null && target != null) {\n      pt = new Point(\n        state.view.getRoutingCenterX(target),\n        state.view.getRoutingCenterY(target)\n      );\n    }\n\n    if (horizontal) {\n      if (pt.y !== hint.y && first.x !== pt.x) {\n        result.push(new Point(pt.x, hint.y));\n      }\n    } else if (pt.x !== hint.x && first.y !== pt.y) {\n      result.push(new Point(hint.x, pt.y));\n    }\n  };\n\n  StyleRegistry.putValue('wireEdgeStyle', EdgeStyle.WireConnector);\n\n\n    let graph = new MyCustomGraph(container, null, [\n      MyCustomCellEditorHandler,\n      TooltipHandler,\n      SelectionCellsHandler,\n      PopupMenuHandler,\n      MyCustomConnectionHandler,\n      MyCustomSelectionHandler,\n      MyCustomPanningHandler,\n    ]);\n    setVariableFromEffect(graph);\n\n  let labelBackground = invert ? '#000000' : '#FFFFFF';\n  let fontColor = invert ? '#FFFFFF' : '#000000';\n  let strokeColor = invert ? '#C0C0C0' : '#000000';\n  let fillColor = invert ? 'none' : '#FFFFFF';\n\n  graph.view.scale = 1;\n  graph.setPanning(true);\n  graph.setConnectable(true);\n  graph.setConnectableEdges(true);\n  graph.setDisconnectOnMove(false);\n  graph.foldingEnabled = false;\n\n  //Maximum size\n  graph.maximumGraphBounds = new Rectangle(0, 0, 1000, 1000);\n  graph.border = 50;\n  graph.spacingLeft = 30;\n\n  // Enables return key to stop editing (use shift-enter for newlines)\n  graph.setEnterStopsCellEditing(true);\n\n  // Adds rubberband selection\n  new RubberBandHandler(graph);\n\n  // Adds a special tooltip for edges\n  graph.setTooltips(true);\n\n  let style = graph.getStylesheet().getDefaultEdgeStyle();\n  delete style.endArrow;\n  style.strokeColor = strokeColor;\n  style.labelBackgroundColor = labelBackground;\n  style.edgeStyle = 'wireEdgeStyle';\n  style.fontColor = fontColor;\n  style.fontSize = '9';\n  style.movable = '0';\n  style.strokeWidth = strokeWidth;\n  //style.rounded = '1';\n\n  // Sets join node size\n  style.startSize = joinNodeSize;\n  style.endSize = joinNodeSize;\n\n  style = graph.getStylesheet().getDefaultVertexStyle();\n  style.gradientDirection = 'south';\n  //style.gradientColor = '#909090';\n  style.strokeColor = strokeColor;\n  //style.fillColor = '#e0e0e0';\n  style.fillColor = 'none';\n  style.fontColor = fontColor;\n  style.fontStyle = '1';\n  style.fontSize = '12';\n  style.resizable = '0';\n  style.rounded = '1';\n  style.strokeWidth = strokeWidth;\n\n  // инородное дерьмо\n\n  const btn1 = document.getElementById('btn1');\n  const btn2 = document.getElementById('btn2');\n  const btn3 = document.getElementById('btn3');\n  const btn4 = document.getElementById('btn4');\n  const btn5 = document.getElementById('btn5');\n  const btn6 = document.getElementById('btn6');\n  const btn7 = document.getElementById('btn7');\n\n  const update = (event) => {\n    var parent = graph.getDefaultParent();\n    var doc = xmlUtils.createXmlDocument();\n    graph.batchUpdate(() => {\n      const targetId = event.target.id;\n      if (targetId === 'btn3') {\n        var v1 = graph.insertVertex(parent, null, '', 80, 40, 40, 80,\n          'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\n        v1.setConnectable(false);\n\n        var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16, {\n          shape: 'line',\n          align: 'left',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: 12,\n          fontColor,\n          strokeColor,\n        });\n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(-v11.geometry.width, 12);\n        var v12 = v11.clone();\n        v12.value = 'Y';\n        v12.geometry.offset = new Point(-v11.geometry.width, 52);\n        v1.insert(v12);\n        var v15 = v11.clone();\n        v15.value = '';\n        v15.geometry.x = 1;\n        v15.style = {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingRight: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        }\n\n        v15.geometry.offset = new Point(5, 32);\n        v1.insert(v15);\n\n        var v16 = graph.insertVertex(v1, null, '○', 0, 0, 0, 0, {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 30,\n          routingCenterX: 0.5,\n          spacingLeft: 6,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        });\n        v16.geometry.x = 1;\n        v16.geometry.offset = new Point(49, 34);\n        v1.insert(v16);\n      }\n        else if (targetId === 'btn6') {\n        var inputVertex = graph.insertVertex(parent, null, 'вход', 80, 40, 40, 80, {\n          shape: 'ellipse',\n          fillColor: 'green',\n          fontColor: 'white',\n          strokeColor: 'black'\n        });\n        inputVertex.setConnectable(true);\n        console.log(\"blyaa\")\n      } \n      else if (targetId === 'btn7') {\n        var outputVertex = graph.insertVertex(parent, null, 'Выход', 80, 40, 40, 80, {\n          shape: 'ellipse',\n          fillColor: 'red',\n          fontColor: 'white',\n          strokeColor: 'black'\n        });\n        outputVertex.setConnectable(true);\n      } else if (targetId === 'btn1') {\n        var v1 = graph.insertVertex(parent, null, '', 180, 40, 40, 80,\n          'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\n        v1.setConnectable(false);\n\n        var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16, {\n          shape: 'line',\n          align: 'left',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        });\n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(-v11.geometry.width, 12);\n        var v12 = v11.clone();\n        v12.value = 'Y';\n        v12.geometry.offset = new Point(-v11.geometry.width, 52);\n        v1.insert(v12);\n        var v15 = v11.clone();\n        v15.value = '';\n        v15.geometry.x = 1;\n        v15.style = {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingRight: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        };\n        v15.geometry.offset = new Point(0, 32);\n        v1.insert(v15);\n\n        var v16 = graph.insertVertex(v1, null, '&', 0, 0, 0, 0, {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 20,\n          routingCenterX: 0.5,\n          spacingLeft: 6,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        });\n        v16.geometry.x = 1;\n        v16.geometry.offset = new Point(28.5, 37);\n        v1.insert(v16);\n      } else if (targetId === 'btn2') {\n        var v1 = graph.insertVertex(parent, null, '', 250, 40, 40, 80,\n          'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\n        v1.setConnectable(false);\n\n        var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16, {\n          shape: 'line',\n          align: 'left',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        });\n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(-v11.geometry.width, 12);\n        var v12 = v11.clone();\n        v12.value = 'Y';\n        v12.geometry.offset = new Point(-v11.geometry.width, 52);\n        v1.insert(v12);\n        var v15 = v11.clone();\n        v15.value = '';\n        v15.geometry.x = 1;\n        v15.style = {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingRight: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        };\n        v15.geometry.offset = new Point(0, 32);\n        v1.insert(v15);\n\n        var v16 = graph.insertVertex(v1, null, '|', 0, 0, 0, 0, {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 20,\n          routingCenterX: 0.5,\n          spacingLeft: 6,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        });\n        v16.geometry.x = 1;\n        v16.geometry.offset = new Point(24, 37);\n        v1.insert(v16);\n      } else if (targetId === 'btn5') {\n        var v1 = graph.insertVertex(parent, null, '', 180, 140, 40, 80,\n          'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\n        v1.setConnectable(false);\n\n        var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16, {\n          shape: 'line',\n          align: 'left',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        });\n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(-v11.geometry.width, 12);\n        var v12 = v11.clone();\n        v12.value = 'Y';\n        v12.geometry.offset = new Point(-v11.geometry.width, 52);\n        v1.insert(v12);\n        var v15 = v11.clone();\n        v15.value = '';\n        v15.geometry.x = 1;\n        v15.style = {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingRight: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        };\n        v15.geometry.offset = new Point(0, 32);\n        v1.insert(v15);\n\n        var v16 = graph.insertVertex(v1, null, '==', 0, 0, 0, 0, {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 15,\n          routingCenterX: 0.5,\n          spacingLeft: 6,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        });\n        v16.geometry.x = 1;\n        v16.geometry.offset = new Point(30, 38);\n        v1.insert(v16);\n      } else if (targetId === 'btn4') {\n        var v1 = graph.insertVertex(parent, null, '', 80, 140, 40, 80,\n          'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\n        v1.setConnectable(false);\n\n        var v11 = graph.insertVertex(v1, null, '', 0, 0, 14, 16, {\n          shape: 'line',\n          align: 'left',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        });\n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(-v11.geometry.width, 12);\n        var v12 = v11.clone();\n        v12.value = '';\n        v12.geometry.offset = new Point(-v11.geometry.width, 52);\n        v1.insert(v12);\n        var v15 = v11.clone();\n        v15.value = '';\n        v15.geometry.x = 1;\n        v15.style = {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingRight: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        };\n        v15.geometry.offset = new Point(0, 32);\n        v1.insert(v15);\n\n        var v16 = graph.insertVertex(v1, null, '○', 0, 0, 0, 0, {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 25,\n          routingCenterX: 0.5,\n          spacingLeft: 6,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        });\n        v16.geometry.x = 1;\n        v16.geometry.offset = new Point(8, 15);\n        v1.insert(v16);\n        var v17 = graph.insertVertex(v1, null, 'X', 0, 0, 0, 0, {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingLeft: 6,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        });\n        v17.geometry.x = 1;\n        v17.geometry.offset = new Point(14, 20);\n        v1.insert(v17);\n        var v18 = graph.insertVertex(v1, null, 'Y', 0, 0, 0, 0, {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingLeft: 6,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        });\n        v18.geometry.x = 1;\n        v18.geometry.offset = new Point(14, 59);\n        v1.insert(v18);\n      }\n    });\n  };\n\n\n  btn1.addEventListener('click', update);\n  btn2.addEventListener('click', update);\n  btn3.addEventListener('click', update);\n  btn4.addEventListener('click', update);\n  btn5.addEventListener('click', update);\n  btn6.addEventListener('click', update);\n  btn7.addEventListener('click', update);\n\n\n  ////////////////////////////////////////////////////////\n// XML \n\ndocument.getElementById(\"xml\").onclick = () => {\n  // Получаем XML данные\n  console.log(graph);\n  const xml = new ModelXmlSerializer(graph.getDataModel()).export();\n  \n  // Создаем новый Blob объект с XML данными\n  const blob = new Blob([xml], { type: 'text/xml' });\n  \n  // Создаем ссылку на Blob объект\n  const url = window.URL.createObjectURL(blob);\n  \n  // Создаем ссылку для скачивания\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = 'data.xml'; // Имя файла для скачивания\n  document.body.appendChild(a);\n  \n  // Инициируем скачивание файла\n  a.click();\n  \n  // Освобождаем ресурсы\n  window.URL.revokeObjectURL(url);\n};\n\n\n\n\n\n\n\n\n\n///////////////////////////////////////////////////////////\n\n\n    document.getElementById(\"zoom\").onclick = () => graph.zoomIn();\n    document.getElementById(\"zoomout\").onclick = () => graph.zoomOut();\n\n  // Undo/redo\n  let undoManager = new UndoManager();\n  let listener = function (sender, evt) {\n    undoManager.undoableEditHappened(evt.getProperty('edit'));\n  };\n  graph.getDataModel().addListener(InternalEvent.UNDO, listener);\n  graph.getView().addListener(InternalEvent.UNDO, listener);\n\n  document.getElementById(\"undo\").onclick = () => undoManager.undo();\n  document.getElementById(\"redo\").onclick = () => undoManager.redo();\n\n\n  document.getElementById(\"delete\").onclick = () => graph.removeCells();\n\n  // Wire-mode\n  let checkbox = document.getElementById(\"wire\");\n\n  // Grid\n  let checkbox2 = document.getElementById(\"grid\");\n  checkbox2.setAttribute('checked', 'true');\n\n\n  InternalEvent.addListener(checkbox2, 'click', function (evt) {\n    if (checkbox2.checked) {\n      container.style.background = 'url(./images/grid.gif)';\n    } else {\n      container.style.background = '';\n    }\n    container.style.backgroundColor = invert ? 'black' : 'white';\n  });\n  InternalEvent.disableContextMenu(container);\n\n\n    graphContainer.appendChild(parentContainer);\n\n\n    const importButton = document.getElementById(\"import\");\n    importButton.onclick = () => {\n      console.log(graph);\n      const fileInput = document.getElementById(\"importFileInput\");\n      console.log(fileInput);\n      if (fileInput) {\n        // Добавляем обработчик события onchange\n        fileInput.onchange = function(event) {\n          handleFileImport(event);  // Вызываем твою функцию handleFileImport\n        };\n        fileInput.click();  // Открываем диалог выбора файла\n        console.log(\"клик\");\n      } else {\n        console.log(\"fileInput не найден!\");\n      }\n    };\n  \n}\n  \n  \nfunction handleFileImport(event) {\n  console.log(\"blyaaa\");\n    // Очищаем граф перед загрузкой новой схемы\n    console.log(graph);\n    const cells = graph.getChildVertices(graph.getDefaultParent()); // Получаем все элементы (узлы и рёбра) графа\n    graph.removeCells(cells, true); // Удаляем все элементы, включая рёбра\n    \n  const file = event.target.files[0];\n  if (file) {\n    // Вызов функции readXMLFile\n    readXMLFile(file, function(xmlContent) {\n      console.log('Файл импортирован: ', xmlContent); // Работаем с содержимым файла\n      loadGraphFromXml(xmlContent, graph); // Загружаем граф из XML\n    });\n  } else {\n    console.log(\"Файл не выбран!\");\n  }\n}\n\n\n    return () => {\n      // Clean up if needed\n    }; \n  }, []);\n\n\n\n  return (\n      <div ref={graphContainerRef} style={{ width: '100%', height: '100%' }} />\n  );\n  \n};\n\n\n// Функция чтения XML файла\nfunction readXMLFile(file, callback) {\n  const reader = new FileReader();\n  reader.onload = function(e) {\n    const xmlContent = e.target.result;\n    callback(xmlContent);  // Передаем результат чтения в коллбэк\n  };\n  reader.readAsText(file);  // Читаем файл как текст\n}\n\n// Функция для загрузки графа из XML\nconst loadGraphFromXml = (xml, graph) => {\n  if (!graph) {\n    console.error(\"Граф не инициализирован!\"); // Логируем ошибку\n    const newGraph = new Graph(graphContainerRef.current);\n    setGraph(newGraph);\n  }\n\n  // Преобразуем текст XML в DOM элемент\n  const node = xmlUtils.parseXml(xml).documentElement;\n\n\n\n  // Очищаем текущую модель графа и начинаем транзакцию обновления\n  graph.model.beginUpdate();\n  try {\n    const codec = new Codec();  // Создаем кодек для декодирования XML\n    codec.decode(node, graph.model);  // Декодируем XML и загружаем в модель графа\n    graph.refresh();  // Обновляем отображение графа\n  } finally {\n    graph.model.endUpdate();  // Завершаем транзакцию\n    graph.refresh();  // Принудительно обновляем граф после декодирования\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
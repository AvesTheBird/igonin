{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Point from '../../geometry/Point';\nimport { intersection } from '../../../util/mathUtils';\nexport const RhombusPerimeter = (bounds, _vertex, next, orthogonal = false) => {\n  const {\n    x\n  } = bounds;\n  const {\n    y\n  } = bounds;\n  const w = bounds.width;\n  const h = bounds.height;\n  const cx = x + w / 2;\n  const cy = y + h / 2;\n  const px = next.x;\n  const py = next.y;\n  // Special case for intersecting the diamond's corners\n  if (cx === px) {\n    if (cy > py) {\n      return new Point(cx, y); // top\n    }\n    return new Point(cx, y + h); // bottom\n  }\n  if (cy === py) {\n    if (cx > px) {\n      return new Point(x, cy); // left\n    }\n    return new Point(x + w, cy); // right\n  }\n  let tx = cx;\n  let ty = cy;\n  if (orthogonal) {\n    if (px >= x && px <= x + w) {\n      tx = px;\n    } else if (py >= y && py <= y + h) {\n      ty = py;\n    }\n  }\n  // In which quadrant will the intersection be?\n  // set the slope and offset of the border line accordingly\n  if (px < cx) {\n    if (py < cy) {\n      return intersection(px, py, tx, ty, cx, y, x, cy);\n    }\n    return intersection(px, py, tx, ty, cx, y + h, x, cy);\n  }\n  if (py < cy) {\n    return intersection(px, py, tx, ty, cx, y, x + w, cy);\n  }\n  return intersection(px, py, tx, ty, cx, y + h, x + w, cy);\n};","map":{"version":3,"names":["Point","intersection","RhombusPerimeter","bounds","_vertex","next","orthogonal","x","y","w","width","h","height","cx","cy","px","py","tx","ty"],"sources":["D:/ospanel/domains/old/react/react-intro/node_modules/@maxgraph/core/dist/view/style/perimeter/RhombusPerimeter.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Point from '../../geometry/Point';\nimport { intersection } from '../../../util/mathUtils';\nexport const RhombusPerimeter = (bounds, _vertex, next, orthogonal = false) => {\n    const { x } = bounds;\n    const { y } = bounds;\n    const w = bounds.width;\n    const h = bounds.height;\n    const cx = x + w / 2;\n    const cy = y + h / 2;\n    const px = next.x;\n    const py = next.y;\n    // Special case for intersecting the diamond's corners\n    if (cx === px) {\n        if (cy > py) {\n            return new Point(cx, y); // top\n        }\n        return new Point(cx, y + h); // bottom\n    }\n    if (cy === py) {\n        if (cx > px) {\n            return new Point(x, cy); // left\n        }\n        return new Point(x + w, cy); // right\n    }\n    let tx = cx;\n    let ty = cy;\n    if (orthogonal) {\n        if (px >= x && px <= x + w) {\n            tx = px;\n        }\n        else if (py >= y && py <= y + h) {\n            ty = py;\n        }\n    }\n    // In which quadrant will the intersection be?\n    // set the slope and offset of the border line accordingly\n    if (px < cx) {\n        if (py < cy) {\n            return intersection(px, py, tx, ty, cx, y, x, cy);\n        }\n        return intersection(px, py, tx, ty, cx, y + h, x, cy);\n    }\n    if (py < cy) {\n        return intersection(px, py, tx, ty, cx, y, x + w, cy);\n    }\n    return intersection(px, py, tx, ty, cx, y + h, x + w, cy);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,sBAAsB;AACxC,SAASC,YAAY,QAAQ,yBAAyB;AACtD,OAAO,MAAMC,gBAAgB,GAAGA,CAACC,MAAM,EAAEC,OAAO,EAAEC,IAAI,EAAEC,UAAU,GAAG,KAAK,KAAK;EAC3E,MAAM;IAAEC;EAAE,CAAC,GAAGJ,MAAM;EACpB,MAAM;IAAEK;EAAE,CAAC,GAAGL,MAAM;EACpB,MAAMM,CAAC,GAAGN,MAAM,CAACO,KAAK;EACtB,MAAMC,CAAC,GAAGR,MAAM,CAACS,MAAM;EACvB,MAAMC,EAAE,GAAGN,CAAC,GAAGE,CAAC,GAAG,CAAC;EACpB,MAAMK,EAAE,GAAGN,CAAC,GAAGG,CAAC,GAAG,CAAC;EACpB,MAAMI,EAAE,GAAGV,IAAI,CAACE,CAAC;EACjB,MAAMS,EAAE,GAAGX,IAAI,CAACG,CAAC;EACjB;EACA,IAAIK,EAAE,KAAKE,EAAE,EAAE;IACX,IAAID,EAAE,GAAGE,EAAE,EAAE;MACT,OAAO,IAAIhB,KAAK,CAACa,EAAE,EAAEL,CAAC,CAAC,CAAC,CAAC;IAC7B;IACA,OAAO,IAAIR,KAAK,CAACa,EAAE,EAAEL,CAAC,GAAGG,CAAC,CAAC,CAAC,CAAC;EACjC;EACA,IAAIG,EAAE,KAAKE,EAAE,EAAE;IACX,IAAIH,EAAE,GAAGE,EAAE,EAAE;MACT,OAAO,IAAIf,KAAK,CAACO,CAAC,EAAEO,EAAE,CAAC,CAAC,CAAC;IAC7B;IACA,OAAO,IAAId,KAAK,CAACO,CAAC,GAAGE,CAAC,EAAEK,EAAE,CAAC,CAAC,CAAC;EACjC;EACA,IAAIG,EAAE,GAAGJ,EAAE;EACX,IAAIK,EAAE,GAAGJ,EAAE;EACX,IAAIR,UAAU,EAAE;IACZ,IAAIS,EAAE,IAAIR,CAAC,IAAIQ,EAAE,IAAIR,CAAC,GAAGE,CAAC,EAAE;MACxBQ,EAAE,GAAGF,EAAE;IACX,CAAC,MACI,IAAIC,EAAE,IAAIR,CAAC,IAAIQ,EAAE,IAAIR,CAAC,GAAGG,CAAC,EAAE;MAC7BO,EAAE,GAAGF,EAAE;IACX;EACJ;EACA;EACA;EACA,IAAID,EAAE,GAAGF,EAAE,EAAE;IACT,IAAIG,EAAE,GAAGF,EAAE,EAAE;MACT,OAAOb,YAAY,CAACc,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEL,EAAE,EAAEL,CAAC,EAAED,CAAC,EAAEO,EAAE,CAAC;IACrD;IACA,OAAOb,YAAY,CAACc,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEL,EAAE,EAAEL,CAAC,GAAGG,CAAC,EAAEJ,CAAC,EAAEO,EAAE,CAAC;EACzD;EACA,IAAIE,EAAE,GAAGF,EAAE,EAAE;IACT,OAAOb,YAAY,CAACc,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEL,EAAE,EAAEL,CAAC,EAAED,CAAC,GAAGE,CAAC,EAAEK,EAAE,CAAC;EACzD;EACA,OAAOb,YAAY,CAACc,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEL,EAAE,EAAEL,CAAC,GAAGG,CAAC,EAAEJ,CAAC,GAAGE,CAAC,EAAEK,EAAE,CAAC;AAC7D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Shape from '../Shape';\n/**\n * Extends {@link Shape} to implement a horizontal line shape.\n * This shape is registered under {@link mxConstants.SHAPE_LINE} in {@link mxCellRenderer}.\n * @class Line\n * @extends {Shape}\n */\nclass LineShape extends Shape {\n  constructor(bounds, stroke, strokeWidth = 1, vertical = false) {\n    super();\n    this.bounds = bounds;\n    this.stroke = stroke;\n    this.strokeWidth = strokeWidth;\n    this.vertical = vertical;\n  }\n  /**\n   * Redirects to redrawPath for subclasses to work.\n   * @param {AbstractCanvas2D} c\n   * @param {number} x\n   * @param {number} y\n   * @param {number} w\n   * @param {number} h\n   */\n  paintVertexShape(c, x, y, w, h) {\n    c.begin();\n    if (this.vertical) {\n      const mid = x + w / 2;\n      c.moveTo(mid, y);\n      c.lineTo(mid, y + h);\n    } else {\n      const mid = y + h / 2;\n      c.moveTo(x, mid);\n      c.lineTo(x + w, mid);\n    }\n    c.stroke();\n  }\n}\nexport default LineShape;","map":{"version":3,"names":["Shape","LineShape","constructor","bounds","stroke","strokeWidth","vertical","paintVertexShape","c","x","y","w","h","begin","mid","moveTo","lineTo"],"sources":["D:/OSPanel/domains/react/react-intro-main/node_modules/@maxgraph/core/dist/view/geometry/edge/LineShape.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport Shape from '../Shape';\n/**\n * Extends {@link Shape} to implement a horizontal line shape.\n * This shape is registered under {@link mxConstants.SHAPE_LINE} in {@link mxCellRenderer}.\n * @class Line\n * @extends {Shape}\n */\nclass LineShape extends Shape {\n    constructor(bounds, stroke, strokeWidth = 1, vertical = false) {\n        super();\n        this.bounds = bounds;\n        this.stroke = stroke;\n        this.strokeWidth = strokeWidth;\n        this.vertical = vertical;\n    }\n    /**\n     * Redirects to redrawPath for subclasses to work.\n     * @param {AbstractCanvas2D} c\n     * @param {number} x\n     * @param {number} y\n     * @param {number} w\n     * @param {number} h\n     */\n    paintVertexShape(c, x, y, w, h) {\n        c.begin();\n        if (this.vertical) {\n            const mid = x + w / 2;\n            c.moveTo(mid, y);\n            c.lineTo(mid, y + h);\n        }\n        else {\n            const mid = y + h / 2;\n            c.moveTo(x, mid);\n            c.lineTo(x + w, mid);\n        }\n        c.stroke();\n    }\n}\nexport default LineShape;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,SAAS,SAASD,KAAK,CAAC;EAC1BE,WAAWA,CAACC,MAAM,EAAEC,MAAM,EAAEC,WAAW,GAAG,CAAC,EAAEC,QAAQ,GAAG,KAAK,EAAE;IAC3D,KAAK,CAAC,CAAC;IACP,IAAI,CAACH,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC5B;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,gBAAgBA,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;IAC5BJ,CAAC,CAACK,KAAK,CAAC,CAAC;IACT,IAAI,IAAI,CAACP,QAAQ,EAAE;MACf,MAAMQ,GAAG,GAAGL,CAAC,GAAGE,CAAC,GAAG,CAAC;MACrBH,CAAC,CAACO,MAAM,CAACD,GAAG,EAAEJ,CAAC,CAAC;MAChBF,CAAC,CAACQ,MAAM,CAACF,GAAG,EAAEJ,CAAC,GAAGE,CAAC,CAAC;IACxB,CAAC,MACI;MACD,MAAME,GAAG,GAAGJ,CAAC,GAAGE,CAAC,GAAG,CAAC;MACrBJ,CAAC,CAACO,MAAM,CAACN,CAAC,EAAEK,GAAG,CAAC;MAChBN,CAAC,CAACQ,MAAM,CAACP,CAAC,GAAGE,CAAC,EAAEG,GAAG,CAAC;IACxB;IACAN,CAAC,CAACJ,MAAM,CAAC,CAAC;EACd;AACJ;AACA,eAAeH,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
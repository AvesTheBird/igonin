{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport ObjectCodec from '../ObjectCodec';\nimport { isNode } from '../../util/domUtils';\n/**\n * Codec for {@link ValueChange}s, {@link StyleChange}s, {@link GeometryChange}s, {@link CollapseChange}s and {@link VisibleChange}s.\n *\n * This class is created and registered dynamically at load time and used implicitly via {@link Codec} and the {@link CodecRegistry}.\n *\n * Transient Fields:\n *\n * - model\n * - previous\n *\n * Reference Fields:\n *\n * - cell\n */\nexport class GenericChangeCodec extends ObjectCodec {\n  /**\n   *\n   * @param obj An instance of the change object.\n   * @param variable The field name for the change data.\n   */\n  constructor(obj, variable) {\n    super(obj, ['model', 'previous'], ['cell']);\n    this.variable = variable;\n  }\n  /**\n   * Restores the state by assigning the previous value.\n   */\n  afterDecode(dec, _node, obj) {\n    // Allows forward references in sessions. This is a workaround\n    // for the sequence of edits in mxGraph.moveCells and cellsAdded.\n    if (isNode(obj.cell)) {\n      obj.cell = dec.decodeCell(obj.cell, false);\n    }\n    obj.previous = obj[this.variable];\n    return obj;\n  }\n}","map":{"version":3,"names":["ObjectCodec","isNode","GenericChangeCodec","constructor","obj","variable","afterDecode","dec","_node","cell","decodeCell","previous"],"sources":["D:/ospanel/domains/old/react/react-intro-main/node_modules/@maxgraph/core/dist/serialization/codecs/GenericChangeCodec.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport ObjectCodec from '../ObjectCodec';\nimport { isNode } from '../../util/domUtils';\n/**\n * Codec for {@link ValueChange}s, {@link StyleChange}s, {@link GeometryChange}s, {@link CollapseChange}s and {@link VisibleChange}s.\n *\n * This class is created and registered dynamically at load time and used implicitly via {@link Codec} and the {@link CodecRegistry}.\n *\n * Transient Fields:\n *\n * - model\n * - previous\n *\n * Reference Fields:\n *\n * - cell\n */\nexport class GenericChangeCodec extends ObjectCodec {\n    /**\n     *\n     * @param obj An instance of the change object.\n     * @param variable The field name for the change data.\n     */\n    constructor(obj, variable) {\n        super(obj, ['model', 'previous'], ['cell']);\n        this.variable = variable;\n    }\n    /**\n     * Restores the state by assigning the previous value.\n     */\n    afterDecode(dec, _node, obj) {\n        // Allows forward references in sessions. This is a workaround\n        // for the sequence of edits in mxGraph.moveCells and cellsAdded.\n        if (isNode(obj.cell)) {\n            obj.cell = dec.decodeCell(obj.cell, false);\n        }\n        obj.previous = obj[this.variable];\n        return obj;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,WAAW,MAAM,gBAAgB;AACxC,SAASC,MAAM,QAAQ,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,kBAAkB,SAASF,WAAW,CAAC;EAChD;AACJ;AACA;AACA;AACA;EACIG,WAAWA,CAACC,GAAG,EAAEC,QAAQ,EAAE;IACvB,KAAK,CAACD,GAAG,EAAE,CAAC,OAAO,EAAE,UAAU,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;IAC3C,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC5B;EACA;AACJ;AACA;EACIC,WAAWA,CAACC,GAAG,EAAEC,KAAK,EAAEJ,GAAG,EAAE;IACzB;IACA;IACA,IAAIH,MAAM,CAACG,GAAG,CAACK,IAAI,CAAC,EAAE;MAClBL,GAAG,CAACK,IAAI,GAAGF,GAAG,CAACG,UAAU,CAACN,GAAG,CAACK,IAAI,EAAE,KAAK,CAAC;IAC9C;IACAL,GAAG,CAACO,QAAQ,GAAGP,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC;IACjC,OAAOD,GAAG;EACd;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
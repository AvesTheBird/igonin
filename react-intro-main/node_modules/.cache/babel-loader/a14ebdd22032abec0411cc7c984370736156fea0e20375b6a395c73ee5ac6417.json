{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Class: MedianCellSorter\n *\n * A utility class used to track cells whilst sorting occurs on the median\n * values. Does not violate (x.compareTo(y)==0) == (x.equals(y))\n *\n * Constructor: MedianCellSorter\n *\n * Constructs a new median cell sorter.\n */\nclass MedianCellSorter {\n  constructor() {\n    /**\n     * The weighted value of the cell stored.\n     */\n    this.medianValue = 0;\n    /**\n     * The cell whose median value is being calculated\n     */\n    this.cell = false;\n    // empty\n  }\n  /**\n   * Compares two MedianCellSorters.\n   */\n  compare(a, b) {\n    if (a != null && b != null) {\n      if (b.medianValue > a.medianValue) {\n        return -1;\n      }\n      if (b.medianValue < a.medianValue) {\n        return 1;\n      }\n      return 0;\n    }\n    return 0;\n  }\n}\nexport default MedianCellSorter;","map":{"version":3,"names":["MedianCellSorter","constructor","medianValue","cell","compare","a","b"],"sources":["D:/ospanel/domains/old/react/react-intro-main/node_modules/@maxgraph/core/dist/view/layout/util/MedianCellSorter.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Class: MedianCellSorter\n *\n * A utility class used to track cells whilst sorting occurs on the median\n * values. Does not violate (x.compareTo(y)==0) == (x.equals(y))\n *\n * Constructor: MedianCellSorter\n *\n * Constructs a new median cell sorter.\n */\nclass MedianCellSorter {\n    constructor() {\n        /**\n         * The weighted value of the cell stored.\n         */\n        this.medianValue = 0;\n        /**\n         * The cell whose median value is being calculated\n         */\n        this.cell = false;\n        // empty\n    }\n    /**\n     * Compares two MedianCellSorters.\n     */\n    compare(a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n            return 0;\n        }\n        return 0;\n    }\n}\nexport default MedianCellSorter;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,gBAAgB,CAAC;EACnBC,WAAWA,CAAA,EAAG;IACV;AACR;AACA;IACQ,IAAI,CAACC,WAAW,GAAG,CAAC;IACpB;AACR;AACA;IACQ,IAAI,CAACC,IAAI,GAAG,KAAK;IACjB;EACJ;EACA;AACJ;AACA;EACIC,OAAOA,CAACC,CAAC,EAAEC,CAAC,EAAE;IACV,IAAID,CAAC,IAAI,IAAI,IAAIC,CAAC,IAAI,IAAI,EAAE;MACxB,IAAIA,CAAC,CAACJ,WAAW,GAAGG,CAAC,CAACH,WAAW,EAAE;QAC/B,OAAO,CAAC,CAAC;MACb;MACA,IAAII,CAAC,CAACJ,WAAW,GAAGG,CAAC,CAACH,WAAW,EAAE;QAC/B,OAAO,CAAC;MACZ;MACA,OAAO,CAAC;IACZ;IACA,OAAO,CAAC;EACZ;AACJ;AACA,eAAeF,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
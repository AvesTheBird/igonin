{"ast":null,"code":"'use strict';\n\nfunction parseConfig(source, lane) {\n  function tonumber(x) {\n    return x > 0 ? Math.round(x) : 1;\n  }\n  lane.hscale = 1;\n  if (lane.hscale0) {\n    lane.hscale = lane.hscale0;\n  }\n  if (source && source.config && source.config.hscale) {\n    let hscale = Math.round(tonumber(source.config.hscale));\n    if (hscale > 0) {\n      if (hscale > 100) {\n        hscale = 100;\n      }\n      lane.hscale = hscale;\n    }\n  }\n  lane.yh0 = 0;\n  lane.yh1 = 0;\n  lane.head = source.head;\n  lane.xmin_cfg = 0;\n  lane.xmax_cfg = 1e12; // essentially infinity\n  if (source && source.config && source.config.hbounds && source.config.hbounds.length == 2) {\n    source.config.hbounds[0] = Math.floor(source.config.hbounds[0]);\n    source.config.hbounds[1] = Math.ceil(source.config.hbounds[1]);\n    if (source.config.hbounds[0] < source.config.hbounds[1]) {\n      // convert hbounds ticks min, max to bricks min, max\n      // TODO: do we want to base this on ticks or tocks in\n      //  head or foot?  All 4 can be different... or just 0 reference?\n      lane.xmin_cfg = 2 * Math.floor(source.config.hbounds[0]);\n      lane.xmax_cfg = 2 * Math.floor(source.config.hbounds[1]);\n    }\n  }\n  if (source && source.head) {\n    if (source.head.tick || source.head.tick === 0 || source.head.tock || source.head.tock === 0) {\n      lane.yh0 = 20;\n    }\n    // if tick defined, modify start tick by lane.xmin_cfg\n    if (source.head.tick || source.head.tick === 0) {\n      source.head.tick = source.head.tick + lane.xmin_cfg / 2;\n    }\n    // if tock defined, modify start tick by lane.xmin_cfg\n    if (source.head.tock || source.head.tock === 0) {\n      source.head.tock = source.head.tock + lane.xmin_cfg / 2;\n    }\n    if (source.head.text) {\n      lane.yh1 = 46;\n      lane.head.text = source.head.text;\n    }\n  }\n  lane.yf0 = 0;\n  lane.yf1 = 0;\n  lane.foot = source.foot;\n  if (source && source.foot) {\n    if (source.foot.tick || source.foot.tick === 0 || source.foot.tock || source.foot.tock === 0) {\n      lane.yf0 = 20;\n    }\n    // if tick defined, modify start tick by lane.xmin_cfg\n    if (source.foot.tick || source.foot.tick === 0) {\n      source.foot.tick = source.foot.tick + lane.xmin_cfg / 2;\n    }\n    // if tock defined, modify start tick by lane.xmin_cfg\n    if (source.foot.tock || source.foot.tock === 0) {\n      source.foot.tock = source.foot.tock + lane.xmin_cfg / 2;\n    }\n    if (source.foot.text) {\n      lane.yf1 = 46;\n      lane.foot.text = source.foot.text;\n    }\n  }\n} /* eslint complexity: [1, 40] */\n\nmodule.exports = parseConfig;","map":{"version":3,"names":["parseConfig","source","lane","tonumber","x","Math","round","hscale","hscale0","config","yh0","yh1","head","xmin_cfg","xmax_cfg","hbounds","length","floor","ceil","tick","tock","text","yf0","yf1","foot","module","exports"],"sources":["D:/ospanel/domains/react/react-intro-main/node_modules/wavedrom/lib/parse-config.js"],"sourcesContent":["'use strict';\n\nfunction parseConfig (source, lane) {\n    function tonumber (x) {\n        return x > 0 ? Math.round(x) : 1;\n    }\n\n    lane.hscale = 1;\n\n    if (lane.hscale0) {\n        lane.hscale = lane.hscale0;\n    }\n    if (source && source.config && source.config.hscale) {\n        let hscale = Math.round(tonumber(source.config.hscale));\n        if (hscale > 0) {\n            if (hscale > 100) {\n                hscale = 100;\n            }\n            lane.hscale = hscale;\n        }\n    }\n    lane.yh0 = 0;\n    lane.yh1 = 0;\n    lane.head = source.head;\n\n    lane.xmin_cfg = 0;\n    lane.xmax_cfg = 1e12; // essentially infinity\n    if (source && source.config && source.config.hbounds && source.config.hbounds.length==2) {\n        source.config.hbounds[0] = Math.floor(source.config.hbounds[0]);\n        source.config.hbounds[1] = Math.ceil(source.config.hbounds[1]);\n        if (  source.config.hbounds[0] < source.config.hbounds[1] ) {\n            // convert hbounds ticks min, max to bricks min, max\n            // TODO: do we want to base this on ticks or tocks in\n            //  head or foot?  All 4 can be different... or just 0 reference?\n            lane.xmin_cfg = 2 * Math.floor(source.config.hbounds[0]);\n            lane.xmax_cfg = 2 * Math.floor(source.config.hbounds[1]);\n        }\n    }\n\n    if (source && source.head) {\n        if (\n            source.head.tick || source.head.tick === 0 ||\n            source.head.tock || source.head.tock === 0\n        ) {\n            lane.yh0 = 20;\n        }\n        // if tick defined, modify start tick by lane.xmin_cfg\n        if ( source.head.tick || source.head.tick === 0 ) {\n            source.head.tick = source.head.tick + lane.xmin_cfg/2;\n        }\n        // if tock defined, modify start tick by lane.xmin_cfg\n        if ( source.head.tock || source.head.tock === 0 ) {\n            source.head.tock = source.head.tock + lane.xmin_cfg/2;\n        }\n\n        if (source.head.text) {\n            lane.yh1 = 46;\n            lane.head.text = source.head.text;\n        }\n    }\n\n    lane.yf0 = 0;\n    lane.yf1 = 0;\n    lane.foot = source.foot;\n    if (source && source.foot) {\n        if (\n            source.foot.tick || source.foot.tick === 0 ||\n            source.foot.tock || source.foot.tock === 0\n        ) {\n            lane.yf0 = 20;\n        }\n        // if tick defined, modify start tick by lane.xmin_cfg\n        if ( source.foot.tick || source.foot.tick === 0 ) {\n            source.foot.tick = source.foot.tick + lane.xmin_cfg/2;\n        }\n        // if tock defined, modify start tick by lane.xmin_cfg\n        if ( source.foot.tock || source.foot.tock === 0 ) {\n            source.foot.tock = source.foot.tock + lane.xmin_cfg/2;\n        }\n\n        if (source.foot.text) {\n            lane.yf1 = 46;\n            lane.foot.text = source.foot.text;\n        }\n    }\n} /* eslint complexity: [1, 40] */\n\nmodule.exports = parseConfig;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as DOM from '../../dom.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { ActionViewItem, BaseActionViewItem } from './actionViewItems.js';\nimport { createInstantHoverDelegate } from '../hover/hoverDelegateFactory.js';\nimport { ActionRunner, Separator } from '../../../common/actions.js';\nimport { Emitter } from '../../../common/event.js';\nimport { Disposable, DisposableMap, DisposableStore, dispose } from '../../../common/lifecycle.js';\nimport * as types from '../../../common/types.js';\nimport './actionbar.css';\nexport class ActionBar extends Disposable {\n  constructor(container) {\n    var _options$context, _this$options$orienta, _this$options$trigger, _this$options$trigger2, _this$options$trigger3, _this$options$trigger4, _options$hoverDelegat;\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    this._actionRunnerDisposables = this._register(new DisposableStore());\n    this.viewItemDisposables = this._register(new DisposableMap());\n    // Trigger Key Tracking\n    this.triggerKeyDown = false;\n    this.focusable = true;\n    this._onDidBlur = this._register(new Emitter());\n    this.onDidBlur = this._onDidBlur.event;\n    this._onDidCancel = this._register(new Emitter({\n      onWillAddFirstListener: () => this.cancelHasListener = true\n    }));\n    this.onDidCancel = this._onDidCancel.event;\n    this.cancelHasListener = false;\n    this._onDidRun = this._register(new Emitter());\n    this.onDidRun = this._onDidRun.event;\n    this._onWillRun = this._register(new Emitter());\n    this.onWillRun = this._onWillRun.event;\n    this.options = options;\n    this._context = (_options$context = options.context) !== null && _options$context !== void 0 ? _options$context : null;\n    this._orientation = (_this$options$orienta = this.options.orientation) !== null && _this$options$orienta !== void 0 ? _this$options$orienta : 0 /* ActionsOrientation.HORIZONTAL */;\n    this._triggerKeys = {\n      keyDown: (_this$options$trigger = (_this$options$trigger2 = this.options.triggerKeys) === null || _this$options$trigger2 === void 0 ? void 0 : _this$options$trigger2.keyDown) !== null && _this$options$trigger !== void 0 ? _this$options$trigger : false,\n      keys: (_this$options$trigger3 = (_this$options$trigger4 = this.options.triggerKeys) === null || _this$options$trigger4 === void 0 ? void 0 : _this$options$trigger4.keys) !== null && _this$options$trigger3 !== void 0 ? _this$options$trigger3 : [3 /* KeyCode.Enter */, 10 /* KeyCode.Space */]\n    };\n    this._hoverDelegate = (_options$hoverDelegat = options.hoverDelegate) !== null && _options$hoverDelegat !== void 0 ? _options$hoverDelegat : this._register(createInstantHoverDelegate());\n    if (this.options.actionRunner) {\n      this._actionRunner = this.options.actionRunner;\n    } else {\n      this._actionRunner = new ActionRunner();\n      this._actionRunnerDisposables.add(this._actionRunner);\n    }\n    this._actionRunnerDisposables.add(this._actionRunner.onDidRun(e => this._onDidRun.fire(e)));\n    this._actionRunnerDisposables.add(this._actionRunner.onWillRun(e => this._onWillRun.fire(e)));\n    this.viewItems = [];\n    this.focusedItem = undefined;\n    this.domNode = document.createElement('div');\n    this.domNode.className = 'monaco-action-bar';\n    let previousKeys;\n    let nextKeys;\n    switch (this._orientation) {\n      case 0 /* ActionsOrientation.HORIZONTAL */:\n        previousKeys = [15 /* KeyCode.LeftArrow */];\n        nextKeys = [17 /* KeyCode.RightArrow */];\n        break;\n      case 1 /* ActionsOrientation.VERTICAL */:\n        previousKeys = [16 /* KeyCode.UpArrow */];\n        nextKeys = [18 /* KeyCode.DownArrow */];\n        this.domNode.className += ' vertical';\n        break;\n    }\n    this._register(DOM.addDisposableListener(this.domNode, DOM.EventType.KEY_DOWN, e => {\n      const event = new StandardKeyboardEvent(e);\n      let eventHandled = true;\n      const focusedItem = typeof this.focusedItem === 'number' ? this.viewItems[this.focusedItem] : undefined;\n      if (previousKeys && (event.equals(previousKeys[0]) || event.equals(previousKeys[1]))) {\n        eventHandled = this.focusPrevious();\n      } else if (nextKeys && (event.equals(nextKeys[0]) || event.equals(nextKeys[1]))) {\n        eventHandled = this.focusNext();\n      } else if (event.equals(9 /* KeyCode.Escape */) && this.cancelHasListener) {\n        this._onDidCancel.fire();\n      } else if (event.equals(14 /* KeyCode.Home */)) {\n        eventHandled = this.focusFirst();\n      } else if (event.equals(13 /* KeyCode.End */)) {\n        eventHandled = this.focusLast();\n      } else if (event.equals(2 /* KeyCode.Tab */) && focusedItem instanceof BaseActionViewItem && focusedItem.trapsArrowNavigation) {\n        // Tab, so forcibly focus next #219199\n        eventHandled = this.focusNext(undefined, true);\n      } else if (this.isTriggerKeyEvent(event)) {\n        // Staying out of the else branch even if not triggered\n        if (this._triggerKeys.keyDown) {\n          this.doTrigger(event);\n        } else {\n          this.triggerKeyDown = true;\n        }\n      } else {\n        eventHandled = false;\n      }\n      if (eventHandled) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }));\n    this._register(DOM.addDisposableListener(this.domNode, DOM.EventType.KEY_UP, e => {\n      const event = new StandardKeyboardEvent(e);\n      // Run action on Enter/Space\n      if (this.isTriggerKeyEvent(event)) {\n        if (!this._triggerKeys.keyDown && this.triggerKeyDown) {\n          this.triggerKeyDown = false;\n          this.doTrigger(event);\n        }\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      // Recompute focused item\n      else if (event.equals(2 /* KeyCode.Tab */) || event.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */) || event.equals(16 /* KeyCode.UpArrow */) || event.equals(18 /* KeyCode.DownArrow */) || event.equals(15 /* KeyCode.LeftArrow */) || event.equals(17 /* KeyCode.RightArrow */)) {\n        this.updateFocusedItem();\n      }\n    }));\n    this.focusTracker = this._register(DOM.trackFocus(this.domNode));\n    this._register(this.focusTracker.onDidBlur(() => {\n      if (DOM.getActiveElement() === this.domNode || !DOM.isAncestor(DOM.getActiveElement(), this.domNode)) {\n        this._onDidBlur.fire();\n        this.previouslyFocusedItem = this.focusedItem;\n        this.focusedItem = undefined;\n        this.triggerKeyDown = false;\n      }\n    }));\n    this._register(this.focusTracker.onDidFocus(() => this.updateFocusedItem()));\n    this.actionsList = document.createElement('ul');\n    this.actionsList.className = 'actions-container';\n    if (this.options.highlightToggledItems) {\n      this.actionsList.classList.add('highlight-toggled');\n    }\n    this.actionsList.setAttribute('role', this.options.ariaRole || 'toolbar');\n    if (this.options.ariaLabel) {\n      this.actionsList.setAttribute('aria-label', this.options.ariaLabel);\n    }\n    this.domNode.appendChild(this.actionsList);\n    container.appendChild(this.domNode);\n  }\n  refreshRole() {\n    if (this.length() >= 1) {\n      this.actionsList.setAttribute('role', this.options.ariaRole || 'toolbar');\n    } else {\n      this.actionsList.setAttribute('role', 'presentation');\n    }\n  }\n  // Some action bars should not be focusable at times\n  // When an action bar is not focusable make sure to make all the elements inside it not focusable\n  // When an action bar is focusable again, make sure the first item can be focused\n  setFocusable(focusable) {\n    this.focusable = focusable;\n    if (this.focusable) {\n      const firstEnabled = this.viewItems.find(vi => vi instanceof BaseActionViewItem && vi.isEnabled());\n      if (firstEnabled instanceof BaseActionViewItem) {\n        firstEnabled.setFocusable(true);\n      }\n    } else {\n      this.viewItems.forEach(vi => {\n        if (vi instanceof BaseActionViewItem) {\n          vi.setFocusable(false);\n        }\n      });\n    }\n  }\n  isTriggerKeyEvent(event) {\n    let ret = false;\n    this._triggerKeys.keys.forEach(keyCode => {\n      ret = ret || event.equals(keyCode);\n    });\n    return ret;\n  }\n  updateFocusedItem() {\n    for (let i = 0; i < this.actionsList.children.length; i++) {\n      const elem = this.actionsList.children[i];\n      if (DOM.isAncestor(DOM.getActiveElement(), elem)) {\n        var _this$viewItems$this$, _this$viewItems$this$2, _this$viewItems$this$3;\n        this.focusedItem = i;\n        (_this$viewItems$this$ = this.viewItems[this.focusedItem]) === null || _this$viewItems$this$ === void 0 || (_this$viewItems$this$2 = (_this$viewItems$this$3 = _this$viewItems$this$).showHover) === null || _this$viewItems$this$2 === void 0 || _this$viewItems$this$2.call(_this$viewItems$this$3);\n        break;\n      }\n    }\n  }\n  get context() {\n    return this._context;\n  }\n  set context(context) {\n    this._context = context;\n    this.viewItems.forEach(i => i.setActionContext(context));\n  }\n  get actionRunner() {\n    return this._actionRunner;\n  }\n  set actionRunner(actionRunner) {\n    this._actionRunner = actionRunner;\n    // when setting a new `IActionRunner` make sure to dispose old listeners and\n    // start to forward events from the new listener\n    this._actionRunnerDisposables.clear();\n    this._actionRunnerDisposables.add(this._actionRunner.onDidRun(e => this._onDidRun.fire(e)));\n    this._actionRunnerDisposables.add(this._actionRunner.onWillRun(e => this._onWillRun.fire(e)));\n    this.viewItems.forEach(item => item.actionRunner = actionRunner);\n  }\n  getContainer() {\n    return this.domNode;\n  }\n  getAction(indexOrElement) {\n    // by index\n    if (typeof indexOrElement === 'number') {\n      var _this$viewItems$index;\n      return (_this$viewItems$index = this.viewItems[indexOrElement]) === null || _this$viewItems$index === void 0 ? void 0 : _this$viewItems$index.action;\n    }\n    // by element\n    if (DOM.isHTMLElement(indexOrElement)) {\n      while (indexOrElement.parentElement !== this.actionsList) {\n        if (!indexOrElement.parentElement) {\n          return undefined;\n        }\n        indexOrElement = indexOrElement.parentElement;\n      }\n      for (let i = 0; i < this.actionsList.childNodes.length; i++) {\n        if (this.actionsList.childNodes[i] === indexOrElement) {\n          return this.viewItems[i].action;\n        }\n      }\n    }\n    return undefined;\n  }\n  push(arg) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const actions = Array.isArray(arg) ? arg : [arg];\n    let index = types.isNumber(options.index) ? options.index : null;\n    actions.forEach(action => {\n      const actionViewItemElement = document.createElement('li');\n      actionViewItemElement.className = 'action-item';\n      actionViewItemElement.setAttribute('role', 'presentation');\n      let item;\n      const viewItemOptions = {\n        hoverDelegate: this._hoverDelegate,\n        ...options,\n        isTabList: this.options.ariaRole === 'tablist'\n      };\n      if (this.options.actionViewItemProvider) {\n        item = this.options.actionViewItemProvider(action, viewItemOptions);\n      }\n      if (!item) {\n        item = new ActionViewItem(this.context, action, viewItemOptions);\n      }\n      // Prevent native context menu on actions\n      if (!this.options.allowContextMenu) {\n        this.viewItemDisposables.set(item, DOM.addDisposableListener(actionViewItemElement, DOM.EventType.CONTEXT_MENU, e => {\n          DOM.EventHelper.stop(e, true);\n        }));\n      }\n      item.actionRunner = this._actionRunner;\n      item.setActionContext(this.context);\n      item.render(actionViewItemElement);\n      if (this.focusable && item instanceof BaseActionViewItem && this.viewItems.length === 0) {\n        // We need to allow for the first enabled item to be focused on using tab navigation #106441\n        item.setFocusable(true);\n      }\n      if (index === null || index < 0 || index >= this.actionsList.children.length) {\n        this.actionsList.appendChild(actionViewItemElement);\n        this.viewItems.push(item);\n      } else {\n        this.actionsList.insertBefore(actionViewItemElement, this.actionsList.children[index]);\n        this.viewItems.splice(index, 0, item);\n        index++;\n      }\n    });\n    if (typeof this.focusedItem === 'number') {\n      // After a clear actions might be re-added to simply toggle some actions. We should preserve focus #97128\n      this.focus(this.focusedItem);\n    }\n    this.refreshRole();\n  }\n  clear() {\n    if (this.isEmpty()) {\n      return;\n    }\n    this.viewItems = dispose(this.viewItems);\n    this.viewItemDisposables.clearAndDisposeAll();\n    DOM.clearNode(this.actionsList);\n    this.refreshRole();\n  }\n  length() {\n    return this.viewItems.length;\n  }\n  isEmpty() {\n    return this.viewItems.length === 0;\n  }\n  focus(arg) {\n    let selectFirst = false;\n    let index = undefined;\n    if (arg === undefined) {\n      selectFirst = true;\n    } else if (typeof arg === 'number') {\n      index = arg;\n    } else if (typeof arg === 'boolean') {\n      selectFirst = arg;\n    }\n    if (selectFirst && typeof this.focusedItem === 'undefined') {\n      const firstEnabled = this.viewItems.findIndex(item => item.isEnabled());\n      // Focus the first enabled item\n      this.focusedItem = firstEnabled === -1 ? undefined : firstEnabled;\n      this.updateFocus(undefined, undefined, true);\n    } else {\n      if (index !== undefined) {\n        this.focusedItem = index;\n      }\n      this.updateFocus(undefined, undefined, true);\n    }\n  }\n  focusFirst() {\n    this.focusedItem = this.length() - 1;\n    return this.focusNext(true);\n  }\n  focusLast() {\n    this.focusedItem = 0;\n    return this.focusPrevious(true);\n  }\n  focusNext(forceLoop, forceFocus) {\n    if (typeof this.focusedItem === 'undefined') {\n      this.focusedItem = this.viewItems.length - 1;\n    } else if (this.viewItems.length <= 1) {\n      return false;\n    }\n    const startIndex = this.focusedItem;\n    let item;\n    do {\n      if (!forceLoop && this.options.preventLoopNavigation && this.focusedItem + 1 >= this.viewItems.length) {\n        this.focusedItem = startIndex;\n        return false;\n      }\n      this.focusedItem = (this.focusedItem + 1) % this.viewItems.length;\n      item = this.viewItems[this.focusedItem];\n    } while (this.focusedItem !== startIndex && (this.options.focusOnlyEnabledItems && !item.isEnabled() || item.action.id === Separator.ID));\n    this.updateFocus(undefined, undefined, forceFocus);\n    return true;\n  }\n  focusPrevious(forceLoop) {\n    if (typeof this.focusedItem === 'undefined') {\n      this.focusedItem = 0;\n    } else if (this.viewItems.length <= 1) {\n      return false;\n    }\n    const startIndex = this.focusedItem;\n    let item;\n    do {\n      this.focusedItem = this.focusedItem - 1;\n      if (this.focusedItem < 0) {\n        if (!forceLoop && this.options.preventLoopNavigation) {\n          this.focusedItem = startIndex;\n          return false;\n        }\n        this.focusedItem = this.viewItems.length - 1;\n      }\n      item = this.viewItems[this.focusedItem];\n    } while (this.focusedItem !== startIndex && (this.options.focusOnlyEnabledItems && !item.isEnabled() || item.action.id === Separator.ID));\n    this.updateFocus(true);\n    return true;\n  }\n  updateFocus(fromRight, preventScroll) {\n    let forceFocus = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (typeof this.focusedItem === 'undefined') {\n      this.actionsList.focus({\n        preventScroll\n      });\n    }\n    if (this.previouslyFocusedItem !== undefined && this.previouslyFocusedItem !== this.focusedItem) {\n      var _this$viewItems$this$4;\n      (_this$viewItems$this$4 = this.viewItems[this.previouslyFocusedItem]) === null || _this$viewItems$this$4 === void 0 || _this$viewItems$this$4.blur();\n    }\n    const actionViewItem = this.focusedItem !== undefined ? this.viewItems[this.focusedItem] : undefined;\n    if (actionViewItem) {\n      let focusItem = true;\n      if (!types.isFunction(actionViewItem.focus)) {\n        focusItem = false;\n      }\n      if (this.options.focusOnlyEnabledItems && types.isFunction(actionViewItem.isEnabled) && !actionViewItem.isEnabled()) {\n        focusItem = false;\n      }\n      if (actionViewItem.action.id === Separator.ID) {\n        focusItem = false;\n      }\n      if (!focusItem) {\n        this.actionsList.focus({\n          preventScroll\n        });\n        this.previouslyFocusedItem = undefined;\n      } else if (forceFocus || this.previouslyFocusedItem !== this.focusedItem) {\n        actionViewItem.focus(fromRight);\n        this.previouslyFocusedItem = this.focusedItem;\n      }\n      if (focusItem) {\n        var _actionViewItem$showH;\n        (_actionViewItem$showH = actionViewItem.showHover) === null || _actionViewItem$showH === void 0 || _actionViewItem$showH.call(actionViewItem);\n      }\n    }\n  }\n  doTrigger(event) {\n    if (typeof this.focusedItem === 'undefined') {\n      return; //nothing to focus\n    }\n    // trigger action\n    const actionViewItem = this.viewItems[this.focusedItem];\n    if (actionViewItem instanceof BaseActionViewItem) {\n      const context = actionViewItem._context === null || actionViewItem._context === undefined ? event : actionViewItem._context;\n      this.run(actionViewItem._action, context);\n    }\n  }\n  async run(action, context) {\n    await this._actionRunner.run(action, context);\n  }\n  dispose() {\n    this._context = undefined;\n    this.viewItems = dispose(this.viewItems);\n    this.getContainer().remove();\n    super.dispose();\n  }\n}","map":{"version":3,"names":["DOM","StandardKeyboardEvent","ActionViewItem","BaseActionViewItem","createInstantHoverDelegate","ActionRunner","Separator","Emitter","Disposable","DisposableMap","DisposableStore","dispose","types","ActionBar","constructor","container","_options$context","_this$options$orienta","_this$options$trigger","_this$options$trigger2","_this$options$trigger3","_this$options$trigger4","_options$hoverDelegat","options","arguments","length","undefined","_actionRunnerDisposables","_register","viewItemDisposables","triggerKeyDown","focusable","_onDidBlur","onDidBlur","event","_onDidCancel","onWillAddFirstListener","cancelHasListener","onDidCancel","_onDidRun","onDidRun","_onWillRun","onWillRun","_context","context","_orientation","orientation","_triggerKeys","keyDown","triggerKeys","keys","_hoverDelegate","hoverDelegate","actionRunner","_actionRunner","add","e","fire","viewItems","focusedItem","domNode","document","createElement","className","previousKeys","nextKeys","addDisposableListener","EventType","KEY_DOWN","eventHandled","equals","focusPrevious","focusNext","focusFirst","focusLast","trapsArrowNavigation","isTriggerKeyEvent","doTrigger","preventDefault","stopPropagation","KEY_UP","updateFocusedItem","focusTracker","trackFocus","getActiveElement","isAncestor","previouslyFocusedItem","onDidFocus","actionsList","highlightToggledItems","classList","setAttribute","ariaRole","ariaLabel","appendChild","refreshRole","setFocusable","firstEnabled","find","vi","isEnabled","forEach","ret","keyCode","i","children","elem","_this$viewItems$this$","_this$viewItems$this$2","_this$viewItems$this$3","showHover","call","setActionContext","clear","item","getContainer","getAction","indexOrElement","_this$viewItems$index","action","isHTMLElement","parentElement","childNodes","push","arg","actions","Array","isArray","index","isNumber","actionViewItemElement","viewItemOptions","isTabList","actionViewItemProvider","allowContextMenu","set","CONTEXT_MENU","EventHelper","stop","render","insertBefore","splice","focus","isEmpty","clearAndDisposeAll","clearNode","selectFirst","findIndex","updateFocus","forceLoop","forceFocus","startIndex","preventLoopNavigation","focusOnlyEnabledItems","id","ID","fromRight","preventScroll","_this$viewItems$this$4","blur","actionViewItem","focusItem","isFunction","_actionViewItem$showH","run","_action","remove"],"sources":["D:/ospanel/domains/react/react-intro-main/node_modules/monaco-editor/esm/vs/base/browser/ui/actionbar/actionbar.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as DOM from '../../dom.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { ActionViewItem, BaseActionViewItem } from './actionViewItems.js';\nimport { createInstantHoverDelegate } from '../hover/hoverDelegateFactory.js';\nimport { ActionRunner, Separator } from '../../../common/actions.js';\nimport { Emitter } from '../../../common/event.js';\nimport { Disposable, DisposableMap, DisposableStore, dispose } from '../../../common/lifecycle.js';\nimport * as types from '../../../common/types.js';\nimport './actionbar.css';\nexport class ActionBar extends Disposable {\n    constructor(container, options = {}) {\n        super();\n        this._actionRunnerDisposables = this._register(new DisposableStore());\n        this.viewItemDisposables = this._register(new DisposableMap());\n        // Trigger Key Tracking\n        this.triggerKeyDown = false;\n        this.focusable = true;\n        this._onDidBlur = this._register(new Emitter());\n        this.onDidBlur = this._onDidBlur.event;\n        this._onDidCancel = this._register(new Emitter({ onWillAddFirstListener: () => this.cancelHasListener = true }));\n        this.onDidCancel = this._onDidCancel.event;\n        this.cancelHasListener = false;\n        this._onDidRun = this._register(new Emitter());\n        this.onDidRun = this._onDidRun.event;\n        this._onWillRun = this._register(new Emitter());\n        this.onWillRun = this._onWillRun.event;\n        this.options = options;\n        this._context = options.context ?? null;\n        this._orientation = this.options.orientation ?? 0 /* ActionsOrientation.HORIZONTAL */;\n        this._triggerKeys = {\n            keyDown: this.options.triggerKeys?.keyDown ?? false,\n            keys: this.options.triggerKeys?.keys ?? [3 /* KeyCode.Enter */, 10 /* KeyCode.Space */]\n        };\n        this._hoverDelegate = options.hoverDelegate ?? this._register(createInstantHoverDelegate());\n        if (this.options.actionRunner) {\n            this._actionRunner = this.options.actionRunner;\n        }\n        else {\n            this._actionRunner = new ActionRunner();\n            this._actionRunnerDisposables.add(this._actionRunner);\n        }\n        this._actionRunnerDisposables.add(this._actionRunner.onDidRun(e => this._onDidRun.fire(e)));\n        this._actionRunnerDisposables.add(this._actionRunner.onWillRun(e => this._onWillRun.fire(e)));\n        this.viewItems = [];\n        this.focusedItem = undefined;\n        this.domNode = document.createElement('div');\n        this.domNode.className = 'monaco-action-bar';\n        let previousKeys;\n        let nextKeys;\n        switch (this._orientation) {\n            case 0 /* ActionsOrientation.HORIZONTAL */:\n                previousKeys = [15 /* KeyCode.LeftArrow */];\n                nextKeys = [17 /* KeyCode.RightArrow */];\n                break;\n            case 1 /* ActionsOrientation.VERTICAL */:\n                previousKeys = [16 /* KeyCode.UpArrow */];\n                nextKeys = [18 /* KeyCode.DownArrow */];\n                this.domNode.className += ' vertical';\n                break;\n        }\n        this._register(DOM.addDisposableListener(this.domNode, DOM.EventType.KEY_DOWN, e => {\n            const event = new StandardKeyboardEvent(e);\n            let eventHandled = true;\n            const focusedItem = typeof this.focusedItem === 'number' ? this.viewItems[this.focusedItem] : undefined;\n            if (previousKeys && (event.equals(previousKeys[0]) || event.equals(previousKeys[1]))) {\n                eventHandled = this.focusPrevious();\n            }\n            else if (nextKeys && (event.equals(nextKeys[0]) || event.equals(nextKeys[1]))) {\n                eventHandled = this.focusNext();\n            }\n            else if (event.equals(9 /* KeyCode.Escape */) && this.cancelHasListener) {\n                this._onDidCancel.fire();\n            }\n            else if (event.equals(14 /* KeyCode.Home */)) {\n                eventHandled = this.focusFirst();\n            }\n            else if (event.equals(13 /* KeyCode.End */)) {\n                eventHandled = this.focusLast();\n            }\n            else if (event.equals(2 /* KeyCode.Tab */) && focusedItem instanceof BaseActionViewItem && focusedItem.trapsArrowNavigation) {\n                // Tab, so forcibly focus next #219199\n                eventHandled = this.focusNext(undefined, true);\n            }\n            else if (this.isTriggerKeyEvent(event)) {\n                // Staying out of the else branch even if not triggered\n                if (this._triggerKeys.keyDown) {\n                    this.doTrigger(event);\n                }\n                else {\n                    this.triggerKeyDown = true;\n                }\n            }\n            else {\n                eventHandled = false;\n            }\n            if (eventHandled) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        }));\n        this._register(DOM.addDisposableListener(this.domNode, DOM.EventType.KEY_UP, e => {\n            const event = new StandardKeyboardEvent(e);\n            // Run action on Enter/Space\n            if (this.isTriggerKeyEvent(event)) {\n                if (!this._triggerKeys.keyDown && this.triggerKeyDown) {\n                    this.triggerKeyDown = false;\n                    this.doTrigger(event);\n                }\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            // Recompute focused item\n            else if (event.equals(2 /* KeyCode.Tab */) || event.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */) || event.equals(16 /* KeyCode.UpArrow */) || event.equals(18 /* KeyCode.DownArrow */) || event.equals(15 /* KeyCode.LeftArrow */) || event.equals(17 /* KeyCode.RightArrow */)) {\n                this.updateFocusedItem();\n            }\n        }));\n        this.focusTracker = this._register(DOM.trackFocus(this.domNode));\n        this._register(this.focusTracker.onDidBlur(() => {\n            if (DOM.getActiveElement() === this.domNode || !DOM.isAncestor(DOM.getActiveElement(), this.domNode)) {\n                this._onDidBlur.fire();\n                this.previouslyFocusedItem = this.focusedItem;\n                this.focusedItem = undefined;\n                this.triggerKeyDown = false;\n            }\n        }));\n        this._register(this.focusTracker.onDidFocus(() => this.updateFocusedItem()));\n        this.actionsList = document.createElement('ul');\n        this.actionsList.className = 'actions-container';\n        if (this.options.highlightToggledItems) {\n            this.actionsList.classList.add('highlight-toggled');\n        }\n        this.actionsList.setAttribute('role', this.options.ariaRole || 'toolbar');\n        if (this.options.ariaLabel) {\n            this.actionsList.setAttribute('aria-label', this.options.ariaLabel);\n        }\n        this.domNode.appendChild(this.actionsList);\n        container.appendChild(this.domNode);\n    }\n    refreshRole() {\n        if (this.length() >= 1) {\n            this.actionsList.setAttribute('role', this.options.ariaRole || 'toolbar');\n        }\n        else {\n            this.actionsList.setAttribute('role', 'presentation');\n        }\n    }\n    // Some action bars should not be focusable at times\n    // When an action bar is not focusable make sure to make all the elements inside it not focusable\n    // When an action bar is focusable again, make sure the first item can be focused\n    setFocusable(focusable) {\n        this.focusable = focusable;\n        if (this.focusable) {\n            const firstEnabled = this.viewItems.find(vi => vi instanceof BaseActionViewItem && vi.isEnabled());\n            if (firstEnabled instanceof BaseActionViewItem) {\n                firstEnabled.setFocusable(true);\n            }\n        }\n        else {\n            this.viewItems.forEach(vi => {\n                if (vi instanceof BaseActionViewItem) {\n                    vi.setFocusable(false);\n                }\n            });\n        }\n    }\n    isTriggerKeyEvent(event) {\n        let ret = false;\n        this._triggerKeys.keys.forEach(keyCode => {\n            ret = ret || event.equals(keyCode);\n        });\n        return ret;\n    }\n    updateFocusedItem() {\n        for (let i = 0; i < this.actionsList.children.length; i++) {\n            const elem = this.actionsList.children[i];\n            if (DOM.isAncestor(DOM.getActiveElement(), elem)) {\n                this.focusedItem = i;\n                this.viewItems[this.focusedItem]?.showHover?.();\n                break;\n            }\n        }\n    }\n    get context() {\n        return this._context;\n    }\n    set context(context) {\n        this._context = context;\n        this.viewItems.forEach(i => i.setActionContext(context));\n    }\n    get actionRunner() {\n        return this._actionRunner;\n    }\n    set actionRunner(actionRunner) {\n        this._actionRunner = actionRunner;\n        // when setting a new `IActionRunner` make sure to dispose old listeners and\n        // start to forward events from the new listener\n        this._actionRunnerDisposables.clear();\n        this._actionRunnerDisposables.add(this._actionRunner.onDidRun(e => this._onDidRun.fire(e)));\n        this._actionRunnerDisposables.add(this._actionRunner.onWillRun(e => this._onWillRun.fire(e)));\n        this.viewItems.forEach(item => item.actionRunner = actionRunner);\n    }\n    getContainer() {\n        return this.domNode;\n    }\n    getAction(indexOrElement) {\n        // by index\n        if (typeof indexOrElement === 'number') {\n            return this.viewItems[indexOrElement]?.action;\n        }\n        // by element\n        if (DOM.isHTMLElement(indexOrElement)) {\n            while (indexOrElement.parentElement !== this.actionsList) {\n                if (!indexOrElement.parentElement) {\n                    return undefined;\n                }\n                indexOrElement = indexOrElement.parentElement;\n            }\n            for (let i = 0; i < this.actionsList.childNodes.length; i++) {\n                if (this.actionsList.childNodes[i] === indexOrElement) {\n                    return this.viewItems[i].action;\n                }\n            }\n        }\n        return undefined;\n    }\n    push(arg, options = {}) {\n        const actions = Array.isArray(arg) ? arg : [arg];\n        let index = types.isNumber(options.index) ? options.index : null;\n        actions.forEach((action) => {\n            const actionViewItemElement = document.createElement('li');\n            actionViewItemElement.className = 'action-item';\n            actionViewItemElement.setAttribute('role', 'presentation');\n            let item;\n            const viewItemOptions = { hoverDelegate: this._hoverDelegate, ...options, isTabList: this.options.ariaRole === 'tablist' };\n            if (this.options.actionViewItemProvider) {\n                item = this.options.actionViewItemProvider(action, viewItemOptions);\n            }\n            if (!item) {\n                item = new ActionViewItem(this.context, action, viewItemOptions);\n            }\n            // Prevent native context menu on actions\n            if (!this.options.allowContextMenu) {\n                this.viewItemDisposables.set(item, DOM.addDisposableListener(actionViewItemElement, DOM.EventType.CONTEXT_MENU, (e) => {\n                    DOM.EventHelper.stop(e, true);\n                }));\n            }\n            item.actionRunner = this._actionRunner;\n            item.setActionContext(this.context);\n            item.render(actionViewItemElement);\n            if (this.focusable && item instanceof BaseActionViewItem && this.viewItems.length === 0) {\n                // We need to allow for the first enabled item to be focused on using tab navigation #106441\n                item.setFocusable(true);\n            }\n            if (index === null || index < 0 || index >= this.actionsList.children.length) {\n                this.actionsList.appendChild(actionViewItemElement);\n                this.viewItems.push(item);\n            }\n            else {\n                this.actionsList.insertBefore(actionViewItemElement, this.actionsList.children[index]);\n                this.viewItems.splice(index, 0, item);\n                index++;\n            }\n        });\n        if (typeof this.focusedItem === 'number') {\n            // After a clear actions might be re-added to simply toggle some actions. We should preserve focus #97128\n            this.focus(this.focusedItem);\n        }\n        this.refreshRole();\n    }\n    clear() {\n        if (this.isEmpty()) {\n            return;\n        }\n        this.viewItems = dispose(this.viewItems);\n        this.viewItemDisposables.clearAndDisposeAll();\n        DOM.clearNode(this.actionsList);\n        this.refreshRole();\n    }\n    length() {\n        return this.viewItems.length;\n    }\n    isEmpty() {\n        return this.viewItems.length === 0;\n    }\n    focus(arg) {\n        let selectFirst = false;\n        let index = undefined;\n        if (arg === undefined) {\n            selectFirst = true;\n        }\n        else if (typeof arg === 'number') {\n            index = arg;\n        }\n        else if (typeof arg === 'boolean') {\n            selectFirst = arg;\n        }\n        if (selectFirst && typeof this.focusedItem === 'undefined') {\n            const firstEnabled = this.viewItems.findIndex(item => item.isEnabled());\n            // Focus the first enabled item\n            this.focusedItem = firstEnabled === -1 ? undefined : firstEnabled;\n            this.updateFocus(undefined, undefined, true);\n        }\n        else {\n            if (index !== undefined) {\n                this.focusedItem = index;\n            }\n            this.updateFocus(undefined, undefined, true);\n        }\n    }\n    focusFirst() {\n        this.focusedItem = this.length() - 1;\n        return this.focusNext(true);\n    }\n    focusLast() {\n        this.focusedItem = 0;\n        return this.focusPrevious(true);\n    }\n    focusNext(forceLoop, forceFocus) {\n        if (typeof this.focusedItem === 'undefined') {\n            this.focusedItem = this.viewItems.length - 1;\n        }\n        else if (this.viewItems.length <= 1) {\n            return false;\n        }\n        const startIndex = this.focusedItem;\n        let item;\n        do {\n            if (!forceLoop && this.options.preventLoopNavigation && this.focusedItem + 1 >= this.viewItems.length) {\n                this.focusedItem = startIndex;\n                return false;\n            }\n            this.focusedItem = (this.focusedItem + 1) % this.viewItems.length;\n            item = this.viewItems[this.focusedItem];\n        } while (this.focusedItem !== startIndex && ((this.options.focusOnlyEnabledItems && !item.isEnabled()) || item.action.id === Separator.ID));\n        this.updateFocus(undefined, undefined, forceFocus);\n        return true;\n    }\n    focusPrevious(forceLoop) {\n        if (typeof this.focusedItem === 'undefined') {\n            this.focusedItem = 0;\n        }\n        else if (this.viewItems.length <= 1) {\n            return false;\n        }\n        const startIndex = this.focusedItem;\n        let item;\n        do {\n            this.focusedItem = this.focusedItem - 1;\n            if (this.focusedItem < 0) {\n                if (!forceLoop && this.options.preventLoopNavigation) {\n                    this.focusedItem = startIndex;\n                    return false;\n                }\n                this.focusedItem = this.viewItems.length - 1;\n            }\n            item = this.viewItems[this.focusedItem];\n        } while (this.focusedItem !== startIndex && ((this.options.focusOnlyEnabledItems && !item.isEnabled()) || item.action.id === Separator.ID));\n        this.updateFocus(true);\n        return true;\n    }\n    updateFocus(fromRight, preventScroll, forceFocus = false) {\n        if (typeof this.focusedItem === 'undefined') {\n            this.actionsList.focus({ preventScroll });\n        }\n        if (this.previouslyFocusedItem !== undefined && this.previouslyFocusedItem !== this.focusedItem) {\n            this.viewItems[this.previouslyFocusedItem]?.blur();\n        }\n        const actionViewItem = this.focusedItem !== undefined ? this.viewItems[this.focusedItem] : undefined;\n        if (actionViewItem) {\n            let focusItem = true;\n            if (!types.isFunction(actionViewItem.focus)) {\n                focusItem = false;\n            }\n            if (this.options.focusOnlyEnabledItems && types.isFunction(actionViewItem.isEnabled) && !actionViewItem.isEnabled()) {\n                focusItem = false;\n            }\n            if (actionViewItem.action.id === Separator.ID) {\n                focusItem = false;\n            }\n            if (!focusItem) {\n                this.actionsList.focus({ preventScroll });\n                this.previouslyFocusedItem = undefined;\n            }\n            else if (forceFocus || this.previouslyFocusedItem !== this.focusedItem) {\n                actionViewItem.focus(fromRight);\n                this.previouslyFocusedItem = this.focusedItem;\n            }\n            if (focusItem) {\n                actionViewItem.showHover?.();\n            }\n        }\n    }\n    doTrigger(event) {\n        if (typeof this.focusedItem === 'undefined') {\n            return; //nothing to focus\n        }\n        // trigger action\n        const actionViewItem = this.viewItems[this.focusedItem];\n        if (actionViewItem instanceof BaseActionViewItem) {\n            const context = (actionViewItem._context === null || actionViewItem._context === undefined) ? event : actionViewItem._context;\n            this.run(actionViewItem._action, context);\n        }\n    }\n    async run(action, context) {\n        await this._actionRunner.run(action, context);\n    }\n    dispose() {\n        this._context = undefined;\n        this.viewItems = dispose(this.viewItems);\n        this.getContainer().remove();\n        super.dispose();\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _AccessibleDiffViewerNext, _AccessibleDiffViewerPrev;\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getActiveElement } from '../../../../base/browser/dom.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { EditorAction2 } from '../../editorExtensions.js';\nimport { ICodeEditorService } from '../../services/codeEditorService.js';\nimport { DiffEditorWidget } from './diffEditorWidget.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { localize2 } from '../../../../nls.js';\nimport { Action2, MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport './registrations.contribution.js';\nexport class ToggleCollapseUnchangedRegions extends Action2 {\n  constructor() {\n    super({\n      id: 'diffEditor.toggleCollapseUnchangedRegions',\n      title: localize2('toggleCollapseUnchangedRegions', 'Toggle Collapse Unchanged Regions'),\n      icon: Codicon.map,\n      toggled: ContextKeyExpr.has('config.diffEditor.hideUnchangedRegions.enabled'),\n      precondition: ContextKeyExpr.has('isInDiffEditor'),\n      menu: {\n        when: ContextKeyExpr.has('isInDiffEditor'),\n        id: MenuId.EditorTitle,\n        order: 22,\n        group: 'navigation'\n      }\n    });\n  }\n  run(accessor) {\n    const configurationService = accessor.get(IConfigurationService);\n    const newValue = !configurationService.getValue('diffEditor.hideUnchangedRegions.enabled');\n    configurationService.updateValue('diffEditor.hideUnchangedRegions.enabled', newValue);\n  }\n}\nexport class ToggleShowMovedCodeBlocks extends Action2 {\n  constructor() {\n    super({\n      id: 'diffEditor.toggleShowMovedCodeBlocks',\n      title: localize2('toggleShowMovedCodeBlocks', 'Toggle Show Moved Code Blocks'),\n      precondition: ContextKeyExpr.has('isInDiffEditor')\n    });\n  }\n  run(accessor) {\n    const configurationService = accessor.get(IConfigurationService);\n    const newValue = !configurationService.getValue('diffEditor.experimental.showMoves');\n    configurationService.updateValue('diffEditor.experimental.showMoves', newValue);\n  }\n}\nexport class ToggleUseInlineViewWhenSpaceIsLimited extends Action2 {\n  constructor() {\n    super({\n      id: 'diffEditor.toggleUseInlineViewWhenSpaceIsLimited',\n      title: localize2('toggleUseInlineViewWhenSpaceIsLimited', 'Toggle Use Inline View When Space Is Limited'),\n      precondition: ContextKeyExpr.has('isInDiffEditor')\n    });\n  }\n  run(accessor) {\n    const configurationService = accessor.get(IConfigurationService);\n    const newValue = !configurationService.getValue('diffEditor.useInlineViewWhenSpaceIsLimited');\n    configurationService.updateValue('diffEditor.useInlineViewWhenSpaceIsLimited', newValue);\n  }\n}\nconst diffEditorCategory = localize2('diffEditor', \"Diff Editor\");\nexport class SwitchSide extends EditorAction2 {\n  constructor() {\n    super({\n      id: 'diffEditor.switchSide',\n      title: localize2('switchSide', 'Switch Side'),\n      icon: Codicon.arrowSwap,\n      precondition: ContextKeyExpr.has('isInDiffEditor'),\n      f1: true,\n      category: diffEditorCategory\n    });\n  }\n  runEditorCommand(accessor, editor, arg) {\n    const diffEditor = findFocusedDiffEditor(accessor);\n    if (diffEditor instanceof DiffEditorWidget) {\n      if (arg && arg.dryRun) {\n        return {\n          destinationSelection: diffEditor.mapToOtherSide().destinationSelection\n        };\n      } else {\n        diffEditor.switchSide();\n      }\n    }\n    return undefined;\n  }\n}\nexport class ExitCompareMove extends EditorAction2 {\n  constructor() {\n    super({\n      id: 'diffEditor.exitCompareMove',\n      title: localize2('exitCompareMove', 'Exit Compare Move'),\n      icon: Codicon.close,\n      precondition: EditorContextKeys.comparingMovedCode,\n      f1: false,\n      category: diffEditorCategory,\n      keybinding: {\n        weight: 10000,\n        primary: 9 /* KeyCode.Escape */\n      }\n    });\n  }\n  runEditorCommand(accessor, editor) {\n    const diffEditor = findFocusedDiffEditor(accessor);\n    if (diffEditor instanceof DiffEditorWidget) {\n      diffEditor.exitCompareMove();\n    }\n  }\n}\nexport class CollapseAllUnchangedRegions extends EditorAction2 {\n  constructor() {\n    super({\n      id: 'diffEditor.collapseAllUnchangedRegions',\n      title: localize2('collapseAllUnchangedRegions', 'Collapse All Unchanged Regions'),\n      icon: Codicon.fold,\n      precondition: ContextKeyExpr.has('isInDiffEditor'),\n      f1: true,\n      category: diffEditorCategory\n    });\n  }\n  runEditorCommand(accessor, editor) {\n    const diffEditor = findFocusedDiffEditor(accessor);\n    if (diffEditor instanceof DiffEditorWidget) {\n      diffEditor.collapseAllUnchangedRegions();\n    }\n  }\n}\nexport class ShowAllUnchangedRegions extends EditorAction2 {\n  constructor() {\n    super({\n      id: 'diffEditor.showAllUnchangedRegions',\n      title: localize2('showAllUnchangedRegions', 'Show All Unchanged Regions'),\n      icon: Codicon.unfold,\n      precondition: ContextKeyExpr.has('isInDiffEditor'),\n      f1: true,\n      category: diffEditorCategory\n    });\n  }\n  runEditorCommand(accessor, editor) {\n    const diffEditor = findFocusedDiffEditor(accessor);\n    if (diffEditor instanceof DiffEditorWidget) {\n      diffEditor.showAllUnchangedRegions();\n    }\n  }\n}\nexport class RevertHunkOrSelection extends Action2 {\n  constructor() {\n    super({\n      id: 'diffEditor.revert',\n      title: localize2('revert', 'Revert'),\n      f1: false,\n      category: diffEditorCategory\n    });\n  }\n  run(accessor, arg) {\n    const diffEditor = findDiffEditor(accessor, arg.originalUri, arg.modifiedUri);\n    if (diffEditor instanceof DiffEditorWidget) {\n      var _arg$mapping$innerCha;\n      diffEditor.revertRangeMappings((_arg$mapping$innerCha = arg.mapping.innerChanges) !== null && _arg$mapping$innerCha !== void 0 ? _arg$mapping$innerCha : []);\n    }\n    return undefined;\n  }\n}\nconst accessibleDiffViewerCategory = localize2('accessibleDiffViewer', \"Accessible Diff Viewer\");\nexport class AccessibleDiffViewerNext extends Action2 {\n  constructor() {\n    super({\n      id: AccessibleDiffViewerNext.id,\n      title: localize2('editor.action.accessibleDiffViewer.next', 'Go to Next Difference'),\n      category: accessibleDiffViewerCategory,\n      precondition: ContextKeyExpr.has('isInDiffEditor'),\n      keybinding: {\n        primary: 65 /* KeyCode.F7 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      f1: true\n    });\n  }\n  run(accessor) {\n    const diffEditor = findFocusedDiffEditor(accessor);\n    diffEditor === null || diffEditor === void 0 || diffEditor.accessibleDiffViewerNext();\n  }\n}\n_AccessibleDiffViewerNext = AccessibleDiffViewerNext;\n_AccessibleDiffViewerNext.id = 'editor.action.accessibleDiffViewer.next';\nexport class AccessibleDiffViewerPrev extends Action2 {\n  constructor() {\n    super({\n      id: AccessibleDiffViewerPrev.id,\n      title: localize2('editor.action.accessibleDiffViewer.prev', 'Go to Previous Difference'),\n      category: accessibleDiffViewerCategory,\n      precondition: ContextKeyExpr.has('isInDiffEditor'),\n      keybinding: {\n        primary: 1024 /* KeyMod.Shift */ | 65 /* KeyCode.F7 */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      },\n      f1: true\n    });\n  }\n  run(accessor) {\n    const diffEditor = findFocusedDiffEditor(accessor);\n    diffEditor === null || diffEditor === void 0 || diffEditor.accessibleDiffViewerPrev();\n  }\n}\n_AccessibleDiffViewerPrev = AccessibleDiffViewerPrev;\n_AccessibleDiffViewerPrev.id = 'editor.action.accessibleDiffViewer.prev';\nexport function findDiffEditor(accessor, originalUri, modifiedUri) {\n  const codeEditorService = accessor.get(ICodeEditorService);\n  const diffEditors = codeEditorService.listDiffEditors();\n  return diffEditors.find(diffEditor => {\n    var _modified$getModel, _original$getModel;\n    const modified = diffEditor.getModifiedEditor();\n    const original = diffEditor.getOriginalEditor();\n    return modified && ((_modified$getModel = modified.getModel()) === null || _modified$getModel === void 0 ? void 0 : _modified$getModel.uri.toString()) === modifiedUri.toString() && original && ((_original$getModel = original.getModel()) === null || _original$getModel === void 0 ? void 0 : _original$getModel.uri.toString()) === originalUri.toString();\n  }) || null;\n}\nexport function findFocusedDiffEditor(accessor) {\n  const codeEditorService = accessor.get(ICodeEditorService);\n  const diffEditors = codeEditorService.listDiffEditors();\n  const activeElement = getActiveElement();\n  if (activeElement) {\n    for (const d of diffEditors) {\n      const container = d.getContainerDomNode();\n      if (isElementOrParentOf(container, activeElement)) {\n        return d;\n      }\n    }\n  }\n  return null;\n}\nfunction isElementOrParentOf(elementOrParent, element) {\n  let e = element;\n  while (e) {\n    if (e === elementOrParent) {\n      return true;\n    }\n    e = e.parentElement;\n  }\n  return false;\n}","map":{"version":3,"names":["getActiveElement","Codicon","EditorAction2","ICodeEditorService","DiffEditorWidget","EditorContextKeys","localize2","Action2","MenuId","IConfigurationService","ContextKeyExpr","ToggleCollapseUnchangedRegions","constructor","id","title","icon","map","toggled","has","precondition","menu","when","EditorTitle","order","group","run","accessor","configurationService","get","newValue","getValue","updateValue","ToggleShowMovedCodeBlocks","ToggleUseInlineViewWhenSpaceIsLimited","diffEditorCategory","SwitchSide","arrowSwap","f1","category","runEditorCommand","editor","arg","diffEditor","findFocusedDiffEditor","dryRun","destinationSelection","mapToOtherSide","switchSide","undefined","ExitCompareMove","close","comparingMovedCode","keybinding","weight","primary","exitCompareMove","CollapseAllUnchangedRegions","fold","collapseAllUnchangedRegions","ShowAllUnchangedRegions","unfold","showAllUnchangedRegions","RevertHunkOrSelection","findDiffEditor","originalUri","modifiedUri","_arg$mapping$innerCha","revertRangeMappings","mapping","innerChanges","accessibleDiffViewerCategory","AccessibleDiffViewerNext","accessibleDiffViewerNext","_AccessibleDiffViewerNext","AccessibleDiffViewerPrev","accessibleDiffViewerPrev","_AccessibleDiffViewerPrev","codeEditorService","diffEditors","listDiffEditors","find","_modified$getModel","_original$getModel","modified","getModifiedEditor","original","getOriginalEditor","getModel","uri","toString","activeElement","d","container","getContainerDomNode","isElementOrParentOf","elementOrParent","element","e","parentElement"],"sources":["D:/ospanel/domains/react/react-intro-main/node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditor/commands.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getActiveElement } from '../../../../base/browser/dom.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { EditorAction2 } from '../../editorExtensions.js';\nimport { ICodeEditorService } from '../../services/codeEditorService.js';\nimport { DiffEditorWidget } from './diffEditorWidget.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { localize2 } from '../../../../nls.js';\nimport { Action2, MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport './registrations.contribution.js';\nexport class ToggleCollapseUnchangedRegions extends Action2 {\n    constructor() {\n        super({\n            id: 'diffEditor.toggleCollapseUnchangedRegions',\n            title: localize2('toggleCollapseUnchangedRegions', 'Toggle Collapse Unchanged Regions'),\n            icon: Codicon.map,\n            toggled: ContextKeyExpr.has('config.diffEditor.hideUnchangedRegions.enabled'),\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            menu: {\n                when: ContextKeyExpr.has('isInDiffEditor'),\n                id: MenuId.EditorTitle,\n                order: 22,\n                group: 'navigation',\n            },\n        });\n    }\n    run(accessor, ...args) {\n        const configurationService = accessor.get(IConfigurationService);\n        const newValue = !configurationService.getValue('diffEditor.hideUnchangedRegions.enabled');\n        configurationService.updateValue('diffEditor.hideUnchangedRegions.enabled', newValue);\n    }\n}\nexport class ToggleShowMovedCodeBlocks extends Action2 {\n    constructor() {\n        super({\n            id: 'diffEditor.toggleShowMovedCodeBlocks',\n            title: localize2('toggleShowMovedCodeBlocks', 'Toggle Show Moved Code Blocks'),\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n        });\n    }\n    run(accessor, ...args) {\n        const configurationService = accessor.get(IConfigurationService);\n        const newValue = !configurationService.getValue('diffEditor.experimental.showMoves');\n        configurationService.updateValue('diffEditor.experimental.showMoves', newValue);\n    }\n}\nexport class ToggleUseInlineViewWhenSpaceIsLimited extends Action2 {\n    constructor() {\n        super({\n            id: 'diffEditor.toggleUseInlineViewWhenSpaceIsLimited',\n            title: localize2('toggleUseInlineViewWhenSpaceIsLimited', 'Toggle Use Inline View When Space Is Limited'),\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n        });\n    }\n    run(accessor, ...args) {\n        const configurationService = accessor.get(IConfigurationService);\n        const newValue = !configurationService.getValue('diffEditor.useInlineViewWhenSpaceIsLimited');\n        configurationService.updateValue('diffEditor.useInlineViewWhenSpaceIsLimited', newValue);\n    }\n}\nconst diffEditorCategory = localize2('diffEditor', \"Diff Editor\");\nexport class SwitchSide extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'diffEditor.switchSide',\n            title: localize2('switchSide', 'Switch Side'),\n            icon: Codicon.arrowSwap,\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            f1: true,\n            category: diffEditorCategory,\n        });\n    }\n    runEditorCommand(accessor, editor, arg) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        if (diffEditor instanceof DiffEditorWidget) {\n            if (arg && arg.dryRun) {\n                return { destinationSelection: diffEditor.mapToOtherSide().destinationSelection };\n            }\n            else {\n                diffEditor.switchSide();\n            }\n        }\n        return undefined;\n    }\n}\nexport class ExitCompareMove extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'diffEditor.exitCompareMove',\n            title: localize2('exitCompareMove', 'Exit Compare Move'),\n            icon: Codicon.close,\n            precondition: EditorContextKeys.comparingMovedCode,\n            f1: false,\n            category: diffEditorCategory,\n            keybinding: {\n                weight: 10000,\n                primary: 9 /* KeyCode.Escape */,\n            }\n        });\n    }\n    runEditorCommand(accessor, editor, ...args) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        if (diffEditor instanceof DiffEditorWidget) {\n            diffEditor.exitCompareMove();\n        }\n    }\n}\nexport class CollapseAllUnchangedRegions extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'diffEditor.collapseAllUnchangedRegions',\n            title: localize2('collapseAllUnchangedRegions', 'Collapse All Unchanged Regions'),\n            icon: Codicon.fold,\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            f1: true,\n            category: diffEditorCategory,\n        });\n    }\n    runEditorCommand(accessor, editor, ...args) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        if (diffEditor instanceof DiffEditorWidget) {\n            diffEditor.collapseAllUnchangedRegions();\n        }\n    }\n}\nexport class ShowAllUnchangedRegions extends EditorAction2 {\n    constructor() {\n        super({\n            id: 'diffEditor.showAllUnchangedRegions',\n            title: localize2('showAllUnchangedRegions', 'Show All Unchanged Regions'),\n            icon: Codicon.unfold,\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            f1: true,\n            category: diffEditorCategory,\n        });\n    }\n    runEditorCommand(accessor, editor, ...args) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        if (diffEditor instanceof DiffEditorWidget) {\n            diffEditor.showAllUnchangedRegions();\n        }\n    }\n}\nexport class RevertHunkOrSelection extends Action2 {\n    constructor() {\n        super({\n            id: 'diffEditor.revert',\n            title: localize2('revert', 'Revert'),\n            f1: false,\n            category: diffEditorCategory,\n        });\n    }\n    run(accessor, arg) {\n        const diffEditor = findDiffEditor(accessor, arg.originalUri, arg.modifiedUri);\n        if (diffEditor instanceof DiffEditorWidget) {\n            diffEditor.revertRangeMappings(arg.mapping.innerChanges ?? []);\n        }\n        return undefined;\n    }\n}\nconst accessibleDiffViewerCategory = localize2('accessibleDiffViewer', \"Accessible Diff Viewer\");\nexport class AccessibleDiffViewerNext extends Action2 {\n    static { this.id = 'editor.action.accessibleDiffViewer.next'; }\n    constructor() {\n        super({\n            id: AccessibleDiffViewerNext.id,\n            title: localize2('editor.action.accessibleDiffViewer.next', 'Go to Next Difference'),\n            category: accessibleDiffViewerCategory,\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            keybinding: {\n                primary: 65 /* KeyCode.F7 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            f1: true,\n        });\n    }\n    run(accessor) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        diffEditor?.accessibleDiffViewerNext();\n    }\n}\nexport class AccessibleDiffViewerPrev extends Action2 {\n    static { this.id = 'editor.action.accessibleDiffViewer.prev'; }\n    constructor() {\n        super({\n            id: AccessibleDiffViewerPrev.id,\n            title: localize2('editor.action.accessibleDiffViewer.prev', 'Go to Previous Difference'),\n            category: accessibleDiffViewerCategory,\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            keybinding: {\n                primary: 1024 /* KeyMod.Shift */ | 65 /* KeyCode.F7 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            f1: true,\n        });\n    }\n    run(accessor) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        diffEditor?.accessibleDiffViewerPrev();\n    }\n}\nexport function findDiffEditor(accessor, originalUri, modifiedUri) {\n    const codeEditorService = accessor.get(ICodeEditorService);\n    const diffEditors = codeEditorService.listDiffEditors();\n    return diffEditors.find(diffEditor => {\n        const modified = diffEditor.getModifiedEditor();\n        const original = diffEditor.getOriginalEditor();\n        return modified && modified.getModel()?.uri.toString() === modifiedUri.toString()\n            && original && original.getModel()?.uri.toString() === originalUri.toString();\n    }) || null;\n}\nexport function findFocusedDiffEditor(accessor) {\n    const codeEditorService = accessor.get(ICodeEditorService);\n    const diffEditors = codeEditorService.listDiffEditors();\n    const activeElement = getActiveElement();\n    if (activeElement) {\n        for (const d of diffEditors) {\n            const container = d.getContainerDomNode();\n            if (isElementOrParentOf(container, activeElement)) {\n                return d;\n            }\n        }\n    }\n    return null;\n}\nfunction isElementOrParentOf(elementOrParent, element) {\n    let e = element;\n    while (e) {\n        if (e === elementOrParent) {\n            return true;\n        }\n        e = e.parentElement;\n    }\n    return false;\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA,SAASA,gBAAgB,QAAQ,iCAAiC;AAClE,SAASC,OAAO,QAAQ,qCAAqC;AAC7D,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,kBAAkB,QAAQ,qCAAqC;AACxE,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,SAASC,iBAAiB,QAAQ,sCAAsC;AACxE,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,OAAO,EAAEC,MAAM,QAAQ,gDAAgD;AAChF,SAASC,qBAAqB,QAAQ,4DAA4D;AAClG,SAASC,cAAc,QAAQ,sDAAsD;AACrF,OAAO,iCAAiC;AACxC,OAAO,MAAMC,8BAA8B,SAASJ,OAAO,CAAC;EACxDK,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFC,EAAE,EAAE,2CAA2C;MAC/CC,KAAK,EAAER,SAAS,CAAC,gCAAgC,EAAE,mCAAmC,CAAC;MACvFS,IAAI,EAAEd,OAAO,CAACe,GAAG;MACjBC,OAAO,EAAEP,cAAc,CAACQ,GAAG,CAAC,gDAAgD,CAAC;MAC7EC,YAAY,EAAET,cAAc,CAACQ,GAAG,CAAC,gBAAgB,CAAC;MAClDE,IAAI,EAAE;QACFC,IAAI,EAAEX,cAAc,CAACQ,GAAG,CAAC,gBAAgB,CAAC;QAC1CL,EAAE,EAAEL,MAAM,CAACc,WAAW;QACtBC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE;MACX;IACJ,CAAC,CAAC;EACN;EACAC,GAAGA,CAACC,QAAQ,EAAW;IACnB,MAAMC,oBAAoB,GAAGD,QAAQ,CAACE,GAAG,CAACnB,qBAAqB,CAAC;IAChE,MAAMoB,QAAQ,GAAG,CAACF,oBAAoB,CAACG,QAAQ,CAAC,yCAAyC,CAAC;IAC1FH,oBAAoB,CAACI,WAAW,CAAC,yCAAyC,EAAEF,QAAQ,CAAC;EACzF;AACJ;AACA,OAAO,MAAMG,yBAAyB,SAASzB,OAAO,CAAC;EACnDK,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFC,EAAE,EAAE,sCAAsC;MAC1CC,KAAK,EAAER,SAAS,CAAC,2BAA2B,EAAE,+BAA+B,CAAC;MAC9Ea,YAAY,EAAET,cAAc,CAACQ,GAAG,CAAC,gBAAgB;IACrD,CAAC,CAAC;EACN;EACAO,GAAGA,CAACC,QAAQ,EAAW;IACnB,MAAMC,oBAAoB,GAAGD,QAAQ,CAACE,GAAG,CAACnB,qBAAqB,CAAC;IAChE,MAAMoB,QAAQ,GAAG,CAACF,oBAAoB,CAACG,QAAQ,CAAC,mCAAmC,CAAC;IACpFH,oBAAoB,CAACI,WAAW,CAAC,mCAAmC,EAAEF,QAAQ,CAAC;EACnF;AACJ;AACA,OAAO,MAAMI,qCAAqC,SAAS1B,OAAO,CAAC;EAC/DK,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFC,EAAE,EAAE,kDAAkD;MACtDC,KAAK,EAAER,SAAS,CAAC,uCAAuC,EAAE,8CAA8C,CAAC;MACzGa,YAAY,EAAET,cAAc,CAACQ,GAAG,CAAC,gBAAgB;IACrD,CAAC,CAAC;EACN;EACAO,GAAGA,CAACC,QAAQ,EAAW;IACnB,MAAMC,oBAAoB,GAAGD,QAAQ,CAACE,GAAG,CAACnB,qBAAqB,CAAC;IAChE,MAAMoB,QAAQ,GAAG,CAACF,oBAAoB,CAACG,QAAQ,CAAC,4CAA4C,CAAC;IAC7FH,oBAAoB,CAACI,WAAW,CAAC,4CAA4C,EAAEF,QAAQ,CAAC;EAC5F;AACJ;AACA,MAAMK,kBAAkB,GAAG5B,SAAS,CAAC,YAAY,EAAE,aAAa,CAAC;AACjE,OAAO,MAAM6B,UAAU,SAASjC,aAAa,CAAC;EAC1CU,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFC,EAAE,EAAE,uBAAuB;MAC3BC,KAAK,EAAER,SAAS,CAAC,YAAY,EAAE,aAAa,CAAC;MAC7CS,IAAI,EAAEd,OAAO,CAACmC,SAAS;MACvBjB,YAAY,EAAET,cAAc,CAACQ,GAAG,CAAC,gBAAgB,CAAC;MAClDmB,EAAE,EAAE,IAAI;MACRC,QAAQ,EAAEJ;IACd,CAAC,CAAC;EACN;EACAK,gBAAgBA,CAACb,QAAQ,EAAEc,MAAM,EAAEC,GAAG,EAAE;IACpC,MAAMC,UAAU,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;IAClD,IAAIgB,UAAU,YAAYtC,gBAAgB,EAAE;MACxC,IAAIqC,GAAG,IAAIA,GAAG,CAACG,MAAM,EAAE;QACnB,OAAO;UAAEC,oBAAoB,EAAEH,UAAU,CAACI,cAAc,CAAC,CAAC,CAACD;QAAqB,CAAC;MACrF,CAAC,MACI;QACDH,UAAU,CAACK,UAAU,CAAC,CAAC;MAC3B;IACJ;IACA,OAAOC,SAAS;EACpB;AACJ;AACA,OAAO,MAAMC,eAAe,SAAS/C,aAAa,CAAC;EAC/CU,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFC,EAAE,EAAE,4BAA4B;MAChCC,KAAK,EAAER,SAAS,CAAC,iBAAiB,EAAE,mBAAmB,CAAC;MACxDS,IAAI,EAAEd,OAAO,CAACiD,KAAK;MACnB/B,YAAY,EAAEd,iBAAiB,CAAC8C,kBAAkB;MAClDd,EAAE,EAAE,KAAK;MACTC,QAAQ,EAAEJ,kBAAkB;MAC5BkB,UAAU,EAAE;QACRC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE,CAAC,CAAC;MACf;IACJ,CAAC,CAAC;EACN;EACAf,gBAAgBA,CAACb,QAAQ,EAAEc,MAAM,EAAW;IACxC,MAAME,UAAU,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;IAClD,IAAIgB,UAAU,YAAYtC,gBAAgB,EAAE;MACxCsC,UAAU,CAACa,eAAe,CAAC,CAAC;IAChC;EACJ;AACJ;AACA,OAAO,MAAMC,2BAA2B,SAAStD,aAAa,CAAC;EAC3DU,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFC,EAAE,EAAE,wCAAwC;MAC5CC,KAAK,EAAER,SAAS,CAAC,6BAA6B,EAAE,gCAAgC,CAAC;MACjFS,IAAI,EAAEd,OAAO,CAACwD,IAAI;MAClBtC,YAAY,EAAET,cAAc,CAACQ,GAAG,CAAC,gBAAgB,CAAC;MAClDmB,EAAE,EAAE,IAAI;MACRC,QAAQ,EAAEJ;IACd,CAAC,CAAC;EACN;EACAK,gBAAgBA,CAACb,QAAQ,EAAEc,MAAM,EAAW;IACxC,MAAME,UAAU,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;IAClD,IAAIgB,UAAU,YAAYtC,gBAAgB,EAAE;MACxCsC,UAAU,CAACgB,2BAA2B,CAAC,CAAC;IAC5C;EACJ;AACJ;AACA,OAAO,MAAMC,uBAAuB,SAASzD,aAAa,CAAC;EACvDU,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFC,EAAE,EAAE,oCAAoC;MACxCC,KAAK,EAAER,SAAS,CAAC,yBAAyB,EAAE,4BAA4B,CAAC;MACzES,IAAI,EAAEd,OAAO,CAAC2D,MAAM;MACpBzC,YAAY,EAAET,cAAc,CAACQ,GAAG,CAAC,gBAAgB,CAAC;MAClDmB,EAAE,EAAE,IAAI;MACRC,QAAQ,EAAEJ;IACd,CAAC,CAAC;EACN;EACAK,gBAAgBA,CAACb,QAAQ,EAAEc,MAAM,EAAW;IACxC,MAAME,UAAU,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;IAClD,IAAIgB,UAAU,YAAYtC,gBAAgB,EAAE;MACxCsC,UAAU,CAACmB,uBAAuB,CAAC,CAAC;IACxC;EACJ;AACJ;AACA,OAAO,MAAMC,qBAAqB,SAASvD,OAAO,CAAC;EAC/CK,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFC,EAAE,EAAE,mBAAmB;MACvBC,KAAK,EAAER,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC;MACpC+B,EAAE,EAAE,KAAK;MACTC,QAAQ,EAAEJ;IACd,CAAC,CAAC;EACN;EACAT,GAAGA,CAACC,QAAQ,EAAEe,GAAG,EAAE;IACf,MAAMC,UAAU,GAAGqB,cAAc,CAACrC,QAAQ,EAAEe,GAAG,CAACuB,WAAW,EAAEvB,GAAG,CAACwB,WAAW,CAAC;IAC7E,IAAIvB,UAAU,YAAYtC,gBAAgB,EAAE;MAAA,IAAA8D,qBAAA;MACxCxB,UAAU,CAACyB,mBAAmB,EAAAD,qBAAA,GAACzB,GAAG,CAAC2B,OAAO,CAACC,YAAY,cAAAH,qBAAA,cAAAA,qBAAA,GAAI,EAAE,CAAC;IAClE;IACA,OAAOlB,SAAS;EACpB;AACJ;AACA,MAAMsB,4BAA4B,GAAGhE,SAAS,CAAC,sBAAsB,EAAE,wBAAwB,CAAC;AAChG,OAAO,MAAMiE,wBAAwB,SAAShE,OAAO,CAAC;EAElDK,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFC,EAAE,EAAE0D,wBAAwB,CAAC1D,EAAE;MAC/BC,KAAK,EAAER,SAAS,CAAC,yCAAyC,EAAE,uBAAuB,CAAC;MACpFgC,QAAQ,EAAEgC,4BAA4B;MACtCnD,YAAY,EAAET,cAAc,CAACQ,GAAG,CAAC,gBAAgB,CAAC;MAClDkC,UAAU,EAAE;QACRE,OAAO,EAAE,EAAE,CAAC;QACZD,MAAM,EAAE,GAAG,CAAC;MAChB,CAAC;MACDhB,EAAE,EAAE;IACR,CAAC,CAAC;EACN;EACAZ,GAAGA,CAACC,QAAQ,EAAE;IACV,MAAMgB,UAAU,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;IAClDgB,UAAU,aAAVA,UAAU,eAAVA,UAAU,CAAE8B,wBAAwB,CAAC,CAAC;EAC1C;AACJ;AAACC,yBAAA,GAnBYF,wBAAwB;AACxBE,yBAAA,CAAK5D,EAAE,GAAG,yCAAyC;AAmBhE,OAAO,MAAM6D,wBAAwB,SAASnE,OAAO,CAAC;EAElDK,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC;MACFC,EAAE,EAAE6D,wBAAwB,CAAC7D,EAAE;MAC/BC,KAAK,EAAER,SAAS,CAAC,yCAAyC,EAAE,2BAA2B,CAAC;MACxFgC,QAAQ,EAAEgC,4BAA4B;MACtCnD,YAAY,EAAET,cAAc,CAACQ,GAAG,CAAC,gBAAgB,CAAC;MAClDkC,UAAU,EAAE;QACRE,OAAO,EAAE,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACtCD,MAAM,EAAE,GAAG,CAAC;MAChB,CAAC;MACDhB,EAAE,EAAE;IACR,CAAC,CAAC;EACN;EACAZ,GAAGA,CAACC,QAAQ,EAAE;IACV,MAAMgB,UAAU,GAAGC,qBAAqB,CAACjB,QAAQ,CAAC;IAClDgB,UAAU,aAAVA,UAAU,eAAVA,UAAU,CAAEiC,wBAAwB,CAAC,CAAC;EAC1C;AACJ;AAACC,yBAAA,GAnBYF,wBAAwB;AACxBE,yBAAA,CAAK/D,EAAE,GAAG,yCAAyC;AAmBhE,OAAO,SAASkD,cAAcA,CAACrC,QAAQ,EAAEsC,WAAW,EAAEC,WAAW,EAAE;EAC/D,MAAMY,iBAAiB,GAAGnD,QAAQ,CAACE,GAAG,CAACzB,kBAAkB,CAAC;EAC1D,MAAM2E,WAAW,GAAGD,iBAAiB,CAACE,eAAe,CAAC,CAAC;EACvD,OAAOD,WAAW,CAACE,IAAI,CAACtC,UAAU,IAAI;IAAA,IAAAuC,kBAAA,EAAAC,kBAAA;IAClC,MAAMC,QAAQ,GAAGzC,UAAU,CAAC0C,iBAAiB,CAAC,CAAC;IAC/C,MAAMC,QAAQ,GAAG3C,UAAU,CAAC4C,iBAAiB,CAAC,CAAC;IAC/C,OAAOH,QAAQ,IAAI,EAAAF,kBAAA,GAAAE,QAAQ,CAACI,QAAQ,CAAC,CAAC,cAAAN,kBAAA,uBAAnBA,kBAAA,CAAqBO,GAAG,CAACC,QAAQ,CAAC,CAAC,MAAKxB,WAAW,CAACwB,QAAQ,CAAC,CAAC,IAC1EJ,QAAQ,IAAI,EAAAH,kBAAA,GAAAG,QAAQ,CAACE,QAAQ,CAAC,CAAC,cAAAL,kBAAA,uBAAnBA,kBAAA,CAAqBM,GAAG,CAACC,QAAQ,CAAC,CAAC,MAAKzB,WAAW,CAACyB,QAAQ,CAAC,CAAC;EACrF,CAAC,CAAC,IAAI,IAAI;AACd;AACA,OAAO,SAAS9C,qBAAqBA,CAACjB,QAAQ,EAAE;EAC5C,MAAMmD,iBAAiB,GAAGnD,QAAQ,CAACE,GAAG,CAACzB,kBAAkB,CAAC;EAC1D,MAAM2E,WAAW,GAAGD,iBAAiB,CAACE,eAAe,CAAC,CAAC;EACvD,MAAMW,aAAa,GAAG1F,gBAAgB,CAAC,CAAC;EACxC,IAAI0F,aAAa,EAAE;IACf,KAAK,MAAMC,CAAC,IAAIb,WAAW,EAAE;MACzB,MAAMc,SAAS,GAAGD,CAAC,CAACE,mBAAmB,CAAC,CAAC;MACzC,IAAIC,mBAAmB,CAACF,SAAS,EAAEF,aAAa,CAAC,EAAE;QAC/C,OAAOC,CAAC;MACZ;IACJ;EACJ;EACA,OAAO,IAAI;AACf;AACA,SAASG,mBAAmBA,CAACC,eAAe,EAAEC,OAAO,EAAE;EACnD,IAAIC,CAAC,GAAGD,OAAO;EACf,OAAOC,CAAC,EAAE;IACN,IAAIA,CAAC,KAAKF,eAAe,EAAE;MACvB,OAAO,IAAI;IACf;IACAE,CAAC,GAAGA,CAAC,CAACC,aAAa;EACvB;EACA,OAAO,KAAK;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
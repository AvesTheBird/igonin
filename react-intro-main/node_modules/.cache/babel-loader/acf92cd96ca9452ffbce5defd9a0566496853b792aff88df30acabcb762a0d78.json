{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Action to add or remove a child in a model.\n *\n * Constructor: mxChildChange\n *\n * Constructs a change of a child in the\n * specified model.\n *\n * @class ChildChange\n */\nexport class ChildChange {\n  constructor(model, parent, child, index = 0) {\n    this.model = model;\n    this.parent = parent;\n    this.previous = parent;\n    this.child = child;\n    this.index = index;\n    this.previousIndex = index;\n  }\n  /**\n   * Changes the parent of {@link child}` using\n   * <Transactions.parentForCellChanged> and\n   * removes or restores the cell's\n   * connections.\n   */\n  execute() {\n    let tmp = this.child.getParent();\n    const tmp2 = tmp ? tmp.getIndex(this.child) : 0;\n    if (!this.previous) {\n      this.connect(this.child, false);\n    }\n    tmp = this.model.parentForCellChanged(this.child, this.previous, this.previousIndex);\n    if (this.previous) {\n      this.connect(this.child, true);\n    }\n    this.parent = this.previous;\n    this.previous = tmp;\n    this.index = this.previousIndex;\n    this.previousIndex = tmp2;\n  }\n  /**\n   * Disconnects the given cell recursively from its\n   * terminals and stores the previous terminal in the\n   * cell's terminals.\n   *\n   * @warning doc from mxGraph source code is incorrect\n   */\n  connect(cell, isConnect = true) {\n    const source = cell.getTerminal(true);\n    const target = cell.getTerminal(false);\n    if (source) {\n      if (isConnect) {\n        this.model.terminalForCellChanged(cell, source, true);\n      } else {\n        this.model.terminalForCellChanged(cell, null, true);\n      }\n    }\n    if (target) {\n      if (isConnect) {\n        this.model.terminalForCellChanged(cell, target, false);\n      } else {\n        this.model.terminalForCellChanged(cell, null, false);\n      }\n    }\n    cell.setTerminal(source, true);\n    cell.setTerminal(target, false);\n    const childCount = cell.getChildCount();\n    for (let i = 0; i < childCount; i += 1) {\n      this.connect(cell.getChildAt(i), isConnect);\n    }\n  }\n}\nexport default ChildChange;","map":{"version":3,"names":["ChildChange","constructor","model","parent","child","index","previous","previousIndex","execute","tmp","getParent","tmp2","getIndex","connect","parentForCellChanged","cell","isConnect","source","getTerminal","target","terminalForCellChanged","setTerminal","childCount","getChildCount","i","getChildAt"],"sources":["D:/ospanel/domains/old/react/react-intro/node_modules/@maxgraph/core/dist/view/undoable_changes/ChildChange.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Action to add or remove a child in a model.\n *\n * Constructor: mxChildChange\n *\n * Constructs a change of a child in the\n * specified model.\n *\n * @class ChildChange\n */\nexport class ChildChange {\n    constructor(model, parent, child, index = 0) {\n        this.model = model;\n        this.parent = parent;\n        this.previous = parent;\n        this.child = child;\n        this.index = index;\n        this.previousIndex = index;\n    }\n    /**\n     * Changes the parent of {@link child}` using\n     * <Transactions.parentForCellChanged> and\n     * removes or restores the cell's\n     * connections.\n     */\n    execute() {\n        let tmp = this.child.getParent();\n        const tmp2 = tmp ? tmp.getIndex(this.child) : 0;\n        if (!this.previous) {\n            this.connect(this.child, false);\n        }\n        tmp = this.model.parentForCellChanged(this.child, this.previous, this.previousIndex);\n        if (this.previous) {\n            this.connect(this.child, true);\n        }\n        this.parent = this.previous;\n        this.previous = tmp;\n        this.index = this.previousIndex;\n        this.previousIndex = tmp2;\n    }\n    /**\n     * Disconnects the given cell recursively from its\n     * terminals and stores the previous terminal in the\n     * cell's terminals.\n     *\n     * @warning doc from mxGraph source code is incorrect\n     */\n    connect(cell, isConnect = true) {\n        const source = cell.getTerminal(true);\n        const target = cell.getTerminal(false);\n        if (source) {\n            if (isConnect) {\n                this.model.terminalForCellChanged(cell, source, true);\n            }\n            else {\n                this.model.terminalForCellChanged(cell, null, true);\n            }\n        }\n        if (target) {\n            if (isConnect) {\n                this.model.terminalForCellChanged(cell, target, false);\n            }\n            else {\n                this.model.terminalForCellChanged(cell, null, false);\n            }\n        }\n        cell.setTerminal(source, true);\n        cell.setTerminal(target, false);\n        const childCount = cell.getChildCount();\n        for (let i = 0; i < childCount; i += 1) {\n            this.connect(cell.getChildAt(i), isConnect);\n        }\n    }\n}\nexport default ChildChange;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\nvar escapeMap = {\n  '&': '&amp;',\n  '\"': '&quot;',\n  '<': '&lt;',\n  '>': '&gt;'\n};\nfunction xscape(val) {\n  if (typeof val !== 'string') {\n    return val;\n  }\n  return val.replace(/([&\"<>])/g, function (_, e) {\n    return escapeMap[e];\n  });\n}\nvar token = /<o>|<ins>|<s>|<sub>|<sup>|<b>|<i>|<tt>|<\\/o>|<\\/ins>|<\\/s>|<\\/sub>|<\\/sup>|<\\/b>|<\\/i>|<\\/tt>/;\nfunction update(s, cmd) {\n  if (cmd.add) {\n    cmd.add.split(';').forEach(function (e) {\n      var arr = e.split(' ');\n      s[arr[0]][arr[1]] = true;\n    });\n  }\n  if (cmd.del) {\n    cmd.del.split(';').forEach(function (e) {\n      var arr = e.split(' ');\n      delete s[arr[0]][arr[1]];\n    });\n  }\n}\nvar trans = {\n  '<o>': {\n    add: 'text-decoration overline'\n  },\n  '</o>': {\n    del: 'text-decoration overline'\n  },\n  '<ins>': {\n    add: 'text-decoration underline'\n  },\n  '</ins>': {\n    del: 'text-decoration underline'\n  },\n  '<s>': {\n    add: 'text-decoration line-through'\n  },\n  '</s>': {\n    del: 'text-decoration line-through'\n  },\n  '<b>': {\n    add: 'font-weight bold'\n  },\n  '</b>': {\n    del: 'font-weight bold'\n  },\n  '<i>': {\n    add: 'font-style italic'\n  },\n  '</i>': {\n    del: 'font-style italic'\n  },\n  '<sub>': {\n    add: 'baseline-shift sub;font-size .7em'\n  },\n  '</sub>': {\n    del: 'baseline-shift sub;font-size .7em'\n  },\n  '<sup>': {\n    add: 'baseline-shift super;font-size .7em'\n  },\n  '</sup>': {\n    del: 'baseline-shift super;font-size .7em'\n  },\n  '<tt>': {\n    add: 'font-family monospace'\n  },\n  '</tt>': {\n    del: 'font-family monospace'\n  }\n};\nfunction dump(s) {\n  return Object.keys(s).reduce(function (pre, cur) {\n    var keys = Object.keys(s[cur]);\n    if (keys.length > 0) {\n      pre[cur] = keys.join(' ');\n    }\n    return pre;\n  }, {});\n}\nfunction parse(str) {\n  var state, res, i, m, a;\n  if (str === undefined) {\n    return [];\n  }\n  if (typeof str === 'number') {\n    return [str + ''];\n  }\n  if (typeof str !== 'string') {\n    return [str];\n  }\n  res = [];\n  state = {\n    'text-decoration': {},\n    'font-weight': {},\n    'font-style': {},\n    'baseline-shift': {},\n    'font-size': {},\n    'font-family': {}\n  };\n  while (true) {\n    i = str.search(token);\n    if (i === -1) {\n      res.push(['tspan', dump(state), xscape(str)]);\n      return res;\n    }\n    if (i > 0) {\n      a = str.slice(0, i);\n      res.push(['tspan', dump(state), xscape(a)]);\n    }\n    m = str.match(token)[0];\n    update(state, trans[m]);\n    str = str.slice(i + m.length);\n    if (str.length === 0) {\n      return res;\n    }\n  }\n}\nmodule.exports = parse;\n/* eslint no-constant-condition: 0 */","map":{"version":3,"names":["escapeMap","xscape","val","replace","_","e","token","update","s","cmd","add","split","forEach","arr","del","trans","dump","Object","keys","reduce","pre","cur","length","join","parse","str","state","res","i","m","a","undefined","search","push","slice","match","module","exports"],"sources":["D:/ospanel/domains/react/react-intro-main/node_modules/tspan/lib/parse.js"],"sourcesContent":["'use strict';\n\nvar escapeMap = {\n    '&': '&amp;',\n    '\"': '&quot;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\n\nfunction xscape (val) {\n    if (typeof val !== 'string') {\n        return val;\n    }\n    return val.replace(\n        /([&\"<>])/g,\n        function (_, e) {\n            return escapeMap[e];\n        }\n    );\n}\n\nvar token = /<o>|<ins>|<s>|<sub>|<sup>|<b>|<i>|<tt>|<\\/o>|<\\/ins>|<\\/s>|<\\/sub>|<\\/sup>|<\\/b>|<\\/i>|<\\/tt>/;\n\nfunction update (s, cmd) {\n    if (cmd.add) {\n        cmd.add.split(';').forEach(function (e) {\n            var arr = e.split(' ');\n            s[arr[0]][arr[1]] = true;\n        });\n    }\n    if (cmd.del) {\n        cmd.del.split(';').forEach(function (e) {\n            var arr = e.split(' ');\n            delete s[arr[0]][arr[1]];\n        });\n    }\n}\n\nvar trans = {\n    '<o>'    : { add: 'text-decoration overline' },\n    '</o>'   : { del: 'text-decoration overline' },\n\n    '<ins>'  : { add: 'text-decoration underline' },\n    '</ins>' : { del: 'text-decoration underline' },\n\n    '<s>'    : { add: 'text-decoration line-through' },\n    '</s>'   : { del: 'text-decoration line-through' },\n\n    '<b>'    : { add: 'font-weight bold' },\n    '</b>'   : { del: 'font-weight bold' },\n\n    '<i>'    : { add: 'font-style italic' },\n    '</i>'   : { del: 'font-style italic' },\n\n    '<sub>'  : { add: 'baseline-shift sub;font-size .7em' },\n    '</sub>' : { del: 'baseline-shift sub;font-size .7em' },\n\n    '<sup>'  : { add: 'baseline-shift super;font-size .7em' },\n    '</sup>' : { del: 'baseline-shift super;font-size .7em' },\n\n    '<tt>'   : { add: 'font-family monospace' },\n    '</tt>'  : { del: 'font-family monospace' }\n};\n\nfunction dump (s) {\n    return Object.keys(s).reduce(function (pre, cur) {\n        var keys = Object.keys(s[cur]);\n        if (keys.length > 0) {\n            pre[cur] = keys.join(' ');\n        }\n        return pre;\n    }, {});\n}\n\nfunction parse (str) {\n    var state, res, i, m, a;\n\n    if (str === undefined) {\n        return [];\n    }\n\n    if (typeof str === 'number') {\n        return [str + ''];\n    }\n\n    if (typeof str !== 'string') {\n        return [str];\n    }\n\n    res = [];\n\n    state = {\n        'text-decoration': {},\n        'font-weight': {},\n        'font-style': {},\n        'baseline-shift': {},\n        'font-size': {},\n        'font-family': {}\n    };\n\n    while (true) {\n        i = str.search(token);\n\n        if (i === -1) {\n            res.push(['tspan', dump(state), xscape(str)]);\n            return res;\n        }\n\n        if (i > 0) {\n            a = str.slice(0, i);\n            res.push(['tspan', dump(state), xscape(a)]);\n        }\n\n        m = str.match(token)[0];\n\n        update(state, trans[m]);\n\n        str = str.slice(i + m.length);\n\n        if (str.length === 0) {\n            return res;\n        }\n    }\n}\n\nmodule.exports = parse;\n/* eslint no-constant-condition: 0 */\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
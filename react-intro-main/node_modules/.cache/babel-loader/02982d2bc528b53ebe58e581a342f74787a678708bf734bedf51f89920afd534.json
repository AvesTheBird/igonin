{"ast":null,"code":"var _SuggestController, _TriggerSuggestAction;\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar SuggestController_1;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { KeyCodeChord } from '../../../../base/common/keybindings.js';\nimport { DisposableStore, dispose, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { assertType, isObject } from '../../../../base/common/types.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { ISuggestMemoryService } from './suggestMemory.js';\nimport { WordContextKey } from './wordContextKey.js';\nimport * as nls from '../../../../nls.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { Context as SuggestContext, suggestWidgetStatusbarMenu } from './suggest.js';\nimport { SuggestAlternatives } from './suggestAlternatives.js';\nimport { CommitCharacterController } from './suggestCommitCharacters.js';\nimport { SuggestModel } from './suggestModel.js';\nimport { OvertypingCapturer } from './suggestOvertypingCapturer.js';\nimport { SuggestWidget } from './suggestWidget.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { basename, extname } from '../../../../base/common/resources.js';\nimport { hash } from '../../../../base/common/hash.js';\nimport { WindowIdleValue, getWindow } from '../../../../base/browser/dom.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\n// sticky suggest widget which doesn't disappear on focus out and such\nconst _sticky = false;\nclass LineSuffix {\n  constructor(_model, _position) {\n    this._model = _model;\n    this._position = _position;\n    this._decorationOptions = ModelDecorationOptions.register({\n      description: 'suggest-line-suffix',\n      stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */\n    });\n    // spy on what's happening right of the cursor. two cases:\n    // 1. end of line -> check that it's still end of line\n    // 2. mid of line -> add a marker and compute the delta\n    const maxColumn = _model.getLineMaxColumn(_position.lineNumber);\n    if (maxColumn !== _position.column) {\n      const offset = _model.getOffsetAt(_position);\n      const end = _model.getPositionAt(offset + 1);\n      _model.changeDecorations(accessor => {\n        if (this._marker) {\n          accessor.removeDecoration(this._marker);\n        }\n        this._marker = accessor.addDecoration(Range.fromPositions(_position, end), this._decorationOptions);\n      });\n    }\n  }\n  dispose() {\n    if (this._marker && !this._model.isDisposed()) {\n      this._model.changeDecorations(accessor => {\n        accessor.removeDecoration(this._marker);\n        this._marker = undefined;\n      });\n    }\n  }\n  delta(position) {\n    if (this._model.isDisposed() || this._position.lineNumber !== position.lineNumber) {\n      // bail out early if things seems fishy\n      return 0;\n    }\n    // read the marker (in case suggest was triggered at line end) or compare\n    // the cursor to the line end.\n    if (this._marker) {\n      const range = this._model.getDecorationRange(this._marker);\n      const end = this._model.getOffsetAt(range.getStartPosition());\n      return end - this._model.getOffsetAt(position);\n    } else {\n      return this._model.getLineMaxColumn(position.lineNumber) - position.column;\n    }\n  }\n}\nlet SuggestController = (_SuggestController = class SuggestController {\n  static get(editor) {\n    return editor.getContribution(SuggestController_1.ID);\n  }\n  constructor(editor, _memoryService, _commandService, _contextKeyService, _instantiationService, _logService, _telemetryService) {\n    this._memoryService = _memoryService;\n    this._commandService = _commandService;\n    this._contextKeyService = _contextKeyService;\n    this._instantiationService = _instantiationService;\n    this._logService = _logService;\n    this._telemetryService = _telemetryService;\n    this._lineSuffix = new MutableDisposable();\n    this._toDispose = new DisposableStore();\n    this._selectors = new PriorityRegistry(s => s.priority);\n    this._onWillInsertSuggestItem = new Emitter();\n    this.onWillInsertSuggestItem = this._onWillInsertSuggestItem.event;\n    this.editor = editor;\n    this.model = _instantiationService.createInstance(SuggestModel, this.editor);\n    // default selector\n    this._selectors.register({\n      priority: 0,\n      select: (model, pos, items) => this._memoryService.select(model, pos, items)\n    });\n    // context key: update insert/replace mode\n    const ctxInsertMode = SuggestContext.InsertMode.bindTo(_contextKeyService);\n    ctxInsertMode.set(editor.getOption(119 /* EditorOption.suggest */).insertMode);\n    this._toDispose.add(this.model.onDidTrigger(() => ctxInsertMode.set(editor.getOption(119 /* EditorOption.suggest */).insertMode)));\n    this.widget = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n      const widget = this._instantiationService.createInstance(SuggestWidget, this.editor);\n      this._toDispose.add(widget);\n      this._toDispose.add(widget.onDidSelect(item => this._insertSuggestion(item, 0 /* InsertFlags.None */), this));\n      // Wire up logic to accept a suggestion on certain characters\n      const commitCharacterController = new CommitCharacterController(this.editor, widget, this.model, item => this._insertSuggestion(item, 2 /* InsertFlags.NoAfterUndoStop */));\n      this._toDispose.add(commitCharacterController);\n      // Wire up makes text edit context key\n      const ctxMakesTextEdit = SuggestContext.MakesTextEdit.bindTo(this._contextKeyService);\n      const ctxHasInsertAndReplace = SuggestContext.HasInsertAndReplaceRange.bindTo(this._contextKeyService);\n      const ctxCanResolve = SuggestContext.CanResolve.bindTo(this._contextKeyService);\n      this._toDispose.add(toDisposable(() => {\n        ctxMakesTextEdit.reset();\n        ctxHasInsertAndReplace.reset();\n        ctxCanResolve.reset();\n      }));\n      this._toDispose.add(widget.onDidFocus(_ref => {\n        let {\n          item\n        } = _ref;\n        // (ctx: makesTextEdit)\n        const position = this.editor.getPosition();\n        const startColumn = item.editStart.column;\n        const endColumn = position.column;\n        let value = true;\n        if (this.editor.getOption(1 /* EditorOption.acceptSuggestionOnEnter */) === 'smart' && this.model.state === 2 /* State.Auto */ && !item.completion.additionalTextEdits && !(item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */) && endColumn - startColumn === item.completion.insertText.length) {\n          const oldText = this.editor.getModel().getValueInRange({\n            startLineNumber: position.lineNumber,\n            startColumn,\n            endLineNumber: position.lineNumber,\n            endColumn\n          });\n          value = oldText !== item.completion.insertText;\n        }\n        ctxMakesTextEdit.set(value);\n        // (ctx: hasInsertAndReplaceRange)\n        ctxHasInsertAndReplace.set(!Position.equals(item.editInsertEnd, item.editReplaceEnd));\n        // (ctx: canResolve)\n        ctxCanResolve.set(Boolean(item.provider.resolveCompletionItem) || Boolean(item.completion.documentation) || item.completion.detail !== item.completion.label);\n      }));\n      this._toDispose.add(widget.onDetailsKeyDown(e => {\n        // cmd + c on macOS, ctrl + c on Win / Linux\n        if (e.toKeyCodeChord().equals(new KeyCodeChord(true, false, false, false, 33 /* KeyCode.KeyC */)) || platform.isMacintosh && e.toKeyCodeChord().equals(new KeyCodeChord(false, false, false, true, 33 /* KeyCode.KeyC */))) {\n          e.stopPropagation();\n          return;\n        }\n        if (!e.toKeyCodeChord().isModifierKey()) {\n          this.editor.focus();\n        }\n      }));\n      return widget;\n    }));\n    // Wire up text overtyping capture\n    this._overtypingCapturer = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n      return this._toDispose.add(new OvertypingCapturer(this.editor, this.model));\n    }));\n    this._alternatives = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n      return this._toDispose.add(new SuggestAlternatives(this.editor, this._contextKeyService));\n    }));\n    this._toDispose.add(_instantiationService.createInstance(WordContextKey, editor));\n    this._toDispose.add(this.model.onDidTrigger(e => {\n      this.widget.value.showTriggered(e.auto, e.shy ? 250 : 50);\n      this._lineSuffix.value = new LineSuffix(this.editor.getModel(), e.position);\n    }));\n    this._toDispose.add(this.model.onDidSuggest(e => {\n      if (e.triggerOptions.shy) {\n        return;\n      }\n      let index = -1;\n      for (const selector of this._selectors.itemsOrderedByPriorityDesc) {\n        index = selector.select(this.editor.getModel(), this.editor.getPosition(), e.completionModel.items);\n        if (index !== -1) {\n          break;\n        }\n      }\n      if (index === -1) {\n        index = 0;\n      }\n      if (this.model.state === 0 /* State.Idle */) {\n        // selecting an item can \"pump\" out selection/cursor change events\n        // which can cancel suggest halfway through this function. therefore\n        // we need to check again and bail if the session has been canceled\n        return;\n      }\n      let noFocus = false;\n      if (e.triggerOptions.auto) {\n        // don't \"focus\" item when configured to do\n        const options = this.editor.getOption(119 /* EditorOption.suggest */);\n        if (options.selectionMode === 'never' || options.selectionMode === 'always') {\n          // simple: always or never\n          noFocus = options.selectionMode === 'never';\n        } else if (options.selectionMode === 'whenTriggerCharacter') {\n          // on with trigger character\n          noFocus = e.triggerOptions.triggerKind !== 1 /* CompletionTriggerKind.TriggerCharacter */;\n        } else if (options.selectionMode === 'whenQuickSuggestion') {\n          // without trigger character or when refiltering\n          noFocus = e.triggerOptions.triggerKind === 1 /* CompletionTriggerKind.TriggerCharacter */ && !e.triggerOptions.refilter;\n        }\n      }\n      this.widget.value.showSuggestions(e.completionModel, index, e.isFrozen, e.triggerOptions.auto, noFocus);\n    }));\n    this._toDispose.add(this.model.onDidCancel(e => {\n      if (!e.retrigger) {\n        this.widget.value.hideWidget();\n      }\n    }));\n    this._toDispose.add(this.editor.onDidBlurEditorWidget(() => {\n      if (!_sticky) {\n        this.model.cancel();\n        this.model.clear();\n      }\n    }));\n    // Manage the acceptSuggestionsOnEnter context key\n    const acceptSuggestionsOnEnter = SuggestContext.AcceptSuggestionsOnEnter.bindTo(_contextKeyService);\n    const updateFromConfig = () => {\n      const acceptSuggestionOnEnter = this.editor.getOption(1 /* EditorOption.acceptSuggestionOnEnter */);\n      acceptSuggestionsOnEnter.set(acceptSuggestionOnEnter === 'on' || acceptSuggestionOnEnter === 'smart');\n    };\n    this._toDispose.add(this.editor.onDidChangeConfiguration(() => updateFromConfig()));\n    updateFromConfig();\n  }\n  dispose() {\n    this._alternatives.dispose();\n    this._toDispose.dispose();\n    this.widget.dispose();\n    this.model.dispose();\n    this._lineSuffix.dispose();\n    this._onWillInsertSuggestItem.dispose();\n  }\n  _insertSuggestion(event, flags) {\n    if (!event || !event.item) {\n      this._alternatives.value.reset();\n      this.model.cancel();\n      this.model.clear();\n      return;\n    }\n    if (!this.editor.hasModel()) {\n      return;\n    }\n    const snippetController = SnippetController2.get(this.editor);\n    if (!snippetController) {\n      return;\n    }\n    this._onWillInsertSuggestItem.fire({\n      item: event.item\n    });\n    const model = this.editor.getModel();\n    const modelVersionNow = model.getAlternativeVersionId();\n    const {\n      item\n    } = event;\n    //\n    const tasks = [];\n    const cts = new CancellationTokenSource();\n    // pushing undo stops *before* additional text edits and\n    // *after* the main edit\n    if (!(flags & 1 /* InsertFlags.NoBeforeUndoStop */)) {\n      this.editor.pushUndoStop();\n    }\n    // compute overwrite[Before|After] deltas BEFORE applying extra edits\n    const info = this.getOverwriteInfo(item, Boolean(flags & 8 /* InsertFlags.AlternativeOverwriteConfig */));\n    // keep item in memory\n    this._memoryService.memorize(model, this.editor.getPosition(), item);\n    const isResolved = item.isResolved;\n    // telemetry data points: duration of command execution, info about async additional edits (-1=n/a, -2=none, 1=success, 0=failed)\n    let _commandExectionDuration = -1;\n    let _additionalEditsAppliedAsync = -1;\n    if (Array.isArray(item.completion.additionalTextEdits)) {\n      // cancel -> stops all listening and closes widget\n      this.model.cancel();\n      // sync additional edits\n      const scrollState = StableEditorScrollState.capture(this.editor);\n      this.editor.executeEdits('suggestController.additionalTextEdits.sync', item.completion.additionalTextEdits.map(edit => {\n        let range = Range.lift(edit.range);\n        if (range.startLineNumber === item.position.lineNumber && range.startColumn > item.position.column) {\n          // shift additional edit when it is \"after\" the completion insertion position\n          const columnDelta = this.editor.getPosition().column - item.position.column;\n          const startColumnDelta = columnDelta;\n          const endColumnDelta = Range.spansMultipleLines(range) ? 0 : columnDelta;\n          range = new Range(range.startLineNumber, range.startColumn + startColumnDelta, range.endLineNumber, range.endColumn + endColumnDelta);\n        }\n        return EditOperation.replaceMove(range, edit.text);\n      }));\n      scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n    } else if (!isResolved) {\n      // async additional edits\n      const sw = new StopWatch();\n      let position;\n      const docListener = model.onDidChangeContent(e => {\n        if (e.isFlush) {\n          cts.cancel();\n          docListener.dispose();\n          return;\n        }\n        for (const change of e.changes) {\n          const thisPosition = Range.getEndPosition(change.range);\n          if (!position || Position.isBefore(thisPosition, position)) {\n            position = thisPosition;\n          }\n        }\n      });\n      const oldFlags = flags;\n      flags |= 2 /* InsertFlags.NoAfterUndoStop */;\n      let didType = false;\n      const typeListener = this.editor.onWillType(() => {\n        typeListener.dispose();\n        didType = true;\n        if (!(oldFlags & 2 /* InsertFlags.NoAfterUndoStop */)) {\n          this.editor.pushUndoStop();\n        }\n      });\n      tasks.push(item.resolve(cts.token).then(() => {\n        if (!item.completion.additionalTextEdits || cts.token.isCancellationRequested) {\n          return undefined;\n        }\n        if (position && item.completion.additionalTextEdits.some(edit => Position.isBefore(position, Range.getStartPosition(edit.range)))) {\n          return false;\n        }\n        if (didType) {\n          this.editor.pushUndoStop();\n        }\n        const scrollState = StableEditorScrollState.capture(this.editor);\n        this.editor.executeEdits('suggestController.additionalTextEdits.async', item.completion.additionalTextEdits.map(edit => EditOperation.replaceMove(Range.lift(edit.range), edit.text)));\n        scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n        if (didType || !(oldFlags & 2 /* InsertFlags.NoAfterUndoStop */)) {\n          this.editor.pushUndoStop();\n        }\n        return true;\n      }).then(applied => {\n        this._logService.trace('[suggest] async resolving of edits DONE (ms, applied?)', sw.elapsed(), applied);\n        _additionalEditsAppliedAsync = applied === true ? 1 : applied === false ? 0 : -2;\n      }).finally(() => {\n        docListener.dispose();\n        typeListener.dispose();\n      }));\n    }\n    let {\n      insertText\n    } = item.completion;\n    if (!(item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */)) {\n      insertText = SnippetParser.escape(insertText);\n    }\n    // cancel -> stops all listening and closes widget\n    this.model.cancel();\n    snippetController.insert(insertText, {\n      overwriteBefore: info.overwriteBefore,\n      overwriteAfter: info.overwriteAfter,\n      undoStopBefore: false,\n      undoStopAfter: false,\n      adjustWhitespace: !(item.completion.insertTextRules & 1 /* CompletionItemInsertTextRule.KeepWhitespace */),\n      clipboardText: event.model.clipboardText,\n      overtypingCapturer: this._overtypingCapturer.value\n    });\n    if (!(flags & 2 /* InsertFlags.NoAfterUndoStop */)) {\n      this.editor.pushUndoStop();\n    }\n    if (item.completion.command) {\n      if (item.completion.command.id === TriggerSuggestAction.id) {\n        // retigger\n        this.model.trigger({\n          auto: true,\n          retrigger: true\n        });\n      } else {\n        // exec command, done\n        const sw = new StopWatch();\n        tasks.push(this._commandService.executeCommand(item.completion.command.id, ...(item.completion.command.arguments ? [...item.completion.command.arguments] : [])).catch(e => {\n          if (item.completion.extensionId) {\n            onUnexpectedExternalError(e);\n          } else {\n            onUnexpectedError(e);\n          }\n        }).finally(() => {\n          _commandExectionDuration = sw.elapsed();\n        }));\n      }\n    }\n    if (flags & 4 /* InsertFlags.KeepAlternativeSuggestions */) {\n      this._alternatives.value.set(event, next => {\n        // cancel resolving of additional edits\n        cts.cancel();\n        // this is not so pretty. when inserting the 'next'\n        // suggestion we undo until we are at the state at\n        // which we were before inserting the previous suggestion...\n        while (model.canUndo()) {\n          if (modelVersionNow !== model.getAlternativeVersionId()) {\n            model.undo();\n          }\n          this._insertSuggestion(next, 1 /* InsertFlags.NoBeforeUndoStop */ | 2 /* InsertFlags.NoAfterUndoStop */ | (flags & 8 /* InsertFlags.AlternativeOverwriteConfig */ ? 8 /* InsertFlags.AlternativeOverwriteConfig */ : 0));\n          break;\n        }\n      });\n    }\n    this._alertCompletionItem(item);\n    // clear only now - after all tasks are done\n    Promise.all(tasks).finally(() => {\n      this._reportSuggestionAcceptedTelemetry(item, model, isResolved, _commandExectionDuration, _additionalEditsAppliedAsync, event.index, event.model.items);\n      this.model.clear();\n      cts.dispose();\n    });\n  }\n  _reportSuggestionAcceptedTelemetry(item, model, itemResolved, commandExectionDuration, additionalEditsAppliedAsync, index, completionItems) {\n    var _item$extensionId$val, _item$extensionId, _item$provider$_debug;\n    if (Math.floor(Math.random() * 100) === 0) {\n      // throttle telemetry event because accepting completions happens a lot\n      return;\n    }\n    const labelMap = new Map();\n    for (let i = 0; i < Math.min(30, completionItems.length); i++) {\n      const label = completionItems[i].textLabel;\n      if (labelMap.has(label)) {\n        labelMap.get(label).push(i);\n      } else {\n        labelMap.set(label, [i]);\n      }\n    }\n    const firstIndexArray = labelMap.get(item.textLabel);\n    const hasDuplicates = firstIndexArray && firstIndexArray.length > 1;\n    const firstIndex = hasDuplicates ? firstIndexArray[0] : -1;\n    this._telemetryService.publicLog2('suggest.acceptedSuggestion', {\n      extensionId: (_item$extensionId$val = (_item$extensionId = item.extensionId) === null || _item$extensionId === void 0 ? void 0 : _item$extensionId.value) !== null && _item$extensionId$val !== void 0 ? _item$extensionId$val : 'unknown',\n      providerId: (_item$provider$_debug = item.provider._debugDisplayName) !== null && _item$provider$_debug !== void 0 ? _item$provider$_debug : 'unknown',\n      kind: item.completion.kind,\n      basenameHash: hash(basename(model.uri)).toString(16),\n      languageId: model.getLanguageId(),\n      fileExtension: extname(model.uri),\n      resolveInfo: !item.provider.resolveCompletionItem ? -1 : itemResolved ? 1 : 0,\n      resolveDuration: item.resolveDuration,\n      commandDuration: commandExectionDuration,\n      additionalEditsAsync: additionalEditsAppliedAsync,\n      index,\n      firstIndex\n    });\n  }\n  getOverwriteInfo(item, toggleMode) {\n    assertType(this.editor.hasModel());\n    let replace = this.editor.getOption(119 /* EditorOption.suggest */).insertMode === 'replace';\n    if (toggleMode) {\n      replace = !replace;\n    }\n    const overwriteBefore = item.position.column - item.editStart.column;\n    const overwriteAfter = (replace ? item.editReplaceEnd.column : item.editInsertEnd.column) - item.position.column;\n    const columnDelta = this.editor.getPosition().column - item.position.column;\n    const suffixDelta = this._lineSuffix.value ? this._lineSuffix.value.delta(this.editor.getPosition()) : 0;\n    return {\n      overwriteBefore: overwriteBefore + columnDelta,\n      overwriteAfter: overwriteAfter + suffixDelta\n    };\n  }\n  _alertCompletionItem(item) {\n    if (isNonEmptyArray(item.completion.additionalTextEdits)) {\n      const msg = nls.localize('aria.alert.snippet', \"Accepting '{0}' made {1} additional edits\", item.textLabel, item.completion.additionalTextEdits.length);\n      alert(msg);\n    }\n  }\n  triggerSuggest(onlyFrom, auto, noFilter) {\n    if (this.editor.hasModel()) {\n      this.model.trigger({\n        auto: auto !== null && auto !== void 0 ? auto : false,\n        completionOptions: {\n          providerFilter: onlyFrom,\n          kindFilter: noFilter ? new Set() : undefined\n        }\n      });\n      this.editor.revealPosition(this.editor.getPosition(), 0 /* ScrollType.Smooth */);\n      this.editor.focus();\n    }\n  }\n  triggerSuggestAndAcceptBest(arg) {\n    if (!this.editor.hasModel()) {\n      return;\n    }\n    const positionNow = this.editor.getPosition();\n    const fallback = () => {\n      if (positionNow.equals(this.editor.getPosition())) {\n        this._commandService.executeCommand(arg.fallback);\n      }\n    };\n    const makesTextEdit = item => {\n      if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */ || item.completion.additionalTextEdits) {\n        // snippet, other editor -> makes edit\n        return true;\n      }\n      const position = this.editor.getPosition();\n      const startColumn = item.editStart.column;\n      const endColumn = position.column;\n      if (endColumn - startColumn !== item.completion.insertText.length) {\n        // unequal lengths -> makes edit\n        return true;\n      }\n      const textNow = this.editor.getModel().getValueInRange({\n        startLineNumber: position.lineNumber,\n        startColumn,\n        endLineNumber: position.lineNumber,\n        endColumn\n      });\n      // unequal text -> makes edit\n      return textNow !== item.completion.insertText;\n    };\n    Event.once(this.model.onDidTrigger)(_ => {\n      // wait for trigger because only then the cancel-event is trustworthy\n      const listener = [];\n      Event.any(this.model.onDidTrigger, this.model.onDidCancel)(() => {\n        // retrigger or cancel -> try to type default text\n        dispose(listener);\n        fallback();\n      }, undefined, listener);\n      this.model.onDidSuggest(_ref2 => {\n        let {\n          completionModel\n        } = _ref2;\n        dispose(listener);\n        if (completionModel.items.length === 0) {\n          fallback();\n          return;\n        }\n        const index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), completionModel.items);\n        const item = completionModel.items[index];\n        if (!makesTextEdit(item)) {\n          fallback();\n          return;\n        }\n        this.editor.pushUndoStop();\n        this._insertSuggestion({\n          index,\n          item,\n          model: completionModel\n        }, 4 /* InsertFlags.KeepAlternativeSuggestions */ | 1 /* InsertFlags.NoBeforeUndoStop */ | 2 /* InsertFlags.NoAfterUndoStop */);\n      }, undefined, listener);\n    });\n    this.model.trigger({\n      auto: false,\n      shy: true\n    });\n    this.editor.revealPosition(positionNow, 0 /* ScrollType.Smooth */);\n    this.editor.focus();\n  }\n  acceptSelectedSuggestion(keepAlternativeSuggestions, alternativeOverwriteConfig) {\n    const item = this.widget.value.getFocusedItem();\n    let flags = 0;\n    if (keepAlternativeSuggestions) {\n      flags |= 4 /* InsertFlags.KeepAlternativeSuggestions */;\n    }\n    if (alternativeOverwriteConfig) {\n      flags |= 8 /* InsertFlags.AlternativeOverwriteConfig */;\n    }\n    this._insertSuggestion(item, flags);\n  }\n  acceptNextSuggestion() {\n    this._alternatives.value.next();\n  }\n  acceptPrevSuggestion() {\n    this._alternatives.value.prev();\n  }\n  cancelSuggestWidget() {\n    this.model.cancel();\n    this.model.clear();\n    this.widget.value.hideWidget();\n  }\n  focusSuggestion() {\n    this.widget.value.focusSelected();\n  }\n  selectNextSuggestion() {\n    this.widget.value.selectNext();\n  }\n  selectNextPageSuggestion() {\n    this.widget.value.selectNextPage();\n  }\n  selectLastSuggestion() {\n    this.widget.value.selectLast();\n  }\n  selectPrevSuggestion() {\n    this.widget.value.selectPrevious();\n  }\n  selectPrevPageSuggestion() {\n    this.widget.value.selectPreviousPage();\n  }\n  selectFirstSuggestion() {\n    this.widget.value.selectFirst();\n  }\n  toggleSuggestionDetails() {\n    this.widget.value.toggleDetails();\n  }\n  toggleExplainMode() {\n    this.widget.value.toggleExplainMode();\n  }\n  toggleSuggestionFocus() {\n    this.widget.value.toggleDetailsFocus();\n  }\n  resetWidgetSize() {\n    this.widget.value.resetPersistedSize();\n  }\n  forceRenderingAbove() {\n    this.widget.value.forceRenderingAbove();\n  }\n  stopForceRenderingAbove() {\n    if (!this.widget.isInitialized) {\n      // This method has no effect if the widget is not initialized yet.\n      return;\n    }\n    this.widget.value.stopForceRenderingAbove();\n  }\n  registerSelector(selector) {\n    return this._selectors.register(selector);\n  }\n}, SuggestController_1 = _SuggestController, _SuggestController.ID = 'editor.contrib.suggestController', _SuggestController);\nSuggestController = SuggestController_1 = __decorate([__param(1, ISuggestMemoryService), __param(2, ICommandService), __param(3, IContextKeyService), __param(4, IInstantiationService), __param(5, ILogService), __param(6, ITelemetryService)], SuggestController);\nexport { SuggestController };\nclass PriorityRegistry {\n  constructor(prioritySelector) {\n    this.prioritySelector = prioritySelector;\n    this._items = new Array();\n  }\n  register(value) {\n    if (this._items.indexOf(value) !== -1) {\n      throw new Error('Value is already registered');\n    }\n    this._items.push(value);\n    this._items.sort((s1, s2) => this.prioritySelector(s2) - this.prioritySelector(s1));\n    return {\n      dispose: () => {\n        const idx = this._items.indexOf(value);\n        if (idx >= 0) {\n          this._items.splice(idx, 1);\n        }\n      }\n    };\n  }\n  get itemsOrderedByPriorityDesc() {\n    return this._items;\n  }\n}\nexport class TriggerSuggestAction extends EditorAction {\n  constructor() {\n    super({\n      id: TriggerSuggestAction.id,\n      label: nls.localize('suggest.trigger.label', \"Trigger Suggest\"),\n      alias: 'Trigger Suggest',\n      precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCompletionItemProvider, SuggestContext.Visible.toNegated()),\n      kbOpts: {\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\n        mac: {\n          primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */,\n          secondary: [512 /* KeyMod.Alt */ | 9 /* KeyCode.Escape */, 2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */]\n        },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n      }\n    });\n  }\n  run(_accessor, editor, args) {\n    const controller = SuggestController.get(editor);\n    if (!controller) {\n      return;\n    }\n    let auto;\n    if (args && typeof args === 'object') {\n      if (args.auto === true) {\n        auto = true;\n      }\n    }\n    controller.triggerSuggest(undefined, auto, undefined);\n  }\n}\n_TriggerSuggestAction = TriggerSuggestAction;\n_TriggerSuggestAction.id = 'editor.action.triggerSuggest';\nregisterEditorContribution(SuggestController.ID, SuggestController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(TriggerSuggestAction);\nconst weight = 100 /* KeybindingWeight.EditorContrib */ + 90;\nconst SuggestCommand = EditorCommand.bindToContribution(SuggestController.get);\nregisterEditorCommand(new SuggestCommand({\n  id: 'acceptSelectedSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion),\n  handler(x) {\n    x.acceptSelectedSuggestion(true, false);\n  },\n  kbOpts: [{\n    // normal tab\n    primary: 2 /* KeyCode.Tab */,\n    kbExpr: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\n    weight\n  }, {\n    // accept on enter has special rules\n    primary: 3 /* KeyCode.Enter */,\n    kbExpr: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.AcceptSuggestionsOnEnter, SuggestContext.MakesTextEdit),\n    weight\n  }],\n  menuOpts: [{\n    menuId: suggestWidgetStatusbarMenu,\n    title: nls.localize('accept.insert', \"Insert\"),\n    group: 'left',\n    order: 1,\n    when: SuggestContext.HasInsertAndReplaceRange.toNegated()\n  }, {\n    menuId: suggestWidgetStatusbarMenu,\n    title: nls.localize('accept.insert', \"Insert\"),\n    group: 'left',\n    order: 1,\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert'))\n  }, {\n    menuId: suggestWidgetStatusbarMenu,\n    title: nls.localize('accept.replace', \"Replace\"),\n    group: 'left',\n    order: 1,\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace'))\n  }]\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'acceptAlternativeSelectedSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.HasFocusedSuggestion),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n    secondary: [1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */]\n  },\n  handler(x) {\n    x.acceptSelectedSuggestion(false, true);\n  },\n  menuOpts: [{\n    menuId: suggestWidgetStatusbarMenu,\n    group: 'left',\n    order: 2,\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert')),\n    title: nls.localize('accept.replace', \"Replace\")\n  }, {\n    menuId: suggestWidgetStatusbarMenu,\n    group: 'left',\n    order: 2,\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace')),\n    title: nls.localize('accept.insert', \"Insert\")\n  }]\n}));\n// continue to support the old command\nCommandsRegistry.registerCommandAlias('acceptSelectedSuggestionOnEnter', 'acceptSelectedSuggestion');\nregisterEditorCommand(new SuggestCommand({\n  id: 'hideSuggestWidget',\n  precondition: SuggestContext.Visible,\n  handler: x => x.cancelSuggestWidget(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 9 /* KeyCode.Escape */,\n    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectNextSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n  handler: c => c.selectNextSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 18 /* KeyCode.DownArrow */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */],\n    mac: {\n      primary: 18 /* KeyCode.DownArrow */,\n      secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */, 256 /* KeyMod.WinCtrl */ | 44 /* KeyCode.KeyN */]\n    }\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectNextPageSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n  handler: c => c.selectNextPageSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 12 /* KeyCode.PageDown */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 12 /* KeyCode.PageDown */]\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectLastSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n  handler: c => c.selectLastSuggestion()\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectPrevSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n  handler: c => c.selectPrevSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 16 /* KeyCode.UpArrow */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */],\n    mac: {\n      primary: 16 /* KeyCode.UpArrow */,\n      secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */, 256 /* KeyMod.WinCtrl */ | 46 /* KeyCode.KeyP */]\n    }\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectPrevPageSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n  handler: c => c.selectPrevPageSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 11 /* KeyCode.PageUp */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 11 /* KeyCode.PageUp */]\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'selectFirstSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n  handler: c => c.selectFirstSuggestion()\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'focusSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion.negate()),\n  handler: x => x.focusSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\n    mac: {\n      primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */,\n      secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */]\n    }\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'focusAndAcceptSuggestion',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion.negate()),\n  handler: c => {\n    c.focusSuggestion();\n    c.acceptSelectedSuggestion(true, false);\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'toggleSuggestionDetails',\n  precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion),\n  handler: x => x.toggleSuggestionDetails(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\n    secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\n    mac: {\n      primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */,\n      secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */]\n    }\n  },\n  menuOpts: [{\n    menuId: suggestWidgetStatusbarMenu,\n    group: 'right',\n    order: 1,\n    when: ContextKeyExpr.and(SuggestContext.DetailsVisible, SuggestContext.CanResolve),\n    title: nls.localize('detail.more', \"Show Less\")\n  }, {\n    menuId: suggestWidgetStatusbarMenu,\n    group: 'right',\n    order: 1,\n    when: ContextKeyExpr.and(SuggestContext.DetailsVisible.toNegated(), SuggestContext.CanResolve),\n    title: nls.localize('detail.less', \"Show More\")\n  }]\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'toggleExplainMode',\n  precondition: SuggestContext.Visible,\n  handler: x => x.toggleExplainMode(),\n  kbOpts: {\n    weight: 100 /* KeybindingWeight.EditorContrib */,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 90 /* KeyCode.Slash */\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'toggleSuggestionFocus',\n  precondition: SuggestContext.Visible,\n  handler: x => x.toggleSuggestionFocus(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 10 /* KeyCode.Space */,\n    mac: {\n      primary: 256 /* KeyMod.WinCtrl */ | 512 /* KeyMod.Alt */ | 10 /* KeyCode.Space */\n    }\n  }\n}));\n//#region tab completions\nregisterEditorCommand(new SuggestCommand({\n  id: 'insertBestCompletion',\n  precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), WordContextKey.AtEnd, SuggestContext.Visible.toNegated(), SuggestAlternatives.OtherSuggestions.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n  handler: (x, arg) => {\n    x.triggerSuggestAndAcceptBest(isObject(arg) ? {\n      fallback: 'tab',\n      ...arg\n    } : {\n      fallback: 'tab'\n    });\n  },\n  kbOpts: {\n    weight,\n    primary: 2 /* KeyCode.Tab */\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'insertNextSuggestion',\n  precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n  handler: x => x.acceptNextSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 2 /* KeyCode.Tab */\n  }\n}));\nregisterEditorCommand(new SuggestCommand({\n  id: 'insertPrevSuggestion',\n  precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n  handler: x => x.acceptPrevSuggestion(),\n  kbOpts: {\n    weight: weight,\n    kbExpr: EditorContextKeys.textInputFocus,\n    primary: 1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */\n  }\n}));\nregisterEditorAction(class extends EditorAction {\n  constructor() {\n    super({\n      id: 'editor.action.resetSuggestSize',\n      label: nls.localize('suggest.reset.label', \"Reset Suggest Widget Size\"),\n      alias: 'Reset Suggest Widget Size',\n      precondition: undefined\n    });\n  }\n  run(_accessor, editor) {\n    var _SuggestController$ge;\n    (_SuggestController$ge = SuggestController.get(editor)) === null || _SuggestController$ge === void 0 || _SuggestController$ge.resetWidgetSize();\n  }\n});","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","SuggestController_1","alert","isNonEmptyArray","CancellationTokenSource","onUnexpectedError","onUnexpectedExternalError","Emitter","Event","KeyCodeChord","DisposableStore","dispose","MutableDisposable","toDisposable","platform","StopWatch","assertType","isObject","StableEditorScrollState","EditorAction","EditorCommand","registerEditorAction","registerEditorCommand","registerEditorContribution","EditOperation","Position","Range","EditorContextKeys","SnippetController2","SnippetParser","ISuggestMemoryService","WordContextKey","nls","CommandsRegistry","ICommandService","ContextKeyExpr","IContextKeyService","IInstantiationService","ILogService","Context","SuggestContext","suggestWidgetStatusbarMenu","SuggestAlternatives","CommitCharacterController","SuggestModel","OvertypingCapturer","SuggestWidget","ITelemetryService","basename","extname","hash","WindowIdleValue","getWindow","ModelDecorationOptions","_sticky","LineSuffix","constructor","_model","_position","_decorationOptions","register","description","stickiness","maxColumn","getLineMaxColumn","lineNumber","column","offset","getOffsetAt","end","getPositionAt","changeDecorations","accessor","_marker","removeDecoration","addDecoration","fromPositions","isDisposed","undefined","delta","position","range","getDecorationRange","getStartPosition","SuggestController","_SuggestController","get","editor","getContribution","ID","_memoryService","_commandService","_contextKeyService","_instantiationService","_logService","_telemetryService","_lineSuffix","_toDispose","_selectors","PriorityRegistry","s","priority","_onWillInsertSuggestItem","onWillInsertSuggestItem","event","model","createInstance","select","pos","items","ctxInsertMode","InsertMode","bindTo","set","getOption","insertMode","add","onDidTrigger","widget","getDomNode","onDidSelect","item","_insertSuggestion","commitCharacterController","ctxMakesTextEdit","MakesTextEdit","ctxHasInsertAndReplace","HasInsertAndReplaceRange","ctxCanResolve","CanResolve","reset","onDidFocus","_ref","getPosition","startColumn","editStart","endColumn","value","state","completion","additionalTextEdits","insertTextRules","insertText","oldText","getModel","getValueInRange","startLineNumber","endLineNumber","equals","editInsertEnd","editReplaceEnd","Boolean","provider","resolveCompletionItem","documentation","detail","label","onDetailsKeyDown","e","toKeyCodeChord","isMacintosh","stopPropagation","isModifierKey","focus","_overtypingCapturer","_alternatives","showTriggered","auto","shy","onDidSuggest","triggerOptions","index","selector","itemsOrderedByPriorityDesc","completionModel","noFocus","options","selectionMode","triggerKind","refilter","showSuggestions","isFrozen","onDidCancel","retrigger","hideWidget","onDidBlurEditorWidget","cancel","clear","acceptSuggestionsOnEnter","AcceptSuggestionsOnEnter","updateFromConfig","acceptSuggestionOnEnter","onDidChangeConfiguration","flags","hasModel","snippetController","fire","modelVersionNow","getAlternativeVersionId","tasks","cts","pushUndoStop","info","getOverwriteInfo","memorize","isResolved","_commandExectionDuration","_additionalEditsAppliedAsync","Array","isArray","scrollState","capture","executeEdits","map","edit","lift","columnDelta","startColumnDelta","endColumnDelta","spansMultipleLines","replaceMove","text","restoreRelativeVerticalPositionOfCursor","sw","docListener","onDidChangeContent","isFlush","change","changes","thisPosition","getEndPosition","isBefore","oldFlags","didType","typeListener","onWillType","push","resolve","token","then","isCancellationRequested","some","applied","trace","elapsed","finally","escape","insert","overwriteBefore","overwriteAfter","undoStopBefore","undoStopAfter","adjustWhitespace","clipboardText","overtypingCapturer","command","id","TriggerSuggestAction","trigger","executeCommand","catch","extensionId","next","canUndo","undo","_alertCompletionItem","Promise","all","_reportSuggestionAcceptedTelemetry","itemResolved","commandExectionDuration","additionalEditsAppliedAsync","completionItems","_item$extensionId$val","_item$extensionId","_item$provider$_debug","Math","floor","random","labelMap","Map","min","textLabel","has","firstIndexArray","hasDuplicates","firstIndex","publicLog2","providerId","_debugDisplayName","kind","basenameHash","uri","toString","languageId","getLanguageId","fileExtension","resolveInfo","resolveDuration","commandDuration","additionalEditsAsync","toggleMode","replace","suffixDelta","msg","localize","triggerSuggest","onlyFrom","noFilter","completionOptions","providerFilter","kindFilter","Set","revealPosition","triggerSuggestAndAcceptBest","arg","positionNow","fallback","makesTextEdit","textNow","once","_","listener","any","_ref2","acceptSelectedSuggestion","keepAlternativeSuggestions","alternativeOverwriteConfig","getFocusedItem","acceptNextSuggestion","acceptPrevSuggestion","prev","cancelSuggestWidget","focusSuggestion","focusSelected","selectNextSuggestion","selectNext","selectNextPageSuggestion","selectNextPage","selectLastSuggestion","selectLast","selectPrevSuggestion","selectPrevious","selectPrevPageSuggestion","selectPreviousPage","selectFirstSuggestion","selectFirst","toggleSuggestionDetails","toggleDetails","toggleExplainMode","toggleSuggestionFocus","toggleDetailsFocus","resetWidgetSize","resetPersistedSize","forceRenderingAbove","stopForceRenderingAbove","isInitialized","registerSelector","prioritySelector","_items","indexOf","Error","sort","s1","s2","idx","splice","alias","precondition","and","writable","hasCompletionItemProvider","Visible","toNegated","kbOpts","kbExpr","textInputFocus","primary","secondary","mac","weight","run","_accessor","args","controller","_TriggerSuggestAction","SuggestCommand","bindToContribution","HasFocusedSuggestion","handler","x","menuOpts","menuId","title","group","order","when","isEqualTo","registerCommandAlias","or","MultipleSuggestions","negate","DetailsVisible","AtEnd","OtherSuggestions","InSnippetMode","_SuggestController$ge"],"sources":["D:/ospanel/domains/react/react-intro-main/node_modules/monaco-editor/esm/vs/editor/contrib/suggest/browser/suggestController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar SuggestController_1;\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { KeyCodeChord } from '../../../../base/common/keybindings.js';\nimport { DisposableStore, dispose, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { assertType, isObject } from '../../../../base/common/types.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { ISuggestMemoryService } from './suggestMemory.js';\nimport { WordContextKey } from './wordContextKey.js';\nimport * as nls from '../../../../nls.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { Context as SuggestContext, suggestWidgetStatusbarMenu } from './suggest.js';\nimport { SuggestAlternatives } from './suggestAlternatives.js';\nimport { CommitCharacterController } from './suggestCommitCharacters.js';\nimport { SuggestModel } from './suggestModel.js';\nimport { OvertypingCapturer } from './suggestOvertypingCapturer.js';\nimport { SuggestWidget } from './suggestWidget.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { basename, extname } from '../../../../base/common/resources.js';\nimport { hash } from '../../../../base/common/hash.js';\nimport { WindowIdleValue, getWindow } from '../../../../base/browser/dom.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\n// sticky suggest widget which doesn't disappear on focus out and such\nconst _sticky = false;\nclass LineSuffix {\n    constructor(_model, _position) {\n        this._model = _model;\n        this._position = _position;\n        this._decorationOptions = ModelDecorationOptions.register({\n            description: 'suggest-line-suffix',\n            stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */\n        });\n        // spy on what's happening right of the cursor. two cases:\n        // 1. end of line -> check that it's still end of line\n        // 2. mid of line -> add a marker and compute the delta\n        const maxColumn = _model.getLineMaxColumn(_position.lineNumber);\n        if (maxColumn !== _position.column) {\n            const offset = _model.getOffsetAt(_position);\n            const end = _model.getPositionAt(offset + 1);\n            _model.changeDecorations(accessor => {\n                if (this._marker) {\n                    accessor.removeDecoration(this._marker);\n                }\n                this._marker = accessor.addDecoration(Range.fromPositions(_position, end), this._decorationOptions);\n            });\n        }\n    }\n    dispose() {\n        if (this._marker && !this._model.isDisposed()) {\n            this._model.changeDecorations(accessor => {\n                accessor.removeDecoration(this._marker);\n                this._marker = undefined;\n            });\n        }\n    }\n    delta(position) {\n        if (this._model.isDisposed() || this._position.lineNumber !== position.lineNumber) {\n            // bail out early if things seems fishy\n            return 0;\n        }\n        // read the marker (in case suggest was triggered at line end) or compare\n        // the cursor to the line end.\n        if (this._marker) {\n            const range = this._model.getDecorationRange(this._marker);\n            const end = this._model.getOffsetAt(range.getStartPosition());\n            return end - this._model.getOffsetAt(position);\n        }\n        else {\n            return this._model.getLineMaxColumn(position.lineNumber) - position.column;\n        }\n    }\n}\nlet SuggestController = class SuggestController {\n    static { SuggestController_1 = this; }\n    static { this.ID = 'editor.contrib.suggestController'; }\n    static get(editor) {\n        return editor.getContribution(SuggestController_1.ID);\n    }\n    constructor(editor, _memoryService, _commandService, _contextKeyService, _instantiationService, _logService, _telemetryService) {\n        this._memoryService = _memoryService;\n        this._commandService = _commandService;\n        this._contextKeyService = _contextKeyService;\n        this._instantiationService = _instantiationService;\n        this._logService = _logService;\n        this._telemetryService = _telemetryService;\n        this._lineSuffix = new MutableDisposable();\n        this._toDispose = new DisposableStore();\n        this._selectors = new PriorityRegistry(s => s.priority);\n        this._onWillInsertSuggestItem = new Emitter();\n        this.onWillInsertSuggestItem = this._onWillInsertSuggestItem.event;\n        this.editor = editor;\n        this.model = _instantiationService.createInstance(SuggestModel, this.editor);\n        // default selector\n        this._selectors.register({\n            priority: 0,\n            select: (model, pos, items) => this._memoryService.select(model, pos, items)\n        });\n        // context key: update insert/replace mode\n        const ctxInsertMode = SuggestContext.InsertMode.bindTo(_contextKeyService);\n        ctxInsertMode.set(editor.getOption(119 /* EditorOption.suggest */).insertMode);\n        this._toDispose.add(this.model.onDidTrigger(() => ctxInsertMode.set(editor.getOption(119 /* EditorOption.suggest */).insertMode)));\n        this.widget = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n            const widget = this._instantiationService.createInstance(SuggestWidget, this.editor);\n            this._toDispose.add(widget);\n            this._toDispose.add(widget.onDidSelect(item => this._insertSuggestion(item, 0 /* InsertFlags.None */), this));\n            // Wire up logic to accept a suggestion on certain characters\n            const commitCharacterController = new CommitCharacterController(this.editor, widget, this.model, item => this._insertSuggestion(item, 2 /* InsertFlags.NoAfterUndoStop */));\n            this._toDispose.add(commitCharacterController);\n            // Wire up makes text edit context key\n            const ctxMakesTextEdit = SuggestContext.MakesTextEdit.bindTo(this._contextKeyService);\n            const ctxHasInsertAndReplace = SuggestContext.HasInsertAndReplaceRange.bindTo(this._contextKeyService);\n            const ctxCanResolve = SuggestContext.CanResolve.bindTo(this._contextKeyService);\n            this._toDispose.add(toDisposable(() => {\n                ctxMakesTextEdit.reset();\n                ctxHasInsertAndReplace.reset();\n                ctxCanResolve.reset();\n            }));\n            this._toDispose.add(widget.onDidFocus(({ item }) => {\n                // (ctx: makesTextEdit)\n                const position = this.editor.getPosition();\n                const startColumn = item.editStart.column;\n                const endColumn = position.column;\n                let value = true;\n                if (this.editor.getOption(1 /* EditorOption.acceptSuggestionOnEnter */) === 'smart'\n                    && this.model.state === 2 /* State.Auto */\n                    && !item.completion.additionalTextEdits\n                    && !(item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */)\n                    && endColumn - startColumn === item.completion.insertText.length) {\n                    const oldText = this.editor.getModel().getValueInRange({\n                        startLineNumber: position.lineNumber,\n                        startColumn,\n                        endLineNumber: position.lineNumber,\n                        endColumn\n                    });\n                    value = oldText !== item.completion.insertText;\n                }\n                ctxMakesTextEdit.set(value);\n                // (ctx: hasInsertAndReplaceRange)\n                ctxHasInsertAndReplace.set(!Position.equals(item.editInsertEnd, item.editReplaceEnd));\n                // (ctx: canResolve)\n                ctxCanResolve.set(Boolean(item.provider.resolveCompletionItem) || Boolean(item.completion.documentation) || item.completion.detail !== item.completion.label);\n            }));\n            this._toDispose.add(widget.onDetailsKeyDown(e => {\n                // cmd + c on macOS, ctrl + c on Win / Linux\n                if (e.toKeyCodeChord().equals(new KeyCodeChord(true, false, false, false, 33 /* KeyCode.KeyC */)) ||\n                    (platform.isMacintosh && e.toKeyCodeChord().equals(new KeyCodeChord(false, false, false, true, 33 /* KeyCode.KeyC */)))) {\n                    e.stopPropagation();\n                    return;\n                }\n                if (!e.toKeyCodeChord().isModifierKey()) {\n                    this.editor.focus();\n                }\n            }));\n            return widget;\n        }));\n        // Wire up text overtyping capture\n        this._overtypingCapturer = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n            return this._toDispose.add(new OvertypingCapturer(this.editor, this.model));\n        }));\n        this._alternatives = this._toDispose.add(new WindowIdleValue(getWindow(editor.getDomNode()), () => {\n            return this._toDispose.add(new SuggestAlternatives(this.editor, this._contextKeyService));\n        }));\n        this._toDispose.add(_instantiationService.createInstance(WordContextKey, editor));\n        this._toDispose.add(this.model.onDidTrigger(e => {\n            this.widget.value.showTriggered(e.auto, e.shy ? 250 : 50);\n            this._lineSuffix.value = new LineSuffix(this.editor.getModel(), e.position);\n        }));\n        this._toDispose.add(this.model.onDidSuggest(e => {\n            if (e.triggerOptions.shy) {\n                return;\n            }\n            let index = -1;\n            for (const selector of this._selectors.itemsOrderedByPriorityDesc) {\n                index = selector.select(this.editor.getModel(), this.editor.getPosition(), e.completionModel.items);\n                if (index !== -1) {\n                    break;\n                }\n            }\n            if (index === -1) {\n                index = 0;\n            }\n            if (this.model.state === 0 /* State.Idle */) {\n                // selecting an item can \"pump\" out selection/cursor change events\n                // which can cancel suggest halfway through this function. therefore\n                // we need to check again and bail if the session has been canceled\n                return;\n            }\n            let noFocus = false;\n            if (e.triggerOptions.auto) {\n                // don't \"focus\" item when configured to do\n                const options = this.editor.getOption(119 /* EditorOption.suggest */);\n                if (options.selectionMode === 'never' || options.selectionMode === 'always') {\n                    // simple: always or never\n                    noFocus = options.selectionMode === 'never';\n                }\n                else if (options.selectionMode === 'whenTriggerCharacter') {\n                    // on with trigger character\n                    noFocus = e.triggerOptions.triggerKind !== 1 /* CompletionTriggerKind.TriggerCharacter */;\n                }\n                else if (options.selectionMode === 'whenQuickSuggestion') {\n                    // without trigger character or when refiltering\n                    noFocus = e.triggerOptions.triggerKind === 1 /* CompletionTriggerKind.TriggerCharacter */ && !e.triggerOptions.refilter;\n                }\n            }\n            this.widget.value.showSuggestions(e.completionModel, index, e.isFrozen, e.triggerOptions.auto, noFocus);\n        }));\n        this._toDispose.add(this.model.onDidCancel(e => {\n            if (!e.retrigger) {\n                this.widget.value.hideWidget();\n            }\n        }));\n        this._toDispose.add(this.editor.onDidBlurEditorWidget(() => {\n            if (!_sticky) {\n                this.model.cancel();\n                this.model.clear();\n            }\n        }));\n        // Manage the acceptSuggestionsOnEnter context key\n        const acceptSuggestionsOnEnter = SuggestContext.AcceptSuggestionsOnEnter.bindTo(_contextKeyService);\n        const updateFromConfig = () => {\n            const acceptSuggestionOnEnter = this.editor.getOption(1 /* EditorOption.acceptSuggestionOnEnter */);\n            acceptSuggestionsOnEnter.set(acceptSuggestionOnEnter === 'on' || acceptSuggestionOnEnter === 'smart');\n        };\n        this._toDispose.add(this.editor.onDidChangeConfiguration(() => updateFromConfig()));\n        updateFromConfig();\n    }\n    dispose() {\n        this._alternatives.dispose();\n        this._toDispose.dispose();\n        this.widget.dispose();\n        this.model.dispose();\n        this._lineSuffix.dispose();\n        this._onWillInsertSuggestItem.dispose();\n    }\n    _insertSuggestion(event, flags) {\n        if (!event || !event.item) {\n            this._alternatives.value.reset();\n            this.model.cancel();\n            this.model.clear();\n            return;\n        }\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        const snippetController = SnippetController2.get(this.editor);\n        if (!snippetController) {\n            return;\n        }\n        this._onWillInsertSuggestItem.fire({ item: event.item });\n        const model = this.editor.getModel();\n        const modelVersionNow = model.getAlternativeVersionId();\n        const { item } = event;\n        //\n        const tasks = [];\n        const cts = new CancellationTokenSource();\n        // pushing undo stops *before* additional text edits and\n        // *after* the main edit\n        if (!(flags & 1 /* InsertFlags.NoBeforeUndoStop */)) {\n            this.editor.pushUndoStop();\n        }\n        // compute overwrite[Before|After] deltas BEFORE applying extra edits\n        const info = this.getOverwriteInfo(item, Boolean(flags & 8 /* InsertFlags.AlternativeOverwriteConfig */));\n        // keep item in memory\n        this._memoryService.memorize(model, this.editor.getPosition(), item);\n        const isResolved = item.isResolved;\n        // telemetry data points: duration of command execution, info about async additional edits (-1=n/a, -2=none, 1=success, 0=failed)\n        let _commandExectionDuration = -1;\n        let _additionalEditsAppliedAsync = -1;\n        if (Array.isArray(item.completion.additionalTextEdits)) {\n            // cancel -> stops all listening and closes widget\n            this.model.cancel();\n            // sync additional edits\n            const scrollState = StableEditorScrollState.capture(this.editor);\n            this.editor.executeEdits('suggestController.additionalTextEdits.sync', item.completion.additionalTextEdits.map(edit => {\n                let range = Range.lift(edit.range);\n                if (range.startLineNumber === item.position.lineNumber && range.startColumn > item.position.column) {\n                    // shift additional edit when it is \"after\" the completion insertion position\n                    const columnDelta = this.editor.getPosition().column - item.position.column;\n                    const startColumnDelta = columnDelta;\n                    const endColumnDelta = Range.spansMultipleLines(range) ? 0 : columnDelta;\n                    range = new Range(range.startLineNumber, range.startColumn + startColumnDelta, range.endLineNumber, range.endColumn + endColumnDelta);\n                }\n                return EditOperation.replaceMove(range, edit.text);\n            }));\n            scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n        }\n        else if (!isResolved) {\n            // async additional edits\n            const sw = new StopWatch();\n            let position;\n            const docListener = model.onDidChangeContent(e => {\n                if (e.isFlush) {\n                    cts.cancel();\n                    docListener.dispose();\n                    return;\n                }\n                for (const change of e.changes) {\n                    const thisPosition = Range.getEndPosition(change.range);\n                    if (!position || Position.isBefore(thisPosition, position)) {\n                        position = thisPosition;\n                    }\n                }\n            });\n            const oldFlags = flags;\n            flags |= 2 /* InsertFlags.NoAfterUndoStop */;\n            let didType = false;\n            const typeListener = this.editor.onWillType(() => {\n                typeListener.dispose();\n                didType = true;\n                if (!(oldFlags & 2 /* InsertFlags.NoAfterUndoStop */)) {\n                    this.editor.pushUndoStop();\n                }\n            });\n            tasks.push(item.resolve(cts.token).then(() => {\n                if (!item.completion.additionalTextEdits || cts.token.isCancellationRequested) {\n                    return undefined;\n                }\n                if (position && item.completion.additionalTextEdits.some(edit => Position.isBefore(position, Range.getStartPosition(edit.range)))) {\n                    return false;\n                }\n                if (didType) {\n                    this.editor.pushUndoStop();\n                }\n                const scrollState = StableEditorScrollState.capture(this.editor);\n                this.editor.executeEdits('suggestController.additionalTextEdits.async', item.completion.additionalTextEdits.map(edit => EditOperation.replaceMove(Range.lift(edit.range), edit.text)));\n                scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\n                if (didType || !(oldFlags & 2 /* InsertFlags.NoAfterUndoStop */)) {\n                    this.editor.pushUndoStop();\n                }\n                return true;\n            }).then(applied => {\n                this._logService.trace('[suggest] async resolving of edits DONE (ms, applied?)', sw.elapsed(), applied);\n                _additionalEditsAppliedAsync = applied === true ? 1 : applied === false ? 0 : -2;\n            }).finally(() => {\n                docListener.dispose();\n                typeListener.dispose();\n            }));\n        }\n        let { insertText } = item.completion;\n        if (!(item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */)) {\n            insertText = SnippetParser.escape(insertText);\n        }\n        // cancel -> stops all listening and closes widget\n        this.model.cancel();\n        snippetController.insert(insertText, {\n            overwriteBefore: info.overwriteBefore,\n            overwriteAfter: info.overwriteAfter,\n            undoStopBefore: false,\n            undoStopAfter: false,\n            adjustWhitespace: !(item.completion.insertTextRules & 1 /* CompletionItemInsertTextRule.KeepWhitespace */),\n            clipboardText: event.model.clipboardText,\n            overtypingCapturer: this._overtypingCapturer.value\n        });\n        if (!(flags & 2 /* InsertFlags.NoAfterUndoStop */)) {\n            this.editor.pushUndoStop();\n        }\n        if (item.completion.command) {\n            if (item.completion.command.id === TriggerSuggestAction.id) {\n                // retigger\n                this.model.trigger({ auto: true, retrigger: true });\n            }\n            else {\n                // exec command, done\n                const sw = new StopWatch();\n                tasks.push(this._commandService.executeCommand(item.completion.command.id, ...(item.completion.command.arguments ? [...item.completion.command.arguments] : [])).catch(e => {\n                    if (item.completion.extensionId) {\n                        onUnexpectedExternalError(e);\n                    }\n                    else {\n                        onUnexpectedError(e);\n                    }\n                }).finally(() => {\n                    _commandExectionDuration = sw.elapsed();\n                }));\n            }\n        }\n        if (flags & 4 /* InsertFlags.KeepAlternativeSuggestions */) {\n            this._alternatives.value.set(event, next => {\n                // cancel resolving of additional edits\n                cts.cancel();\n                // this is not so pretty. when inserting the 'next'\n                // suggestion we undo until we are at the state at\n                // which we were before inserting the previous suggestion...\n                while (model.canUndo()) {\n                    if (modelVersionNow !== model.getAlternativeVersionId()) {\n                        model.undo();\n                    }\n                    this._insertSuggestion(next, 1 /* InsertFlags.NoBeforeUndoStop */ | 2 /* InsertFlags.NoAfterUndoStop */ | (flags & 8 /* InsertFlags.AlternativeOverwriteConfig */ ? 8 /* InsertFlags.AlternativeOverwriteConfig */ : 0));\n                    break;\n                }\n            });\n        }\n        this._alertCompletionItem(item);\n        // clear only now - after all tasks are done\n        Promise.all(tasks).finally(() => {\n            this._reportSuggestionAcceptedTelemetry(item, model, isResolved, _commandExectionDuration, _additionalEditsAppliedAsync, event.index, event.model.items);\n            this.model.clear();\n            cts.dispose();\n        });\n    }\n    _reportSuggestionAcceptedTelemetry(item, model, itemResolved, commandExectionDuration, additionalEditsAppliedAsync, index, completionItems) {\n        if (Math.floor(Math.random() * 100) === 0) {\n            // throttle telemetry event because accepting completions happens a lot\n            return;\n        }\n        const labelMap = new Map();\n        for (let i = 0; i < Math.min(30, completionItems.length); i++) {\n            const label = completionItems[i].textLabel;\n            if (labelMap.has(label)) {\n                labelMap.get(label).push(i);\n            }\n            else {\n                labelMap.set(label, [i]);\n            }\n        }\n        const firstIndexArray = labelMap.get(item.textLabel);\n        const hasDuplicates = firstIndexArray && firstIndexArray.length > 1;\n        const firstIndex = hasDuplicates ? firstIndexArray[0] : -1;\n        this._telemetryService.publicLog2('suggest.acceptedSuggestion', {\n            extensionId: item.extensionId?.value ?? 'unknown',\n            providerId: item.provider._debugDisplayName ?? 'unknown',\n            kind: item.completion.kind,\n            basenameHash: hash(basename(model.uri)).toString(16),\n            languageId: model.getLanguageId(),\n            fileExtension: extname(model.uri),\n            resolveInfo: !item.provider.resolveCompletionItem ? -1 : itemResolved ? 1 : 0,\n            resolveDuration: item.resolveDuration,\n            commandDuration: commandExectionDuration,\n            additionalEditsAsync: additionalEditsAppliedAsync,\n            index,\n            firstIndex,\n        });\n    }\n    getOverwriteInfo(item, toggleMode) {\n        assertType(this.editor.hasModel());\n        let replace = this.editor.getOption(119 /* EditorOption.suggest */).insertMode === 'replace';\n        if (toggleMode) {\n            replace = !replace;\n        }\n        const overwriteBefore = item.position.column - item.editStart.column;\n        const overwriteAfter = (replace ? item.editReplaceEnd.column : item.editInsertEnd.column) - item.position.column;\n        const columnDelta = this.editor.getPosition().column - item.position.column;\n        const suffixDelta = this._lineSuffix.value ? this._lineSuffix.value.delta(this.editor.getPosition()) : 0;\n        return {\n            overwriteBefore: overwriteBefore + columnDelta,\n            overwriteAfter: overwriteAfter + suffixDelta\n        };\n    }\n    _alertCompletionItem(item) {\n        if (isNonEmptyArray(item.completion.additionalTextEdits)) {\n            const msg = nls.localize('aria.alert.snippet', \"Accepting '{0}' made {1} additional edits\", item.textLabel, item.completion.additionalTextEdits.length);\n            alert(msg);\n        }\n    }\n    triggerSuggest(onlyFrom, auto, noFilter) {\n        if (this.editor.hasModel()) {\n            this.model.trigger({\n                auto: auto ?? false,\n                completionOptions: { providerFilter: onlyFrom, kindFilter: noFilter ? new Set() : undefined }\n            });\n            this.editor.revealPosition(this.editor.getPosition(), 0 /* ScrollType.Smooth */);\n            this.editor.focus();\n        }\n    }\n    triggerSuggestAndAcceptBest(arg) {\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        const positionNow = this.editor.getPosition();\n        const fallback = () => {\n            if (positionNow.equals(this.editor.getPosition())) {\n                this._commandService.executeCommand(arg.fallback);\n            }\n        };\n        const makesTextEdit = (item) => {\n            if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */ || item.completion.additionalTextEdits) {\n                // snippet, other editor -> makes edit\n                return true;\n            }\n            const position = this.editor.getPosition();\n            const startColumn = item.editStart.column;\n            const endColumn = position.column;\n            if (endColumn - startColumn !== item.completion.insertText.length) {\n                // unequal lengths -> makes edit\n                return true;\n            }\n            const textNow = this.editor.getModel().getValueInRange({\n                startLineNumber: position.lineNumber,\n                startColumn,\n                endLineNumber: position.lineNumber,\n                endColumn\n            });\n            // unequal text -> makes edit\n            return textNow !== item.completion.insertText;\n        };\n        Event.once(this.model.onDidTrigger)(_ => {\n            // wait for trigger because only then the cancel-event is trustworthy\n            const listener = [];\n            Event.any(this.model.onDidTrigger, this.model.onDidCancel)(() => {\n                // retrigger or cancel -> try to type default text\n                dispose(listener);\n                fallback();\n            }, undefined, listener);\n            this.model.onDidSuggest(({ completionModel }) => {\n                dispose(listener);\n                if (completionModel.items.length === 0) {\n                    fallback();\n                    return;\n                }\n                const index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), completionModel.items);\n                const item = completionModel.items[index];\n                if (!makesTextEdit(item)) {\n                    fallback();\n                    return;\n                }\n                this.editor.pushUndoStop();\n                this._insertSuggestion({ index, item, model: completionModel }, 4 /* InsertFlags.KeepAlternativeSuggestions */ | 1 /* InsertFlags.NoBeforeUndoStop */ | 2 /* InsertFlags.NoAfterUndoStop */);\n            }, undefined, listener);\n        });\n        this.model.trigger({ auto: false, shy: true });\n        this.editor.revealPosition(positionNow, 0 /* ScrollType.Smooth */);\n        this.editor.focus();\n    }\n    acceptSelectedSuggestion(keepAlternativeSuggestions, alternativeOverwriteConfig) {\n        const item = this.widget.value.getFocusedItem();\n        let flags = 0;\n        if (keepAlternativeSuggestions) {\n            flags |= 4 /* InsertFlags.KeepAlternativeSuggestions */;\n        }\n        if (alternativeOverwriteConfig) {\n            flags |= 8 /* InsertFlags.AlternativeOverwriteConfig */;\n        }\n        this._insertSuggestion(item, flags);\n    }\n    acceptNextSuggestion() {\n        this._alternatives.value.next();\n    }\n    acceptPrevSuggestion() {\n        this._alternatives.value.prev();\n    }\n    cancelSuggestWidget() {\n        this.model.cancel();\n        this.model.clear();\n        this.widget.value.hideWidget();\n    }\n    focusSuggestion() {\n        this.widget.value.focusSelected();\n    }\n    selectNextSuggestion() {\n        this.widget.value.selectNext();\n    }\n    selectNextPageSuggestion() {\n        this.widget.value.selectNextPage();\n    }\n    selectLastSuggestion() {\n        this.widget.value.selectLast();\n    }\n    selectPrevSuggestion() {\n        this.widget.value.selectPrevious();\n    }\n    selectPrevPageSuggestion() {\n        this.widget.value.selectPreviousPage();\n    }\n    selectFirstSuggestion() {\n        this.widget.value.selectFirst();\n    }\n    toggleSuggestionDetails() {\n        this.widget.value.toggleDetails();\n    }\n    toggleExplainMode() {\n        this.widget.value.toggleExplainMode();\n    }\n    toggleSuggestionFocus() {\n        this.widget.value.toggleDetailsFocus();\n    }\n    resetWidgetSize() {\n        this.widget.value.resetPersistedSize();\n    }\n    forceRenderingAbove() {\n        this.widget.value.forceRenderingAbove();\n    }\n    stopForceRenderingAbove() {\n        if (!this.widget.isInitialized) {\n            // This method has no effect if the widget is not initialized yet.\n            return;\n        }\n        this.widget.value.stopForceRenderingAbove();\n    }\n    registerSelector(selector) {\n        return this._selectors.register(selector);\n    }\n};\nSuggestController = SuggestController_1 = __decorate([\n    __param(1, ISuggestMemoryService),\n    __param(2, ICommandService),\n    __param(3, IContextKeyService),\n    __param(4, IInstantiationService),\n    __param(5, ILogService),\n    __param(6, ITelemetryService)\n], SuggestController);\nexport { SuggestController };\nclass PriorityRegistry {\n    constructor(prioritySelector) {\n        this.prioritySelector = prioritySelector;\n        this._items = new Array();\n    }\n    register(value) {\n        if (this._items.indexOf(value) !== -1) {\n            throw new Error('Value is already registered');\n        }\n        this._items.push(value);\n        this._items.sort((s1, s2) => this.prioritySelector(s2) - this.prioritySelector(s1));\n        return {\n            dispose: () => {\n                const idx = this._items.indexOf(value);\n                if (idx >= 0) {\n                    this._items.splice(idx, 1);\n                }\n            }\n        };\n    }\n    get itemsOrderedByPriorityDesc() {\n        return this._items;\n    }\n}\nexport class TriggerSuggestAction extends EditorAction {\n    static { this.id = 'editor.action.triggerSuggest'; }\n    constructor() {\n        super({\n            id: TriggerSuggestAction.id,\n            label: nls.localize('suggest.trigger.label', \"Trigger Suggest\"),\n            alias: 'Trigger Suggest',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCompletionItemProvider, SuggestContext.Visible.toNegated()),\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */, secondary: [512 /* KeyMod.Alt */ | 9 /* KeyCode.Escape */, 2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */] },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor, args) {\n        const controller = SuggestController.get(editor);\n        if (!controller) {\n            return;\n        }\n        let auto;\n        if (args && typeof args === 'object') {\n            if (args.auto === true) {\n                auto = true;\n            }\n        }\n        controller.triggerSuggest(undefined, auto, undefined);\n    }\n}\nregisterEditorContribution(SuggestController.ID, SuggestController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(TriggerSuggestAction);\nconst weight = 100 /* KeybindingWeight.EditorContrib */ + 90;\nconst SuggestCommand = EditorCommand.bindToContribution(SuggestController.get);\nregisterEditorCommand(new SuggestCommand({\n    id: 'acceptSelectedSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion),\n    handler(x) {\n        x.acceptSelectedSuggestion(true, false);\n    },\n    kbOpts: [{\n            // normal tab\n            primary: 2 /* KeyCode.Tab */,\n            kbExpr: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\n            weight,\n        }, {\n            // accept on enter has special rules\n            primary: 3 /* KeyCode.Enter */,\n            kbExpr: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.AcceptSuggestionsOnEnter, SuggestContext.MakesTextEdit),\n            weight,\n        }],\n    menuOpts: [{\n            menuId: suggestWidgetStatusbarMenu,\n            title: nls.localize('accept.insert', \"Insert\"),\n            group: 'left',\n            order: 1,\n            when: SuggestContext.HasInsertAndReplaceRange.toNegated()\n        }, {\n            menuId: suggestWidgetStatusbarMenu,\n            title: nls.localize('accept.insert', \"Insert\"),\n            group: 'left',\n            order: 1,\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert'))\n        }, {\n            menuId: suggestWidgetStatusbarMenu,\n            title: nls.localize('accept.replace', \"Replace\"),\n            group: 'left',\n            order: 1,\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace'))\n        }]\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'acceptAlternativeSelectedSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.HasFocusedSuggestion),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n        secondary: [1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */],\n    },\n    handler(x) {\n        x.acceptSelectedSuggestion(false, true);\n    },\n    menuOpts: [{\n            menuId: suggestWidgetStatusbarMenu,\n            group: 'left',\n            order: 2,\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert')),\n            title: nls.localize('accept.replace', \"Replace\")\n        }, {\n            menuId: suggestWidgetStatusbarMenu,\n            group: 'left',\n            order: 2,\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace')),\n            title: nls.localize('accept.insert', \"Insert\")\n        }]\n}));\n// continue to support the old command\nCommandsRegistry.registerCommandAlias('acceptSelectedSuggestionOnEnter', 'acceptSelectedSuggestion');\nregisterEditorCommand(new SuggestCommand({\n    id: 'hideSuggestWidget',\n    precondition: SuggestContext.Visible,\n    handler: x => x.cancelSuggestWidget(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectNextSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectNextSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 18 /* KeyCode.DownArrow */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */],\n        mac: { primary: 18 /* KeyCode.DownArrow */, secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */, 256 /* KeyMod.WinCtrl */ | 44 /* KeyCode.KeyN */] }\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectNextPageSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectNextPageSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 12 /* KeyCode.PageDown */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 12 /* KeyCode.PageDown */]\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectLastSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectLastSuggestion()\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectPrevSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectPrevSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 16 /* KeyCode.UpArrow */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */],\n        mac: { primary: 16 /* KeyCode.UpArrow */, secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */, 256 /* KeyMod.WinCtrl */ | 46 /* KeyCode.KeyP */] }\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectPrevPageSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectPrevPageSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 11 /* KeyCode.PageUp */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 11 /* KeyCode.PageUp */]\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'selectFirstSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, ContextKeyExpr.or(SuggestContext.MultipleSuggestions, SuggestContext.HasFocusedSuggestion.negate())),\n    handler: c => c.selectFirstSuggestion()\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'focusSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion.negate()),\n    handler: x => x.focusSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\n        mac: { primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */, secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */] }\n    },\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'focusAndAcceptSuggestion',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion.negate()),\n    handler: c => {\n        c.focusSuggestion();\n        c.acceptSelectedSuggestion(true, false);\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'toggleSuggestionDetails',\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.HasFocusedSuggestion),\n    handler: x => x.toggleSuggestionDetails(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 10 /* KeyCode.Space */,\n        secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */],\n        mac: { primary: 256 /* KeyMod.WinCtrl */ | 10 /* KeyCode.Space */, secondary: [2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */] }\n    },\n    menuOpts: [{\n            menuId: suggestWidgetStatusbarMenu,\n            group: 'right',\n            order: 1,\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible, SuggestContext.CanResolve),\n            title: nls.localize('detail.more', \"Show Less\")\n        }, {\n            menuId: suggestWidgetStatusbarMenu,\n            group: 'right',\n            order: 1,\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible.toNegated(), SuggestContext.CanResolve),\n            title: nls.localize('detail.less', \"Show More\")\n        }]\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'toggleExplainMode',\n    precondition: SuggestContext.Visible,\n    handler: x => x.toggleExplainMode(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 90 /* KeyCode.Slash */,\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'toggleSuggestionFocus',\n    precondition: SuggestContext.Visible,\n    handler: x => x.toggleSuggestionFocus(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 10 /* KeyCode.Space */,\n        mac: { primary: 256 /* KeyMod.WinCtrl */ | 512 /* KeyMod.Alt */ | 10 /* KeyCode.Space */ }\n    }\n}));\n//#region tab completions\nregisterEditorCommand(new SuggestCommand({\n    id: 'insertBestCompletion',\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), WordContextKey.AtEnd, SuggestContext.Visible.toNegated(), SuggestAlternatives.OtherSuggestions.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n    handler: (x, arg) => {\n        x.triggerSuggestAndAcceptBest(isObject(arg) ? { fallback: 'tab', ...arg } : { fallback: 'tab' });\n    },\n    kbOpts: {\n        weight,\n        primary: 2 /* KeyCode.Tab */\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'insertNextSuggestion',\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n    handler: x => x.acceptNextSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 2 /* KeyCode.Tab */\n    }\n}));\nregisterEditorCommand(new SuggestCommand({\n    id: 'insertPrevSuggestion',\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\n    handler: x => x.acceptPrevSuggestion(),\n    kbOpts: {\n        weight: weight,\n        kbExpr: EditorContextKeys.textInputFocus,\n        primary: 1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */\n    }\n}));\nregisterEditorAction(class extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.resetSuggestSize',\n            label: nls.localize('suggest.reset.label', \"Reset Suggest Widget Size\"),\n            alias: 'Reset Suggest Widget Size',\n            precondition: undefined\n        });\n    }\n    run(_accessor, editor) {\n        SuggestController.get(editor)?.resetWidgetSize();\n    }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
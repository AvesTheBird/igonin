{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Defines the portion of the cell which is to be used as a connectable\n * region. Default is 0.3. Possible values are 0 < x <= 1.\n */\nexport const DEFAULT_HOTSPOT = 0.3;\n/**\n * Defines the minimum size in pixels of the portion of the cell which is\n * to be used as a connectable region. Default is 8.\n */\nexport const MIN_HOTSPOT_SIZE = 8;\n/**\n * Defines the maximum size in pixels of the portion of the cell which is\n * to be used as a connectable region. Use 0 for no maximum. Default is 0.\n */\nexport const MAX_HOTSPOT_SIZE = 0;\n/**\n * Defines the exact rendering hint.\n *\n * Defines the faster rendering hint.\n *\n * Defines the fastest rendering hint.\n */\nexport var RENDERING_HINT;\n(function (RENDERING_HINT) {\n  RENDERING_HINT[\"EXACT\"] = \"exact\";\n  RENDERING_HINT[\"FASTER\"] = \"faster\";\n  RENDERING_HINT[\"FASTEST\"] = \"fastest\";\n})(RENDERING_HINT || (RENDERING_HINT = {}));\n/**\n * - DIALECT.SVG: Defines the SVG display dialect name.\n *\n * - DIALECT.MIXEDHTML: Defines the mixed HTML display dialect name.\n *\n * - DIALECT.PREFERHTML: Defines the preferred HTML display dialect name.\n *\n * - DIALECT.STRICTHTML: Defines the strict HTML display dialect.\n */\nexport var DIALECT;\n(function (DIALECT) {\n  DIALECT[\"SVG\"] = \"svg\";\n  DIALECT[\"MIXEDHTML\"] = \"mixedHtml\";\n  DIALECT[\"PREFERHTML\"] = \"preferHtml\";\n  DIALECT[\"STRICTHTML\"] = \"strictHtml\";\n})(DIALECT || (DIALECT = {}));\n/**\n * Name of the field to be used to store the object ID. Default is\n * <code>mxObjectId</code>.\n */\nexport const IDENTITY_FIELD_NAME = 'mxObjectId';\n/**\n * Defines the SVG namespace.\n */\nexport const NS_SVG = 'http://www.w3.org/2000/svg';\n/**\n * Defines the XLink namespace.\n */\nexport const NS_XLINK = 'http://www.w3.org/1999/xlink';\n/**\n * Defines the color to be used to draw shadows in shapes and windows.\n * Default is gray.\n */\nexport const SHADOWCOLOR = 'gray';\n/**\n * Specifies the x-offset of the shadow. Default is 2.\n */\nexport const SHADOW_OFFSET_X = 2;\n/**\n * Specifies the y-offset of the shadow. Default is 3.\n */\nexport const SHADOW_OFFSET_Y = 3;\n/**\n * Defines the opacity for shadows. Default is 1.\n */\nexport const SHADOW_OPACITY = 1;\nexport var NODETYPE;\n(function (NODETYPE) {\n  NODETYPE[NODETYPE[\"ELEMENT\"] = 1] = \"ELEMENT\";\n  NODETYPE[NODETYPE[\"ATTRIBUTE\"] = 2] = \"ATTRIBUTE\";\n  NODETYPE[NODETYPE[\"TEXT\"] = 3] = \"TEXT\";\n  NODETYPE[NODETYPE[\"CDATA\"] = 4] = \"CDATA\";\n  NODETYPE[NODETYPE[\"ENTITY_REFERENCE\"] = 5] = \"ENTITY_REFERENCE\";\n  NODETYPE[NODETYPE[\"ENTITY\"] = 6] = \"ENTITY\";\n  NODETYPE[NODETYPE[\"PROCESSING_INSTRUCTION\"] = 7] = \"PROCESSING_INSTRUCTION\";\n  NODETYPE[NODETYPE[\"COMMENT\"] = 8] = \"COMMENT\";\n  NODETYPE[NODETYPE[\"DOCUMENT\"] = 9] = \"DOCUMENT\";\n  NODETYPE[NODETYPE[\"DOCUMENTTYPE\"] = 10] = \"DOCUMENTTYPE\";\n  NODETYPE[NODETYPE[\"DOCUMENT_FRAGMENT\"] = 11] = \"DOCUMENT_FRAGMENT\";\n  NODETYPE[NODETYPE[\"NOTATION\"] = 12] = \"NOTATION\";\n})(NODETYPE || (NODETYPE = {}));\n/**\n * Defines the vertical offset for the tooltip.\n * Default is 16.\n */\nexport const TOOLTIP_VERTICAL_OFFSET = 16;\n/**\n * Specifies the default valid color. Default is #0000FF.\n */\nexport const DEFAULT_VALID_COLOR = '#00FF00';\n/**\n * Specifies the default invalid color. Default is #FF0000.\n */\nexport const DEFAULT_INVALID_COLOR = '#FF0000';\n/**\n * Specifies the default highlight color for shape outlines.\n * Default is #0000FF. This is used in {@link EdgeHandler}.\n */\nexport const OUTLINE_HIGHLIGHT_COLOR = '#00FF00';\n/**\n * Defines the strokewidth to be used for shape outlines.\n * Default is 5. This is used in {@link EdgeHandler}.\n */\nexport const OUTLINE_HIGHLIGHT_STROKEWIDTH = 5;\n/**\n * Defines the strokewidth to be used for the highlights.\n * Default is 3.\n */\nexport const HIGHLIGHT_STROKEWIDTH = 3;\n/**\n * Size of the constraint highlight (in px). Default is 2.\n */\nexport const HIGHLIGHT_SIZE = 2;\n/**\n * Opacity (in %) used for the highlights (including outline).\n * Default is 100.\n */\nexport const HIGHLIGHT_OPACITY = 100;\n/**\n * - CURSOR_MOVABLE_VERTEX: Defines the cursor for a movable vertex. Default is 'move'.\n *\n * - CURSOR_MOVABLE_EDGE: Defines the cursor for a movable edge. Default is 'move'.\n *\n * - CURSOR_LABEL_HANDLE: Defines the cursor for a movable label. Default is 'default'.\n *\n * - CURSOR_TERMINAL_HANDLE: Defines the cursor for a terminal handle. Default is 'pointer'.\n *\n * - CURSOR_BEND_HANDLE: Defines the cursor for a movable bend. Default is 'crosshair'.\n *\n * - CURSOR_VIRTUAL_BEND_HANDLE: Defines the cursor for a movable bend. Default is 'crosshair'.\n *\n * - CURSOR_CONNECT: Defines the cursor for a connectable state. Default is 'pointer'.\n */\nexport var CURSOR;\n(function (CURSOR) {\n  CURSOR[\"MOVABLE_VERTEX\"] = \"move\";\n  CURSOR[\"MOVABLE_EDGE\"] = \"move\";\n  CURSOR[\"LABEL_HANDLE\"] = \"default\";\n  CURSOR[\"TERMINAL_HANDLE\"] = \"pointer\";\n  CURSOR[\"BEND_HANDLE\"] = \"crosshair\";\n  CURSOR[\"VIRTUAL_BEND_HANDLE\"] = \"crosshair\";\n  CURSOR[\"CONNECT\"] = \"pointer\";\n})(CURSOR || (CURSOR = {}));\n/**\n * Defines the color to be used for the cell highlighting.\n * Use 'none' for no color. Default is #00FF00.\n */\nexport const HIGHLIGHT_COLOR = '#00FF00';\n/**\n * Defines the color to be used for highlighting a target cell for a new\n * or changed connection. Note that this may be either a source or\n * target terminal in the graph. Use 'none' for no color.\n * Default is #0000FF.\n */\nexport const CONNECT_TARGET_COLOR = '#0000FF';\n/**\n * Defines the color to be used for highlighting a invalid target cells\n * for a new or changed connections. Note that this may be either a source\n * or target terminal in the graph. Use 'none' for no color. Default is\n * #FF0000.\n */\nexport const INVALID_CONNECT_TARGET_COLOR = '#FF0000';\n/**\n * Defines the color to be used for the highlighting target parent cells\n * (for drag and drop). Use 'none' for no color. Default is #0000FF.\n */\nexport const DROP_TARGET_COLOR = '#0000FF';\n/**\n * Defines the color to be used for the coloring valid connection\n * previews. Use 'none' for no color. Default is #FF0000.\n */\nexport const VALID_COLOR = '#00FF00';\n/**\n * Defines the color to be used for the coloring invalid connection\n * previews. Use 'none' for no color. Default is #FF0000.\n */\nexport const INVALID_COLOR = '#FF0000';\n/**\n * Defines the color to be used for the selection border of edges. Use\n * 'none' for no color. Default is #00FF00.\n */\nexport const EDGE_SELECTION_COLOR = '#00FF00';\n/**\n * Defines the color to be used for the selection border of vertices. Use\n * 'none' for no color. Default is #00FF00.\n */\nexport const VERTEX_SELECTION_COLOR = '#00FF00';\n/**\n * Defines the strokewidth to be used for vertex selections.\n * Default is 1.\n */\nexport const VERTEX_SELECTION_STROKEWIDTH = 1;\n/**\n * Defines the strokewidth to be used for edge selections.\n * Default is 1.\n */\nexport const EDGE_SELECTION_STROKEWIDTH = 1;\n/**\n * Defines the dashed state to be used for the vertex selection\n * border. Default is true.\n */\nexport const VERTEX_SELECTION_DASHED = true;\n/**\n * Defines the dashed state to be used for the edge selection\n * border. Default is true.\n */\nexport const EDGE_SELECTION_DASHED = true;\n/**\n * Defines the color to be used for the guidelines in `Guide`.\n * @default #FF0000.\n */\nexport const GUIDE_COLOR = '#FF0000';\n/**\n * Defines the strokewidth to be used for the guidelines in `Guide`.\n * @default 1.\n */\nexport const GUIDE_STROKEWIDTH = 1;\n/**\n * Defines the color to be used for the outline rectangle\n * border.  Use 'none' for no color. Default is #0099FF.\n */\nexport const OUTLINE_COLOR = '#0099FF';\n/**\n * Defines the strokewidth to be used for the outline rectangle\n * stroke width. Default is 3.\n */\nexport const OUTLINE_STROKEWIDTH = 3;\n/**\n * Defines the default size for handles. Default is 6.\n */\nexport const HANDLE_SIZE = 6;\n/**\n * Defines the default size for label handles. Default is 4.\n */\nexport const LABEL_HANDLE_SIZE = 4;\n/**\n * Defines the color to be used for the handle fill color. Use 'none' for\n * no color. Default is #00FF00 (green).\n */\nexport const HANDLE_FILLCOLOR = '#00FF00';\n/**\n * Defines the color to be used for the handle stroke color. Use 'none' for\n * no color. Default is black.\n */\nexport const HANDLE_STROKECOLOR = 'black';\n/**\n * Defines the color to be used for the label handle fill color. Use 'none'\n * for no color. Default is yellow.\n */\nexport const LABEL_HANDLE_FILLCOLOR = 'yellow';\n/**\n * Defines the color to be used for the connect handle fill color. Use\n * 'none' for no color. Default is #0000FF (blue).\n */\nexport const CONNECT_HANDLE_FILLCOLOR = '#0000FF';\n/**\n * Defines the color to be used for the locked handle fill color. Use\n * 'none' for no color. Default is #FF0000 (red).\n */\nexport const LOCKED_HANDLE_FILLCOLOR = '#FF0000';\n/**\n * Defines the color to be used for the outline sizer fill color. Use\n * 'none' for no color. Default is #00FFFF.\n */\nexport const OUTLINE_HANDLE_FILLCOLOR = '#00FFFF';\n/**\n * Defines the color to be used for the outline sizer stroke color. Use\n * 'none' for no color. Default is #0033FF.\n */\nexport const OUTLINE_HANDLE_STROKECOLOR = '#0033FF';\n/**\n * Defines the default family for all fonts. Default is Arial,Helvetica.\n */\nexport const DEFAULT_FONTFAMILY = 'Arial,Helvetica';\n/**\n * Defines the default size (in px). Default is 11.\n */\nexport const DEFAULT_FONTSIZE = 11;\n/**\n * Defines the default value for the <STYLE_TEXT_DIRECTION> if no value is\n * defined for it in the style. Default value is an empty string which means\n * the default system setting is used and no direction is set.\n */\nexport const DEFAULT_TEXT_DIRECTION = '';\n/**\n * Defines the default line height for text labels. Default is 1.2.\n */\nexport const LINE_HEIGHT = 1.2;\n/**\n * Defines the CSS value for the word-wrap property. Default is \"normal\".\n * Change this to \"break-word\" to allow long words to be able to be broken\n * and wrap onto the next line.\n */\nexport const WORD_WRAP = 'normal';\n/**\n * Specifies if absolute line heights should be used (px) in CSS. Default\n * is false. Set this to true for backwards compatibility.\n */\nexport const ABSOLUTE_LINE_HEIGHT = false;\n/**\n * Defines the default style for all fonts. Default is 0. This can be set\n * to any combination of font styles as follows.\n *\n * ```javascript\n * mxConstants.DEFAULT_FONTSTYLE = mxConstants.FONT_BOLD | mxConstants.FONT_ITALIC;\n * ```\n */\nexport const DEFAULT_FONTSTYLE = 0;\n/**\n * Defines the default start size for swimlanes. Default is 40.\n */\nexport const DEFAULT_STARTSIZE = 40;\n/**\n * Defines the default size for all markers. Default is 6.\n */\nexport const DEFAULT_MARKERSIZE = 6;\n/**\n * Defines the default width and height for images used in the\n * label shape. Default is 24.\n */\nexport const DEFAULT_IMAGESIZE = 24;\n/**\n * Defines the length of the horizontal segment of an `Entity Relation`.\n * This can be overridden using {@link CellStateStyle.segment} style.\n */\nexport const ENTITY_SEGMENT = 30;\n/**\n * Defines the default rounding factor for the rounded vertices in percent between\n * `0` and `1`. Values should be smaller than `0.5`.\n * See {@link CellStateStyle.arcSize}.\n */\nexport const RECTANGLE_ROUNDING_FACTOR = 0.15;\n/**\n * Defines the default size in pixels of the arcs for the rounded edges.\n * See {@link CellStateStyle.arcSize}.\n */\nexport const LINE_ARCSIZE = 20;\n/**\n * Defines the spacing between the arrow shape and its terminals. Default is 0.\n */\nexport const ARROW_SPACING = 0;\n/**\n * Defines the width of the arrow shape. Default is 30.\n */\nexport const ARROW_WIDTH = 30;\n/**\n * Defines the size of the arrowhead in the arrow shape. Default is 30.\n */\nexport const ARROW_SIZE = 30;\n/**\n * Defines the rectangle for the A4 portrait page format. The dimensions\n * of this page format are 826x1169 pixels.\n */\nexport const PAGE_FORMAT_A4_PORTRAIT = [0, 0, 827, 1169];\n/**\n * Defines the rectangle for the A4 portrait page format. The dimensions\n * of this page format are 826x1169 pixels.\n */\nexport const PAGE_FORMAT_A4_LANDSCAPE = [0, 0, 1169, 827];\n/**\n * Defines the rectangle for the Letter portrait page format. The\n * dimensions of this page format are 850x1100 pixels.\n */\nexport const PAGE_FORMAT_LETTER_PORTRAIT = [0, 0, 850, 1100];\n/**\n * Defines the rectangle for the Letter portrait page format. The dimensions\n * of this page format are 850x1100 pixels.\n */\nexport const PAGE_FORMAT_LETTER_LANDSCAPE = [0, 0, 1100, 850];\n/**\n * Defines the value for none. Default is \"none\".\n */\nexport const NONE = 'none';\n/**\n * - FONT_BOLD: Constant for bold fonts. Default is 1.\n *\n * - FONT_ITALIC: Constant for italic fonts. Default is 2.\n *\n * - FONT_UNDERLINE: Constant for underlined fonts. Default is 4.\n *\n * - FONT_STRIKETHROUGH: Constant for strikethrough fonts. Default is 8.\n */\nexport var FONT;\n(function (FONT) {\n  FONT[FONT[\"BOLD\"] = 1] = \"BOLD\";\n  FONT[FONT[\"ITALIC\"] = 2] = \"ITALIC\";\n  FONT[FONT[\"UNDERLINE\"] = 4] = \"UNDERLINE\";\n  FONT[FONT[\"STRIKETHROUGH\"] = 8] = \"STRIKETHROUGH\";\n})(FONT || (FONT = {}));\n/**\n * - ARROW_CLASSIC: Constant for classic arrow markers.\n *\n * - ARROW_CLASSIC_THIN: Constant for thin classic arrow markers.\n *\n * - ARROW_BLOCK: Constant for block arrow markers.\n *\n * - ARROW_BLOCK_THIN: Constant for thin block arrow markers.\n *\n * - ARROW_OPEN: Constant for open arrow markers.\n *\n * - ARROW_OPEN_THIN: Constant for thin open arrow markers.\n *\n * - ARROW_OVAL: Constant for oval arrow markers.\n *\n * - ARROW_DIAMOND: Constant for diamond arrow markers.\n *\n * - ARROW_DIAMOND_THIN: Constant for thin diamond arrow markers.\n */\nexport var ARROW;\n(function (ARROW) {\n  ARROW[\"CLASSIC\"] = \"classic\";\n  ARROW[\"CLASSIC_THIN\"] = \"classicThin\";\n  ARROW[\"BLOCK\"] = \"block\";\n  ARROW[\"BLOCK_THIN\"] = \"blockThin\";\n  ARROW[\"OPEN\"] = \"open\";\n  ARROW[\"OPEN_THIN\"] = \"openThin\";\n  ARROW[\"OVAL\"] = \"oval\";\n  ARROW[\"DIAMOND\"] = \"diamond\";\n  ARROW[\"DIAMOND_THIN\"] = \"diamondThin\";\n})(ARROW || (ARROW = {}));\n/**\n * - ALIGN_LEFT: Constant for left horizontal alignment. Default is left.\n *\n * - ALIGN_CENTER: Constant for center horizontal alignment. Default is center.\n *\n * - ALIGN_RIGHT: Constant for right horizontal alignment. Default is right.\n *\n * - ALIGN_TOP: Constant for top vertical alignment. Default is top.\n *\n * - ALIGN_MIDDLE: Constant for middle vertical alignment. Default is middle.\n *\n * - ALIGN_BOTTOM: Constant for bottom vertical alignment. Default is bottom.\n */\nexport var ALIGN;\n(function (ALIGN) {\n  ALIGN[\"LEFT\"] = \"left\";\n  ALIGN[\"CENTER\"] = \"center\";\n  ALIGN[\"RIGHT\"] = \"right\";\n  ALIGN[\"TOP\"] = \"top\";\n  ALIGN[\"MIDDLE\"] = \"middle\";\n  ALIGN[\"BOTTOM\"] = \"bottom\";\n})(ALIGN || (ALIGN = {}));\nexport var DIRECTION;\n(function (DIRECTION) {\n  DIRECTION[\"NORTH\"] = \"north\";\n  DIRECTION[\"SOUTH\"] = \"south\";\n  DIRECTION[\"EAST\"] = \"east\";\n  DIRECTION[\"WEST\"] = \"west\";\n})(DIRECTION || (DIRECTION = {}));\n/**\n * Constant for text direction default. Default is an empty string. Use\n * this value to use the default text direction of the operating system.\n *\n * Constant for text direction automatic. Default is auto. Use this value\n * to find the direction for a given text with {@link Text#getAutoDirection}.\n *\n * Constant for text direction left to right. Default is ltr. Use this\n * value for left to right text direction.\n *\n * Constant for text direction right to left. Default is rtl. Use this\n * value for right to left text direction.\n */\nexport var TEXT_DIRECTION;\n(function (TEXT_DIRECTION) {\n  TEXT_DIRECTION[\"DEFAULT\"] = \"\";\n  TEXT_DIRECTION[\"AUTO\"] = \"auto\";\n  TEXT_DIRECTION[\"LTR\"] = \"ltr\";\n  TEXT_DIRECTION[\"RTL\"] = \"rtl\";\n})(TEXT_DIRECTION || (TEXT_DIRECTION = {}));\n/**\n * - DIRECTION_MASK_NONE: Constant for no direction.\n *\n * - DIRECTION_MASK_WEST: Bitwise mask for west direction.\n *\n * - DIRECTION_MASK_NORTH: Bitwise mask for north direction.\n *\n * - DIRECTION_MASK_SOUTH: Bitwise mask for south direction.\n *\n * - DIRECTION_MASK_EAST: Bitwise mask for east direction.\n *\n * - DIRECTION_MASK_ALL: Bitwise mask for all directions.\n */\nexport const DIRECTION_MASK = {\n  NONE: 0,\n  WEST: 1,\n  NORTH: 2,\n  SOUTH: 4,\n  EAST: 8,\n  ALL: 15\n};\n/**\n * Default is horizontal.\n */\nexport var ELBOW;\n(function (ELBOW) {\n  ELBOW[\"VERTICAL\"] = \"vertical\";\n  ELBOW[\"HORIZONTAL\"] = \"horizontal\";\n})(ELBOW || (ELBOW = {}));\n/**\n * Can be used as a string value for the STYLE_EDGE style.\n */\nexport var EDGESTYLE;\n(function (EDGESTYLE) {\n  EDGESTYLE[\"ELBOW\"] = \"elbowEdgeStyle\";\n  EDGESTYLE[\"ENTITY_RELATION\"] = \"entityRelationEdgeStyle\";\n  EDGESTYLE[\"LOOP\"] = \"loopEdgeStyle\";\n  EDGESTYLE[\"SIDETOSIDE\"] = \"sideToSideEdgeStyle\";\n  EDGESTYLE[\"TOPTOBOTTOM\"] = \"topToBottomEdgeStyle\";\n  EDGESTYLE[\"ORTHOGONAL\"] = \"orthogonalEdgeStyle\";\n  EDGESTYLE[\"SEGMENT\"] = \"segmentEdgeStyle\";\n  EDGESTYLE[\"MANHATTAN\"] = \"manhattanEdgeStyle\";\n})(EDGESTYLE || (EDGESTYLE = {}));\n/**\n * Can be used as a string value for the STYLE_PERIMETER style.\n */\nexport var PERIMETER;\n(function (PERIMETER) {\n  PERIMETER[\"ELLIPSE\"] = \"ellipsePerimeter\";\n  PERIMETER[\"RECTANGLE\"] = \"rectanglePerimeter\";\n  PERIMETER[\"RHOMBUS\"] = \"rhombusPerimeter\";\n  PERIMETER[\"HEXAGON\"] = \"hexagonPerimeter\";\n  PERIMETER[\"TRIANGLE\"] = \"trianglePerimeter\";\n})(PERIMETER || (PERIMETER = {}));\nexport var SHAPE;\n(function (SHAPE) {\n  /**\n   * Name under which {@link RectangleShape} is registered in {@link CellRenderer}.\n   * Default is rectangle.\n   */\n  SHAPE[\"RECTANGLE\"] = \"rectangle\";\n  /**\n   * Name under which {@link Ellipse} is registered in {@link CellRenderer}.\n   * Default is ellipse.\n   */\n  SHAPE[\"ELLIPSE\"] = \"ellipse\";\n  /**\n   * Name under which {@link DoubleEllipse} is registered in {@link CellRenderer}.\n   * Default is doubleEllipse.\n   */\n  SHAPE[\"DOUBLE_ELLIPSE\"] = \"doubleEllipse\";\n  /**\n   * Name under which {@link Rhombus} is registered in {@link CellRenderer}.\n   * Default is rhombus.\n   */\n  SHAPE[\"RHOMBUS\"] = \"rhombus\";\n  /**\n   * Name under which {@link Line} is registered in {@link CellRenderer}.\n   * Default is line.\n   */\n  SHAPE[\"LINE\"] = \"line\";\n  /**\n   * Name under which {@link ImageShape} is registered in {@link CellRenderer}.\n   * Default is image.\n   */\n  SHAPE[\"IMAGE\"] = \"image\";\n  /**\n   * Name under which {@link Arrow} is registered in {@link CellRenderer}.\n   * Default is arrow.\n   */\n  SHAPE[\"ARROW\"] = \"arrow\";\n  /**\n   * Name under which {@link ArrowConnector} is registered in {@link CellRenderer}.\n   * Default is arrowConnector.\n   */\n  SHAPE[\"ARROW_CONNECTOR\"] = \"arrowConnector\";\n  /**\n   * Name under which {@link Label} is registered in {@link CellRenderer}.\n   * Default is label.\n   */\n  SHAPE[\"LABEL\"] = \"label\";\n  /**\n   * Name under which {@link Cylinder} is registered in {@link CellRenderer}.\n   * Default is cylinder.\n   */\n  SHAPE[\"CYLINDER\"] = \"cylinder\";\n  /**\n   * Name under which {@link Swimlane} is registered in {@link CellRenderer}.\n   * Default is swimlane.\n   */\n  SHAPE[\"SWIMLANE\"] = \"swimlane\";\n  /**\n   * Name under which {@link Connector} is registered in {@link CellRenderer}.\n   * Default is connector.\n   */\n  SHAPE[\"CONNECTOR\"] = \"connector\";\n  /**\n   * Name under which {@link Actor} is registered in {@link CellRenderer}.\n   * Default is actor.\n   */\n  SHAPE[\"ACTOR\"] = \"actor\";\n  /**\n   * Name under which {@link Cloud} is registered in {@link CellRenderer}.\n   * Default is cloud.\n   */\n  SHAPE[\"CLOUD\"] = \"cloud\";\n  /**\n   * Name under which {@link Triangle} is registered in {@link CellRenderer}.\n   * Default is triangle.\n   */\n  SHAPE[\"TRIANGLE\"] = \"triangle\";\n  /**\n   * Name under which {@link Hexagon} is registered in {@link CellRenderer}.\n   * Default is hexagon.\n   */\n  SHAPE[\"HEXAGON\"] = \"hexagon\";\n})(SHAPE || (SHAPE = {}));","map":{"version":3,"names":["DEFAULT_HOTSPOT","MIN_HOTSPOT_SIZE","MAX_HOTSPOT_SIZE","RENDERING_HINT","DIALECT","IDENTITY_FIELD_NAME","NS_SVG","NS_XLINK","SHADOWCOLOR","SHADOW_OFFSET_X","SHADOW_OFFSET_Y","SHADOW_OPACITY","NODETYPE","TOOLTIP_VERTICAL_OFFSET","DEFAULT_VALID_COLOR","DEFAULT_INVALID_COLOR","OUTLINE_HIGHLIGHT_COLOR","OUTLINE_HIGHLIGHT_STROKEWIDTH","HIGHLIGHT_STROKEWIDTH","HIGHLIGHT_SIZE","HIGHLIGHT_OPACITY","CURSOR","HIGHLIGHT_COLOR","CONNECT_TARGET_COLOR","INVALID_CONNECT_TARGET_COLOR","DROP_TARGET_COLOR","VALID_COLOR","INVALID_COLOR","EDGE_SELECTION_COLOR","VERTEX_SELECTION_COLOR","VERTEX_SELECTION_STROKEWIDTH","EDGE_SELECTION_STROKEWIDTH","VERTEX_SELECTION_DASHED","EDGE_SELECTION_DASHED","GUIDE_COLOR","GUIDE_STROKEWIDTH","OUTLINE_COLOR","OUTLINE_STROKEWIDTH","HANDLE_SIZE","LABEL_HANDLE_SIZE","HANDLE_FILLCOLOR","HANDLE_STROKECOLOR","LABEL_HANDLE_FILLCOLOR","CONNECT_HANDLE_FILLCOLOR","LOCKED_HANDLE_FILLCOLOR","OUTLINE_HANDLE_FILLCOLOR","OUTLINE_HANDLE_STROKECOLOR","DEFAULT_FONTFAMILY","DEFAULT_FONTSIZE","DEFAULT_TEXT_DIRECTION","LINE_HEIGHT","WORD_WRAP","ABSOLUTE_LINE_HEIGHT","DEFAULT_FONTSTYLE","DEFAULT_STARTSIZE","DEFAULT_MARKERSIZE","DEFAULT_IMAGESIZE","ENTITY_SEGMENT","RECTANGLE_ROUNDING_FACTOR","LINE_ARCSIZE","ARROW_SPACING","ARROW_WIDTH","ARROW_SIZE","PAGE_FORMAT_A4_PORTRAIT","PAGE_FORMAT_A4_LANDSCAPE","PAGE_FORMAT_LETTER_PORTRAIT","PAGE_FORMAT_LETTER_LANDSCAPE","NONE","FONT","ARROW","ALIGN","DIRECTION","TEXT_DIRECTION","DIRECTION_MASK","WEST","NORTH","SOUTH","EAST","ALL","ELBOW","EDGESTYLE","PERIMETER","SHAPE"],"sources":["D:/ospanel/domains/old/react/react-intro/node_modules/@maxgraph/core/dist/util/Constants.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Defines the portion of the cell which is to be used as a connectable\n * region. Default is 0.3. Possible values are 0 < x <= 1.\n */\nexport const DEFAULT_HOTSPOT = 0.3;\n/**\n * Defines the minimum size in pixels of the portion of the cell which is\n * to be used as a connectable region. Default is 8.\n */\nexport const MIN_HOTSPOT_SIZE = 8;\n/**\n * Defines the maximum size in pixels of the portion of the cell which is\n * to be used as a connectable region. Use 0 for no maximum. Default is 0.\n */\nexport const MAX_HOTSPOT_SIZE = 0;\n/**\n * Defines the exact rendering hint.\n *\n * Defines the faster rendering hint.\n *\n * Defines the fastest rendering hint.\n */\nexport var RENDERING_HINT;\n(function (RENDERING_HINT) {\n    RENDERING_HINT[\"EXACT\"] = \"exact\";\n    RENDERING_HINT[\"FASTER\"] = \"faster\";\n    RENDERING_HINT[\"FASTEST\"] = \"fastest\";\n})(RENDERING_HINT || (RENDERING_HINT = {}));\n/**\n * - DIALECT.SVG: Defines the SVG display dialect name.\n *\n * - DIALECT.MIXEDHTML: Defines the mixed HTML display dialect name.\n *\n * - DIALECT.PREFERHTML: Defines the preferred HTML display dialect name.\n *\n * - DIALECT.STRICTHTML: Defines the strict HTML display dialect.\n */\nexport var DIALECT;\n(function (DIALECT) {\n    DIALECT[\"SVG\"] = \"svg\";\n    DIALECT[\"MIXEDHTML\"] = \"mixedHtml\";\n    DIALECT[\"PREFERHTML\"] = \"preferHtml\";\n    DIALECT[\"STRICTHTML\"] = \"strictHtml\";\n})(DIALECT || (DIALECT = {}));\n/**\n * Name of the field to be used to store the object ID. Default is\n * <code>mxObjectId</code>.\n */\nexport const IDENTITY_FIELD_NAME = 'mxObjectId';\n/**\n * Defines the SVG namespace.\n */\nexport const NS_SVG = 'http://www.w3.org/2000/svg';\n/**\n * Defines the XLink namespace.\n */\nexport const NS_XLINK = 'http://www.w3.org/1999/xlink';\n/**\n * Defines the color to be used to draw shadows in shapes and windows.\n * Default is gray.\n */\nexport const SHADOWCOLOR = 'gray';\n/**\n * Specifies the x-offset of the shadow. Default is 2.\n */\nexport const SHADOW_OFFSET_X = 2;\n/**\n * Specifies the y-offset of the shadow. Default is 3.\n */\nexport const SHADOW_OFFSET_Y = 3;\n/**\n * Defines the opacity for shadows. Default is 1.\n */\nexport const SHADOW_OPACITY = 1;\nexport var NODETYPE;\n(function (NODETYPE) {\n    NODETYPE[NODETYPE[\"ELEMENT\"] = 1] = \"ELEMENT\";\n    NODETYPE[NODETYPE[\"ATTRIBUTE\"] = 2] = \"ATTRIBUTE\";\n    NODETYPE[NODETYPE[\"TEXT\"] = 3] = \"TEXT\";\n    NODETYPE[NODETYPE[\"CDATA\"] = 4] = \"CDATA\";\n    NODETYPE[NODETYPE[\"ENTITY_REFERENCE\"] = 5] = \"ENTITY_REFERENCE\";\n    NODETYPE[NODETYPE[\"ENTITY\"] = 6] = \"ENTITY\";\n    NODETYPE[NODETYPE[\"PROCESSING_INSTRUCTION\"] = 7] = \"PROCESSING_INSTRUCTION\";\n    NODETYPE[NODETYPE[\"COMMENT\"] = 8] = \"COMMENT\";\n    NODETYPE[NODETYPE[\"DOCUMENT\"] = 9] = \"DOCUMENT\";\n    NODETYPE[NODETYPE[\"DOCUMENTTYPE\"] = 10] = \"DOCUMENTTYPE\";\n    NODETYPE[NODETYPE[\"DOCUMENT_FRAGMENT\"] = 11] = \"DOCUMENT_FRAGMENT\";\n    NODETYPE[NODETYPE[\"NOTATION\"] = 12] = \"NOTATION\";\n})(NODETYPE || (NODETYPE = {}));\n/**\n * Defines the vertical offset for the tooltip.\n * Default is 16.\n */\nexport const TOOLTIP_VERTICAL_OFFSET = 16;\n/**\n * Specifies the default valid color. Default is #0000FF.\n */\nexport const DEFAULT_VALID_COLOR = '#00FF00';\n/**\n * Specifies the default invalid color. Default is #FF0000.\n */\nexport const DEFAULT_INVALID_COLOR = '#FF0000';\n/**\n * Specifies the default highlight color for shape outlines.\n * Default is #0000FF. This is used in {@link EdgeHandler}.\n */\nexport const OUTLINE_HIGHLIGHT_COLOR = '#00FF00';\n/**\n * Defines the strokewidth to be used for shape outlines.\n * Default is 5. This is used in {@link EdgeHandler}.\n */\nexport const OUTLINE_HIGHLIGHT_STROKEWIDTH = 5;\n/**\n * Defines the strokewidth to be used for the highlights.\n * Default is 3.\n */\nexport const HIGHLIGHT_STROKEWIDTH = 3;\n/**\n * Size of the constraint highlight (in px). Default is 2.\n */\nexport const HIGHLIGHT_SIZE = 2;\n/**\n * Opacity (in %) used for the highlights (including outline).\n * Default is 100.\n */\nexport const HIGHLIGHT_OPACITY = 100;\n/**\n * - CURSOR_MOVABLE_VERTEX: Defines the cursor for a movable vertex. Default is 'move'.\n *\n * - CURSOR_MOVABLE_EDGE: Defines the cursor for a movable edge. Default is 'move'.\n *\n * - CURSOR_LABEL_HANDLE: Defines the cursor for a movable label. Default is 'default'.\n *\n * - CURSOR_TERMINAL_HANDLE: Defines the cursor for a terminal handle. Default is 'pointer'.\n *\n * - CURSOR_BEND_HANDLE: Defines the cursor for a movable bend. Default is 'crosshair'.\n *\n * - CURSOR_VIRTUAL_BEND_HANDLE: Defines the cursor for a movable bend. Default is 'crosshair'.\n *\n * - CURSOR_CONNECT: Defines the cursor for a connectable state. Default is 'pointer'.\n */\nexport var CURSOR;\n(function (CURSOR) {\n    CURSOR[\"MOVABLE_VERTEX\"] = \"move\";\n    CURSOR[\"MOVABLE_EDGE\"] = \"move\";\n    CURSOR[\"LABEL_HANDLE\"] = \"default\";\n    CURSOR[\"TERMINAL_HANDLE\"] = \"pointer\";\n    CURSOR[\"BEND_HANDLE\"] = \"crosshair\";\n    CURSOR[\"VIRTUAL_BEND_HANDLE\"] = \"crosshair\";\n    CURSOR[\"CONNECT\"] = \"pointer\";\n})(CURSOR || (CURSOR = {}));\n/**\n * Defines the color to be used for the cell highlighting.\n * Use 'none' for no color. Default is #00FF00.\n */\nexport const HIGHLIGHT_COLOR = '#00FF00';\n/**\n * Defines the color to be used for highlighting a target cell for a new\n * or changed connection. Note that this may be either a source or\n * target terminal in the graph. Use 'none' for no color.\n * Default is #0000FF.\n */\nexport const CONNECT_TARGET_COLOR = '#0000FF';\n/**\n * Defines the color to be used for highlighting a invalid target cells\n * for a new or changed connections. Note that this may be either a source\n * or target terminal in the graph. Use 'none' for no color. Default is\n * #FF0000.\n */\nexport const INVALID_CONNECT_TARGET_COLOR = '#FF0000';\n/**\n * Defines the color to be used for the highlighting target parent cells\n * (for drag and drop). Use 'none' for no color. Default is #0000FF.\n */\nexport const DROP_TARGET_COLOR = '#0000FF';\n/**\n * Defines the color to be used for the coloring valid connection\n * previews. Use 'none' for no color. Default is #FF0000.\n */\nexport const VALID_COLOR = '#00FF00';\n/**\n * Defines the color to be used for the coloring invalid connection\n * previews. Use 'none' for no color. Default is #FF0000.\n */\nexport const INVALID_COLOR = '#FF0000';\n/**\n * Defines the color to be used for the selection border of edges. Use\n * 'none' for no color. Default is #00FF00.\n */\nexport const EDGE_SELECTION_COLOR = '#00FF00';\n/**\n * Defines the color to be used for the selection border of vertices. Use\n * 'none' for no color. Default is #00FF00.\n */\nexport const VERTEX_SELECTION_COLOR = '#00FF00';\n/**\n * Defines the strokewidth to be used for vertex selections.\n * Default is 1.\n */\nexport const VERTEX_SELECTION_STROKEWIDTH = 1;\n/**\n * Defines the strokewidth to be used for edge selections.\n * Default is 1.\n */\nexport const EDGE_SELECTION_STROKEWIDTH = 1;\n/**\n * Defines the dashed state to be used for the vertex selection\n * border. Default is true.\n */\nexport const VERTEX_SELECTION_DASHED = true;\n/**\n * Defines the dashed state to be used for the edge selection\n * border. Default is true.\n */\nexport const EDGE_SELECTION_DASHED = true;\n/**\n * Defines the color to be used for the guidelines in `Guide`.\n * @default #FF0000.\n */\nexport const GUIDE_COLOR = '#FF0000';\n/**\n * Defines the strokewidth to be used for the guidelines in `Guide`.\n * @default 1.\n */\nexport const GUIDE_STROKEWIDTH = 1;\n/**\n * Defines the color to be used for the outline rectangle\n * border.  Use 'none' for no color. Default is #0099FF.\n */\nexport const OUTLINE_COLOR = '#0099FF';\n/**\n * Defines the strokewidth to be used for the outline rectangle\n * stroke width. Default is 3.\n */\nexport const OUTLINE_STROKEWIDTH = 3;\n/**\n * Defines the default size for handles. Default is 6.\n */\nexport const HANDLE_SIZE = 6;\n/**\n * Defines the default size for label handles. Default is 4.\n */\nexport const LABEL_HANDLE_SIZE = 4;\n/**\n * Defines the color to be used for the handle fill color. Use 'none' for\n * no color. Default is #00FF00 (green).\n */\nexport const HANDLE_FILLCOLOR = '#00FF00';\n/**\n * Defines the color to be used for the handle stroke color. Use 'none' for\n * no color. Default is black.\n */\nexport const HANDLE_STROKECOLOR = 'black';\n/**\n * Defines the color to be used for the label handle fill color. Use 'none'\n * for no color. Default is yellow.\n */\nexport const LABEL_HANDLE_FILLCOLOR = 'yellow';\n/**\n * Defines the color to be used for the connect handle fill color. Use\n * 'none' for no color. Default is #0000FF (blue).\n */\nexport const CONNECT_HANDLE_FILLCOLOR = '#0000FF';\n/**\n * Defines the color to be used for the locked handle fill color. Use\n * 'none' for no color. Default is #FF0000 (red).\n */\nexport const LOCKED_HANDLE_FILLCOLOR = '#FF0000';\n/**\n * Defines the color to be used for the outline sizer fill color. Use\n * 'none' for no color. Default is #00FFFF.\n */\nexport const OUTLINE_HANDLE_FILLCOLOR = '#00FFFF';\n/**\n * Defines the color to be used for the outline sizer stroke color. Use\n * 'none' for no color. Default is #0033FF.\n */\nexport const OUTLINE_HANDLE_STROKECOLOR = '#0033FF';\n/**\n * Defines the default family for all fonts. Default is Arial,Helvetica.\n */\nexport const DEFAULT_FONTFAMILY = 'Arial,Helvetica';\n/**\n * Defines the default size (in px). Default is 11.\n */\nexport const DEFAULT_FONTSIZE = 11;\n/**\n * Defines the default value for the <STYLE_TEXT_DIRECTION> if no value is\n * defined for it in the style. Default value is an empty string which means\n * the default system setting is used and no direction is set.\n */\nexport const DEFAULT_TEXT_DIRECTION = '';\n/**\n * Defines the default line height for text labels. Default is 1.2.\n */\nexport const LINE_HEIGHT = 1.2;\n/**\n * Defines the CSS value for the word-wrap property. Default is \"normal\".\n * Change this to \"break-word\" to allow long words to be able to be broken\n * and wrap onto the next line.\n */\nexport const WORD_WRAP = 'normal';\n/**\n * Specifies if absolute line heights should be used (px) in CSS. Default\n * is false. Set this to true for backwards compatibility.\n */\nexport const ABSOLUTE_LINE_HEIGHT = false;\n/**\n * Defines the default style for all fonts. Default is 0. This can be set\n * to any combination of font styles as follows.\n *\n * ```javascript\n * mxConstants.DEFAULT_FONTSTYLE = mxConstants.FONT_BOLD | mxConstants.FONT_ITALIC;\n * ```\n */\nexport const DEFAULT_FONTSTYLE = 0;\n/**\n * Defines the default start size for swimlanes. Default is 40.\n */\nexport const DEFAULT_STARTSIZE = 40;\n/**\n * Defines the default size for all markers. Default is 6.\n */\nexport const DEFAULT_MARKERSIZE = 6;\n/**\n * Defines the default width and height for images used in the\n * label shape. Default is 24.\n */\nexport const DEFAULT_IMAGESIZE = 24;\n/**\n * Defines the length of the horizontal segment of an `Entity Relation`.\n * This can be overridden using {@link CellStateStyle.segment} style.\n */\nexport const ENTITY_SEGMENT = 30;\n/**\n * Defines the default rounding factor for the rounded vertices in percent between\n * `0` and `1`. Values should be smaller than `0.5`.\n * See {@link CellStateStyle.arcSize}.\n */\nexport const RECTANGLE_ROUNDING_FACTOR = 0.15;\n/**\n * Defines the default size in pixels of the arcs for the rounded edges.\n * See {@link CellStateStyle.arcSize}.\n */\nexport const LINE_ARCSIZE = 20;\n/**\n * Defines the spacing between the arrow shape and its terminals. Default is 0.\n */\nexport const ARROW_SPACING = 0;\n/**\n * Defines the width of the arrow shape. Default is 30.\n */\nexport const ARROW_WIDTH = 30;\n/**\n * Defines the size of the arrowhead in the arrow shape. Default is 30.\n */\nexport const ARROW_SIZE = 30;\n/**\n * Defines the rectangle for the A4 portrait page format. The dimensions\n * of this page format are 826x1169 pixels.\n */\nexport const PAGE_FORMAT_A4_PORTRAIT = [0, 0, 827, 1169];\n/**\n * Defines the rectangle for the A4 portrait page format. The dimensions\n * of this page format are 826x1169 pixels.\n */\nexport const PAGE_FORMAT_A4_LANDSCAPE = [0, 0, 1169, 827];\n/**\n * Defines the rectangle for the Letter portrait page format. The\n * dimensions of this page format are 850x1100 pixels.\n */\nexport const PAGE_FORMAT_LETTER_PORTRAIT = [0, 0, 850, 1100];\n/**\n * Defines the rectangle for the Letter portrait page format. The dimensions\n * of this page format are 850x1100 pixels.\n */\nexport const PAGE_FORMAT_LETTER_LANDSCAPE = [0, 0, 1100, 850];\n/**\n * Defines the value for none. Default is \"none\".\n */\nexport const NONE = 'none';\n/**\n * - FONT_BOLD: Constant for bold fonts. Default is 1.\n *\n * - FONT_ITALIC: Constant for italic fonts. Default is 2.\n *\n * - FONT_UNDERLINE: Constant for underlined fonts. Default is 4.\n *\n * - FONT_STRIKETHROUGH: Constant for strikethrough fonts. Default is 8.\n */\nexport var FONT;\n(function (FONT) {\n    FONT[FONT[\"BOLD\"] = 1] = \"BOLD\";\n    FONT[FONT[\"ITALIC\"] = 2] = \"ITALIC\";\n    FONT[FONT[\"UNDERLINE\"] = 4] = \"UNDERLINE\";\n    FONT[FONT[\"STRIKETHROUGH\"] = 8] = \"STRIKETHROUGH\";\n})(FONT || (FONT = {}));\n/**\n * - ARROW_CLASSIC: Constant for classic arrow markers.\n *\n * - ARROW_CLASSIC_THIN: Constant for thin classic arrow markers.\n *\n * - ARROW_BLOCK: Constant for block arrow markers.\n *\n * - ARROW_BLOCK_THIN: Constant for thin block arrow markers.\n *\n * - ARROW_OPEN: Constant for open arrow markers.\n *\n * - ARROW_OPEN_THIN: Constant for thin open arrow markers.\n *\n * - ARROW_OVAL: Constant for oval arrow markers.\n *\n * - ARROW_DIAMOND: Constant for diamond arrow markers.\n *\n * - ARROW_DIAMOND_THIN: Constant for thin diamond arrow markers.\n */\nexport var ARROW;\n(function (ARROW) {\n    ARROW[\"CLASSIC\"] = \"classic\";\n    ARROW[\"CLASSIC_THIN\"] = \"classicThin\";\n    ARROW[\"BLOCK\"] = \"block\";\n    ARROW[\"BLOCK_THIN\"] = \"blockThin\";\n    ARROW[\"OPEN\"] = \"open\";\n    ARROW[\"OPEN_THIN\"] = \"openThin\";\n    ARROW[\"OVAL\"] = \"oval\";\n    ARROW[\"DIAMOND\"] = \"diamond\";\n    ARROW[\"DIAMOND_THIN\"] = \"diamondThin\";\n})(ARROW || (ARROW = {}));\n/**\n * - ALIGN_LEFT: Constant for left horizontal alignment. Default is left.\n *\n * - ALIGN_CENTER: Constant for center horizontal alignment. Default is center.\n *\n * - ALIGN_RIGHT: Constant for right horizontal alignment. Default is right.\n *\n * - ALIGN_TOP: Constant for top vertical alignment. Default is top.\n *\n * - ALIGN_MIDDLE: Constant for middle vertical alignment. Default is middle.\n *\n * - ALIGN_BOTTOM: Constant for bottom vertical alignment. Default is bottom.\n */\nexport var ALIGN;\n(function (ALIGN) {\n    ALIGN[\"LEFT\"] = \"left\";\n    ALIGN[\"CENTER\"] = \"center\";\n    ALIGN[\"RIGHT\"] = \"right\";\n    ALIGN[\"TOP\"] = \"top\";\n    ALIGN[\"MIDDLE\"] = \"middle\";\n    ALIGN[\"BOTTOM\"] = \"bottom\";\n})(ALIGN || (ALIGN = {}));\nexport var DIRECTION;\n(function (DIRECTION) {\n    DIRECTION[\"NORTH\"] = \"north\";\n    DIRECTION[\"SOUTH\"] = \"south\";\n    DIRECTION[\"EAST\"] = \"east\";\n    DIRECTION[\"WEST\"] = \"west\";\n})(DIRECTION || (DIRECTION = {}));\n/**\n * Constant for text direction default. Default is an empty string. Use\n * this value to use the default text direction of the operating system.\n *\n * Constant for text direction automatic. Default is auto. Use this value\n * to find the direction for a given text with {@link Text#getAutoDirection}.\n *\n * Constant for text direction left to right. Default is ltr. Use this\n * value for left to right text direction.\n *\n * Constant for text direction right to left. Default is rtl. Use this\n * value for right to left text direction.\n */\nexport var TEXT_DIRECTION;\n(function (TEXT_DIRECTION) {\n    TEXT_DIRECTION[\"DEFAULT\"] = \"\";\n    TEXT_DIRECTION[\"AUTO\"] = \"auto\";\n    TEXT_DIRECTION[\"LTR\"] = \"ltr\";\n    TEXT_DIRECTION[\"RTL\"] = \"rtl\";\n})(TEXT_DIRECTION || (TEXT_DIRECTION = {}));\n/**\n * - DIRECTION_MASK_NONE: Constant for no direction.\n *\n * - DIRECTION_MASK_WEST: Bitwise mask for west direction.\n *\n * - DIRECTION_MASK_NORTH: Bitwise mask for north direction.\n *\n * - DIRECTION_MASK_SOUTH: Bitwise mask for south direction.\n *\n * - DIRECTION_MASK_EAST: Bitwise mask for east direction.\n *\n * - DIRECTION_MASK_ALL: Bitwise mask for all directions.\n */\nexport const DIRECTION_MASK = {\n    NONE: 0,\n    WEST: 1,\n    NORTH: 2,\n    SOUTH: 4,\n    EAST: 8,\n    ALL: 15,\n};\n/**\n * Default is horizontal.\n */\nexport var ELBOW;\n(function (ELBOW) {\n    ELBOW[\"VERTICAL\"] = \"vertical\";\n    ELBOW[\"HORIZONTAL\"] = \"horizontal\";\n})(ELBOW || (ELBOW = {}));\n/**\n * Can be used as a string value for the STYLE_EDGE style.\n */\nexport var EDGESTYLE;\n(function (EDGESTYLE) {\n    EDGESTYLE[\"ELBOW\"] = \"elbowEdgeStyle\";\n    EDGESTYLE[\"ENTITY_RELATION\"] = \"entityRelationEdgeStyle\";\n    EDGESTYLE[\"LOOP\"] = \"loopEdgeStyle\";\n    EDGESTYLE[\"SIDETOSIDE\"] = \"sideToSideEdgeStyle\";\n    EDGESTYLE[\"TOPTOBOTTOM\"] = \"topToBottomEdgeStyle\";\n    EDGESTYLE[\"ORTHOGONAL\"] = \"orthogonalEdgeStyle\";\n    EDGESTYLE[\"SEGMENT\"] = \"segmentEdgeStyle\";\n    EDGESTYLE[\"MANHATTAN\"] = \"manhattanEdgeStyle\";\n})(EDGESTYLE || (EDGESTYLE = {}));\n/**\n * Can be used as a string value for the STYLE_PERIMETER style.\n */\nexport var PERIMETER;\n(function (PERIMETER) {\n    PERIMETER[\"ELLIPSE\"] = \"ellipsePerimeter\";\n    PERIMETER[\"RECTANGLE\"] = \"rectanglePerimeter\";\n    PERIMETER[\"RHOMBUS\"] = \"rhombusPerimeter\";\n    PERIMETER[\"HEXAGON\"] = \"hexagonPerimeter\";\n    PERIMETER[\"TRIANGLE\"] = \"trianglePerimeter\";\n})(PERIMETER || (PERIMETER = {}));\nexport var SHAPE;\n(function (SHAPE) {\n    /**\n     * Name under which {@link RectangleShape} is registered in {@link CellRenderer}.\n     * Default is rectangle.\n     */\n    SHAPE[\"RECTANGLE\"] = \"rectangle\";\n    /**\n     * Name under which {@link Ellipse} is registered in {@link CellRenderer}.\n     * Default is ellipse.\n     */\n    SHAPE[\"ELLIPSE\"] = \"ellipse\";\n    /**\n     * Name under which {@link DoubleEllipse} is registered in {@link CellRenderer}.\n     * Default is doubleEllipse.\n     */\n    SHAPE[\"DOUBLE_ELLIPSE\"] = \"doubleEllipse\";\n    /**\n     * Name under which {@link Rhombus} is registered in {@link CellRenderer}.\n     * Default is rhombus.\n     */\n    SHAPE[\"RHOMBUS\"] = \"rhombus\";\n    /**\n     * Name under which {@link Line} is registered in {@link CellRenderer}.\n     * Default is line.\n     */\n    SHAPE[\"LINE\"] = \"line\";\n    /**\n     * Name under which {@link ImageShape} is registered in {@link CellRenderer}.\n     * Default is image.\n     */\n    SHAPE[\"IMAGE\"] = \"image\";\n    /**\n     * Name under which {@link Arrow} is registered in {@link CellRenderer}.\n     * Default is arrow.\n     */\n    SHAPE[\"ARROW\"] = \"arrow\";\n    /**\n     * Name under which {@link ArrowConnector} is registered in {@link CellRenderer}.\n     * Default is arrowConnector.\n     */\n    SHAPE[\"ARROW_CONNECTOR\"] = \"arrowConnector\";\n    /**\n     * Name under which {@link Label} is registered in {@link CellRenderer}.\n     * Default is label.\n     */\n    SHAPE[\"LABEL\"] = \"label\";\n    /**\n     * Name under which {@link Cylinder} is registered in {@link CellRenderer}.\n     * Default is cylinder.\n     */\n    SHAPE[\"CYLINDER\"] = \"cylinder\";\n    /**\n     * Name under which {@link Swimlane} is registered in {@link CellRenderer}.\n     * Default is swimlane.\n     */\n    SHAPE[\"SWIMLANE\"] = \"swimlane\";\n    /**\n     * Name under which {@link Connector} is registered in {@link CellRenderer}.\n     * Default is connector.\n     */\n    SHAPE[\"CONNECTOR\"] = \"connector\";\n    /**\n     * Name under which {@link Actor} is registered in {@link CellRenderer}.\n     * Default is actor.\n     */\n    SHAPE[\"ACTOR\"] = \"actor\";\n    /**\n     * Name under which {@link Cloud} is registered in {@link CellRenderer}.\n     * Default is cloud.\n     */\n    SHAPE[\"CLOUD\"] = \"cloud\";\n    /**\n     * Name under which {@link Triangle} is registered in {@link CellRenderer}.\n     * Default is triangle.\n     */\n    SHAPE[\"TRIANGLE\"] = \"triangle\";\n    /**\n     * Name under which {@link Hexagon} is registered in {@link CellRenderer}.\n     * Default is hexagon.\n     */\n    SHAPE[\"HEXAGON\"] = \"hexagon\";\n})(SHAPE || (SHAPE = {}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
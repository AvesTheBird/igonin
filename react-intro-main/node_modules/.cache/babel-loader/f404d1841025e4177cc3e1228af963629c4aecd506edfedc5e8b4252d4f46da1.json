{"ast":null,"code":"var _jsxFileName = \"D:\\\\ospanel\\\\domains\\\\old\\\\react\\\\react-intro-main\\\\src\\\\components\\\\GraphComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { popup, ModelXmlSerializer, domUtils, styleUtils, mathUtils, cloneUtils, eventUtils, Graph, InternalEvent, RubberBandHandler, ConnectionHandler, ConnectionConstraint, Point, CylinderShape, CellRenderer, DomHelpers, EdgeStyle, Rectangle, EdgeHandler, StyleRegistry, EdgeSegmentHandler, UndoManager, CellEditorHandler, ConstraintHandler, Guide, ImageBox, GraphView, SelectionHandler, PanningHandler, TooltipHandler, SelectionCellsHandler, PopupMenuHandler, xmlUtils, Codec } from '@maxgraph/core';\nimport { contextMenuTypes, contextMenuValues, globalTypes, globalValues, rubberBandTypes, rubberBandValues } from './shared/args.js';\nimport { createGraphContainer } from './shared/configure.js';\n\n// style required by RubberBand\nimport '@maxgraph/core/css/common.css';\nimport { render } from 'react-dom';\nimport { MyCustomGraph, MyCustomEdgeSegmentHandler, MyCustomGraphView, MyCustomConnectionHandler, MyCustomPanningHandler, MyCustomSelectionHandler, MyCustomEdgeHandler, MyCustomConstraintHandler } from './MyCustomGraph.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const YourComponent = ({\n  graph\n}) => {\n  _s();\n  const graphContainerRef = useRef(null);\n  let [variableFromEffect, setVariableFromEffect] = useState(null);\n  graph = variableFromEffect;\n  useEffect(() => {\n    const graphContainer = graphContainerRef.current;\n    const parentContainer = document.createElement('div');\n    const container = createGraphContainer({\n      imageUrl: 'images/grid.gif'\n    });\n    parentContainer.appendChild(container);\n    //console.log({graph})\n    // Changes some default colors\n    // TODO Find a way of modifying globally or setting locally! See https://github.com/maxGraph/maxGraph/issues/192\n    //constants.SHADOWCOLOR = '#C0C0C0';\n\n    let joinNodeSize = 7;\n    let strokeWidth = 2;\n\n    // Switch for black background and bright styles\n    let invert = false;\n    let MyCustomCellEditorHandler;\n    if (invert) {\n      container.style.backgroundColor = 'black';\n\n      // White in-place editor text color\n      MyCustomCellEditorHandler = class extends CellEditorHandler {\n        startEditing(cell, trigger) {\n          super.startEditing.apply(this, arguments);\n          if (this.textarea != null) {\n            this.textarea.style.color = '#FFFFFF';\n          }\n        }\n      };\n    } else {\n      MyCustomCellEditorHandler = CellEditorHandler;\n    }\n\n    // Imlements a custom resistor shape. Direction currently ignored here.\n\n    class ResistorShape extends CylinderShape {\n      constructor() {\n        // TODO: The original didn't seem to call the super\n        super(null, null, null, null);\n      }\n      redrawPath(path, x, y, w, h, isForeground) {\n        let dx = w / 16;\n        if (isForeground) {\n          path.moveTo(0, h / 2);\n          path.lineTo(2 * dx, h / 2);\n          path.lineTo(3 * dx, 0);\n          path.lineTo(5 * dx, h);\n          path.lineTo(7 * dx, 0);\n          path.lineTo(9 * dx, h);\n          path.lineTo(11 * dx, 0);\n          path.lineTo(13 * dx, h);\n          path.lineTo(14 * dx, h / 2);\n          path.lineTo(16 * dx, h / 2);\n          path.end();\n        }\n      }\n    }\n    CellRenderer.registerShape('resistor', ResistorShape);\n\n    // Imlements a custom resistor shape. Direction currently ignored here.\n\n    EdgeStyle.WireConnector = function (state, source, target, hints, result) {\n      // Creates array of all way- and terminalpoints\n      let pts = state.absolutePoints;\n      let horizontal = true;\n      let hint = null;\n\n      // Gets the initial connection from the source terminal or edge\n      if (source != null && source.cell.isEdge()) {\n        horizontal = state.style.sourceConstraint == 'horizontal';\n      } else if (source != null) {\n        horizontal = source.style.portConstraint != 'vertical';\n\n        // Checks the direction of the shape and rotates\n        let direction = source.style.direction;\n        if (direction == 'north' || direction == 'south') {\n          horizontal = !horizontal;\n        }\n      }\n\n      // Adds the first point\n      // TODO: Should move along connected segment\n      let pt = pts[0];\n      if (pt == null && source != null) {\n        pt = new Point(state.view.getRoutingCenterX(source), state.view.getRoutingCenterY(source));\n      } else if (pt != null) {\n        pt = pt.clone();\n      }\n      let first = pt;\n\n      // Adds the waypoints\n      if (hints != null && hints.length > 0) {\n        // FIXME: First segment not movable\n        /*hint = state.view.transformControlPoint(state, hints[0]);\n        MaxLog.show();\n        MaxLog.debug(hints.length,'hints0.y='+hint.y, pt.y)\n         if (horizontal && Math.floor(hint.y) != Math.floor(pt.y))\n        {\n          MaxLog.show();\n          MaxLog.debug('add waypoint');\n           pt = new Point(pt.x, hint.y);\n          result.push(pt);\n          pt = pt.clone();\n          //horizontal = !horizontal;\n        }*/\n\n        for (let i = 0; i < hints.length; i++) {\n          horizontal = !horizontal;\n          hint = state.view.transformControlPoint(state, hints[i]);\n          if (horizontal) {\n            if (pt.y !== hint.y) {\n              pt.y = hint.y;\n              result.push(pt.clone());\n            }\n          } else if (pt.x !== hint.x) {\n            pt.x = hint.x;\n            result.push(pt.clone());\n          }\n        }\n      } else {\n        hint = pt;\n      }\n\n      // Adds the last point\n      pt = pts[pts.length - 1];\n\n      // TODO: Should move along connected segment\n      if (pt == null && target != null) {\n        pt = new Point(state.view.getRoutingCenterX(target), state.view.getRoutingCenterY(target));\n      }\n      if (horizontal) {\n        if (pt.y !== hint.y && first.x !== pt.x) {\n          result.push(new Point(pt.x, hint.y));\n        }\n      } else if (pt.x !== hint.x && first.y !== pt.y) {\n        result.push(new Point(hint.x, pt.y));\n      }\n    };\n    StyleRegistry.putValue('wireEdgeStyle', EdgeStyle.WireConnector);\n    let graph = new MyCustomGraph(container, null, [MyCustomCellEditorHandler, TooltipHandler, SelectionCellsHandler, PopupMenuHandler, MyCustomConnectionHandler, MyCustomSelectionHandler, MyCustomPanningHandler]);\n    setVariableFromEffect(graph);\n    let labelBackground = invert ? '#000000' : '#FFFFFF';\n    let fontColor = invert ? '#FFFFFF' : '#000000';\n    let strokeColor = invert ? '#C0C0C0' : '#000000';\n    let fillColor = invert ? 'none' : '#FFFFFF';\n    graph.view.scale = 1;\n    graph.setPanning(true);\n    graph.setConnectable(true);\n    graph.setConnectableEdges(true);\n    graph.setDisconnectOnMove(false);\n    graph.foldingEnabled = false;\n\n    //Maximum size\n    graph.maximumGraphBounds = new Rectangle(0, 0, 1000, 1000);\n    graph.border = 50;\n    graph.spacingLeft = 30;\n\n    // Enables return key to stop editing (use shift-enter for newlines)\n    graph.setEnterStopsCellEditing(true);\n\n    // Adds rubberband selection\n    new RubberBandHandler(graph);\n\n    // Adds a special tooltip for edges\n    graph.setTooltips(true);\n    let style = graph.getStylesheet().getDefaultEdgeStyle();\n    delete style.endArrow;\n    style.strokeColor = strokeColor;\n    style.labelBackgroundColor = labelBackground;\n    style.edgeStyle = 'wireEdgeStyle';\n    style.fontColor = fontColor;\n    style.fontSize = '9';\n    style.movable = '0';\n    style.strokeWidth = strokeWidth;\n    //style.rounded = '1';\n\n    // Sets join node size\n    style.startSize = joinNodeSize;\n    style.endSize = joinNodeSize;\n    style = graph.getStylesheet().getDefaultVertexStyle();\n    style.gradientDirection = 'south';\n    //style.gradientColor = '#909090';\n    style.strokeColor = strokeColor;\n    //style.fillColor = '#e0e0e0';\n    style.fillColor = 'none';\n    style.fontColor = fontColor;\n    style.fontStyle = '1';\n    style.fontSize = '12';\n    style.resizable = '0';\n    style.rounded = '1';\n    style.strokeWidth = strokeWidth;\n\n    // инородное дерьмо\n    const buttons = document.querySelectorAll('.bth');\n    const update = event => {\n      var parent = graph.getDefaultParent();\n      var doc = xmlUtils.createXmlDocument();\n      graph.batchUpdate(() => {\n        var signal;\n        if (event.target.textContent == '^x') {\n          //прямоугольник\n          var v1 = graph.insertVertex(parent, null, '', 110, 70, 30, 30, 'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\n          v1.setConnectable(false);\n\n          //выходы прямоугольника\n          var v11 = graph.insertVertex(v1, null, '^X', 0, 0, 10, 7, {\n            shape: 'line',\n            align: 'left',\n            verticalAlign: 'middle',\n            fontSize: 10,\n            routingCenterX: -0.5,\n            spacingLeft: 14,\n            fontColor,\n            strokeColor\n          });\n          v11.geometry.relative = true;\n          v11.geometry.offset = new Point(-v11.geometry.width, 12);\n          var v15 = v11.clone();\n          v15.value = '';\n          v15.geometry.x = 1;\n          v15.style = {\n            shape: 'line',\n            align: 'right',\n            verticalAlign: 'middle',\n            fontSize: 10,\n            routingCenterX: 0.5,\n            spacingRight: 5,\n            fontColor: fontColor,\n            strokeColor: strokeColor\n          };\n          v15.geometry.offset = new Point(0, 13);\n          v1.insert(v15);\n          var notsignal = signal === 1 ? 0 : 1;\n          var v16 = graph.insertVertex(v1, null, notsignal, 0, 0, 0, 0, {\n            shape: 'line',\n            align: 'right',\n            verticalAlign: 'middle',\n            fontSize: 10,\n            routingCenterX: 0.5,\n            spacingLeft: 0,\n            fontColor: fontColor,\n            strokeColor: strokeColor\n          });\n          v16.geometry.x = 1;\n          v16.geometry.offset = new Point(18, -10);\n          v1.insert(v16);\n        }\n        if (event.target.textContent == 'вход') {\n          //прямоугольник\n          var v1 = graph.insertVertex(parent, null, '', 80, 40, 30, 30, 'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\n          v1.setConnectable(false);\n\n          //выходы прямоугольника\n          var v11 = graph.insertVertex(v1, null, 'X' + '1', 0, 0, 10, 7, {\n            shape: 'line',\n            align: 'left',\n            verticalAlign: 'middle',\n            fontSize: 10,\n            routingCenterX: -0.5,\n            spacingLeft: 14,\n            fontColor,\n            strokeColor\n          });\n          v11.geometry.relative = true;\n          v11.geometry.offset = new Point(-v11.geometry.width, 12);\n          var v15 = v11.clone();\n          v15.value = '';\n          v15.geometry.x = 1;\n          v15.style = {\n            shape: 'line',\n            align: 'right',\n            verticalAlign: 'middle',\n            fontSize: 10,\n            routingCenterX: 0.5,\n            spacingRight: 5,\n            fontColor: fontColor,\n            strokeColor: strokeColor\n          };\n          v15.geometry.offset = new Point(0, 13);\n          v1.insert(v15);\n          console.log(signal);\n          signal = 1;\n          var v16 = graph.insertVertex(v1, null, signal, 0, 0, 0, 0, {\n            shape: 'line',\n            align: 'right',\n            verticalAlign: 'middle',\n            fontSize: 10,\n            routingCenterX: 0.5,\n            spacingLeft: 0,\n            fontColor: fontColor,\n            strokeColor: strokeColor\n          });\n          v16.geometry.x = 1;\n          v16.geometry.offset = new Point(18, -10);\n          v1.insert(v16);\n        }\n        if (event.target.textContent == 'not x') {\n          //прямоугольник\n          var v1 = graph.insertVertex(parent, null, '', 80, 40, 40, 80, 'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\n          v1.setConnectable(false);\n\n          //выходы прямоугольника\n          var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16, {\n            shape: 'line',\n            align: 'left',\n            verticalAlign: 'middle',\n            fontSize: 10,\n            routingCenterX: -0.5,\n            spacingLeft: 12,\n            fontColor,\n            strokeColor\n          });\n          v11.geometry.relative = true;\n          v11.geometry.offset = new Point(-v11.geometry.width, 12);\n          var v12 = v11.clone();\n          v12.value = 'Y';\n          v12.geometry.offset = new Point(-v11.geometry.width, 52);\n          v1.insert(v12);\n          var v15 = v11.clone();\n          v15.value = '';\n          v15.geometry.x = 1;\n          v15.style = {\n            shape: 'line',\n            align: 'right',\n            verticalAlign: 'middle',\n            fontSize: 10,\n            routingCenterX: 0.5,\n            spacingRight: 12,\n            fontColor: fontColor,\n            strokeColor: strokeColor\n          };\n          v15.geometry.offset = new Point(5, 32);\n          v1.insert(v15);\n          var v16 = graph.insertVertex(v1, null, '○', 0, 0, 0, 0, {\n            shape: 'line',\n            align: 'right',\n            verticalAlign: 'middle',\n            fontSize: 30,\n            routingCenterX: 0.5,\n            spacingLeft: 6,\n            fontColor: fontColor,\n            strokeColor: strokeColor\n          });\n          v16.geometry.x = 1;\n          v16.geometry.offset = new Point(49, 34);\n          v1.insert(v16);\n        }\n        if (event.target.textContent == 'x * y') {\n          //прямоугольник\n          var v1 = graph.insertVertex(parent, null, '', 180, 40, 40, 80, {\n            verticalLabelPosition: 'top',\n            verticalAlign: 'bottom',\n            shadow: 1,\n            fillColor: fillColor\n          });\n          v1.setConnectable(false);\n\n          //выходы прямоугольника\n          var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16, {\n            shape: 'line',\n            align: 'left',\n            verticalAlign: 'middle',\n            fontSize: 10,\n            routingCenterX: -0.5,\n            spacingLeft: 12,\n            fontColor: fontColor,\n            strokeColor: strokeColor\n          });\n          v11.geometry.relative = true;\n          v11.geometry.offset = new Point(-v11.geometry.width, 12);\n          var v12 = v11.clone();\n          v12.value = 'Y';\n          v12.geometry.offset = new Point(-v11.geometry.width, 52);\n          v1.insert(v12);\n          var v15 = v11.clone();\n          v15.value = '';\n          v15.geometry.x = 1;\n          v15.style = {\n            shape: 'line',\n            align: 'right',\n            verticalAlign: 'middle',\n            fontSize: 10,\n            routingCenterX: 0.5,\n            spacingRight: 12,\n            fontColor: fontColor,\n            strokeColor: strokeColor\n          };\n          v15.geometry.offset = new Point(0, 32);\n          v1.insert(v15);\n          var v16 = graph.insertVertex(v1, null, '&', 0, 0, 0, 0, {\n            shape: 'line',\n            align: 'right',\n            verticalAlign: 'middle',\n            fontSize: 20,\n            routingCenterX: 0.5,\n            spacingLeft: 6,\n            fontColor: fontColor,\n            strokeColor: strokeColor\n          });\n          v16.geometry.x = 1;\n          v16.geometry.offset = new Point(28.5, 37);\n          v1.insert(v16);\n        }\n        if (event.target.textContent == 'x + y') {\n          //прямоугольник\n          var v1 = graph.insertVertex(parent, null, '', 250, 40, 40, 80, {\n            verticalLabelPosition: 'top',\n            verticalAlign: 'bottom',\n            shadow: 1,\n            fillColor: fillColor\n          });\n          v1.setConnectable(false);\n\n          //выходы прямоугольника\n          var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16, {\n            shape: 'line',\n            align: 'left',\n            verticalAlign: 'middle',\n            fontSize: 10,\n            routingCenterX: -0.5,\n            spacingLeft: 12,\n            fontColor: fontColor,\n            strokeColor: strokeColor\n          });\n          v11.geometry.relative = true;\n          v11.geometry.offset = new Point(-v11.geometry.width, 12);\n          var v12 = v11.clone();\n          v12.value = 'Y';\n          v12.geometry.offset = new Point(-v11.geometry.width, 52);\n          v1.insert(v12);\n          var v15 = v11.clone();\n          v15.value = '';\n          v15.geometry.x = 1;\n          v15.style = {\n            shape: 'line',\n            align: 'right',\n            verticalAlign: 'middle',\n            fontSize: 10,\n            routingCenterX: 0.5,\n            spacingRight: 12,\n            fontColor: fontColor,\n            strokeColor: strokeColor\n          };\n          v15.geometry.offset = new Point(0, 32);\n          v1.insert(v15);\n          var v16 = graph.insertVertex(v1, null, '|', 0, 0, 0, 0, {\n            shape: 'line',\n            align: 'right',\n            verticalAlign: 'middle',\n            fontSize: 20,\n            routingCenterX: 0.5,\n            spacingLeft: 6,\n            fontColor: fontColor,\n            strokeColor: strokeColor\n          });\n          v16.geometry.x = 1;\n          v16.geometry.offset = new Point(24, 37);\n          v1.insert(v16);\n        }\n        if (event.target.textContent == 'x == y') {\n          //прямоугольник\n          var v1 = graph.insertVertex(parent, null, '', 180, 140, 40, 80, {\n            verticalLabelPosition: 'top',\n            verticalAlign: 'bottom',\n            shadow: 1,\n            fillColor: fillColor\n          });\n          v1.setConnectable(false);\n\n          //выходы прямоугольника\n          var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16, {\n            shape: 'line',\n            align: 'left',\n            verticalAlign: 'middle',\n            fontSize: 10,\n            routingCenterX: -0.5,\n            spacingLeft: 12,\n            fontColor: fontColor,\n            strokeColor: strokeColor\n          });\n          v11.geometry.relative = true;\n          v11.geometry.offset = new Point(-v11.geometry.width, 12);\n          var v12 = v11.clone();\n          v12.value = 'Y';\n          v12.geometry.offset = new Point(-v11.geometry.width, 52);\n          v1.insert(v12);\n          var v15 = v11.clone();\n          v15.value = '';\n          v15.geometry.x = 1;\n          v15.style = {\n            shape: 'line',\n            align: 'right',\n            verticalAlign: 'middle',\n            fontSize: 10,\n            routingCenterX: 0.5,\n            spacingRight: 12,\n            fontColor: fontColor,\n            strokeColor: strokeColor\n          };\n          v15.geometry.offset = new Point(0, 32);\n          v1.insert(v15);\n          var v16 = graph.insertVertex(v1, null, '==', 0, 0, 0, 0, {\n            shape: 'line',\n            align: 'right',\n            verticalAlign: 'middle',\n            fontSize: 15,\n            routingCenterX: 0.5,\n            spacingLeft: 6,\n            fontColor: fontColor,\n            strokeColor: strokeColor\n          });\n          v16.geometry.x = 1;\n          v16.geometry.offset = new Point(30, 38);\n          v1.insert(v16);\n        }\n        if (event.target.textContent == 'x => y') {\n          //прямоугольник\n          var v1 = graph.insertVertex(parent, null, '', 80, 140, 40, 80, {\n            verticalLabelPosition: 'top',\n            verticalAlign: 'bottom',\n            shadow: 1,\n            fillColor: fillColor\n          });\n          v1.setConnectable(false);\n\n          //выходы прямоугольника\n          var v11 = graph.insertVertex(v1, null, '', 0, 0, 14, 16, {\n            shape: 'line',\n            align: 'left',\n            verticalAlign: 'middle',\n            fontSize: 10,\n            routingCenterX: -0.5,\n            spacingLeft: 12,\n            fontColor: fontColor,\n            strokeColor: strokeColor\n          });\n          v11.geometry.relative = true;\n          v11.geometry.offset = new Point(-v11.geometry.width, 12);\n          var v12 = v11.clone();\n          v12.value = '';\n          v12.geometry.offset = new Point(-v11.geometry.width, 52);\n          v1.insert(v12);\n          var v15 = v11.clone();\n          v15.value = '';\n          v15.geometry.x = 1;\n          v15.style = {\n            shape: 'line',\n            align: 'right',\n            verticalAlign: 'middle',\n            fontSize: 10,\n            routingCenterX: 0.5,\n            spacingRight: 12,\n            fontColor: fontColor,\n            strokeColor: strokeColor\n          };\n          v15.geometry.offset = new Point(0, 32);\n          v1.insert(v15);\n          var v16 = graph.insertVertex(v1, null, '○', 0, 0, 0, 0, {\n            shape: 'line',\n            align: 'right',\n            verticalAlign: 'middle',\n            fontSize: 25,\n            routingCenterX: 0.5,\n            spacingLeft: 6,\n            fontColor: fontColor,\n            strokeColor: strokeColor\n          });\n          v16.geometry.x = 1;\n          v16.geometry.offset = new Point(8, 15);\n          v1.insert(v16);\n          var v17 = graph.insertVertex(v1, null, 'X', 0, 0, 0, 0, {\n            shape: 'line',\n            align: 'right',\n            verticalAlign: 'middle',\n            fontSize: 10,\n            routingCenterX: 0.5,\n            spacingLeft: 6,\n            fontColor: fontColor,\n            strokeColor: strokeColor\n          });\n          v17.geometry.x = 1;\n          v17.geometry.offset = new Point(14, 20);\n          v1.insert(v17);\n          var v18 = graph.insertVertex(v1, null, 'Y', 0, 0, 0, 0, {\n            shape: 'line',\n            align: 'right',\n            verticalAlign: 'middle',\n            fontSize: 10,\n            routingCenterX: 0.5,\n            spacingLeft: 6,\n            fontColor: fontColor,\n            strokeColor: strokeColor\n          });\n          v18.geometry.x = 1;\n          v18.geometry.offset = new Point(14, 59);\n          v1.insert(v18);\n        }\n      });\n    };\n    buttons.forEach(button => {\n      button.addEventListener('click', update);\n    });\n\n    ////////////////////////////////////////////////////////\n    // XML \n\n    document.getElementById(\"xml\").onclick = () => {\n      // Получаем XML данные\n      const xml = new ModelXmlSerializer(graph.getDataModel()).export();\n\n      // Создаем новый Blob объект с XML данными\n      const blob = new Blob([xml], {\n        type: 'text/xml'\n      });\n\n      // Создаем ссылку на Blob объект\n      const url = window.URL.createObjectURL(blob);\n\n      // Создаем ссылку для скачивания\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'data.xml'; // Имя файла для скачивания\n      document.body.appendChild(a);\n\n      // Инициируем скачивание файла\n      a.click();\n\n      // Освобождаем ресурсы\n      window.URL.revokeObjectURL(url);\n    };\n    document.getElementById(\"import\").onclick = () => {};\n\n    ///////////////////////////////////////////////////////////\n\n    document.getElementById(\"zoom\").onclick = () => graph.zoomIn();\n    document.getElementById(\"zoomout\").onclick = () => graph.zoomOut();\n\n    // Undo/redo\n    let undoManager = new UndoManager();\n    let listener = function (sender, evt) {\n      undoManager.undoableEditHappened(evt.getProperty('edit'));\n    };\n    graph.getDataModel().addListener(InternalEvent.UNDO, listener);\n    graph.getView().addListener(InternalEvent.UNDO, listener);\n    document.getElementById(\"undo\").onclick = () => undoManager.undo();\n    document.getElementById(\"redo\").onclick = () => undoManager.redo();\n    document.getElementById(\"delete\").onclick = () => graph.removeCells();\n\n    // Wire-mode\n    let checkbox = document.getElementById(\"wire\");\n\n    // Grid\n    let checkbox2 = document.getElementById(\"grid\");\n    checkbox2.setAttribute('checked', 'true');\n    InternalEvent.addListener(checkbox2, 'click', function (evt) {\n      if (checkbox2.checked) {\n        container.style.background = 'url(./images/grid.gif)';\n      } else {\n        container.style.background = '';\n      }\n      container.style.backgroundColor = invert ? 'black' : 'white';\n    });\n    InternalEvent.disableContextMenu(container);\n    graphContainer.appendChild(parentContainer);\n    return () => {\n      // Clean up if needed\n    };\n  }, []);\n  console.log(graph);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: graphContainerRef,\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 865,\n    columnNumber: 5\n  }, this);\n};\n_s(YourComponent, \"mMMqSwElfcLGxZRiEohX7NbLGg8=\");\n_c = YourComponent;\nvar _c;\n$RefreshReg$(_c, \"YourComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","popup","ModelXmlSerializer","domUtils","styleUtils","mathUtils","cloneUtils","eventUtils","Graph","InternalEvent","RubberBandHandler","ConnectionHandler","ConnectionConstraint","Point","CylinderShape","CellRenderer","DomHelpers","EdgeStyle","Rectangle","EdgeHandler","StyleRegistry","EdgeSegmentHandler","UndoManager","CellEditorHandler","ConstraintHandler","Guide","ImageBox","GraphView","SelectionHandler","PanningHandler","TooltipHandler","SelectionCellsHandler","PopupMenuHandler","xmlUtils","Codec","contextMenuTypes","contextMenuValues","globalTypes","globalValues","rubberBandTypes","rubberBandValues","createGraphContainer","render","MyCustomGraph","MyCustomEdgeSegmentHandler","MyCustomGraphView","MyCustomConnectionHandler","MyCustomPanningHandler","MyCustomSelectionHandler","MyCustomEdgeHandler","MyCustomConstraintHandler","jsxDEV","_jsxDEV","YourComponent","graph","_s","graphContainerRef","variableFromEffect","setVariableFromEffect","graphContainer","current","parentContainer","document","createElement","container","imageUrl","appendChild","joinNodeSize","strokeWidth","invert","MyCustomCellEditorHandler","style","backgroundColor","startEditing","cell","trigger","apply","arguments","textarea","color","ResistorShape","constructor","redrawPath","path","x","y","w","h","isForeground","dx","moveTo","lineTo","end","registerShape","WireConnector","state","source","target","hints","result","pts","absolutePoints","horizontal","hint","isEdge","sourceConstraint","portConstraint","direction","pt","view","getRoutingCenterX","getRoutingCenterY","clone","first","length","i","transformControlPoint","push","putValue","labelBackground","fontColor","strokeColor","fillColor","scale","setPanning","setConnectable","setConnectableEdges","setDisconnectOnMove","foldingEnabled","maximumGraphBounds","border","spacingLeft","setEnterStopsCellEditing","setTooltips","getStylesheet","getDefaultEdgeStyle","endArrow","labelBackgroundColor","edgeStyle","fontSize","movable","startSize","endSize","getDefaultVertexStyle","gradientDirection","fontStyle","resizable","rounded","buttons","querySelectorAll","update","event","parent","getDefaultParent","doc","createXmlDocument","batchUpdate","signal","textContent","v1","insertVertex","v11","shape","align","verticalAlign","routingCenterX","geometry","relative","offset","width","v15","value","spacingRight","insert","notsignal","v16","console","log","v12","verticalLabelPosition","shadow","v17","v18","forEach","button","addEventListener","getElementById","onclick","xml","getDataModel","export","blob","Blob","type","url","window","URL","createObjectURL","a","href","download","body","click","revokeObjectURL","zoomIn","zoomOut","undoManager","listener","sender","evt","undoableEditHappened","getProperty","addListener","UNDO","getView","undo","redo","removeCells","checkbox","checkbox2","setAttribute","checked","background","disableContextMenu","ref","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ospanel/domains/old/react/react-intro-main/src/components/GraphComponent.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nimport axios from 'axios';\nimport {\n  popup,\n  ModelXmlSerializer,\n  domUtils,\n  styleUtils,\n  mathUtils,\n  cloneUtils,\n  eventUtils,\n  Graph,\n  InternalEvent,\n  RubberBandHandler,\n  ConnectionHandler,\n  ConnectionConstraint,\n  Point,\n  CylinderShape,\n  CellRenderer,\n  DomHelpers,\n  EdgeStyle,\n  Rectangle,\n  EdgeHandler,\n  StyleRegistry,\n  EdgeSegmentHandler,\n  UndoManager,\n  CellEditorHandler,\n  ConstraintHandler,\n  Guide,\n  ImageBox,\n  GraphView,\n  SelectionHandler,\n  PanningHandler,\n  TooltipHandler,\n  SelectionCellsHandler,\n  PopupMenuHandler,\n  xmlUtils,\n  Codec,\n} from '@maxgraph/core';\n\nimport {\n  contextMenuTypes,\n  contextMenuValues,\n  globalTypes,\n  globalValues,\n  rubberBandTypes,\n  rubberBandValues,\n} from './shared/args.js';\n\nimport { createGraphContainer } from './shared/configure.js';\n\n// style required by RubberBand\nimport '@maxgraph/core/css/common.css';\n\nimport { render } from 'react-dom';\n\nimport {\n  MyCustomGraph, \n  MyCustomEdgeSegmentHandler, \n  MyCustomGraphView, \n  MyCustomConnectionHandler,  \n  MyCustomPanningHandler, \n  MyCustomSelectionHandler,\n  MyCustomEdgeHandler,\n  MyCustomConstraintHandler\n} from './MyCustomGraph.jsx';\n\n\nexport const YourComponent = ({ graph }) => {\n  \n  const graphContainerRef = useRef(null);\n  let [variableFromEffect, setVariableFromEffect] = useState(null);\n  graph = variableFromEffect;\n\n  useEffect(() => {\n    const graphContainer = graphContainerRef.current;\n\n    const parentContainer = document.createElement('div');\n    const container = createGraphContainer({\n      imageUrl: 'images/grid.gif'\n    });\n    parentContainer.appendChild(container);\n    //console.log({graph})\n      // Changes some default colors\n  // TODO Find a way of modifying globally or setting locally! See https://github.com/maxGraph/maxGraph/issues/192\n  //constants.SHADOWCOLOR = '#C0C0C0';\n\n  let joinNodeSize = 7;\n  let strokeWidth = 2;\n\n  // Switch for black background and bright styles\n  let invert = false;\n  let MyCustomCellEditorHandler;\n\n  if (invert) {\n    container.style.backgroundColor = 'black';\n\n    // White in-place editor text color\n    MyCustomCellEditorHandler = class extends CellEditorHandler {\n      startEditing(cell, trigger) {\n        super.startEditing.apply(this, arguments);\n\n        if (this.textarea != null) {\n          this.textarea.style.color = '#FFFFFF';\n        }\n      }\n    };\n  } else {\n    MyCustomCellEditorHandler = CellEditorHandler;\n  }\n\n  // Imlements a custom resistor shape. Direction currently ignored here.\n\n  class ResistorShape extends CylinderShape {\n    constructor() {\n      // TODO: The original didn't seem to call the super\n      super(null, null, null, null);\n    }\n\n    redrawPath(path, x, y, w, h, isForeground) {\n      let dx = w / 16;\n\n      if (isForeground) {\n        path.moveTo(0, h / 2);\n        path.lineTo(2 * dx, h / 2);\n        path.lineTo(3 * dx, 0);\n        path.lineTo(5 * dx, h);\n        path.lineTo(7 * dx, 0);\n        path.lineTo(9 * dx, h);\n        path.lineTo(11 * dx, 0);\n        path.lineTo(13 * dx, h);\n        path.lineTo(14 * dx, h / 2);\n        path.lineTo(16 * dx, h / 2);\n        path.end();\n      }\n    }\n  }\n\n  CellRenderer.registerShape('resistor', ResistorShape);\n\n  // Imlements a custom resistor shape. Direction currently ignored here.\n\n  EdgeStyle.WireConnector = function (state, source, target, hints, result) {\n    // Creates array of all way- and terminalpoints\n    let pts = state.absolutePoints;\n    let horizontal = true;\n    let hint = null;\n\n    // Gets the initial connection from the source terminal or edge\n    if (source != null && source.cell.isEdge()) {\n      horizontal = state.style.sourceConstraint == 'horizontal';\n    } else if (source != null) {\n      horizontal = source.style.portConstraint != 'vertical';\n\n      // Checks the direction of the shape and rotates\n      let direction = source.style.direction;\n\n      if (direction == 'north' || direction == 'south') {\n        horizontal = !horizontal;\n      }\n    }\n\n    // Adds the first point\n    // TODO: Should move along connected segment\n    let pt = pts[0];\n\n    if (pt == null && source != null) {\n      pt = new Point(\n        state.view.getRoutingCenterX(source),\n        state.view.getRoutingCenterY(source)\n      );\n    } else if (pt != null) {\n      pt = pt.clone();\n    }\n\n    let first = pt;\n\n    // Adds the waypoints\n    if (hints != null && hints.length > 0) {\n      // FIXME: First segment not movable\n      /*hint = state.view.transformControlPoint(state, hints[0]);\n      MaxLog.show();\n      MaxLog.debug(hints.length,'hints0.y='+hint.y, pt.y)\n\n      if (horizontal && Math.floor(hint.y) != Math.floor(pt.y))\n      {\n        MaxLog.show();\n        MaxLog.debug('add waypoint');\n\n        pt = new Point(pt.x, hint.y);\n        result.push(pt);\n        pt = pt.clone();\n        //horizontal = !horizontal;\n      }*/\n\n      for (let i = 0; i < hints.length; i++) {\n        horizontal = !horizontal;\n        hint = state.view.transformControlPoint(state, hints[i]);\n\n        if (horizontal) {\n          if (pt.y !== hint.y) {\n            pt.y = hint.y;\n            result.push(pt.clone());\n          }\n        } else if (pt.x !== hint.x) {\n          pt.x = hint.x;\n          result.push(pt.clone());\n        }\n      }\n    } else {\n      hint = pt;\n    }\n\n    // Adds the last point\n    pt = pts[pts.length - 1];\n\n    // TODO: Should move along connected segment\n    if (pt == null && target != null) {\n      pt = new Point(\n        state.view.getRoutingCenterX(target),\n        state.view.getRoutingCenterY(target)\n      );\n    }\n\n    if (horizontal) {\n      if (pt.y !== hint.y && first.x !== pt.x) {\n        result.push(new Point(pt.x, hint.y));\n      }\n    } else if (pt.x !== hint.x && first.y !== pt.y) {\n      result.push(new Point(hint.x, pt.y));\n    }\n  };\n\n  StyleRegistry.putValue('wireEdgeStyle', EdgeStyle.WireConnector);\n\n\n    let graph = new MyCustomGraph(container, null, [\n      MyCustomCellEditorHandler,\n      TooltipHandler,\n      SelectionCellsHandler,\n      PopupMenuHandler,\n      MyCustomConnectionHandler,\n      MyCustomSelectionHandler,\n      MyCustomPanningHandler,\n    ]);\n    setVariableFromEffect(graph);\n\n  let labelBackground = invert ? '#000000' : '#FFFFFF';\n  let fontColor = invert ? '#FFFFFF' : '#000000';\n  let strokeColor = invert ? '#C0C0C0' : '#000000';\n  let fillColor = invert ? 'none' : '#FFFFFF';\n\n  graph.view.scale = 1;\n  graph.setPanning(true);\n  graph.setConnectable(true);\n  graph.setConnectableEdges(true);\n  graph.setDisconnectOnMove(false);\n  graph.foldingEnabled = false;\n\n  //Maximum size\n  graph.maximumGraphBounds = new Rectangle(0, 0, 1000, 1000);\n  graph.border = 50;\n  graph.spacingLeft = 30;\n\n  // Enables return key to stop editing (use shift-enter for newlines)\n  graph.setEnterStopsCellEditing(true);\n\n  // Adds rubberband selection\n  new RubberBandHandler(graph);\n\n  // Adds a special tooltip for edges\n  graph.setTooltips(true);\n\n  let style = graph.getStylesheet().getDefaultEdgeStyle();\n  delete style.endArrow;\n  style.strokeColor = strokeColor;\n  style.labelBackgroundColor = labelBackground;\n  style.edgeStyle = 'wireEdgeStyle';\n  style.fontColor = fontColor;\n  style.fontSize = '9';\n  style.movable = '0';\n  style.strokeWidth = strokeWidth;\n  //style.rounded = '1';\n\n  // Sets join node size\n  style.startSize = joinNodeSize;\n  style.endSize = joinNodeSize;\n\n  style = graph.getStylesheet().getDefaultVertexStyle();\n  style.gradientDirection = 'south';\n  //style.gradientColor = '#909090';\n  style.strokeColor = strokeColor;\n  //style.fillColor = '#e0e0e0';\n  style.fillColor = 'none';\n  style.fontColor = fontColor;\n  style.fontStyle = '1';\n  style.fontSize = '12';\n  style.resizable = '0';\n  style.rounded = '1';\n  style.strokeWidth = strokeWidth;\n\n  // инородное дерьмо\n  const buttons = document.querySelectorAll('.bth');\n  const update = (event) => {\n    var parent = graph.getDefaultParent();\n    var doc = xmlUtils.createXmlDocument();\n    graph.batchUpdate(() => {\n\n      var signal;\n\n      if ((event.target.textContent) == '^x') {\n        //прямоугольник\n        var v1 = graph.insertVertex(parent, null, '', 110, 70, 30, 30,\n          'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\n        v1.setConnectable(false);\n\n        //выходы прямоугольника\n        var v11 = graph.insertVertex(v1, null, '^X', 0, 0, 10, 7, {\n          shape: 'line',\n          align: 'left',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: 14,\n          fontColor,\n          strokeColor,\n        });\n\n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(-v11.geometry.width, 12);\n        var v15 = v11.clone();\n        v15.value = '';\n        v15.geometry.x = 1;\n        v15.style = {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingRight: 5,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        }\n         \n        v15.geometry.offset = new Point(0, 13);\n        v1.insert(v15);\n\n        var notsignal = (signal === 1) ? 0 : 1;\n\n        var v16 = graph.insertVertex(v1, null, notsignal, 0, 0, 0, 0,\n        {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingLeft: 0,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        }\n        );\n        v16.geometry.x = 1;\n        v16.geometry.offset = new Point(18, -10);\n        v1.insert(v16);\n      }\n\n      if ((event.target.textContent) == 'вход') {\n        //прямоугольник\n        var v1 = graph.insertVertex(parent, null, '', 80, 40, 30, 30,\n          'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\n        v1.setConnectable(false);\n\n        //выходы прямоугольника\n        var v11 = graph.insertVertex(v1, null, 'X'+'1', 0, 0, 10, 7, {\n          shape: 'line',\n          align: 'left',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: 14,\n          fontColor,\n          strokeColor,\n        });\n\n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(-v11.geometry.width, 12);\n        var v15 = v11.clone();\n        v15.value = '';\n        v15.geometry.x = 1;\n        v15.style = {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingRight: 5,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        }\n         \n        v15.geometry.offset = new Point(0, 13);\n        v1.insert(v15);\n\n        console.log(signal);\n\n        signal = 1;\n\n        var v16 = graph.insertVertex(v1, null, signal, 0, 0, 0, 0,\n        {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingLeft: 0,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        }\n        );\n        v16.geometry.x = 1;\n        v16.geometry.offset = new Point(18, -10);\n        v1.insert(v16);\n      }\n\n      if ((event.target.textContent) == 'not x') {\n        //прямоугольник\n        var v1 = graph.insertVertex(parent, null, '', 80, 40, 40, 80,\n          'verticalLabelPosition=top;verticalAlign=bottom;shadow=1;fillColor=' + fillColor);\n        v1.setConnectable(false);\n\n\n        //выходы прямоугольника\n        var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16, {\n          shape: 'line',\n          align: 'left',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: 12,\n          fontColor,\n          strokeColor,\n        });\n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(-v11.geometry.width, 12);\n        var v12 = v11.clone();\n        v12.value = 'Y';\n        v12.geometry.offset = new Point(-v11.geometry.width, 52);\n        v1.insert(v12);\n        var v15 = v11.clone();\n        v15.value = '';\n        v15.geometry.x = 1;\n        v15.style = {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingRight: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        }\n         \n        v15.geometry.offset = new Point(5, 32);\n        v1.insert(v15);\n\n\n        var v16 = graph.insertVertex(v1, null, '○', 0, 0, 0, 0,\n        {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 30,\n          routingCenterX: 0.5,\n          spacingLeft: 6,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        }\n        );\n        v16.geometry.x = 1;\n        v16.geometry.offset = new Point(49, 34);\n        v1.insert(v16);\n\n        \n      }\n      if ((event.target.textContent) == 'x * y') {\n        //прямоугольник\n        var v1 = graph.insertVertex(parent, null, '', 180, 40, 40, 80,\n        {\n          verticalLabelPosition: 'top',\n          verticalAlign: 'bottom',\n          shadow: 1,\n          fillColor: fillColor\n        }\n        );\n        v1.setConnectable(false);\n\n        //выходы прямоугольника\n        var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16,\n        {\n          shape: 'line',\n          align: 'left',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        }\n        );\n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(-v11.geometry.width, 12);\n        var v12 = v11.clone();\n        v12.value = 'Y';\n        v12.geometry.offset = new Point(-v11.geometry.width, 52);\n        v1.insert(v12);\n        var v15 = v11.clone();\n        v15.value = '';\n        v15.geometry.x = 1;\n        v15.style = {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingRight: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        }\n        ;\n        v15.geometry.offset = new Point(0, 32);\n        v1.insert(v15);\n\n\n        var v16 = graph.insertVertex(v1, null, '&', 0, 0, 0, 0,\n        {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 20,\n          routingCenterX: 0.5,\n          spacingLeft: 6,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        }\n        );\n        v16.geometry.x = 1;\n        v16.geometry.offset = new Point(28.5, 37);\n        v1.insert(v16);\n      }\n      if ((event.target.textContent) == 'x + y') {\n        //прямоугольник\n        var v1 = graph.insertVertex(parent, null, '', 250, 40, 40, 80,\n        {\n          verticalLabelPosition: 'top',\n          verticalAlign: 'bottom',\n          shadow: 1,\n          fillColor: fillColor\n        }\n        );\n        v1.setConnectable(false);\n\n        //выходы прямоугольника\n        var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16,\n        {\n          shape: 'line',\n          align: 'left',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        }\n        );\n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(-v11.geometry.width, 12);\n        var v12 = v11.clone();\n        v12.value = 'Y';\n        v12.geometry.offset = new Point(-v11.geometry.width, 52);\n        v1.insert(v12);\n        var v15 = v11.clone();\n        v15.value = '';\n        v15.geometry.x = 1;\n        v15.style = {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingRight: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        }\n        ;\n        v15.geometry.offset = new Point(0, 32);\n        v1.insert(v15);\n\n        var v16 = graph.insertVertex(v1, null, '|', 0, 0, 0, 0,\n        {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 20,\n          routingCenterX: 0.5,\n          spacingLeft: 6,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        }\n        );\n        v16.geometry.x = 1;\n        v16.geometry.offset = new Point(24, 37);\n        v1.insert(v16);\n      }\n      if ((event.target.textContent) == 'x == y') {\n        //прямоугольник\n        var v1 = graph.insertVertex(parent, null, '', 180, 140, 40, 80,\n        {\n          verticalLabelPosition: 'top',\n          verticalAlign: 'bottom',\n          shadow: 1,\n          fillColor: fillColor\n        }\n        );\n        v1.setConnectable(false);\n\n        //выходы прямоугольника\n        var v11 = graph.insertVertex(v1, null, 'X', 0, 0, 10, 16,\n        {\n          shape: 'line',\n          align: 'left',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        }\n        );\n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(-v11.geometry.width, 12);\n        var v12 = v11.clone();\n        v12.value = 'Y';\n        v12.geometry.offset = new Point(-v11.geometry.width, 52);\n        v1.insert(v12);\n        var v15 = v11.clone();\n        v15.value = '';\n        v15.geometry.x = 1;\n        v15.style = {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingRight: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        }\n        ;\n        v15.geometry.offset = new Point(0, 32);\n        v1.insert(v15);\n\n        var v16 = graph.insertVertex(v1, null, '==', 0, 0, 0, 0,\n        {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 15,\n          routingCenterX: 0.5,\n          spacingLeft: 6,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        }\n        );\n        v16.geometry.x = 1;\n        v16.geometry.offset = new Point(30, 38);\n        v1.insert(v16);\n      }\n      if ((event.target.textContent) == 'x => y') {\n        //прямоугольник\n        var v1 = graph.insertVertex(parent, null, '', 80, 140, 40, 80,\n        {\n          verticalLabelPosition: 'top',\n          verticalAlign: 'bottom',\n          shadow: 1,\n          fillColor: fillColor\n        }\n        );\n        v1.setConnectable(false);\n\n        //выходы прямоугольника\n        var v11 = graph.insertVertex(v1, null, '', 0, 0, 14, 16,\n        {\n          shape: 'line',\n          align: 'left',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: -0.5,\n          spacingLeft: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        }\n        );\n        v11.geometry.relative = true;\n        v11.geometry.offset = new Point(-v11.geometry.width, 12);\n        var v12 = v11.clone();\n        v12.value = '';\n        v12.geometry.offset = new Point(-v11.geometry.width, 52);\n        v1.insert(v12);\n        var v15 = v11.clone();\n        v15.value = '';\n        v15.geometry.x = 1;\n        v15.style = {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingRight: 12,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        }\n        ;\n        v15.geometry.offset = new Point(0, 32);\n        v1.insert(v15);\n\n        var v16 = graph.insertVertex(v1, null, '○', 0, 0, 0, 0,\n        {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 25,\n          routingCenterX: 0.5,\n          spacingLeft: 6,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        }\n        );\n        v16.geometry.x = 1;\n        v16.geometry.offset = new Point(8, 15);\n        v1.insert(v16);\n        var v17 = graph.insertVertex(v1, null, 'X', 0, 0, 0, 0,\n        {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingLeft: 6,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        }\n        );\n        v17.geometry.x = 1;\n        v17.geometry.offset = new Point(14, 20);\n        v1.insert(v17);\n        var v18 = graph.insertVertex(v1, null, 'Y', 0, 0, 0, 0,\n        {\n          shape: 'line',\n          align: 'right',\n          verticalAlign: 'middle',\n          fontSize: 10,\n          routingCenterX: 0.5,\n          spacingLeft: 6,\n          fontColor: fontColor,\n          strokeColor: strokeColor\n        }\n        );\n        v18.geometry.x = 1;\n        v18.geometry.offset = new Point(14, 59);\n        v1.insert(v18);\n      }\n    })\n  }\n\n  buttons.forEach((button) => {\n    button.addEventListener('click', update);\n  });\n\n  ////////////////////////////////////////////////////////\n// XML \n\ndocument.getElementById(\"xml\").onclick = () => {\n  // Получаем XML данные\n  const xml = new ModelXmlSerializer(graph.getDataModel()).export();\n  \n  // Создаем новый Blob объект с XML данными\n  const blob = new Blob([xml], { type: 'text/xml' });\n  \n  // Создаем ссылку на Blob объект\n  const url = window.URL.createObjectURL(blob);\n  \n  // Создаем ссылку для скачивания\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = 'data.xml'; // Имя файла для скачивания\n  document.body.appendChild(a);\n  \n  // Инициируем скачивание файла\n  a.click();\n  \n  // Освобождаем ресурсы\n  window.URL.revokeObjectURL(url);\n};\n\n\n\n\n\n\ndocument.getElementById(\"import\").onclick = () => {\n}\n\n\n\n\n///////////////////////////////////////////////////////////\n\n\n    document.getElementById(\"zoom\").onclick = () => graph.zoomIn();\n    document.getElementById(\"zoomout\").onclick = () => graph.zoomOut();\n\n  // Undo/redo\n  let undoManager = new UndoManager();\n  let listener = function (sender, evt) {\n    undoManager.undoableEditHappened(evt.getProperty('edit'));\n  };\n  graph.getDataModel().addListener(InternalEvent.UNDO, listener);\n  graph.getView().addListener(InternalEvent.UNDO, listener);\n\n  document.getElementById(\"undo\").onclick = () => undoManager.undo();\n  document.getElementById(\"redo\").onclick = () => undoManager.redo();\n\n\n  document.getElementById(\"delete\").onclick = () => graph.removeCells();\n\n  // Wire-mode\n  let checkbox = document.getElementById(\"wire\");\n\n  // Grid\n  let checkbox2 = document.getElementById(\"grid\");\n  checkbox2.setAttribute('checked', 'true');\n\n\n  InternalEvent.addListener(checkbox2, 'click', function (evt) {\n    if (checkbox2.checked) {\n      container.style.background = 'url(./images/grid.gif)';\n    } else {\n      container.style.background = '';\n    }\n    container.style.backgroundColor = invert ? 'black' : 'white';\n  });\n  InternalEvent.disableContextMenu(container);\n\n\n    graphContainer.appendChild(parentContainer);\n\n    return () => {\n      // Clean up if needed\n    }; \n  }, []);\n \n  console.log(graph);\n\n  return (\n    <div ref={graphContainerRef} style={{ width: '100%', height: '100%' }} />\n  );\n};\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
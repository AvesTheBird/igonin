{"ast":null,"code":"'use strict';\n\nconst isObject = o => o && Object.prototype.toString.call(o) === '[object Object]';\nfunction indenter(indentation) {\n  if (!(indentation > 0)) {\n    return txt => txt;\n  }\n  var space = ' '.repeat(indentation);\n  return txt => {\n    if (typeof txt !== 'string') {\n      return txt;\n    }\n    const arr = txt.split('\\n');\n    if (arr.length === 1) {\n      return space + txt;\n    }\n    return arr.map(e => e.trim() === '' ? e : space + e).join('\\n');\n  };\n}\nconst clean = txt => txt.split('\\n').filter(e => e.trim() !== '').join('\\n');\nfunction stringify(a, indentation) {\n  const cr = indentation > 0 ? '\\n' : '';\n  const indent = indenter(indentation);\n  function rec(a) {\n    let body = '';\n    let isFlat = true;\n    let res;\n    const isEmpty = a.some((e, i, arr) => {\n      if (i === 0) {\n        res = '<' + e;\n        return arr.length === 1;\n      }\n      if (i === 1) {\n        if (isObject(e)) {\n          Object.keys(e).map(key => {\n            let val = e[key];\n            if (Array.isArray(val)) {\n              val = val.join(' ');\n            }\n            res += ' ' + key + '=\"' + val + '\"';\n          });\n          if (arr.length === 2) {\n            return true;\n          }\n          res += '>';\n          return;\n        }\n        res += '>';\n      }\n      switch (typeof e) {\n        case 'string':\n        case 'number':\n        case 'boolean':\n        case 'undefined':\n          body += e + cr;\n          return;\n      }\n      isFlat = false;\n      body += rec(e);\n    });\n    if (isEmpty) {\n      return res + '/>' + cr; // short form\n    }\n    return isFlat ? res + clean(body) + '</' + a[0] + '>' + cr : res + cr + indent(body) + '</' + a[0] + '>' + cr;\n  }\n  return rec(a);\n}\nmodule.exports = stringify;","map":{"version":3,"names":["isObject","o","Object","prototype","toString","call","indenter","indentation","txt","space","repeat","arr","split","length","map","e","trim","join","clean","filter","stringify","a","cr","indent","rec","body","isFlat","res","isEmpty","some","i","keys","key","val","Array","isArray","module","exports"],"sources":["D:/ospanel/domains/react/react-intro-main/node_modules/onml/stringify.js"],"sourcesContent":["'use strict';\n\nconst isObject = o => o && Object.prototype.toString.call(o) === '[object Object]';\n\nfunction indenter (indentation) {\n  if (!(indentation > 0)) {\n    return txt => txt;\n  }\n  var space = ' '.repeat(indentation);\n  return txt => {\n\n    if (typeof txt !== 'string') {\n      return txt;\n    }\n\n    const arr = txt.split('\\n');\n\n    if (arr.length === 1) {\n      return space + txt;\n    }\n\n    return arr\n      .map(e => (e.trim() === '') ? e : space + e)\n      .join('\\n');\n  };\n}\n\nconst clean = txt => txt\n  .split('\\n')\n  .filter(e => e.trim() !== '')\n  .join('\\n');\n\nfunction stringify (a, indentation) {\n  const cr = (indentation > 0) ? '\\n' : '';\n  const indent = indenter(indentation);\n\n  function rec(a) {\n    let body = '';\n    let isFlat = true;\n\n    let res;\n    const isEmpty = a.some((e, i, arr) => {\n      if (i === 0) {\n        res = '<' + e;\n        return (arr.length === 1);\n      }\n\n      if (i === 1) {\n        if (isObject(e)) {\n          Object.keys(e).map(key => {\n            let val = e[key];\n            if (Array.isArray(val)) {\n              val = val.join(' ');\n            }\n            res += ' ' + key + '=\"' + val + '\"';\n          });\n          if (arr.length === 2) {\n            return true;\n          }\n          res += '>';\n          return;\n        }\n        res += '>';\n      }\n\n      switch (typeof e) {\n      case 'string':\n      case 'number':\n      case 'boolean':\n      case 'undefined':\n        body += e + cr;\n        return;\n      }\n\n      isFlat = false;\n      body += rec(e);\n    });\n\n    if (isEmpty) {\n      return res + '/>' + cr; // short form\n    }\n\n    return isFlat\n      ? res + clean(body) + '</' + a[0] + '>' + cr\n      : res + cr + indent(body) + '</' + a[0] + '>' + cr;\n  }\n\n  return rec(a);\n}\n\nmodule.exports = stringify;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\OSPanel\\\\domains\\\\react\\\\react-intro-main\\\\src\\\\components\\\\LogicElementManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogicElementManager = ({\n  graphData,\n  onGenerateCode\n}) => {\n  _s();\n  const [vhdlCode, setVhdlCode] = useState('');\n\n  // Функция генерации VHDL-кода на основе данных графа\n  const generateVHDLCode = () => {\n    let generatedCode = `library ieee;\\nuse ieee.std_logic_1164.all;\\nuse ieee.numeric_std.all;\\n\\n`;\n    graphData.elements.forEach(element => {\n      switch (element.type) {\n        case 'AND':\n          generatedCode += `-- Логический элемент AND\\nAND_GATE: entity work.and_gate\\nport map (A => ${element.inputs[0]}, B => ${element.inputs[1]}, Y => ${element.output});\\n`;\n          break;\n        case 'OR':\n          generatedCode += `-- Логический элемент OR\\nOR_GATE: entity work.or_gate\\nport map (A => ${element.inputs[0]}, B => ${element.inputs[1]}, Y => ${element.output});\\n`;\n          break;\n        case 'NOT':\n          generatedCode += `-- Логический элемент NOT\\nNOT_GATE: entity work.not_gate\\nport map (A => ${element.inputs[0]}, Y => ${element.output});\\n`;\n          break;\n        default:\n          generatedCode += `-- Неизвестный элемент ${element.type}\\n`;\n      }\n    });\n    setVhdlCode(generatedCode);\n    onGenerateCode(generatedCode); // Передача кода в основной редактор\n  };\n  useEffect(() => {\n    if (graphData) {\n      generateVHDLCode();\n    }\n  }, [graphData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logic-element-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        color: 'white'\n      },\n      children: \"\\u0421\\u0433\\u0435\\u043D\\u0435\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0439 VHDL-\\u043A\\u043E\\u0434:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        color: 'white',\n        backgroundColor: '#333',\n        padding: '10px'\n      },\n      children: vhdlCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(LogicElementManager, \"UL/JrLtXvy2EEIVnkQDwu4w52Hg=\");\n_c = LogicElementManager;\nexport default LogicElementManager;\nvar _c;\n$RefreshReg$(_c, \"LogicElementManager\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","LogicElementManager","graphData","onGenerateCode","_s","vhdlCode","setVhdlCode","generateVHDLCode","generatedCode","elements","forEach","element","type","inputs","output","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","padding","_c","$RefreshReg$"],"sources":["D:/OSPanel/domains/react/react-intro-main/src/components/LogicElementManager.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst LogicElementManager = ({ graphData, onGenerateCode }) => {\r\n  const [vhdlCode, setVhdlCode] = useState('');\r\n\r\n  // Функция генерации VHDL-кода на основе данных графа\r\n  const generateVHDLCode = () => {\r\n    let generatedCode = `library ieee;\\nuse ieee.std_logic_1164.all;\\nuse ieee.numeric_std.all;\\n\\n`;\r\n    \r\n    graphData.elements.forEach((element) => {\r\n      switch (element.type) {\r\n        case 'AND':\r\n          generatedCode += `-- Логический элемент AND\\nAND_GATE: entity work.and_gate\\nport map (A => ${element.inputs[0]}, B => ${element.inputs[1]}, Y => ${element.output});\\n`;\r\n          break;\r\n        case 'OR':\r\n          generatedCode += `-- Логический элемент OR\\nOR_GATE: entity work.or_gate\\nport map (A => ${element.inputs[0]}, B => ${element.inputs[1]}, Y => ${element.output});\\n`;\r\n          break;\r\n        case 'NOT':\r\n          generatedCode += `-- Логический элемент NOT\\nNOT_GATE: entity work.not_gate\\nport map (A => ${element.inputs[0]}, Y => ${element.output});\\n`;\r\n          break;\r\n        default:\r\n          generatedCode += `-- Неизвестный элемент ${element.type}\\n`;\r\n      }\r\n    });\r\n\r\n    setVhdlCode(generatedCode);\r\n    onGenerateCode(generatedCode); // Передача кода в основной редактор\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (graphData) {\r\n      generateVHDLCode();\r\n    }\r\n  }, [graphData]);\r\n\r\n  return (\r\n    <div className=\"logic-element-manager\">\r\n      <h4 style={{ color: 'white' }}>Сгенерированный VHDL-код:</h4>\r\n      <pre style={{ color: 'white', backgroundColor: '#333', padding: '10px' }}>\r\n        {vhdlCode}\r\n      </pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogicElementManager;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIC,aAAa,GAAI,4EAA2E;IAEhGN,SAAS,CAACO,QAAQ,CAACC,OAAO,CAAEC,OAAO,IAAK;MACtC,QAAQA,OAAO,CAACC,IAAI;QAClB,KAAK,KAAK;UACRJ,aAAa,IAAK,6EAA4EG,OAAO,CAACE,MAAM,CAAC,CAAC,CAAE,UAASF,OAAO,CAACE,MAAM,CAAC,CAAC,CAAE,UAASF,OAAO,CAACG,MAAO,MAAK;UACxK;QACF,KAAK,IAAI;UACPN,aAAa,IAAK,0EAAyEG,OAAO,CAACE,MAAM,CAAC,CAAC,CAAE,UAASF,OAAO,CAACE,MAAM,CAAC,CAAC,CAAE,UAASF,OAAO,CAACG,MAAO,MAAK;UACrK;QACF,KAAK,KAAK;UACRN,aAAa,IAAK,6EAA4EG,OAAO,CAACE,MAAM,CAAC,CAAC,CAAE,UAASF,OAAO,CAACG,MAAO,MAAK;UAC7I;QACF;UACEN,aAAa,IAAK,0BAAyBG,OAAO,CAACC,IAAK,IAAG;MAC/D;IACF,CAAC,CAAC;IAEFN,WAAW,CAACE,aAAa,CAAC;IAC1BL,cAAc,CAACK,aAAa,CAAC,CAAC,CAAC;EACjC,CAAC;EAEDX,SAAS,CAAC,MAAM;IACd,IAAIK,SAAS,EAAE;MACbK,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACL,SAAS,CAAC,CAAC;EAEf,oBACEF,OAAA;IAAKe,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpChB,OAAA;MAAIiB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAF,QAAA,EAAC;IAAyB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7DtB,OAAA;MAAKiB,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEK,eAAe,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAR,QAAA,EACtEX;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAzCIH,mBAAmB;AAAAwB,EAAA,GAAnBxB,mBAAmB;AA2CzB,eAAeA,mBAAmB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Converts relative and absolute URLs to absolute URLs with protocol and domain.\n */\nclass UrlConverter {\n  constructor() {\n    /**\n     * Specifies if the converter is enabled. Default is true.\n     */\n    this.enabled = true;\n    /**\n     * Specifies the base URL to be used as a prefix for relative URLs.\n     */\n    this.baseUrl = null;\n    /**\n     * Specifies the base domain to be used as a prefix for absolute URLs.\n     */\n    this.baseDomain = null;\n    // Empty constructor\n  }\n  /**\n   * Private helper function to update the base URL.\n   */\n  updateBaseUrl() {\n    this.baseDomain = `${location.protocol}//${location.host}`;\n    this.baseUrl = this.baseDomain + location.pathname;\n    const tmp = this.baseUrl.lastIndexOf('/');\n    // Strips filename etc\n    if (tmp > 0) {\n      this.baseUrl = this.baseUrl.substring(0, tmp + 1);\n    }\n  }\n  /**\n   * Returns <enabled>.\n   */\n  isEnabled() {\n    return this.enabled;\n  }\n  /**\n   * Sets <enabled>.\n   */\n  setEnabled(value) {\n    this.enabled = value;\n  }\n  /**\n   * Returns <baseUrl>.\n   */\n  getBaseUrl() {\n    return this.baseUrl;\n  }\n  /**\n   * Sets <baseUrl>.\n   */\n  setBaseUrl(value) {\n    this.baseUrl = value;\n  }\n  /**\n   * Returns <baseDomain>.\n   */\n  getBaseDomain() {\n    return this.baseDomain;\n  }\n  /**\n   * Sets <baseDomain>.\n   */\n  setBaseDomain(value) {\n    this.baseDomain = value;\n  }\n  /**\n   * Returns true if the given URL is relative.\n   */\n  isRelativeUrl(url) {\n    return url && url.substring(0, 2) !== '//' && url.substring(0, 7) !== 'http://' && url.substring(0, 8) !== 'https://' && url.substring(0, 10) !== 'data:image' && url.substring(0, 7) !== 'file://';\n  }\n  /**\n   * Converts the given URL to an absolute URL with protol and domain.\n   * Relative URLs are first converted to absolute URLs.\n   */\n  convert(url) {\n    if (this.isEnabled() && this.isRelativeUrl(url)) {\n      if (!this.getBaseUrl()) {\n        this.updateBaseUrl();\n      }\n      if (url.charAt(0) === '/') {\n        url = this.getBaseDomain() + url;\n      } else {\n        url = this.getBaseUrl() + url;\n      }\n    }\n    return url;\n  }\n}\nexport default UrlConverter;","map":{"version":3,"names":["UrlConverter","constructor","enabled","baseUrl","baseDomain","updateBaseUrl","location","protocol","host","pathname","tmp","lastIndexOf","substring","isEnabled","setEnabled","value","getBaseUrl","setBaseUrl","getBaseDomain","setBaseDomain","isRelativeUrl","url","convert","charAt"],"sources":["D:/OSPanel/domains/old/react/react-intro-main/node_modules/@maxgraph/core/dist/util/UrlConverter.js"],"sourcesContent":["/*\nCopyright 2021-present The maxGraph project Contributors\nCopyright (c) 2006-2015, JGraph Ltd\nCopyright (c) 2006-2015, Gaudenz Alder\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Converts relative and absolute URLs to absolute URLs with protocol and domain.\n */\nclass UrlConverter {\n    constructor() {\n        /**\n         * Specifies if the converter is enabled. Default is true.\n         */\n        this.enabled = true;\n        /**\n         * Specifies the base URL to be used as a prefix for relative URLs.\n         */\n        this.baseUrl = null;\n        /**\n         * Specifies the base domain to be used as a prefix for absolute URLs.\n         */\n        this.baseDomain = null;\n        // Empty constructor\n    }\n    /**\n     * Private helper function to update the base URL.\n     */\n    updateBaseUrl() {\n        this.baseDomain = `${location.protocol}//${location.host}`;\n        this.baseUrl = this.baseDomain + location.pathname;\n        const tmp = this.baseUrl.lastIndexOf('/');\n        // Strips filename etc\n        if (tmp > 0) {\n            this.baseUrl = this.baseUrl.substring(0, tmp + 1);\n        }\n    }\n    /**\n     * Returns <enabled>.\n     */\n    isEnabled() {\n        return this.enabled;\n    }\n    /**\n     * Sets <enabled>.\n     */\n    setEnabled(value) {\n        this.enabled = value;\n    }\n    /**\n     * Returns <baseUrl>.\n     */\n    getBaseUrl() {\n        return this.baseUrl;\n    }\n    /**\n     * Sets <baseUrl>.\n     */\n    setBaseUrl(value) {\n        this.baseUrl = value;\n    }\n    /**\n     * Returns <baseDomain>.\n     */\n    getBaseDomain() {\n        return this.baseDomain;\n    }\n    /**\n     * Sets <baseDomain>.\n     */\n    setBaseDomain(value) {\n        this.baseDomain = value;\n    }\n    /**\n     * Returns true if the given URL is relative.\n     */\n    isRelativeUrl(url) {\n        return (url &&\n            url.substring(0, 2) !== '//' &&\n            url.substring(0, 7) !== 'http://' &&\n            url.substring(0, 8) !== 'https://' &&\n            url.substring(0, 10) !== 'data:image' &&\n            url.substring(0, 7) !== 'file://');\n    }\n    /**\n     * Converts the given URL to an absolute URL with protol and domain.\n     * Relative URLs are first converted to absolute URLs.\n     */\n    convert(url) {\n        if (this.isEnabled() && this.isRelativeUrl(url)) {\n            if (!this.getBaseUrl()) {\n                this.updateBaseUrl();\n            }\n            if (url.charAt(0) === '/') {\n                url = this.getBaseDomain() + url;\n            }\n            else {\n                url = this.getBaseUrl() + url;\n            }\n        }\n        return url;\n    }\n}\nexport default UrlConverter;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,YAAY,CAAC;EACfC,WAAWA,CAAA,EAAG;IACV;AACR;AACA;IACQ,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB;AACR;AACA;IACQ,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB;AACR;AACA;IACQ,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB;EACJ;EACA;AACJ;AACA;EACIC,aAAaA,CAAA,EAAG;IACZ,IAAI,CAACD,UAAU,GAAI,GAAEE,QAAQ,CAACC,QAAS,KAAID,QAAQ,CAACE,IAAK,EAAC;IAC1D,IAAI,CAACL,OAAO,GAAG,IAAI,CAACC,UAAU,GAAGE,QAAQ,CAACG,QAAQ;IAClD,MAAMC,GAAG,GAAG,IAAI,CAACP,OAAO,CAACQ,WAAW,CAAC,GAAG,CAAC;IACzC;IACA,IAAID,GAAG,GAAG,CAAC,EAAE;MACT,IAAI,CAACP,OAAO,GAAG,IAAI,CAACA,OAAO,CAACS,SAAS,CAAC,CAAC,EAAEF,GAAG,GAAG,CAAC,CAAC;IACrD;EACJ;EACA;AACJ;AACA;EACIG,SAASA,CAAA,EAAG;IACR,OAAO,IAAI,CAACX,OAAO;EACvB;EACA;AACJ;AACA;EACIY,UAAUA,CAACC,KAAK,EAAE;IACd,IAAI,CAACb,OAAO,GAAGa,KAAK;EACxB;EACA;AACJ;AACA;EACIC,UAAUA,CAAA,EAAG;IACT,OAAO,IAAI,CAACb,OAAO;EACvB;EACA;AACJ;AACA;EACIc,UAAUA,CAACF,KAAK,EAAE;IACd,IAAI,CAACZ,OAAO,GAAGY,KAAK;EACxB;EACA;AACJ;AACA;EACIG,aAAaA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACd,UAAU;EAC1B;EACA;AACJ;AACA;EACIe,aAAaA,CAACJ,KAAK,EAAE;IACjB,IAAI,CAACX,UAAU,GAAGW,KAAK;EAC3B;EACA;AACJ;AACA;EACIK,aAAaA,CAACC,GAAG,EAAE;IACf,OAAQA,GAAG,IACPA,GAAG,CAACT,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,IAC5BS,GAAG,CAACT,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,SAAS,IACjCS,GAAG,CAACT,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,UAAU,IAClCS,GAAG,CAACT,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,YAAY,IACrCS,GAAG,CAACT,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,SAAS;EACzC;EACA;AACJ;AACA;AACA;EACIU,OAAOA,CAACD,GAAG,EAAE;IACT,IAAI,IAAI,CAACR,SAAS,CAAC,CAAC,IAAI,IAAI,CAACO,aAAa,CAACC,GAAG,CAAC,EAAE;MAC7C,IAAI,CAAC,IAAI,CAACL,UAAU,CAAC,CAAC,EAAE;QACpB,IAAI,CAACX,aAAa,CAAC,CAAC;MACxB;MACA,IAAIgB,GAAG,CAACE,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QACvBF,GAAG,GAAG,IAAI,CAACH,aAAa,CAAC,CAAC,GAAGG,GAAG;MACpC,CAAC,MACI;QACDA,GAAG,GAAG,IAAI,CAACL,UAAU,CAAC,CAAC,GAAGK,GAAG;MACjC;IACJ;IACA,OAAOA,GAAG;EACd;AACJ;AACA,eAAerB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}